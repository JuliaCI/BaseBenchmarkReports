cset: moving following pidspec: 24271
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.453962644 seconds)
loading group "string"... done (took 0.518268894 seconds)
loading group "linalg"... done (took 8.872724954 seconds)
loading group "parallel"... done (took 0.179451017 seconds)
loading group "find"... done (took 1.245293461 seconds)
loading group "tuple"... done (took 1.888359469 seconds)
loading group "dates"... done (took 1.350958743 seconds)
loading group "micro"... done (took 0.19318257 seconds)
loading group "io"... done (took 0.499307417 seconds)
loading group "scalar"... done (took 53.009293277 seconds)
loading group "sparse"... done (took 14.083312471 seconds)
loading group "broadcast"... done (took 1.323373266 seconds)
loading group "union"... done (took 9.568527861 seconds)
loading group "simd"... done (took 3.10197159 seconds)
loading group "random"... done (took 12.466403794 seconds)
loading group "problem"... done (took 2.216715455 seconds)
loading group "array"... done (took 25.287707014 seconds)
loading group "misc"... done (took 1.133937036 seconds)
loading group "sort"... done (took 3.798393841 seconds)
loading group "collection"... done (took 19.302154312 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.602951616 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125499326 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200820236 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.34241665 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.231891013 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160246276 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140628158 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.24424835 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.717126315 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209904816 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13302093 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.487342822 seconds)
done (took 6.41176571 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.249954951 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241431281 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168125937 seconds)
  done (took 1.172446174 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072549415 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150647191 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105042235 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.090248312 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090414871 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.105691288 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.089364955 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106047019 seconds)
  done (took 1.501126657 seconds)
done (took 3.757888802 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.485516678 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.84902288 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.507086515 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.154021764 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.282019976 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.279135401 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267143813 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.197638641 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.087149659 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.103407104 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.166517625 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.382187388 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.374474796 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.91564957 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088077964 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.106853136 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.112222288 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.750506681 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075770919 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110100397 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.501435321 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.183904031 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.095860196 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12336709 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.182267359 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131250256 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.156176418 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10005649 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.660892575 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129051842 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.181530286 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095660149 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159150307 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.178793642 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.185999617 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108780281 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674191791 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198296415 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.088327454 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096426182 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.658665744 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11457619 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.18085652 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101267576 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085745962 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177062273 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091152488 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07451639 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107697335 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083160469 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165086891 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45097064 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104199325 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168894576 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090812975 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.671492467 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094838442 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27329572 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124561562 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091116866 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090278604 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085176677 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153512942 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091520591 seconds)
  done (took 19.654279034 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.142935057 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161501877 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075250034 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154062914 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.117959175 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077652296 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099990409 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075683138 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105014696 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191936571 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134177007 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.148733589 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088594856 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088141798 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125644983 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244722991 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102532979 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117754551 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087194399 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087221558 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137007165 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093798218 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087932061 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106439485 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165930598 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203296722 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109388963 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120407537 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089098374 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093776881 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140694658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143443399 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091784045 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087325045 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.166528229 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121224726 seconds)
  done (took 5.163895389 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196648119 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121541369 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.199145696 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.152389593 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141856487 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159845319 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121413666 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.271718574 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.188773876 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176694568 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114270799 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119624119 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077110708 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077678266 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07569633 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.461052262 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.133113837 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160155806 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.123719247 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100530516 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079632281 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382305241 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081358968 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09177602 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080167844 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064988565 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.186465425 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079133255 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.072532635 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.080696426 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10302666 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112205802 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213381143 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11323561 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11697844 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097238564 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.119671289 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.093986282 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194773786 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10473388 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075630313 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103727239 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133721843 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110629081 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095173008 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081187034 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.232271865 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.077585726 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095074709 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.894120886 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195821472 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12541829 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075319595 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280870457 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114380506 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078231312 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075774409 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.679131995 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113708475 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081186319 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097849312 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082683493 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0783669 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431467788 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099744091 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.012983675 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082709764 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157121072 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078418919 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095835175 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084895773 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083798535 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114348809 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078034322 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077161448 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075641107 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095577615 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079228307 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129508879 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082941573 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078388529 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15852223 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097141413 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095514283 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12364486 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.078998377 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092675842 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111334608 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.151828815 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077217988 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07703289 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.162275357 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07648389 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10279698 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112334415 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095440562 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141354248 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081021963 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.254256869 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097062849 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123722714 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097115621 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112743982 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116778062 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080848398 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083786046 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095908334 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081209618 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082433969 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094657224 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144223597 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083103623 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078704376 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109866846 seconds)
  done (took 27.044690414 seconds)
done (took 52.62276098 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.443709279 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083736334 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082102107 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101602599 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082580023 seconds)
  done (took 1.634038861 seconds)
done (took 2.44621756 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32108922 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191600068 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096942416 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189246906 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083190769 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196181258 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183382675 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.090603291 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20777379 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081531199 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187886755 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081119397 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102283729 seconds)
  done (took 2.850139083 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101675909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108129464 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119448996 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101074544 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084228977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099624981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116696672 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109700738 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099627024 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111934585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083316808 seconds)
  done (took 1.944721164 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100002159 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104522271 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095923334 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117601832 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084081331 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097633029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117361004 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108145417 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098297524 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113303212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08489686 seconds)
  done (took 1.939226989 seconds)
done (took 7.544336439 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.087747497 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.566088393 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165379732 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207713354 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347183249 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.235588626 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.576139236 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.151625345 seconds)
  done (took 14.299312512 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.164721896 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111808349 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095493531 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090051597 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087916631 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.112960971 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089815954 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093742183 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109011997 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093723321 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09357713 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104456406 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09347955 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088301653 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087618917 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110439284 seconds)
  done (took 2.50508969 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.150032813 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.13977981 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095620048 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095908619 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110779458 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096439459 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098087107 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113049533 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091153052 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091973611 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098828931 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113891415 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094273664 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.089360076 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113468618 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.1215618 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08907442 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112605205 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.121336917 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111510278 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097167334 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092287769 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110916915 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096000603 seconds)
  done (took 3.444634684 seconds)
done (took 21.066441298 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146300012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100720704 seconds)
  done (took 1.062587041 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.135534548 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153368987 seconds)
  done (took 1.110095584 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109544559 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.087819149 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135873501 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101168282 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086739122 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105046108 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112217875 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.1061237 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089146848 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089453347 seconds)
  done (took 1.846540615 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093044101 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091378085 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119997465 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.13198517 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.09667985 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.112202205 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093381139 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090661476 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112822583 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088026028 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.092659043 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124960835 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093223623 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125649897 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094204477 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092850442 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118579738 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096570101 seconds)
  done (took 2.694167307 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089511065 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088302125 seconds)
  done (took 1.004025976 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092184249 seconds)
    (2/7) benchmarking "second"...
    done (took 0.087478406 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089207554 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109601624 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088630541 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087795175 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109018056 seconds)
  done (took 1.490149175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486606646 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266623649 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369462183 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105952758 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14298655 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350295865 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144335001 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101006611 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.219468326 seconds)
  done (took 3.048303031 seconds)
done (took 13.078159592 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089191407 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.21925528 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.609390755 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.109777877 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088826605 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160145384 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290495312 seconds)
done (took 2.398742932 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347268925 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.148705328 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085283327 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090089021 seconds)
  done (took 1.499306509 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079695996 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096320439 seconds)
  done (took 1.014127744 seconds)
done (took 3.348150146 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087082398 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085826668 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.085696129 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.13860337 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085093991 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.085633439 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.105672457 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087138118 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086117439 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.085074693 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.107505502 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086148769 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08503371 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105200993 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086876284 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085461306 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085904065 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104308608 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085729386 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085743643 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103325406 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086693049 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08589018 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087127452 seconds)
  done (took 3.08039159 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104061856 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088140184 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108651858 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093663043 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092474876 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112500391 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093949636 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091660425 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111012781 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091994712 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09393655 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092130281 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109101684 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093277616 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08982622 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113923497 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092781765 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089454735 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108669712 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092920622 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090028464 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108826945 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091890528 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089869962 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112699476 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094287239 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089190464 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110583578 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095163395 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09468582 seconds)
  done (took 3.77960966 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095275647 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082878141 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086464004 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113982494 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084928401 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089503549 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105564898 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088826832 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09139183 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087644505 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112752333 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09247028 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085762578 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109893371 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093175088 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093175602 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098480594 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.10917729 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087834568 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089921771 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112711103 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088075565 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090103709 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088852529 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.109717845 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086917407 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088903304 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109436678 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090374555 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088980949 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092744161 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113665959 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090614766 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099969361 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113525017 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091331913 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097028717 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106724084 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092724042 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086484625 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086508507 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110781175 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088447418 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097593496 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110662644 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092242975 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087866987 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090852896 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.111216905 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094215547 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086046399 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102713635 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091131943 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089974628 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091523036 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10761709 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091277424 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084612057 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108334515 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089092178 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084755016 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08630589 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.116033174 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090869723 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104505169 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116338146 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088419084 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09256532 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.11099611 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0963306 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093734945 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121512015 seconds)
  done (took 7.794919162 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100608617 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096653001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088056254 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106704941 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086306694 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087138613 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110722888 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087186422 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088358914 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109855668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088561023 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087000631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087227254 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108169472 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088473222 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086745675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110555065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087682597 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087501803 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105484955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089328926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091957658 seconds)
  done (took 2.923199064 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227949167 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09320823 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138532523 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119645894 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104583075 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117870199 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091618644 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093437197 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112330134 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098031739 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095462969 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109329988 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104034475 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094997867 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114459301 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097188726 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10926074 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097580305 seconds)
  done (took 2.864996524 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100809107 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09164249 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126948058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090506484 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090159724 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089474204 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113310025 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110157264 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106956142 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091166498 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097031828 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092085146 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108334671 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090458176 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089685153 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109193199 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.089846383 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088595761 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11392971 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094539766 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095430617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114587032 seconds)
  done (took 3.042687548 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103516135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090069666 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12571393 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093579548 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088806851 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088231582 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114261768 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090216742 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094554206 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108418407 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090261401 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088202471 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123699527 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090197751 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092874491 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108331501 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089675656 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088753859 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10850975 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089401973 seconds)
  done (took 2.812893926 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.165629602 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123484837 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106330867 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113376892 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125092893 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106982194 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111921076 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124254752 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104968346 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134756495 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105955799 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105516783 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130679817 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10982691 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104529665 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131949479 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114370906 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130807569 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105710023 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105177805 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135563132 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105056042 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132458416 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105587177 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104819199 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123864709 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10645602 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110133604 seconds)
  done (took 4.135303592 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090387867 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088580201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087721067 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108098478 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088818871 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088700984 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087773225 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108559061 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089016283 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088926944 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112116712 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093885894 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091976484 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092286234 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110772167 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090508238 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088134082 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105665079 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089511241 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091084278 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090952303 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106729441 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088773781 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087384912 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105976422 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090052198 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088291786 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08738236 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1065732 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089603846 seconds)
  done (took 3.689017391 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.099640569 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09722374 seconds)
  done (took 1.053133257 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09772067 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102481947 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08696988 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10714433 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094520572 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087883256 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11468015 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094759791 seconds)
  done (took 1.643197888 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138558244 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159789538 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093810886 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100617542 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159434519 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150554172 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133875452 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094168722 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107134854 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08295294 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.133813877 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102531138 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091368684 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08559046 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.11020123 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096263478 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.089294538 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.119831525 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095553526 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090472922 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113263683 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095544504 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091006325 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119409969 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083996075 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090392388 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112012848 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101433193 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08684013 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112200414 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089359107 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088763328 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111236776 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094530342 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090244736 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160614354 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096795829 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105612194 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092631546 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094942724 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142046255 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091797293 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091738755 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088319478 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113647543 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093976856 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.093769221 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108876984 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082577759 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084522184 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.109027631 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086048435 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089156134 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108935966 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091893352 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097295788 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108967948 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087778646 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086467316 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10355261 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090764971 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08690825 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09227795 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.112616135 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092290088 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089945326 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109338373 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08967995 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09042031 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108777296 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090745074 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104102477 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110373848 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095153927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094716922 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.109589427 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08891479 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094008689 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108423486 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091301811 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093568868 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136882424 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093822837 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08516361 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104175941 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09818568 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.091609697 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091609539 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102415308 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099282121 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.091403065 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.109830556 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084305768 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087653441 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105665363 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092844749 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082990766 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109915188 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088900067 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096456432 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114151808 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089648674 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091139877 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113579709 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096141839 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089318346 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153700834 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087468255 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085331519 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.112257465 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096343599 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08436862 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109371297 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090115415 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087022125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085011185 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114774486 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090796083 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091149182 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114252861 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094447931 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091413113 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.112651546 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08929346 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087374058 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.112776545 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099257774 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093031072 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.111155304 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092162169 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090476291 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088670039 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113470554 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087999151 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095513788 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107229062 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090311823 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.090175264 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11383682 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091636202 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085560994 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107663688 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092250471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088677305 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.112728342 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092389245 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085188256 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100883179 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092917048 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086008841 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.109473929 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099602411 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086526567 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.091276693 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107221332 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098480997 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087354605 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114917437 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093553148 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094746149 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114950403 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084451983 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087388216 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11144977 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093756131 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086997461 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.090259255 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.109712184 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097287957 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082746684 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.114145863 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08328028 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086702767 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.114375542 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094764877 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093142173 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104893105 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131291128 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101401377 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114055135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091026108 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090276013 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113495626 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093443226 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094935079 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095387944 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11429822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088873822 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089299608 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114832791 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087316233 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092374866 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108360463 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093657248 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082752285 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.109916912 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08433672 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094825999 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111138193 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097633209 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096090119 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093007595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109062455 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098766842 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086099157 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113341764 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08387812 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095422426 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.119195211 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098019713 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097308682 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112454828 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089777335 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090598013 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115668669 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09359822 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090969506 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.090033057 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104007269 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084503117 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09581027 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112845497 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086847205 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089599261 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111381907 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094629137 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087972306 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102447173 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096188522 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094135896 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104043209 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092320654 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087383593 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088350061 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119834736 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083797074 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085784195 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112557523 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094348738 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08940517 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109780902 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095031785 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096062893 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11255568 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093831498 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087793301 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115584338 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090280779 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09135607 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086462548 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.11411689 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085482517 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091215378 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110976182 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08855395 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086383097 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114360395 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097876411 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096040953 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109282521 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095828503 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095999197 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.114056057 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089796832 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096021307 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086168775 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10460864 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088448185 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083751657 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.1130529 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08815522 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09488641 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107656665 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090612848 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094677709 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111008203 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089666614 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098050424 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120504997 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08636557 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083753503 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10789435 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091750701 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087154553 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106516326 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092831234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093717293 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094932266 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115460192 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087245188 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.089761027 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.117417615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088953332 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097306316 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115251824 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097079076 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086508691 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.113429769 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089565399 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095166454 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.112388111 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092196609 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089182207 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109318094 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088816661 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089057731 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09526531 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105276869 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087376075 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.095362277 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109292505 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095331279 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090236618 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109166274 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088013556 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086326872 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116582376 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091093478 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097962243 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.110527189 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085857578 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085177355 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.094115794 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111197042 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097212014 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086101751 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.115225952 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098458748 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.093416752 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109817404 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100466435 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099891201 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.114665642 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09833058 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084614702 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088268232 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116526302 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090507697 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.093149058 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.112458579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086326458 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093355261 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.116965157 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093728701 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089222899 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104435816 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092429619 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097084941 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094822733 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114866017 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09229179 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092235024 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106709185 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093917585 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096298641 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111339564 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098200268 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090795265 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114144115 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088800287 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097103751 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110507236 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087023082 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085066654 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088116614 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116839393 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086000418 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095486134 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114496283 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088249124 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088592966 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.114375012 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089250075 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094921731 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096147349 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110066921 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101322833 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091769075 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108921232 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096768361 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.095474397 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104923518 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091160282 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089996851 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116943444 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090878742 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095272049 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110354789 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097997943 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093841839 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.094926502 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.116374938 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097436533 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084935196 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.117429914 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095855039 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09272956 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107218235 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090987503 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086248365 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10949259 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098532495 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088784158 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098963094 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.118893279 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089716825 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08875027 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.117556781 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090383125 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097869123 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108267393 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094366701 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084745927 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114708299 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092212849 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.097302514 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107791935 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08745742 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096721631 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.115459152 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096400638 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095042904 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097078281 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10601249 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08631887 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.093887347 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108767136 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10242247 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095208792 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110432947 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09153965 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.092399622 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.111406558 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100243942 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086352372 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087714542 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112379183 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094419811 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089279723 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10716228 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096046824 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090458054 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113512486 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091012886 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086332912 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110497156 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098607532 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089726034 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106687347 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090074248 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098236176 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110352273 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089412144 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085794297 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115717656 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095243991 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098476008 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087695357 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.112082706 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089836897 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.092740032 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118732108 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090908295 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091891833 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110649963 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097640322 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096408168 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108034273 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089927969 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101646489 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117236115 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09430236 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094240189 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.1100055 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099648666 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09754156 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092977048 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105800792 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087234342 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089920716 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105584229 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09486215 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097162675 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110825219 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089986789 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096053135 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116067576 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095089221 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094801474 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085533138 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119453563 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090594743 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095039032 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106740118 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087524128 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093827229 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11677662 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093182544 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092793732 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093169864 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.116089066 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08792242 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089534811 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116420395 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096364096 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.097100117 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112672095 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092816457 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093719765 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122061628 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094748468 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091133428 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119416064 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100104105 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092502088 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111202998 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098550716 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098233491 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093808123 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119974028 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089997051 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091526206 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.120386876 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099835249 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101162729 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113142645 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086562657 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097410473 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109958129 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088515373 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096401495 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120630985 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100975633 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092401959 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.1083592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10389763 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097822558 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112946774 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091561606 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090286442 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.095879512 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112242598 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097404827 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089199742 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.121450275 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099560233 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098021416 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123470545 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08831751 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098691379 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116369418 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101878205 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094027737 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087097372 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109049019 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095588853 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.098458459 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.119450955 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097368118 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097061308 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.116706554 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094972191 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093316181 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109603547 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100333328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098979689 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092186402 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116196867 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093730012 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093097165 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.115363463 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.098794973 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099333307 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11496143 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104190049 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099365503 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112194057 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092020232 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094303915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.115471077 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095528156 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098407538 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089239403 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109094625 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098589696 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099787383 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113649254 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101979181 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099480954 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113390793 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096666337 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099985318 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11798828 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095808999 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093762184 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095295755 seconds)
  done (took 60.077719427 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143696726 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101363927 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116164235 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095049146 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112582472 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118162197 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095843753 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095421318 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116346591 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104161881 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095994209 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115912333 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112288622 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116234513 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132451906 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104851801 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115387409 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098061417 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095404852 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096369667 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12991144 seconds)
  done (took 3.219506078 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113401753 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108322182 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126650537 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108887312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101904283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126834669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105778902 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126635607 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1099544 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103077727 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130646599 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106239393 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122740524 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103736813 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103046227 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124710654 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11034644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100959672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128223275 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105939806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123445682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107640394 seconds)
  done (took 3.403394169 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127213729 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098676091 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092902742 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11567756 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099682523 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09490864 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119933791 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097102908 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103272687 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112285355 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.087214233 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091991462 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0938326 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116158787 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090616406 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094951129 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124893404 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100149839 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100121297 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116781145 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087879792 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096007432 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.095228377 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107266519 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101528888 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099560043 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115719898 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100047098 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.086523227 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098679948 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117161326 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089839769 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08657308 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.107292954 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.087763848 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.09869544 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.097514169 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117125399 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.096800304 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086881482 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.116773666 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102014126 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087514307 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094558471 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117388052 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08999119 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.098512158 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115238803 seconds)
  done (took 5.784555439 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126148407 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161045083 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099725702 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135646546 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133014597 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104288959 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098929734 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135026409 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09756644 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12101557 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110473843 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109619862 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123971007 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102407492 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099289579 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122912773 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102103735 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098959385 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124912485 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099702642 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12430657 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.101626661 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109559688 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129407598 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.342804453 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100279934 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119660386 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103934929 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107760875 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125378694 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103640969 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102887423 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131049214 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100982865 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119065467 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101759884 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111301816 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121025493 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102151445 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097437952 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120269496 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104246766 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10027242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13172612 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101925441 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100642059 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122225278 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09790123 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108797744 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121455429 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106500469 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108420564 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122409666 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100442245 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102081658 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13193087 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.09983627 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117405154 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103331985 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107399001 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118342046 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106847865 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109436227 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.12060287 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10668548 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108549661 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121971836 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102440113 seconds)
  done (took 8.9128634 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130122969 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101671409 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131866981 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111172654 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10204994 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126306586 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103009221 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102147616 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124135912 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108209845 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122525138 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197242147 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12015846 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108046583 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102750002 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125043161 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103399775 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1035436 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124413944 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103993762 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102884389 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133110711 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103456448 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130559148 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11454705 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099614205 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124971771 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104566325 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111205677 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12518403 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113003531 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12325903 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104263164 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110519916 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13633891 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10395783 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097337295 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124668554 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103702919 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103576782 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122195389 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112556379 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122685513 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102848285 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103537863 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124010875 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113712327 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115259955 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128618455 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109066984 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123776416 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11285401 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104006231 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125787725 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111397917 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118458966 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133177812 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111322572 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125257423 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112404774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109354393 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141226381 seconds)
  done (took 8.127194516 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097634457 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098037667 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09653377 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118804907 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097615434 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096190851 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096183655 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118616489 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097534856 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097543389 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119434032 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097551671 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096564917 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096163442 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118713721 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098735424 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096105627 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116601026 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097018961 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095944785 seconds)
  done (took 2.970741634 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107574757 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114706835 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.118908149 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104987854 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.098743815 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124759876 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100468675 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09980854 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099160661 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12049893 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107744175 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127201592 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101083997 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105724765 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128014865 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105103005 seconds)
  done (took 2.687371125 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118382383 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116243304 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187362453 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10212559 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.120850061 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10763633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.098748868 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100848281 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121210554 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104964554 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103677244 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124295141 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099449878 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100419918 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121767589 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104209306 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099917202 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124680622 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100891742 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.183118497 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105892618 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102190166 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.099730205 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.126260762 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101925416 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10214983 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127834317 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099917133 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101649978 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12230398 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10248673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.105322433 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122430337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105742617 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101294478 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122421936 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100627156 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100581833 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123725655 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100594503 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103353459 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.100789477 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.122744613 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102282414 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097997542 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122466387 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099200652 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106253003 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121792338 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102448178 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09963789 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.12828022 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105686286 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108807338 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127553826 seconds)
  done (took 7.091012972 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111745487 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100948278 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133142021 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099602685 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100445344 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100768422 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123142014 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102450188 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100461619 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119978825 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102562479 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101262439 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120484438 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101954868 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100607202 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121206834 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099396784 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101874381 seconds)
  done (took 2.86803662 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105043354 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100651279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103454955 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121693891 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100468522 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099113142 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120402575 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100000864 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099132307 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099909197 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122562964 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100885825 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097246019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120703674 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101019643 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099433071 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121091992 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100108459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099439592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09787671 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121018229 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098475904 seconds)
  done (took 3.26108002 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11108983 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181106595 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106886958 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191157243 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097358472 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095577109 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128081502 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097511811 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112692727 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117964643 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096454292 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095028005 seconds)
  done (took 2.363726698 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129597184 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138475905 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123089336 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102116472 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107569623 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12602682 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10511446 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103671304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13323257 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117248656 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124549338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112430028 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110628138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134380301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108994268 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128867469 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105400005 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103874482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12198515 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121028998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103557128 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133598397 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105568539 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10432279 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126688851 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112294388 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132804351 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116280762 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104164374 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133440276 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109220897 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125366902 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113433061 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115455939 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122123619 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112536213 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104264014 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141580536 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109739794 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133252449 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101330383 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109011457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133801525 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110993864 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131957625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106614351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11015005 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126726599 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105804537 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125738217 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131019683 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112647699 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13005945 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114180153 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111963038 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148499722 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114669569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134694944 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109538344 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137776895 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113691182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108617887 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133585796 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117494801 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130745127 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113451032 seconds)
  done (took 8.779674202 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142785698 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10014306 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127028049 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117572039 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133724752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106354391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107453822 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12635964 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107113544 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102919736 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170305211 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106225622 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112032875 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135759019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105303928 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125936242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106314589 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112526702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123437128 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126736912 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126051487 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115430622 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112764073 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134389142 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116551032 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130050102 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106930959 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106252539 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127692996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106120006 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1100128 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12709248 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114941584 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102334906 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136242754 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106092978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12561871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112014999 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105047088 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13155437 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115244287 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1195997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128245908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105169519 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137986683 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107119504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105275672 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123983974 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106745701 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102396139 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138585045 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117308235 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139784444 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113541927 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10509949 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128398391 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10570238 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104709096 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127702665 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110458726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134346823 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107390448 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125528904 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128319138 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105653183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133627424 seconds)
  done (took 8.768678206 seconds)
done (took 165.969773132 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147343815 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18557034 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143730715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177754416 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093421746 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126991429 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146407852 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145420394 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091201608 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115357655 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093220125 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093823915 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182425361 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093740571 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092088311 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116320372 seconds)
  done (took 2.978847534 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.187247514 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.304639239 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106933073 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118403132 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099566984 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097102035 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118102137 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099804402 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097036761 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126206905 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098264263 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093752296 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125149547 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094732514 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097497454 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096255656 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.126460257 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097306784 seconds)
  done (took 3.126805238 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117353784 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14302962 seconds)
  done (took 1.208709923 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129230807 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211347839 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269040432 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169375266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117507982 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138255297 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149526388 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129979882 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178858493 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131368738 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111097623 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094516831 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145434214 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102886004 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136203866 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096962449 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124595583 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131772865 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112482732 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09948025 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139464823 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101230894 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102295552 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133324945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.166886106 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132222563 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101299031 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099746295 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122441719 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112154516 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10424511 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136107847 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111037653 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176785759 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100641377 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172023836 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102640604 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120783741 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111140265 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096866506 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123770689 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102028704 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131789912 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096513258 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100711685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126072072 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102263347 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.099883334 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12700829 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106154198 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105222118 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126275432 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170449548 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105420945 seconds)
  done (took 7.792625433 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.838838938 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141418906 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098355526 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.992983973 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148532744 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11315026 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.803156351 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.141734103 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247468417 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.858250665 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113927546 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110983126 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253882904 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248386279 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.161571437 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.366249187 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674643531 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134620086 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126025241 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160639931 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10740119 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146399485 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119505974 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426608618 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098822146 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096858589 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128216961 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110739198 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173681748 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098006238 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124044019 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170321824 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294191922 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203223403 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118992576 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098379237 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097758685 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18068607 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267579797 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213774382 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181976201 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095574264 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096828027 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128025791 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118554295 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093887584 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176431816 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186813994 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188052776 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10159933 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13133294 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109499287 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104230001 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174530329 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094993487 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362152106 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360555616 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097770065 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105453505 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135838616 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264696077 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098520876 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226671307 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146738001 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208771401 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097474317 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804051378 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182053019 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097004415 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128180088 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104910419 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103294438 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128563898 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155189419 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402137721 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109541023 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124446343 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096711947 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239320022 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097535257 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120151531 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156511067 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121264983 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106879567 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133378068 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111080687 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188470025 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257368098 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11091439 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10654873 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127036434 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109624863 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097196163 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.227442493 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221733273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.170900206 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229438318 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106195649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178213135 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182010054 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105127273 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184995233 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105146061 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136258766 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105667318 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217700774 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152808048 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099808521 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125043775 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109081149 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155010731 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103013363 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106434053 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185776788 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461476842 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178292276 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096077128 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102648078 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128583324 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.153944233 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126973975 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258302117 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107760579 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181274049 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105212598 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095210994 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129710141 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178467947 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109609566 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105873131 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129094618 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106418887 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.269148606 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216749895 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132281176 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239250353 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169063553 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127008939 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167616679 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128614482 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.160689808 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131624267 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105672568 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098480189 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815649201 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113605163 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1055381 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126787651 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177967061 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120483412 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102362055 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098489275 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095383529 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81918435 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10311886 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096755245 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099851358 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128674768 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106822807 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127945321 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105179074 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17572698 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241060535 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111563497 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128700984 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098640164 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174822324 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100151437 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098674 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122336389 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09975978 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105541523 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126115762 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101908382 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188872045 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17128228 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225029667 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.554847934 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098647533 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097803901 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258483 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100330379 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312585381 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106048833 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.250068498 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159461345 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118284813 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.355702366 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18225132 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185921635 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100921152 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.185725309 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094496272 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130066556 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174881838 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098880672 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105445554 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174287497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133629618 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113105054 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.196567784 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097972787 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245286128 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095668458 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185131921 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120540072 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106901554 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314714895 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098594239 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139141153 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175907934 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103946794 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.098476179 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.705043823 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098979015 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132663684 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107186156 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.250542912 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159962307 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129674635 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108930934 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111040042 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177048906 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230605734 seconds)
  done (took 45.386152947 seconds)
done (took 61.4313645 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29337772 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255851366 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.301586614 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.207443405 seconds)
  done (took 2.101625228 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.256191039 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159832743 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.228275907 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095953427 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.238710648 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095251731 seconds)
  done (took 2.049731595 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.485515253 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.364259822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.300397708 seconds)
  done (took 2.129961403 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250572518 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.240315781 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.34514245 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407100662 seconds)
  done (took 2.335467205 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.263085668 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129215787 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125207967 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.207850768 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.226987333 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207582285 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126211509 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176544731 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129347773 seconds)
  done (took 2.618131134 seconds)
done (took 12.207267298 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.320320888 seconds)
    (2/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.203568721 seconds)
    (3/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.142735805 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.359892068 seconds)
    (5/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.355958927 seconds)
    (6/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.167606781 seconds)
    (7/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.32638118 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.339384114 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102566924 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.234855255 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.106856058 seconds)
    (12/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.234863613 seconds)
    (13/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.175164914 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.210166683 seconds)
    (15/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.165840212 seconds)
    (16/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.252181528 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077845759 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.154650439 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.236655412 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.155051689 seconds)
    (21/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181867012 seconds)
    (22/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.216530839 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.182631856 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127071429 seconds)
    (25/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.203917488 seconds)
    (26/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.099251607 seconds)
    (27/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125622006 seconds)
    (28/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.077070275 seconds)
    (29/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.135238497 seconds)
    (30/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118054881 seconds)
    (31/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.104483886 seconds)
    (32/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.290910276 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108423074 seconds)
    (34/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.231045806 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124156107 seconds)
    (36/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.209016954 seconds)
    (37/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079692435 seconds)
    (38/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.162860569 seconds)
    (39/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132450645 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101169451 seconds)
    (41/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10355752 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.155113822 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109830844 seconds)
    (44/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097020495 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124153276 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.195802255 seconds)
    (47/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.221378485 seconds)
    (48/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.144931404 seconds)
    (49/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.246758087 seconds)
    (50/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150052164 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098941292 seconds)
    (52/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129811339 seconds)
    (53/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.184735673 seconds)
    (54/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.180745053 seconds)
    (55/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.251732368 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132175005 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078265195 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.10467937 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129878131 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077620365 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.18725561 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.251488311 seconds)
    (63/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.166179051 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106827956 seconds)
    (65/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080779663 seconds)
    (66/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085775616 seconds)
    (67/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.17874508 seconds)
    (68/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.170801291 seconds)
    (69/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086991032 seconds)
    (70/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.170110798 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10472919 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12979153 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147024359 seconds)
    (74/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.210420818 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100287709 seconds)
    (76/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.170333386 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.207371328 seconds)
    (78/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104659176 seconds)
    (79/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110958257 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.079148275 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.131461102 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.229792787 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100780454 seconds)
    (84/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.169206774 seconds)
    (85/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.087343338 seconds)
    (86/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080136005 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079095284 seconds)
    (88/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085859851 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.14478798 seconds)
    (90/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.18153951 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100633402 seconds)
    (92/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133100488 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104308112 seconds)
    (94/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100908274 seconds)
    (95/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147654855 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.16630278 seconds)
    (97/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.226387767 seconds)
    (98/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.20300701 seconds)
    (99/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097539665 seconds)
    (100/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13403611 seconds)
    (101/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079364009 seconds)
    (102/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.141104227 seconds)
    (103/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086865007 seconds)
    (104/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079634118 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124513422 seconds)
    (106/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201873058 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.122666862 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109940854 seconds)
    (109/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090167442 seconds)
    (110/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.194123017 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.1842497 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078681387 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098025974 seconds)
    (114/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.167833333 seconds)
    (115/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.082491387 seconds)
    (116/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.086399818 seconds)
    (117/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.078000245 seconds)
    (118/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.149369163 seconds)
    (119/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114908594 seconds)
    (120/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079121153 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077987039 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.209260388 seconds)
    (123/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.088165173 seconds)
    (124/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19702208 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134889612 seconds)
    (126/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079132701 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10071403 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083047289 seconds)
    (129/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137030863 seconds)
    (130/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186003991 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124698124 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080377112 seconds)
    (133/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109657386 seconds)
    (134/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107618289 seconds)
    (135/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131713413 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.080127298 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108786205 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079373131 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.079282087 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.127415289 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.079939501 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091706787 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121646002 seconds)
    (144/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.209698333 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123369209 seconds)
    (146/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078435835 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104938537 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111399538 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079652634 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.0825444 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102242085 seconds)
    (152/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.112448912 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105807582 seconds)
    (154/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078878515 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078646016 seconds)
    (156/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132071945 seconds)
    (157/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081701876 seconds)
    (158/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.183793279 seconds)
    (159/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079159024 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.106122152 seconds)
    (161/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080604958 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098344554 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078928917 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.152144583 seconds)
    (165/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.080325605 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109146145 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100648767 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127703169 seconds)
    (169/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099273017 seconds)
    (170/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088293078 seconds)
    (171/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081153065 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149342651 seconds)
    (173/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111952359 seconds)
    (174/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080213312 seconds)
    (175/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079446812 seconds)
    (176/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103235079 seconds)
    (177/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103444365 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.101103143 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.08052995 seconds)
    (180/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.104599642 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079819945 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102343195 seconds)
    (183/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109667994 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145661564 seconds)
    (185/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088655184 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101250357 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080507106 seconds)
    (188/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.110681904 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103359278 seconds)
    (190/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078951999 seconds)
    (191/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080744613 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121719994 seconds)
  done (took 27.059599901 seconds)
done (took 28.046346233 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.209849243 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127819758 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108157122 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106811065 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.199738242 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113336712 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.144635095 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111324147 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115630891 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107705641 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125829211 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11890168 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10588663 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199796579 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10998039 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12595743 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100993227 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115298667 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.144533117 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120355425 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199483423 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102271684 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117034729 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123934747 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173229278 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126491791 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107472561 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10640525 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.115483264 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135359602 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107314494 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098201805 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.146440762 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118813171 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098318121 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134186108 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099587254 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087958062 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132775276 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112471508 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118532689 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108133083 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133797152 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100667085 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108487613 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133512112 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100199004 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.110201672 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.12429065 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.107854129 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102450092 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.145353736 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109183096 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097600435 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122211506 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102264245 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116366755 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123608839 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120613973 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100372495 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099969394 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125481497 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111589872 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099387051 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133670399 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100966758 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109485008 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13618865 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109419254 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102725772 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123054079 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110087336 seconds)
done (took 9.723489629 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105415322 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147006219 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198512116 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.208917519 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126369412 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113934617 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139812182 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125491602 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111672598 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144555142 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136476142 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156291549 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181365873 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140760864 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114935088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111267441 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.136126767 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109909926 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.20618683 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124204779 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126265288 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142591238 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128366184 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14134804 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106080252 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124909933 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132580825 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112983754 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103352802 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147047012 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124898841 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103066992 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131207482 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124878009 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121269071 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139954869 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115761695 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110848662 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130164651 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105447382 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111772038 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146032142 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104790134 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114232508 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138678088 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120131622 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.110940031 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143261152 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106598028 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111856294 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13062768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132271873 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116348978 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146975811 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116394364 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116574259 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142615643 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11835825 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.106427678 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.143524499 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104533974 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103430816 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131508295 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126472888 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131122919 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119814547 seconds)
  done (took 9.529957296 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125398157 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133937451 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139379323 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115482458 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109450211 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123665039 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098140916 seconds)
  done (took 1.882862069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100613726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184090974 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208055137 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207902013 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178537458 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.216077648 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147784532 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101208382 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1340418 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134482057 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181645244 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.235389994 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.1091397 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141193687 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18465213 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124701854 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185785187 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126136199 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115780468 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209802931 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116184436 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129556219 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139621709 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099778026 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205200087 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101871807 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260517714 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118298156 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134662467 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114594238 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1146199 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202755842 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.17961269 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.140991778 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107566528 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208082965 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.177331342 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139060587 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.216970715 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105905803 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.178283245 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.14058872 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116347001 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114132973 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.140787281 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168472902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145223264 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114541089 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.113479234 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213830358 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.10890184 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.207099332 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110164449 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.140071047 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111743254 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115589316 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148742235 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116953458 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213916485 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118182947 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.207432258 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182024581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.206737322 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210021141 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125296734 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209987907 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174402962 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139279074 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108647522 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114896251 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.211139706 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112197412 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141038619 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.171482948 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144320217 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18427933 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.210144596 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110777723 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.138859865 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104342175 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112200021 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.126728573 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174055247 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.139892952 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113844208 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117861688 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13817753 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115216237 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105302156 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149618996 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114638479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.111010513 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.145607684 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116628765 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115907405 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214362018 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.135637866 seconds)
  done (took 15.571318638 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104202434 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101953645 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105428298 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128565362 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102688333 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101517015 seconds)
  done (took 1.695436729 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140279713 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115760054 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15046131 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117637585 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161572846 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.212297552 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.217455487 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109453961 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158264016 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12659574 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.215643142 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19053218 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.214100699 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118031556 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.218520584 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117369438 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.218995138 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112387071 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150709989 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113172802 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115218365 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146845967 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114515349 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20812105 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117130996 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.115694964 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137670985 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12467671 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122536982 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137574294 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118014418 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.139889701 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110029336 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109150315 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.218458649 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107943038 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137742204 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120080414 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117343569 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143528789 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.193712698 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139976768 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122325387 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.118538604 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136398465 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10840053 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.11843654 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136579606 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.193500043 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145321793 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119444006 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141261597 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119246542 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119011358 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.134107502 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110936636 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118555049 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220108659 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118700688 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134532493 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116764945 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116715448 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137498807 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122033115 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116421195 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.145051106 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109130878 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117016597 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139770337 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119422825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117634881 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.142649838 seconds)
  done (took 11.149145738 seconds)
done (took 40.858968157 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.539511207 seconds)
  done (took 2.59021767 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.920811627 seconds)
  done (took 1.971105366 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.959678249 seconds)
  done (took 20.041991464 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.522935326 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.597868561 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994346866 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147932296 seconds)
  done (took 3.314102774 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.002757853 seconds)
  done (took 2.07355877 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294879443 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263914155 seconds)
  done (took 1.617543819 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.74009145 seconds)
  done (took 1.809418828 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.526771008 seconds)
  done (took 2.586220169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.347838807 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.171423432 seconds)
  done (took 1.59190349 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.621127998 seconds)
  done (took 1.697196691 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.723817861 seconds)
  done (took 20.799499833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232172871 seconds)
  done (took 1.310127513 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2854361 seconds)
  done (took 1.363802501 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.763566712 seconds)
  done (took 4.842643319 seconds)
done (took 68.667319544 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113167696 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115339399 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113684894 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139422313 seconds)
  done (took 1.548745068 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120689947 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115416756 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119572976 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142102912 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12259303 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114642127 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14118177 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117471198 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114755227 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143924992 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116157576 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115106364 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145045493 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115410308 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113848996 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144530497 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120772733 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115642823 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141316837 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118440083 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116762491 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142861916 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120353665 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118965481 seconds)
  done (took 4.077688971 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112909943 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105935885 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107001301 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131645507 seconds)
  done (took 1.543473416 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125632185 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128331018 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152920396 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124338775 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127482025 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151703054 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115158589 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111918845 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140316934 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12493751 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132139384 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153101139 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127614059 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117590753 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1518114 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110779877 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115819272 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153728407 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122209164 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123583164 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143013959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122575746 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120498837 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150098245 seconds)
  done (took 4.227024963 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189224173 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125737108 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166992982 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158980952 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167870437 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11357809 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.134720639 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14759593 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.120988981 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116009012 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143167087 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160858095 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145930455 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118346406 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115172166 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146646043 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126887846 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120834578 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.184515759 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.118884262 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146772186 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127621898 seconds)
  done (took 4.18039144 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118346331 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107075624 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102304198 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132957716 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117564793 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108304996 seconds)
  done (took 1.778472926 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105759775 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10044394 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100840614 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126645429 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106993066 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100306464 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099347016 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128250514 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101199845 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100017139 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127592387 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101369276 seconds)
  done (took 2.390916954 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332719285 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106292225 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133821525 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108500745 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111817851 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103250746 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144270971 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105165816 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.272543873 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100874511 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141877106 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195449698 seconds)
  done (took 2.948827059 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20232208 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143133594 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313874496 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360168921 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163139834 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181757405 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268391411 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190119438 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202805078 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132774896 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207913802 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152327641 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174607155 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181317705 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159557458 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158528743 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19149331 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197448325 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166818435 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232931602 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151588915 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196763853 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18076962 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175407673 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130914502 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185756864 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116536663 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124196053 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188788443 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186303919 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166101071 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170862348 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138433695 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214294669 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256947063 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167821616 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265853203 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15663181 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.165862879 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.2100242 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258192783 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135081281 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211586396 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174395949 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127212396 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212832244 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149437894 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206858024 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.127333604 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16444902 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174191593 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196154861 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198922131 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134330551 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30440217 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131895374 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166860568 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164466056 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206900461 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218807055 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172014556 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118837108 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203392769 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209186882 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233062286 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136305967 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189367939 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122529252 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187568315 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197830753 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207569771 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180116609 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.198125395 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157124827 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161747696 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193968317 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148085146 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221337736 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188573009 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115618431 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171911771 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131671655 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121695446 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220149587 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117853059 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234169456 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126817282 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341806999 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20710696 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152484453 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183462468 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151986407 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184011352 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141095984 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.132082045 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139919292 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184484747 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151482582 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150350047 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15374514 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132302054 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.150570651 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144742427 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.145728942 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161244679 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.129455789 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187438026 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187889172 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129006739 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196382646 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145739714 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18048765 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163665731 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212168539 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126731055 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1554943 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206729005 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187251928 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128003682 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198572121 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218645712 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147878148 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157712501 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161921841 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212298461 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138271828 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218192633 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13366446 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159033153 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138423059 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191279307 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155977437 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.176750101 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124852284 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187520656 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186278116 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152037221 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133895727 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200094313 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129642229 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120406353 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158693556 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132279435 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.164674709 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142766548 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.156407289 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150279096 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183670592 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159077863 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177798776 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130701496 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193704797 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128190706 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.186444543 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143143995 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115865879 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198579681 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216707983 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126266076 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198325465 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160928999 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210243881 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191587401 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126752887 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173206328 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153027958 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117650705 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187594864 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164879454 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185156535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181380666 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207320639 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190896415 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184224935 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143426342 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188488552 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.176947466 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179420985 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141032803 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190356877 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162010862 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144983661 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119827906 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124542196 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158491331 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126495373 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130278795 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198047253 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185325833 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20513031 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159893626 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131195638 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211143015 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121728886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183530129 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196983807 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134023381 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211599233 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182304484 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199123967 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136758343 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183979938 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116575633 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120854372 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157882151 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159177018 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160804314 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131327751 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165475937 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183066373 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195171443 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142132829 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219855363 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188922762 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219402402 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118654367 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160893799 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194163072 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157775588 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.207682391 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130021384 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183017354 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184097349 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164508242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182052861 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187525465 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19618164 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190970587 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.185345145 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127365062 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17175203 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15500446 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161199623 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161032681 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140979935 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154361348 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147211337 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.161016468 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136600053 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205977463 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136127174 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201807571 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154138394 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192179158 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121202429 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164134123 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167448333 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168714337 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107861151 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191975507 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18894385 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171737908 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149852374 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197119427 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125563209 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343029278 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212142657 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172051589 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159354953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137008719 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190309376 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15884618 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185162211 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177001348 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165234766 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195799741 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191596439 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137933125 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15633624 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146082353 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176649648 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139439304 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.173988483 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159520008 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.163807212 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178287413 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159179794 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163034927 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196716836 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14492944 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.169079191 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13373762 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240009819 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159836229 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196736585 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.180493689 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16223953 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202447119 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12194017 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121778016 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.157065124 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177155473 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153336436 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168696064 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19933102 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209840669 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165913734 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184736374 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133337498 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151688962 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158944446 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17028332 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212587997 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131198786 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132929313 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212533603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127323744 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158231857 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154474393 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299764521 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142800088 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19755074 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108138739 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.293833303 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128684213 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157316629 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159215827 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192579066 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131395357 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17714457 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194883482 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133419282 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188909449 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130384662 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206837265 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212055452 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161768809 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195749222 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139902518 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18623137 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155464893 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198811657 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139176472 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.170422542 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155800887 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215488845 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205550426 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130017514 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158438327 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188191824 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187933126 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168903682 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1615567 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173925493 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121688252 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187258391 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135257541 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150353582 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152249643 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.20153645 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126578732 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201588092 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189921446 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127410313 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122445559 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170332052 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157130189 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164196212 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127653308 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207371783 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124201308 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199210832 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194508292 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155781908 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159179139 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170627843 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126276749 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13256315 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166125767 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127027908 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.194197699 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176259802 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.154005722 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173548887 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186709319 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157648828 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181949922 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138395581 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696894229 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124754437 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210612604 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143380273 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214737701 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145903193 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196066297 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160916833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172749762 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158716051 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17134327 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231228092 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187726906 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.161551961 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157588376 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137054681 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161220948 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131428545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147037352 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188795017 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136508959 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.158825403 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163142726 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167198744 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142810214 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163178093 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191606243 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173737649 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178582034 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207768719 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132397304 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197130629 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198243609 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125933325 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.187203633 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167151173 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164833013 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148908375 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127681915 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163834684 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196858377 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.149203393 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154213252 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194799305 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161079955 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192000026 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131350964 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197750558 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136127932 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195021678 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123889445 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178749321 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164806479 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158870518 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125092233 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162533868 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183935011 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.156125332 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166944434 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169954108 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215961797 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120211187 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128890632 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298674159 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184262765 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184563957 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167617861 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131348037 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167707255 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153757655 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.187329978 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163721685 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125576518 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153412338 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14099273 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182970398 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145077135 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189720512 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169561034 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184811183 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174656208 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16340575 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282050359 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16554206 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16231935 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117166967 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154961354 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134273897 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159185847 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139886415 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208468879 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228205843 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.158268372 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141026808 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161748535 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122715163 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15252575 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162640905 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172066211 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162238832 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170134442 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.106536926 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137763847 seconds)
  done (took 83.326711093 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160805687 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150829727 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167288855 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220622277 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194629914 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287001965 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227373192 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252029995 seconds)
  done (took 2.834512107 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117136851 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156962929 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13756752 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141634999 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107531494 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.43100224 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128733291 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.145239036 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158917848 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149296357 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134926531 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.504635667 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.140820336 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.115869516 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.145446658 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.107454868 seconds)
  done (took 3.990386998 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.513347242 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.598237557 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.866620194 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.304007305 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.256745784 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.201061399 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.81287951 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.189162868 seconds)
  done (took 13.923909724 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.145929928 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134969814 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.362267541 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.259462519 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148759759 seconds)
  done (took 2.230242209 seconds)
done (took 130.067959691 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121630476 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120642037 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119532613 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152102702 seconds)
  done (took 1.679161262 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.180800185 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093099979 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09510329 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120024255 seconds)
  done (took 1.665341829 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.435515817 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092813743 seconds)
  done (took 1.731869364 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148368222 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135555436 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168769794 seconds)
  done (took 1.641458119 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.132820414 seconds)
  done (took 1.313838725 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120547645 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11405122 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.236131053 seconds)
  done (took 1.65486069 seconds)
done (took 10.870631935 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119116635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.411878023 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430807169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130461922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707754672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424894521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.064118466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173077667 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172601273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136602978 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128528581 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686028982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043792111 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.357768358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.998390802 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.478016046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698885861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108483284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144636952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110102297 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.039901259 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135491122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109487655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108398169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.721975342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420090825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106990588 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.495242346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108044545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110823861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424503169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10883517 seconds)
  done (took 17.590439684 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116104884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16394905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144298525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110237069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110325987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137312566 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119588808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120398006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203501368 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10799525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158161742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108927435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112573041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136989962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132683326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106564907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13921585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111203476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115807547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13791592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130203821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106765923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13707356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111591214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108275105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15808511 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109627393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119467177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136082898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113614805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112686218 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107461742 seconds)
  done (took 5.23643332 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155658474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170905211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146808589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144124063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184598092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110727461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219126223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14634628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200982561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108802935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12797349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135902679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148547474 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107906992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162479827 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108372131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110711731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139560008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11707856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109508977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158293926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108097773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1092685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139457369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108866254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130706875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13813932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120493465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107137113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143380495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11424963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107948527 seconds)
  done (took 5.537986001 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124665843 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123276471 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130791502 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161940002 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117842447 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121038819 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152749708 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118740745 seconds)
  done (took 2.249052015 seconds)
done (took 31.798947471 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136125551 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12970342 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129952707 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153304967 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187344594 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148252293 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129569472 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11661651 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153238083 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132034001 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107035753 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116588008 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.161822185 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120284065 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.219146868 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125474021 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223167552 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189252005 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148727956 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12777104 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11940926 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.224521349 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122510654 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.146094025 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.198557793 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11157023 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.213353057 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119669652 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150158213 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110494967 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.217187828 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12380735 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116879926 seconds)
  done (took 6.113814569 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.205858606 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118273742 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148322762 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116523297 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118910746 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147102112 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208007727 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145254991 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116923351 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115254169 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115657065 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.219414612 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121647755 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142357111 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119169334 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111993174 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238553095 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118604661 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108210591 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.124208305 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113821788 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117760953 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.250439824 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111469174 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115984274 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.146133112 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120936962 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123251747 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147508264 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120062821 seconds)
  done (took 5.427965758 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124079189 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129845937 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.132663143 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212391719 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.143907842 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159215827 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136909911 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130815783 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168767875 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111278123 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124843192 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176175883 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128097782 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119914621 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144880698 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130952049 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132491449 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141455419 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119185224 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128230666 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160973697 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130018094 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134645156 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148673774 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110328032 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118294243 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.149106653 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125695037 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118166804 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124213981 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.142894618 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114331027 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.111763338 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174980249 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112613257 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122316879 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166545554 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12188337 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.123776311 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171196876 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113487076 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.111006163 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167328182 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166258232 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.111155238 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154521784 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122725794 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124216846 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140916967 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128924871 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152604568 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.140749228 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132435428 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.109065735 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.139598629 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119967325 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111026575 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143742907 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126769012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113124217 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165123799 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119706532 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121121581 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141264112 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122562521 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109979329 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110037776 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145051435 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139228616 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116594689 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.177157443 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111168944 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121709237 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153550334 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121501177 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122186381 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.138788529 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122904533 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12155181 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.115681212 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.153472731 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114196993 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113192843 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.157972599 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131512474 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123933793 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153299045 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12443429 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.113003093 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.14300282 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127414128 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.111368839 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.145947042 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124909385 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.110986663 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144476643 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126198394 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122435312 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107155622 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165666787 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115215185 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110093898 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.165589185 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115161475 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116499582 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151338789 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1533621 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.109986393 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152792765 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125205513 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110627252 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.14800122 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116301403 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110301934 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.159150717 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127239387 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118998126 seconds)
  done (took 16.732689421 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.317206583 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.272751445 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210855816 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.305279411 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.123612167 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.238086919 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300350895 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.302309379 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110137199 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17814571 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161884963 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272808974 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142721155 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140670742 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.30623023 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.358201962 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171653952 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149296767 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178738496 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126231188 seconds)
  done (took 5.588283237 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132318279 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146564905 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.1658205 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140519243 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12200785 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157847558 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111848084 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132493986 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.1536648 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122753569 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11436193 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157593001 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124385073 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128355116 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157831265 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152192409 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118331807 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146947842 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134842171 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116036187 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134508209 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137938396 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120058773 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165126499 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130974908 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122288123 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141218011 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118483967 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116910134 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149177616 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117164215 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129552806 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148134284 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108284796 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123992449 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127989697 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149197445 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114524318 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115046924 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145056786 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127142419 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123797336 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.149036598 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102489422 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131674866 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114188074 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.154397073 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125749874 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108466241 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129847554 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155778899 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125173504 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117822265 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164538958 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119212096 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127317447 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153793877 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125959206 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116397871 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140588477 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11079085 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115443514 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.149887631 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12725143 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123552077 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.161667257 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128403545 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112297354 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.145681733 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117018159 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116254748 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124933632 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163588637 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120021052 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.11862452 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153854875 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12030906 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097197392 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.150087044 seconds)
  done (took 11.654799544 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13827098 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12252165 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12994549 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180600211 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12579931 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117028016 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153435074 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132135287 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127143301 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162818972 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129494512 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125031531 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164645001 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122023206 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121702554 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159494679 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126286938 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149160031 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161856884 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141859048 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158017685 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119444947 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124756426 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123019622 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17268328 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123874375 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169148993 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128165457 seconds)
  done (took 5.135432178 seconds)
done (took 51.850366811 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.336592203 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.5640198 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.322849352 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.319893599 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.365929732 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.343644195 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.323548341 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.321212383 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.856187287 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.301038058 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.322950071 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.318925014 seconds)
done (took 29.918799263 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.316428684 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.895645103 seconds)
    (2/2) benchmarking "String"...
    done (took 1.611289947 seconds)
  done (took 4.720901241 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.314418599 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.312897388 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.540720687 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.314113758 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.328929403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.319147566 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.315311771 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.334132081 seconds)
  done (took 16.681274747 seconds)
done (took 27.248028861 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.387381706 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.501138542 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.554391904 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.318497512 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.318847897 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.321974515 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.318378749 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.349393022 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.321060233 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.32439765 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.752201633 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.581623501 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.320116883 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.690406092 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.317862914 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.34650803 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.332817996 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.566021008 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.317790491 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.351131363 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.297356914 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.316975065 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.324691118 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.326177274 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.325548364 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.328479973 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.370992369 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.316816566 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.502386397 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.351067984 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.354303995 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.320776704 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.366008504 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.330630713 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.331707885 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.317959791 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.508342614 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.330594035 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.302353685 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.323608414 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.51313925 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.324186227 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.326140485 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.319334928 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.322801838 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.376408789 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.30283419 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.434881431 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.346465592 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.320699956 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.342382867 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.702184576 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.332603098 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.330680972 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.327628129 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.54561599 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.350129806 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.388792968 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.348147449 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.33191542 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.32743452 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.318914586 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.356852041 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.32743866 seconds)
  done (took 151.374839621 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.318808456 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.323388747 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.324847557 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.343031741 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.325161308 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.324580395 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.319064582 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.3192533 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.323435151 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.347754941 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.324967653 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.318620943 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.326649644 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.266058406 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.329889526 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.3425446 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.325481583 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.319450623 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.327976145 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.318985282 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.323955543 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.326287686 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.339299809 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.321284312 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.327093607 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.405055112 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.366207217 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.33415435 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.335313081 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.321014273 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.322460814 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.32666981 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.973755987 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.194367605 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.324255531 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.354383863 seconds)
  done (took 84.584362045 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.320751048 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.323211623 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.323394152 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.357483325 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.324630267 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.938823372 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.946839581 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.051502285 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.680099702 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.790722037 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65399022 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.326574327 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.419152485 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.33463114 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.322933289 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.338782043 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.349164843 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327864129 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.323153993 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.941807558 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.339202686 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.30886197 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.505277607 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.339987338 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358468376 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.719860666 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.323374197 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358254457 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.665593527 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.374414845 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.322913365 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.729743855 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.904985916 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.442012545 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.322437807 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358670291 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.325225517 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.323663933 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.609883677 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.321508428 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.323435569 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.326046852 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03315687 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.328352407 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.939047367 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.328932452 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.329326095 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.328596403 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.324530066 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.320416271 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.080197525 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.325535979 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.319045634 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.321592123 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.321152283 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.320198236 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.356291968 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.309040386 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.419128827 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.325068233 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.322059839 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354981477 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.319754677 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.540558969 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.316287172 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.80344405 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.367100632 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.443990747 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89789592 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.313930723 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.411253043 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429307972 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.309254908 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.311803418 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.313969564 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.308488193 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.42237937 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.310857681 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.771415237 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.486767646 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.325084309 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.691332995 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.413783075 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.311610153 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.689498544 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.315496912 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.310245165 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.051259768 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.310449626 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408856121 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.309858219 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.310387983 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.311993451 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.309613324 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.778117016 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898075309 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.553983735 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.315843359 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.147634857 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.317794207 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.212575605 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.877043668 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.014104389 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.317666626 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425836876 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.489958296 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.324996462 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.312856262 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.312044004 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.31491772 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.700663083 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.315020501 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.371426241 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.713281733 seconds)
  done (took 385.793249474 seconds)
done (took 622.968200193 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.220003542 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.167139607 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.305941762 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.175319041 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.162049303 seconds)
  done (took 12.236003975 seconds)
done (took 13.442175204 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504511214 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.503354739 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.373004253 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507485371 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.345664517 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522334463 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.49447774 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.337897621 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425910488 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.396030336 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425346701 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36363695 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.343742213 seconds)
  done (took 19.747781772 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.604285415 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.318450035 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.380069731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576736009 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.353540094 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.620008904 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.621520141 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.321610749 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445822835 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333225696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.334548914 seconds)
  done (took 19.118403036 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.614807737 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.320790944 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.374284042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.584575224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352775466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609277965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.630572646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.321635567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.467345988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.332850485 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.33214947 seconds)
  done (took 19.151859554 seconds)
done (took 59.22422057 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.35188973 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411656509 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.345306763 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.333015829 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.332648913 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.329168714 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.336386655 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.33158256 seconds)
  done (took 11.980261871 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.329343066 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.329674531 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.330933752 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.330703099 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.328736611 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.330574739 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.328909586 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.32895026 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.331032853 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.327912279 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.330558469 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.329783354 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.32788859 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.328578952 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.328907739 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.329844208 seconds)
  done (took 22.48251166 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.333450571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.331970133 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.328557422 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.331945158 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.328258437 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.330712731 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.331553869 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.330174344 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.328849678 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.329649953 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.330310264 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.330122466 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.329875699 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.330756134 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.333052438 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.329863306 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.33419566 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.332939234 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.338339295 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.333070718 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.33255924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.332462485 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.333456204 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.328952278 seconds)
  done (took 33.168118492 seconds)
done (took 68.839230994 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.315137321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.327143876 seconds)
  done (took 5.850275122 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.390483589 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.391536203 seconds)
  done (took 3.996178834 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.332361651 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.331927839 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.333026347 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.332664703 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.330893422 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.334539102 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.332784176 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.332255062 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.331152549 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.33184883 seconds)
  done (took 14.534635844 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.332750095 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.334562293 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.333280987 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.331213983 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.332488762 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.332449652 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.331869029 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.335403274 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.332981551 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.332270398 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.331316237 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.331181474 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.331742842 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.334325792 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.33255002 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.330776109 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.332187525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.33131657 seconds)
  done (took 25.195661544 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.346285664 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.35296912 seconds)
  done (took 3.910786146 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.471067799 seconds)
    (2/7) benchmarking "second"...
    done (took 1.374541858 seconds)
    (3/7) benchmarking "month"...
    done (took 1.44836015 seconds)
    (4/7) benchmarking "year"...
    done (took 1.436476626 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.371437839 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.349694004 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.372785215 seconds)
  done (took 11.035585026 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.333437197 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.535150992 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.665364797 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.865909847 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.336220244 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.33543201 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.110258899 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.334223368 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.33850258 seconds)
  done (took 15.068292941 seconds)
done (took 80.802513462 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.319699373 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.35669242 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.340297755 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.349976034 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.673729311 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.334116894 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.32618252 seconds)
done (took 16.913019308 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.304003133 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.30639697 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.306471501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.34199424 seconds)
  done (took 10.472858635 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.323939439 seconds)
    (2/2) benchmarking "read"...
    done (took 1.611917945 seconds)
  done (took 5.154122715 seconds)
done (took 16.845141727 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334025832 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.335631301 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.334196426 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.331632218 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.333571247 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.331264682 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.335285776 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.332506471 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.334745434 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.335123992 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.332954547 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333911965 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334135147 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334387169 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.334309207 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335270852 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.335488353 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.335977096 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335245453 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.330510455 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332822467 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331481483 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.335162387 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.333823207 seconds)
  done (took 33.230753803 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.335807125 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.335720158 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.333793535 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.335246704 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.334060569 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.335599049 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.335969459 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.336714048 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.337020023 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.33380745 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335037704 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.336973891 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.335265651 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.335946552 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335583522 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.334816807 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.334812638 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334579376 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334851931 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.334259104 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.334407788 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335050163 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.335773628 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335211522 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.336020879 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335567299 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.334923948 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.335390537 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335588475 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.334755621 seconds)
  done (took 41.276452107 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.339182558 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.33961106 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.335930815 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.335225236 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.334309396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.336087254 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.337396467 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.335747794 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.333841889 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.335920892 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.33713753 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.335214457 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.33525314 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.336001862 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.333669159 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.336479114 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.335923346 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.3361136 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.337718386 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.336196563 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.33708756 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.336608426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.336178246 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.337357805 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.336653862 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.338090254 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.338931579 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.337412539 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.335594256 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.336423726 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.337644989 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.335831183 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.33842692 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.335937763 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.3387192 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.33683354 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.338003829 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.342879522 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.336829032 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.338374771 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.339360882 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.338087494 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.336447438 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.338447113 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.33863227 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.335047939 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.336711271 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.339128671 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.339176632 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.338558797 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.336726564 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.339185875 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.336495166 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.340277795 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.338542686 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.337642761 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.338934213 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.339429991 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.338657274 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.338932863 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.337607847 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.337175597 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.33967696 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.33964382 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.339466734 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.338854086 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.338890104 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.339853 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.340990674 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.33783997 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.339436357 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.340288683 seconds)
  done (took 97.527137239 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.338652258 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.339074531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.339298754 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.33928209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340478238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.338977734 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.339375372 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34172164 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339313809 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.339972556 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33907643 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.337867669 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339235519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339113327 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340847153 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.339419982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.340746043 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340483133 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.340622495 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.339663905 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337921165 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.337567517 seconds)
  done (took 30.68977189 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33983348 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342353924 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.343311146 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.340383078 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.344088351 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.33938077 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.339111639 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341857352 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340314719 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340019194 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340737245 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339868708 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34471194 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341846749 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338663064 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.3427492 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338608977 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.340507149 seconds)
  done (took 25.359909477 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.343698772 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.338791557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.33971217 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.341187736 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.340228032 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339230087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343469099 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.339234882 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.341484124 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.341283311 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.341319018 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340227294 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.343242445 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341388733 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340655214 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.342576774 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.340380434 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341472665 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342039184 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343692001 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.341565145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341833722 seconds)
  done (took 30.729971671 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343930588 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.343123624 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.34235421 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.340701914 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.340206524 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.343772007 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.341525814 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.342145388 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.342154719 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.34163396 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342009517 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.343605771 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.342251849 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342439068 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.343569639 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342762211 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.343776183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34078927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343238318 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.343927735 seconds)
  done (took 28.073961411 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.344498585 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343997267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342119305 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341389328 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344600373 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.342029592 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342606074 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.341388804 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344523458 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.340559787 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.344149773 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.346577332 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344051784 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.342435029 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342297473 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34536691 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.343373255 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.343656685 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340592038 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342089922 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341323286 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.340256153 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340929829 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.342319193 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.341728249 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34114311 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342104802 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.340607469 seconds)
  done (took 38.817438907 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346036451 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343932569 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.343516113 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.341543034 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.34191126 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.344030494 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.346284637 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.347891734 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.341539977 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.342674311 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.342755372 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.342555789 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.345417784 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.344096305 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341940268 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.344445036 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344959509 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.342745666 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341681069 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342961092 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.344104276 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345792399 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.343715833 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.343599901 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342107595 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.342682149 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343866135 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.344179561 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343384251 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.342395835 seconds)
  done (took 41.531246745 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.366392795 seconds)
    (2/2) benchmarking "in"...
    done (took 1.365922216 seconds)
  done (took 3.954806165 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.344753446 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341363799 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.341493789 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.34576458 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.344792553 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.342143462 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.345095924 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343864951 seconds)
  done (took 11.972724971 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.33673208 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.344486504 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.342112974 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.345915712 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.342172483 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.33579246 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3454162 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.351117024 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.338251705 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.340421964 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.343904963 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.345586458 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.340730781 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.339488135 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.343263874 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.340774893 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.346917251 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.344759911 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.344717712 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.341631766 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34583798 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339847152 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.346502484 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.346538467 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.339379249 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.349359921 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.344256318 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.350480558 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339400496 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.346497559 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.341299952 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.350817773 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.343966347 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.347616465 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.345494063 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.344553267 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.345818193 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346188087 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.345241984 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.351804098 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.347162652 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.347497406 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.338403618 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.339826625 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.345821203 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.345922154 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.343677457 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.3443655 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.337023148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.340793642 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.353789818 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.339417387 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.345071485 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.342568476 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.340904448 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347487744 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.350258495 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.339497028 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.343092186 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.349218821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.355373001 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.351106837 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343240639 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.349245687 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348488453 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.355336388 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349038414 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.349917859 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.345690885 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.345625819 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.34734745 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357597453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.352864303 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.351431771 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.347656515 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.346435699 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339537833 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.348455103 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345989504 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.346103452 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.349316366 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346990928 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348029185 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355324668 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.340385127 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.3488025 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.345851224 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.346725749 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.339570684 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.349743479 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.349121912 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.345822421 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.337654255 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.338485975 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.342822925 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.349406757 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.343207839 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.343547088 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.350169334 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.348636305 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.348871232 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.342597555 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.347131967 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347291847 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349528738 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.345431398 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.351364339 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.342033699 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.347673718 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.355562075 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348909905 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.340287083 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.344657965 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.349857489 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.342112848 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.346210059 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.345324143 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.340255621 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.353025445 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.349553128 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348330488 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.361409107 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.351204111 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.347309157 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.345069202 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.35821525 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346847176 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.342580362 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.352851006 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.349477209 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.348174952 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.341340305 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.351394135 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.343764967 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346374148 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34079556 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.350425377 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.349275913 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.350481235 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.341117978 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.345302032 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.342980149 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.343675611 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.345609469 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.349265593 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.340592767 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.349570531 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.346392912 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.345028977 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.343558371 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.349537279 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.348502498 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.342341233 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.349925452 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.341038173 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348737283 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.341297565 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.350998154 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348963332 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.349434074 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34758675 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.340244612 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343181632 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.349305221 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.345410689 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.343237957 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.350690216 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.350882101 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.350169231 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.341153885 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.353573982 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.340401709 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.343331807 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.353825093 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.350872454 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.34774496 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.343637961 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34849403 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.347342464 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345157029 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.34264034 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.346108896 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.349649283 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.348328907 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.354881873 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349188612 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.348809652 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.340552723 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.342997614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.347706979 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.3433122 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.356079914 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353992717 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356182219 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.344880185 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.352308768 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.341610672 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.352648274 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.343798205 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.350013312 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.350356156 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.34867041 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.340618304 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352337034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.343619661 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.353404846 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.341434976 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.352330315 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.350784784 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.352961658 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34837887 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.342938978 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34628937 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.354583861 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352463762 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351434874 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.342129311 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.351141216 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.34187782 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.344252296 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.349954263 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.352793003 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.348097796 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.35395246 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346537782 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347514281 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.344468307 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.342027318 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.34968393 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.345443919 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.346182946 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35149509 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.34955918 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.346160301 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.35226376 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.350474044 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.344695644 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.349835715 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.353395739 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.350593002 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.34700808 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.355727973 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.35253295 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.351432941 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.3502729 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.343468444 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352530406 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.349628551 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.355699102 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.344602375 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.351227346 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.34516843 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.349276749 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.344709748 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.344832143 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.345839718 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348071452 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353568885 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.351214542 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348896779 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.354179599 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.351328562 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.351642582 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345537086 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.356975492 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.348616706 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.346914619 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.348314719 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.346388443 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.353954487 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.346219984 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.354737963 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.342198661 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357114917 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.370294685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.353464053 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.352662671 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.354228637 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.351211061 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.349932325 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.346292295 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347692402 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345090514 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.344803094 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.346367943 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.351257477 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.34548878 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.35405262 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349021283 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.350419885 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.3574689 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.353378915 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.346468935 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.355622831 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.350924747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.350295774 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.348269833 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.352981882 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.346412351 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348522964 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.347014686 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.344828648 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356262592 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350819126 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.349398102 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.347326557 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.345988134 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.345746158 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.348476624 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.354874765 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.350153028 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.357475143 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.347525639 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.352865264 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.347978727 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356114454 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.355641851 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.347147447 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.358531234 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.352420615 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.345071339 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.345113024 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.353085069 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353210784 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.359315257 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.348853355 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.356751177 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.351047065 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.354209264 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.354443186 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.355690523 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.355706301 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.353254458 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356696364 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.354848154 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.348847023 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.354478196 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.359398639 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.356367971 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.354291591 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.347344595 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350545143 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.357187142 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.34557406 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.351189375 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.349943035 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.35516461 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.353967914 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.356149243 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.357804608 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.35534065 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360393599 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.355371359 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.35935877 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.353452849 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.358363151 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358884022 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354067712 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.360652392 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.348505224 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.359704616 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.357816622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.350880418 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.349841521 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.350340484 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.360816107 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.347781619 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.361375989 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.354187081 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.35005975 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.351956991 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.356408653 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.347803588 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358537869 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.371302259 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.350949461 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362960628 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.355327718 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.352743456 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.358684491 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.35643236 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.347873443 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.350955836 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357299696 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361784693 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.351722472 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.359780293 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.351414532 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.361894969 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.358338902 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.357377203 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.360569502 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.359226312 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.352887732 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.357502199 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353741939 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.360927927 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.352232709 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.353654973 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.352132372 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.359971633 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.361319754 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.35183516 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360377829 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.3612531 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.34820229 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.354654631 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.36028264 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35213854 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.36105324 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.353850139 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.356403319 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.354114731 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.356601324 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.354006954 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.360514724 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.351068946 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.354587334 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360521831 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.357535074 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357968789 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.355158652 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.363057798 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.352601688 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.35213228 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.360070121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.354366392 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360631928 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.354428907 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.357939946 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356232759 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.364087854 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.362303424 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359561035 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.352665804 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.35213942 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.362364148 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359975949 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.36202256 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.359177712 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.364520873 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.353632863 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357001326 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.357392115 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.354394003 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.354823294 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.362751622 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.352797552 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.353741783 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.356000267 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362750462 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.362336741 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.357075961 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.354041189 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363668762 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.361381973 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.363473151 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.35596442 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.35992574 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.356103786 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.365996889 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.362273857 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.355883897 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36385857 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.359508301 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366505617 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.3596347 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.356048519 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.356506933 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365482463 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36334142 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.359734669 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.363138293 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.358951679 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365806195 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.363786427 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.36388571 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.356925175 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.354569607 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.358898315 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.359592827 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.362418148 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.360516576 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.357024258 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.362369356 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363237465 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364699226 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.364099425 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.362213889 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.356140824 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365612507 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.3556562 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.361029605 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.358123101 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.356746038 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.365501301 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.363630376 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359587215 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.363922317 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.368420154 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.365219541 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.357855886 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.360448111 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.360065886 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.364733588 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.362335271 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.358536191 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.360258002 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.369115372 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365300946 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.367886989 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.35937296 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367616482 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.371593305 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3592557 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.361313402 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.364453906 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.369399503 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.364376996 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.366160715 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.361353987 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.365238458 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.371464326 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.365870198 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364741058 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363721431 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.358664749 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.368870782 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.362635165 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.36354669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.366156547 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367674902 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.364102358 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.364291686 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.374613739 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371058803 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36889009 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382035755 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.366172373 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.364076801 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.369325234 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.359362475 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.3672165 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.364024149 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.368824703 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.369939424 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370855171 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.366951349 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.360084013 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363866361 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.365042517 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.370450375 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.367721215 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.362630148 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.364424302 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.369493495 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.368544681 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.370064434 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.368312336 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.370668008 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.368801854 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.362900952 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374503491 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.376026732 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.369625166 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.367490349 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.371737637 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.365785649 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.364426092 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369088415 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.37354843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.370739976 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.370160607 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.363689392 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369399842 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.370663006 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.361914011 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.36453607 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.36198228 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.374365769 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.376018412 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.385408653 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.369718152 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.367110183 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371085624 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.372107307 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365389854 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.37571013 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.371476171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.364368164 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.36800786 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.371471937 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.37380983 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.373501592 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.364206035 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.375298225 seconds)
  done (took 808.040827151 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.372235641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372831398 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.37135193 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.371575507 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.374791442 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372304663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372825799 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.371900692 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.373022156 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.372905396 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.374251909 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373004335 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.371111831 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.373834862 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.371985476 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.373167007 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373324877 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.373353855 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.374670807 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372830351 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.372118837 seconds)
  done (took 30.071669238 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.374751658 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.372518575 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.373160234 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.374181124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372111671 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.374752379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.375000204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376655618 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.373568289 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374370516 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.371570807 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374504426 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.373235522 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.373122911 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373061105 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372564006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.372075514 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373912795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.373840727 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37400178 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.373565837 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.37458654 seconds)
  done (took 31.466238295 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.375649552 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.370916381 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.3646185 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.378148102 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.372595737 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.373610854 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.3723327 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.37389968 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.372870622 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.36909808 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.365652118 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.368727345 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.375438621 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.38022853 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.368681149 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.37698757 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.372384825 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.373642832 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.373626764 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.373589353 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.373423566 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.380089746 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.375312676 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.367302843 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.374880541 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.373077793 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.375086569 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.375426671 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.367021257 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.376750584 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.374637264 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.368491384 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.371248956 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.369589634 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.367911369 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.378279075 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.373858551 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.372130476 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.375292271 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.376415941 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.390329279 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.373160429 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.372853332 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.380007969 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.378205127 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.370932602 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.380551688 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.375378422 seconds)
  done (took 67.186730061 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.376393607 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.376315544 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.376081664 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.377455362 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.377182036 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.377484174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.375436036 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.376914744 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.378167404 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.378288535 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.378423176 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.376823031 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.375709271 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.377238078 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.376789608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377156117 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.381926419 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.377028269 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.376122334 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.376432637 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.37481005 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.376779115 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.378269782 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.378197606 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.3779857 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.375073351 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.377501544 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.379281819 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.377363823 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.377047614 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.377614438 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.378647577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.37737142 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.378260612 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.378355553 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.376291221 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.37825107 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.378096277 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.381858523 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.370891499 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.371748261 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.370898987 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.375374679 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.373805626 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.371529659 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.371823338 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.37187474 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.369335392 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.370070959 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.370374727 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.37191056 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.371996427 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.371863011 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.371650265 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.369159034 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.371525761 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.370102653 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.369823262 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.370170389 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.372379042 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.369943579 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.367838987 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.369245539 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.368486274 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.368482952 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.368453123 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.369856099 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.373206136 seconds)
  done (took 94.721369861 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364269888 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.363245815 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364861083 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363091148 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363338098 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.364891562 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359882082 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.358739884 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.35915802 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.360227612 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.359078068 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.361634035 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.360863694 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.35986807 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.354180375 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.353806906 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.356143358 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357574838 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.357520079 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355352422 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.357737556 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354034255 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.355100133 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.357140033 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.354922012 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.356531127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355972603 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.356131635 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355538216 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.350045126 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.352266746 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.352229059 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.353217494 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.352284377 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.353243724 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.352884223 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350568911 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34950629 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.350590074 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.349683848 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350656422 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.35012583 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350702153 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.346942101 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.347021082 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.347973721 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.347513777 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.348272166 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.348458657 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.347458455 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.348978254 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.34271281 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343788418 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342835907 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.343544254 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.345237464 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342995541 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.344114872 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33952892 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340080275 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340231655 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.341218015 seconds)
  done (took 85.107151087 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340588022 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.340731879 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.33904403 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.336529001 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.336605502 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.3353771 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.336937401 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.337824407 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.33837653 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.339434537 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337718973 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335499735 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336782668 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338526751 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.337139574 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33768635 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336986256 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33614005 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33422598 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.335013233 seconds)
  done (took 27.968393202 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.334608216 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.335571742 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.335664647 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.335101084 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.332842151 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.333859367 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.3328975 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332566693 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331245637 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333137624 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334721212 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.334263927 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331244679 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.331010157 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.332644914 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.32955366 seconds)
  done (took 22.548519336 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.331858276 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.330205765 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.330199995 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.328307785 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.32727815 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.327915672 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.32750051 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.328426124 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.329023304 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.328678745 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.3270387 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.327875911 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.326816553 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.327352385 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.327295045 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.325702934 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.326378344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.327833459 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.324893101 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.325322662 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.32596511 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.325603925 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.327569559 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.325638864 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.326253617 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.324604934 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.324926746 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.324371334 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.324733787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.325705534 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.32458132 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.325112574 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.32536533 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.323193553 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.324592314 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.324312662 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.323034066 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.323304774 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.323037973 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.325379413 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.32263916 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.322314349 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.322078336 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.320181086 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.3213297 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.32118405 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.322641807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.321971926 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.321095474 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.321580958 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.321110414 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.32063831 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.322404731 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.32132543 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.323715429 seconds)
  done (took 74.096500906 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321322099 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320099302 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.318683733 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.320068084 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.318796713 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.318289753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.32074021 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.320096726 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319261489 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319712235 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.318045348 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320199394 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318769348 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319293463 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.319240635 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31805696 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.317669202 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.3173348 seconds)
  done (took 24.95064175 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.318103527 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317796832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.317748002 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.316074797 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.316727283 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316419276 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317016786 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.317032239 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316043786 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.317067459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316611737 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.314977452 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315057743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315341034 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315304989 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315587508 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316481378 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315895627 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315631078 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314778773 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315427497 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316121974 seconds)
  done (took 30.161998598 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.306770233 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.304732392 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.307626903 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.320202141 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.318225139 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.30596315 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.305757967 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.305080393 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.327101429 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.345611055 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.340900115 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.316758261 seconds)
  done (took 17.005706798 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314379134 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313443554 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315331103 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315753705 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319060396 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315494244 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31394675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313218365 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314411656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314433205 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31291205 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313708946 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31550295 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314366084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314317658 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313938961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312959 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312848086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314256344 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312998129 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315612217 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312858832 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314121082 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31298602 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314421831 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313247804 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314804691 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31529594 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314765119 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315068148 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31457066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314566 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314401024 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315422632 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313286546 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315226978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315818253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31476156 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31580407 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315150189 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314438305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314994867 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316896535 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314904668 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31568439 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315785754 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314689199 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313942513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314831248 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314481807 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315453022 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314695751 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314842143 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31696229 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315790824 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31720494 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316408734 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315937679 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317019582 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314646605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315632267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315494674 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316487262 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315203118 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315800793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316641726 seconds)
  done (took 87.987105967 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316466375 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313295367 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315225406 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316330885 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315171191 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315031242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316816235 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313798219 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314206972 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313909641 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31417731 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314017889 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313243388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313508618 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315010737 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312569801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313836171 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313991443 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314192373 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315388174 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315114043 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316023272 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314668785 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314625789 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315013605 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315600952 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316166765 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31508178 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31556827 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314625748 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314756697 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313425734 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315512053 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315822664 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315566537 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314822713 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31580524 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313883519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314179842 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315554588 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314650558 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314750912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314824837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31646633 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316706313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31667359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31761998 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317644708 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315599159 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316162591 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315474262 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316680032 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316442258 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317124521 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315562065 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316327787 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316818608 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317460801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31632916 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31676948 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317056062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318420009 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316899493 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316860896 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316341711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316294162 seconds)
  done (took 88.022030863 seconds)
done (took 1873.713811961 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.4754665 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.428169184 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.307913031 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.322187712 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.308320483 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.309503169 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.316976227 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.309441538 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.307552108 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.308500627 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.308269534 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.504483566 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.340293627 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.308955221 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.307713823 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.405618203 seconds)
  done (took 26.773496594 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.332136925 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.317586368 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.422153605 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311648123 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336614827 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.496794532 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.368037557 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.313405203 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.475410724 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.331110411 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.305584797 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.349877577 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.313781611 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.305674041 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334294609 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.497203452 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.549431938 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.308285605 seconds)
  done (took 28.873457576 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.738810421 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.321737857 seconds)
  done (took 5.266272738 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.333890956 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.316930729 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314680803 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.311455227 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.307634008 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.308086552 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313402617 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.311234743 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.314395625 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439830299 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.316354065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.326352821 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329764819 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.315096103 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.322084794 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.356814004 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.509485588 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.324224468 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.321704942 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.319197585 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313899848 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401204588 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355756596 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.32233748 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435263163 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.317299922 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.322947511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.321393172 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.450735568 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.323854712 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.313864559 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.314110609 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318065143 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.309722707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.783677214 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.308373363 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.352717266 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329308231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319726331 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459351386 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313775846 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.321113073 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.316327656 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.759481053 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450342818 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427883691 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.31913286 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.325646345 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.31249563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375628163 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312440834 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311626158 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.366207623 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.123206189 seconds)
  done (took 84.329188132 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.3396346 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.30509014 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485381005 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.318628445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302474227 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302979483 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305165451 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.575765392 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.353660863 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304948801 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606875037 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854853582 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.312050348 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.40280206 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.273918212 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.414695306 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.303001781 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.303357615 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.302557974 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.309460458 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854452142 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304879787 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.304858664 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.396791067 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343885059 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828425819 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.304563507 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304811705 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.308121529 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.305178488 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.81140084 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.316550347 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376414193 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.305856705 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.57275559 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682389209 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644486881 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.308667674 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319019718 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.310265493 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.326197987 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821706157 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667627754 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.316699116 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.319748814 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821711406 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.305330191 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.315593279 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.305758948 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561315215 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.3055948 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.30615866 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.308648483 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.307711327 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.305982208 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.309526675 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.370195741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829680936 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306441986 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.30765437 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341475563 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307485288 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315052236 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309167543 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.323985057 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.670753056 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.498734925 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.316545847 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665345801 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803612357 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.306166429 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.879877899 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306931984 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.313291145 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.307855926 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.30819535 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.320445901 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827802507 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.328733591 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307426037 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.647902462 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.309277964 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.591514378 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.32322717 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30918723 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882711246 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.317895215 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.30750358 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.307810305 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.311885245 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.307975749 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308214922 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.580843133 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.33829634 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.308322209 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.308708535 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.332579923 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.309563461 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.322402777 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.315301123 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870880475 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.317100645 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.309831826 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310793599 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308494493 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310608825 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.310181958 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.312498997 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581248392 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.308433913 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.325164029 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311160465 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310852922 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.30993591 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.398509414 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.310284642 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.607613195 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.312682793 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309174458 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.308704289 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309102372 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337628344 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309526743 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.316639156 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.163169432 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.607469173 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.327143629 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.311346205 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310230425 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309755148 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31027011 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310886789 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.388399287 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314297955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088693466 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.341356145 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.337627137 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.310570205 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.324278176 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310459313 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.31975609 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310515427 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605641567 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.582993495 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.487678971 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.314530312 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314055941 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.074853016 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.333975168 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493628151 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329175592 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.312966217 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.592708137 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521649305 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.313991755 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.31214752 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.312035382 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571729434 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314503027 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627399109 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853091378 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.313028555 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319042086 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.100421937 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.014391044 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.318664311 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.315016393 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.594586891 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.328831495 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.313079491 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.313666257 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.313186552 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31652817 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.316414264 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.31912532 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.312048226 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.312844851 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.371258824 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506362622 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.331180251 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316159778 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.836655031 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.367938489 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318588931 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.323302188 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.317775342 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.314603523 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360971927 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.319010581 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.36447017 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.316974652 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.32027895 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.867651804 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.314282666 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.315991884 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508831491 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010948131 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.316520787 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.315859248 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.314745216 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.290090409 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.869609357 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.314474575 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.614003741 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.324571985 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353541696 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319360387 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.4030023 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871719444 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323529259 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314955007 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.97674462 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.315487044 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.829444365 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.315846717 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317546043 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896079223 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.315261842 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.318966032 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.315270131 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318719056 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.631865782 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.319244603 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.319133388 seconds)
  done (took 493.051999841 seconds)
done (took 639.496545585 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.315731662 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.321706669 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.302479236 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.32127084 seconds)
  done (took 10.473708237 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.334008469 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324056475 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330969674 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322233785 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332052039 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.32242907 seconds)
  done (took 9.177960595 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.316368896 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.32423286 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.322382864 seconds)
  done (took 8.175888101 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.531904923 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.338686138 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.671185382 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.325341406 seconds)
  done (took 9.080129063 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333559184 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.334296733 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.332607771 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.332112942 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334370585 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335704988 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333024991 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.332287444 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.335345993 seconds)
  done (took 13.214551472 seconds)
done (took 51.33478457 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.461136435 seconds)
    (2/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.400410163 seconds)
    (3/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.356122625 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.130234742 seconds)
    (5/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.30356956 seconds)
    (6/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.394481788 seconds)
    (7/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.433634619 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.450705607 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.38593263 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.575374972 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.35451486 seconds)
    (12/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.301590065 seconds)
    (13/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.550975605 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.979840177 seconds)
    (15/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.385517691 seconds)
    (16/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.350900139 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.97597957 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.428714438 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085393695 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.446954639 seconds)
    (21/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.422830707 seconds)
    (22/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.300328529 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.441311099 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.391344445 seconds)
    (25/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.128054038 seconds)
    (26/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.461292812 seconds)
    (27/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.402634034 seconds)
    (28/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.430203901 seconds)
    (29/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.390851068 seconds)
    (30/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.344573058 seconds)
    (31/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.067808877 seconds)
    (32/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.302026507 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.35788978 seconds)
    (34/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.301054933 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.407518882 seconds)
    (36/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.392585823 seconds)
    (37/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.299813993 seconds)
    (38/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.46534024 seconds)
    (39/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.352663724 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.435340117 seconds)
    (41/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.49156288 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.43108049 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387072094 seconds)
    (44/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.404605106 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.434343771 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.344041305 seconds)
    (47/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.395678675 seconds)
    (48/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.44239957 seconds)
    (49/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.303301122 seconds)
    (50/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.572413816 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.432165715 seconds)
    (52/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.434954188 seconds)
    (53/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.30366973 seconds)
    (54/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.093765599 seconds)
    (55/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.575518536 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.523842214 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.303715594 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.306802851 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.47397256 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.304990131 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.482647816 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.306753705 seconds)
    (63/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.390389898 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.355157817 seconds)
    (65/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.351050777 seconds)
    (66/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.494169114 seconds)
    (67/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.448780046 seconds)
    (68/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.306590612 seconds)
    (69/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.652865399 seconds)
    (70/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.402041162 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.440378709 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.482216961 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.419742448 seconds)
    (74/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.19560288 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.587619337 seconds)
    (76/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.529534274 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.473012604 seconds)
    (78/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.426808514 seconds)
    (79/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370805478 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.60301445 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.323874925 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.020025149 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.450022977 seconds)
    (84/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.304941196 seconds)
    (85/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.453868578 seconds)
    (86/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.307960592 seconds)
    (87/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.066851547 seconds)
    (88/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.536373961 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.417519375 seconds)
    (90/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.303918694 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.323953911 seconds)
    (92/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.387012258 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.43430906 seconds)
    (94/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.343826954 seconds)
    (95/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.421673177 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.303404756 seconds)
    (97/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.173363158 seconds)
    (98/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.309625477 seconds)
    (99/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.472704962 seconds)
    (100/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.363230129 seconds)
    (101/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026747779 seconds)
    (102/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.361053364 seconds)
    (103/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.582339244 seconds)
    (104/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.310827721 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.396291898 seconds)
    (106/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.490786031 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.446485893 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.368934118 seconds)
    (109/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.314104858 seconds)
    (110/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.28383731 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.221996814 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.545927026 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.434967857 seconds)
    (114/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.40602685 seconds)
    (115/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.359401668 seconds)
    (116/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.503532162 seconds)
    (117/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.5185746 seconds)
    (118/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.40045728 seconds)
    (119/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.331065245 seconds)
    (120/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.51590176 seconds)
    (121/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.510456588 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.544643929 seconds)
    (123/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.306298178 seconds)
    (124/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.511234631 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.367368469 seconds)
    (126/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.135229487 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.482425481 seconds)
    (128/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.310855032 seconds)
    (129/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.516974556 seconds)
    (130/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.305870459 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.480513461 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.272320366 seconds)
    (133/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361606457 seconds)
    (134/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364074051 seconds)
    (135/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.366370005 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.465815483 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.365448422 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.168249854 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.176135437 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.58925797 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.019291524 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.308872236 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.460135578 seconds)
    (144/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.13215313 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.418741692 seconds)
    (146/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.469942115 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.310882114 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.399991735 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.505119747 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.312685594 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.338278294 seconds)
    (152/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.455788305 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.444594582 seconds)
    (154/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.333895725 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.03796696 seconds)
    (156/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.373779827 seconds)
    (157/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.411596445 seconds)
    (158/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.308424523 seconds)
    (159/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.313737109 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.323394715 seconds)
    (161/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.316358672 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.402275771 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.131460457 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.418518712 seconds)
    (165/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.172399419 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371844727 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.489180887 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.430188992 seconds)
    (169/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.507411857 seconds)
    (170/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.309805366 seconds)
    (171/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.31701487 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.472534791 seconds)
    (173/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.392059458 seconds)
    (174/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.309121623 seconds)
    (175/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.31512869 seconds)
    (176/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.475580011 seconds)
    (177/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.329011513 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.529206427 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.312404346 seconds)
    (180/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.318722091 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.141290895 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.356743526 seconds)
    (183/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.406167601 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.522665806 seconds)
    (185/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.3093882 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.493762542 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.313908531 seconds)
    (188/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.560168452 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.348538185 seconds)
    (190/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.48974627 seconds)
    (191/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.322516834 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.434774842 seconds)
  done (took 338.590101752 seconds)
done (took 339.804684915 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354535016 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.415890486 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.338249824 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.338285825 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339470398 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.342418356 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358971947 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.339523731 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.3510834 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351817404 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.342599697 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346471962 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.3512245 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348945032 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.373212551 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.338948775 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.33887451 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348691456 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.352700372 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354810007 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339764776 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340789195 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361163005 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339984528 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348087018 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348898697 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.346371732 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.333390979 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.347871027 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355693078 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334867154 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.346715571 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.356696028 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350483868 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342064463 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.348497804 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340744012 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.417920895 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.361183266 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.351929271 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.348775489 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355946783 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346104405 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345590441 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.350958505 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.3625772 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349128483 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.355221299 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335607417 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.335478012 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358197853 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352080688 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347818239 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.334535498 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.33292794 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.357835217 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350555807 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356853993 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.347682591 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34300517 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.376417012 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357276074 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353817363 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349327585 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347594751 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355836357 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350131465 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.35634572 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349583836 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344220509 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343365414 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34958601 seconds)
done (took 106.46840883 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.472275645 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.341823072 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.505491587 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349984076 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.506651725 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.478065586 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349695809 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.350130699 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350147788 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.175123378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.350150585 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.350804105 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.343545017 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.351059833 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.475381889 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350153112 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350207947 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.111640211 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.351306361 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.487152762 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.345185719 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.351259394 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352241635 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.193174172 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.345017502 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.339015842 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.492988064 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351455756 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.093626842 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.337741065 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.341129403 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.087584607 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.490896675 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.36957595 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361267455 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.359742872 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.510936258 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.356352942 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.476788604 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.474981845 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.515419172 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.390589108 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.339419601 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.344022972 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354528269 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.353409349 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.353183214 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381043631 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.344723435 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.353508878 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.068464871 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.361197947 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353602075 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352640719 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352639526 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381364308 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35303462 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352793979 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.4921611 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.35428502 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.479383864 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.202101611 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.220938893 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354212886 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.342387441 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353112684 seconds)
  done (took 109.765459357 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.411919439 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42041592 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.455927927 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.349598395 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.39632713 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.456203376 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.350532187 seconds)
  done (took 11.073483347 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.350962761 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.35375872 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396853184 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.394230417 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.354524315 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.504145027 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354443466 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.358542344 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.353067005 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.399705494 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.354761604 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355434973 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364449539 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.347064668 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395324627 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.358837899 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462318235 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349048378 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.353680321 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.499291158 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354927512 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364236251 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399764093 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.357888776 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355123577 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.35341451 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.123586021 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355311003 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358060882 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356044777 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356932578 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.40075073 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354970077 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347732973 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356041752 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463745289 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.356222811 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355370489 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.355703995 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.35103124 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356688325 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.356209292 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356257273 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.355675548 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356516405 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.373390972 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357816805 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.356298296 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.356815408 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357195853 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.398214761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356024812 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.358126777 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357932018 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.404732077 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366441683 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358294145 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.355820721 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356836519 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356477474 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.502851914 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.39556478 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.357070135 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397256703 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357335373 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35563094 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.356900487 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.357779526 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44175494 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.357617748 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.397406311 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.358352369 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.530809393 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374499574 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359622651 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.353264422 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353846592 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357474087 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.34834468 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.357023396 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356945308 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352589987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357093495 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357512017 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357365768 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.515773824 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459228172 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.358332521 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365519012 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.357815251 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.359649447 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.403792953 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.357873749 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358963142 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402745439 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467302165 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.408095748 seconds)
  done (took 139.490209415 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.36496336 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.367147883 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.354738969 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378314367 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.353835427 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351982878 seconds)
  done (took 9.408412976 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.353842087 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361713586 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.359970724 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.360298077 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361260344 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.360410112 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361145215 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353503817 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363510276 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.360769377 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.359055356 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364798703 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.363135187 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.359788412 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360251204 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36202287 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359891692 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359144421 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.360777331 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361087672 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.352401926 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.361277626 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362047932 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.35423225 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364882097 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.361439841 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379662361 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.36090362 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.360786363 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.361394473 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.363498019 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.363491197 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.353925876 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.357216961 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.364830192 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.355742856 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364387792 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363474989 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362755967 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362739505 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.364973188 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364071409 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362683839 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.365999745 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.356231161 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.358515926 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.366808625 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380193681 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.363622111 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.364043075 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366892039 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.364926699 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362802574 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.366473563 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360351283 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359347697 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368053165 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367868211 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362668188 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.357005248 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.367281712 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.364860772 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356339103 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.365743313 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.364665203 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.366681659 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358426021 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3654249 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364414282 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363246948 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.366622279 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.365026181 seconds)
  done (took 100.329768422 seconds)
done (took 371.295484189 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.635954713 seconds)
  done (took 3.876735974 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.478664514 seconds)
  done (took 3.720258781 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.520118101 seconds)
  done (took 22.766325983 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.407812799 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.451473437 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.377516459 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.353389334 seconds)
  done (took 10.833621193 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.655113004 seconds)
  done (took 3.89723102 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.357961435 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.356709176 seconds)
  done (took 5.957876652 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.561611364 seconds)
  done (took 3.804170335 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.553039746 seconds)
  done (took 3.798229865 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.378542883 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.374453669 seconds)
  done (took 6.002694545 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.331572313 seconds)
  done (took 3.57486536 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.31453291 seconds)
  done (took 20.557443321 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.368387844 seconds)
  done (took 3.613970887 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.405522784 seconds)
  done (took 3.647972162 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.892938136 seconds)
  done (took 6.136558578 seconds)
done (took 103.430507291 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.351506405 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.357125389 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.3578624 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.35755653 seconds)
  done (took 10.666974675 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417834957 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.416264368 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.423856397 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.418190182 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416620029 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.416788535 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.405562836 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391334587 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.418147933 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.417389771 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.424008534 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.418334025 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.417383337 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390384152 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.418680833 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.424271327 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.417097517 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.424139637 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391828648 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41767891 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367610233 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.418894014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.420048676 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.369595964 seconds)
  done (took 35.104937332 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.875423607 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.430484905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510902312 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.412636987 seconds)
  done (took 7.473324954 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.4444502 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.447739819 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.470716213 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.502712899 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.531032029 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.466257211 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.396018096 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388500348 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.377446467 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.449356248 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.502765241 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.435295531 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.536329661 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.366891767 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.655453161 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.366596385 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.367412992 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.44735556 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.497811536 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.52508805 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.368114588 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.445036918 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.453524862 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.43804898 seconds)
  done (took 36.124556072 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.377041491 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.388446803 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.370616962 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384988381 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.369020545 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.370118789 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.371957662 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.377921424 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.369260811 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.37058397 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.369261074 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.382738226 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.36933577 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368931137 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.375389643 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371785619 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.373843993 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.376743648 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.378233762 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.37028387 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.368595333 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.376878216 seconds)
  done (took 31.477616804 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.356751707 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.355449985 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.706892269 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.611707287 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.356424112 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.357718069 seconds)
  done (took 13.991396109 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.433310398 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.57297785 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365357848 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710155808 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.803448449 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.369492916 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.364184854 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.605979462 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904303178 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.895929675 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426085674 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434192011 seconds)
  done (took 20.132089843 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.356038141 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.362397401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.362096904 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379700919 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.417608753 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.372457365 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36981008 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.356541558 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.423057699 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.428926502 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.372198094 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.419227424 seconds)
  done (took 21.867714823 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454676253 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367024792 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366392455 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393431527 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365394854 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213539122 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395550532 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06353513 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.370574269 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642384889 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367524872 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461851004 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621080824 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36683194 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37415611 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.330326431 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600256129 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871550795 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36741446 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382188642 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404745564 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365294048 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388081051 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.581491544 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215891546 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369054322 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.63119329 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367355631 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658008999 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63942674 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63940088 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374877311 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646253481 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006184419 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470919516 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577104705 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367767575 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368815066 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.364378098 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.373094839 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382460022 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37613252 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633921257 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376342277 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368318211 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380115045 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075704072 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.374542482 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.370030742 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36961945 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636917271 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472943999 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373100796 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368792972 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408192688 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370685962 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.375628645 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495572872 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934552524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374113711 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388128299 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.375496603 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369848585 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387639137 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045983028 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.38292931 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.377336291 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375515945 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369543888 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370614014 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40250161 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369144306 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.393451875 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372435344 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162948584 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371533946 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378756356 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937894854 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371728097 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.378438062 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601658364 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372041147 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372038478 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.370344136 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371482811 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124482031 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380095635 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.344202587 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430285504 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071887693 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579933931 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39425749 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403618335 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594517293 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.345467094 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371957364 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.372760068 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396259648 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392789298 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0751994 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372089312 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.378306073 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629662542 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.582997547 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381638138 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.345497747 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855937532 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371877803 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.40348796 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384207095 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588101376 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.022449858 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648326991 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392814725 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410345413 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373891173 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184617673 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374291244 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.386780673 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376416605 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656673413 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.226935064 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373408689 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442426256 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378571657 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375049808 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374466518 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381724593 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374434539 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.566529428 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390429979 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646824561 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.380807164 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375009055 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.385993369 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387815877 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.383715132 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59682678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375112887 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659479954 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376494951 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375672704 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375795145 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.597286773 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.374254154 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.38086238 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638898963 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388935316 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395499981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648901758 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412903744 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485346986 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405106958 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.383363689 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634846262 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.381519881 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.382534086 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376124008 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385487284 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377414969 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.384166884 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371872286 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023114957 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358016175 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377465285 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377781763 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392319524 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445836279 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385025128 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587462722 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382102476 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37725335 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385150989 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.38668746 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607473778 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64733601 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.3825538 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476636371 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.86262579 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027245468 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397073801 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.377898175 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.377367083 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.377537341 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377459589 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379267171 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379171129 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589917667 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654316721 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376249646 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025523342 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385062217 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379440217 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391978121 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645274425 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391877182 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379995683 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.380149528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383215148 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405806175 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65252486 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520854964 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394218353 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379503727 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.898564472 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385774892 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379436518 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380666396 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410228039 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380289838 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223637488 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641149564 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372696841 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645593495 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385979649 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.403080996 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.378081368 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381577958 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3878722 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.403649578 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387946042 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.592322507 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386347222 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38879166 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938293618 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232693103 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979860703 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389030954 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.405602592 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386576724 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098443211 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383496296 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382034241 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61852181 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08998137 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380616741 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86176452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.384212074 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136164139 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656756238 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619620392 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38434722 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.38797521 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65966367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599370841 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413358665 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382207806 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404289742 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.355381184 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935511922 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397772372 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468004971 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109201448 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386759145 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388567272 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.378339814 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401137111 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772706658 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387369473 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383703728 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388812878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396977641 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22863023 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384677993 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383032266 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049648409 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391318559 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.872559031 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384873298 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594210202 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657264907 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.637756617 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.390297119 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.391081302 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.643816105 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653115546 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391266473 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384998185 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981036318 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.251090783 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.393075483 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384713855 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200790719 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387394521 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686836004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.391558958 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.394024265 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397626014 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385343278 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385399012 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.386164664 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389660899 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360219375 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905888109 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.38117397 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387369187 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388407617 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392069156 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641100795 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.401410789 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034681181 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619514564 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383949397 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436042855 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.39136462 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39413216 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.364603175 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387936289 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386769313 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41816501 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60758585 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388805937 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.363754573 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414873824 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598157105 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388729021 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400230336 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617829134 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.394190666 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.408819486 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251340995 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422343716 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396588474 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394236113 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383741835 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424724843 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455024681 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599465762 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.662551291 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66410554 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77913023 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402747313 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39641019 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.403963672 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485436008 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398777732 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399860429 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.168820619 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037895555 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238749885 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0437745 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665270715 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397445589 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394259961 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391923583 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524918981 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388710072 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664476092 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389912486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.385644329 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410664339 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398268351 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397180351 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620812772 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664457195 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389719125 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392462991 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396810422 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.390116874 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662856804 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.604009253 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912666652 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974343874 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392039329 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388082665 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103476404 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664245804 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391115379 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389277468 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391975954 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.41473655 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409097476 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.399882654 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407116706 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531243777 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660492852 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038483033 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663699418 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.433265184 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.910722722 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40471899 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65207481 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159992551 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602142252 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050046493 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.159474017 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661869123 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461181356 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604861074 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.39222685 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528360228 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.395813664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398323372 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392303771 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393211049 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.393563799 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.660366072 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050228849 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660598033 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.39944705 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.399924076 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429304089 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.604719586 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619652084 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157150333 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615305246 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665342149 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404538556 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392395234 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049333701 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671624276 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399696035 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398996254 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618346803 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398881717 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420877733 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.911446297 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.39373844 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960835419 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.283125081 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416381804 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394414535 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162533125 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052816277 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41003592 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911150751 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394918485 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406614117 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676565669 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.400984471 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405621081 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679593012 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.3997896 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394784358 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613251884 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.05078929 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162290883 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.405385619 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401316488 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.401616985 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394711418 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420125191 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394868674 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402888332 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.786411727 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401273891 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395930019 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408387746 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.406758132 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414483752 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.401506663 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396168421 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.404916431 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.38091069 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.379296905 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416891976 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52582912 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951453475 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403923569 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.071018005 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.722248985 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650702797 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39592652 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.374001755 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.40307072 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395828058 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397328882 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396371288 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388499084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977213588 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.398236206 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.674380507 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40904273 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.607624194 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607670099 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411672286 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617246239 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40378332 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426764825 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.368712208 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399379211 seconds)
  done (took 985.935601926 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421550226 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.413696055 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.415881479 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.465314894 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.429745586 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.400911084 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.413514063 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.423100793 seconds)
  done (took 20.660681086 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.393254102 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.403107105 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.392035231 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.404559675 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.394196799 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.871945055 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.405228443 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.400338657 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.412932198 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.391973372 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.409042536 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.027617932 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.399033385 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.39688851 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.404507799 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.406337303 seconds)
  done (took 32.790883766 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.5049955 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.587222731 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.392633578 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.457590889 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.436114555 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.392696458 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.646071352 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.414697439 seconds)
  done (took 27.109522946 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.405378139 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.403613252 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.404265292 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.406509095 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.404869118 seconds)
  done (took 8.303000795 seconds)
done (took 1252.881058392 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405700301 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.405582078 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404430507 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406284243 seconds)
  done (took 6.900564924 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.372469732 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.372961224 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.37568368 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.393027615 seconds)
  done (took 9.792089814 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.097120203 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.923189427 seconds)
  done (took 5.299685479 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.916031754 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.922513962 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.920185254 seconds)
  done (took 7.036716763 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.680145094 seconds)
  done (took 2.958607856 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.349826016 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.398809462 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.092005799 seconds)
  done (took 8.120947241 seconds)
done (took 41.387381835 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401357663 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.641394939 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.54917331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392856075 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.554994338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.549780518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.19916732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393407998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394296661 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406373791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401938326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.555107257 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.112617696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.643328648 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.115976556 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.736908254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.558485413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392668851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393428606 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.408224591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.200294193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395296203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.40276776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.407032568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.574641337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.539857734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.39531321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.7343791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.400410775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.40859431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.544748366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.394544165 seconds)
  done (took 83.478581452 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397444379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.400131518 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404053235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409233491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.393934733 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.407139094 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394380576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.394764902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393397036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421713436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394875949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418937727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.396175038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.394538074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.395157188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.392781131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.408860412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405166458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395037935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.397684438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39623503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395037199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.3949965 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394347874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.401164366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41016332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.396043267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.399383315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396345717 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.395938187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.416575309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.410809572 seconds)
  done (took 78.105210508 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410428854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.406063461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.398173706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396124264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.396277913 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402540464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398084603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404259397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396280661 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413854014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.396028526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.397416923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416003589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396493178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.400411017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39786304 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.396584702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.403571638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.401893781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.397889434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.396783874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.405411634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397401389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414810623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.433021649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.397279466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397579819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.400295901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398658418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.404625298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.404570821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.4019973 seconds)
  done (took 78.161850466 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.637867581 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.411695286 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.41498349 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.406726979 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.416970136 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.41248347 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406219332 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.642478452 seconds)
  done (took 15.033873199 seconds)
done (took 256.057825366 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.404833987 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.91545802 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436245354 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.404371613 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.423839643 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.430681137 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.630862942 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.433419281 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.628388095 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.424074186 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.419765448 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.406787662 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.208730503 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.56317266 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.242788776 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.35921965 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.284380022 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.41420577 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.968344617 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.692038561 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.432278397 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.400695223 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.248036698 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.296595701 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.381027456 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.48632794 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502990142 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.62977248 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.563977724 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.485575392 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.91932745 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.420420577 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.409406988 seconds)
  done (took 65.15266531 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.406666871 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.413159799 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.413828198 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.415400332 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.414788512 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.414244355 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.406846378 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.41512513 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.414916911 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.414527894 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.415976007 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.414497924 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.415615907 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.414677962 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.41540857 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.391501513 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.405533341 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.416466885 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.40688789 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.392157863 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.415997591 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.416038887 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.415502007 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.416433338 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.415860031 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.416530079 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.416938317 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.417999742 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.415225043 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.415789648 seconds)
  done (took 43.665673439 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.415701642 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.988128116 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.127980109 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416338994 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.409857779 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413206337 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.697728941 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.41777711 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412398677 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412016397 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.888843103 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.422459989 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441861398 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.136035706 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.413265501 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.418160997 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.418596778 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410784978 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.995765051 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420529353 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.697027941 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.419157824 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.699853798 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419709527 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.411666451 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412069683 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416691289 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.224989396 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.430723076 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.89052523 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.189834924 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.700252172 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.157495117 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.186402817 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.196986892 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.42577569 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.418955501 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.912307143 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.417554225 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412339674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.697857336 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.418389278 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.138031102 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.083950322 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.43036725 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41948791 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.263510141 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.898447808 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.659347583 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.422181314 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.181546804 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.417174396 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.421200421 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414078425 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.656396363 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.42036657 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.413919808 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.263021614 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.418816555 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.6996914 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427189655 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.4142562 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.998916911 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413776793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.995871393 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.416119313 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422037902 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.413853564 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.145115547 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416665095 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.101252315 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.430223011 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.421388656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.892441034 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.988741267 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.298520776 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.41478106 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.010386203 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.184899227 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.716233371 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.421453326 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.235368028 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.71743951 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.41875083 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.423898991 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.424419855 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.420481586 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.482841414 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.697707143 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.051627793 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.097738574 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.273670143 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.703437919 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.428884155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416422121 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.261204136 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.424184375 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422801914 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146069644 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117314713 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43248471 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423366579 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.09173895 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.435008172 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.704349823 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.426871822 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.184688365 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.422138259 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.484883619 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.425034383 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423064188 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.419426693 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.70473035 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.424958246 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.424684534 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102317355 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.92917469 seconds)
  done (took 197.314694402 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.412193173 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.41181364 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.411926716 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.410883861 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.410976991 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.420085934 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410984761 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.411185382 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417685524 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.410480023 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.412079558 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.419245834 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418365372 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.410993724 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.415463586 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.412152743 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.411876946 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.432560909 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.41150877 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.412458534 seconds)
  done (took 45.580408401 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.426642057 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975488989 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.945881309 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.431282374 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.424874949 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.419016491 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.475976751 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.427889112 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.427596754 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.717654888 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.591539515 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.431572424 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.427092118 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.426215975 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.947900023 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.406200675 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.721928313 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.984803609 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.42987172 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.977744341 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.403461214 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.427440384 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418307792 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977229447 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.728443992 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.7049478 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.482631188 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.976718965 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.427336008 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.427912129 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.981440026 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.433021208 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.421286788 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.973947609 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.434241051 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44317865 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.428914203 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479629199 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.480176461 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.721226798 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.984611434 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.717366815 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.439400795 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.602759004 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.42974024 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.40323252 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.990252011 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.430057365 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404658231 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.430126773 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435055733 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.963956843 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.42864211 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.963943952 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.435439819 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.430863759 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.98133044 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.963148304 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.959181836 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.598950234 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.42716805 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.70841048 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.431498841 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.993074348 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.430995731 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.430198048 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.431425058 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.595678826 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.988324491 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.70977029 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.722625608 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.724313034 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.430438258 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.490481049 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.432062371 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.723878293 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488809774 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.85222412 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.725122426 seconds)
  done (took 128.815420119 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.683498145 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53605501 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.791071153 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.022838929 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.927898376 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.558132584 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535464634 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.670114449 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.430067256 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.512901928 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.068188054 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.526704784 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.173991686 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.4907989 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.53303981 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.555574368 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.819513244 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.413227306 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.080924776 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.041217167 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.424956581 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.533333233 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.944674045 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.614340471 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.420046028 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.98546074 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.381353559 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.942027711 seconds)
  done (took 53.919510719 seconds)
done (took 535.733788995 seconds)
SAVING RESULT...
DONE!
