cset: moving following pidspec: 28915
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.401990368 seconds)
loading group "string"... done (took 0.504406419 seconds)
loading group "linalg"... done (took 8.757147348 seconds)
loading group "parallel"... done (took 0.172402792 seconds)
loading group "find"... done (took 1.231002308 seconds)
loading group "tuple"... done (took 1.986254638 seconds)
loading group "dates"... done (took 1.441304481 seconds)
loading group "micro"... done (took 0.20004751 seconds)
loading group "io"... done (took 0.523297675 seconds)
loading group "scalar"... done (took 49.364286833 seconds)
loading group "sparse"... done (took 13.4049777 seconds)
loading group "broadcast"... done (took 1.256963747 seconds)
loading group "union"... done (took 9.005057596 seconds)
loading group "simd"... done (took 2.990866506 seconds)
loading group "random"... done (took 11.19862818 seconds)
loading group "problem"... done (took 2.166094219 seconds)
loading group "array"... done (took 24.507593794 seconds)
loading group "misc"... done (took 1.095896865 seconds)
loading group "sort"... done (took 3.693124542 seconds)
loading group "collection"... done (took 18.984823239 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.595728525 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126844133 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199835946 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.340292991 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.227500052 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165032645 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141855496 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.24070889 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.549520217 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202653593 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136157211 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.502492076 seconds)
done (took 6.153186247 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.249502963 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.24084975 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162129782 seconds)
  done (took 1.073973263 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074497951 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154907207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107307931 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092867683 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091446594 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106455444 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090721787 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107770994 seconds)
  done (took 1.426950044 seconds)
done (took 3.496473326 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.495175119 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.854726816 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.501591593 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141730224 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.306576646 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.291479328 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268789472 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.195670451 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089568503 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087870461 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171001118 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.440893159 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.381131089 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.010275018 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090552285 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092738824 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132551761 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.79423543 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079151991 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109175515 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.495019023 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.179089786 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098321847 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120372027 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184485503 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130481153 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.15823159 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099413317 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.656098637 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.128844885 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176595644 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095940605 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155151031 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183185038 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.191974494 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107987437 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679235274 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198180718 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.088001748 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097919056 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669704719 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.114240921 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.181285628 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102710211 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086588087 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179284704 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093815628 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077321945 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107751698 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085177822 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163577219 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465063957 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103227102 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171220931 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091550884 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691807777 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094881437 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.270944391 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122796804 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092189196 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089224942 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086827485 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156169998 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092492255 seconds)
  done (took 19.857574219 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144720195 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162386976 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0771795 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15448418 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123534518 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080141065 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101000952 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078138602 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107111976 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.192342683 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136896279 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151056348 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091045656 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089052457 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12825784 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248700012 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107961404 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120637023 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088408124 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08972129 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136883086 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095983349 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090070449 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107261039 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168045453 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201448838 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110095344 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12329571 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088474713 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093494892 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140925074 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144508701 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092655628 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087119901 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1867128 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104809955 seconds)
  done (took 5.136515412 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196380753 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121120673 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.203377326 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.157955565 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.185930274 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145302889 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169499736 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123334584 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269236962 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.194309504 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177135012 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111888298 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120242977 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079237404 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07943815 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079648183 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.467012626 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146875283 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160446756 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125315221 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102183873 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081408625 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098382138 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084634679 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076617173 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0980341 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.121241719 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.324200886 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.179157888 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097921989 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.112388984 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105397267 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083387571 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131831463 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192057202 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126603021 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140793137 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081287421 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076629529 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222712289 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103969525 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080342908 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.114483287 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132063021 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114750961 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09503062 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084631482 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220607394 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094504288 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099614454 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.082202626 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194736494 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126102345 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076385449 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288042796 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117630365 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080783725 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077095471 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101343616 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.803324437 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126743732 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080691992 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077013459 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098412771 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078343143 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.447458464 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082193288 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.134457392 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097075038 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.14011198 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096239492 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082135807 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1018125 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084530798 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101691072 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09522872 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079106117 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07800571 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09477317 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08142109 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112556056 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100109855 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07876927 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145215878 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115357743 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099074876 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121576456 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085244241 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079810584 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126206566 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08183145 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080130904 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.163987455 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081958463 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129060117 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081733502 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142504808 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082756794 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.249593627 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080937527 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120327738 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09923483 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125465533 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100172077 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078647599 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09942257 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079222785 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079265841 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158770705 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083307791 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079505651 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078779466 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100219292 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093069547 seconds)
  done (took 27.634704899 seconds)
done (took 53.300527131 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.431628156 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079900082 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08112989 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.098521753 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080737925 seconds)
  done (took 1.52009644 seconds)
done (took 2.246514949 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.31614996 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185998509 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100924994 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185093534 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085261669 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190590226 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177590156 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093686494 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200890116 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082172193 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183169819 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081748042 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102173029 seconds)
  done (took 2.73445389 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101439893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108178056 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100102059 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117273882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083992601 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099475665 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115852028 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111059577 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099442083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109811073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083744056 seconds)
  done (took 1.853676354 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097904634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104605629 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098181192 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113781178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083868558 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097223329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113318579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107332109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096582508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109745168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084243677 seconds)
  done (took 1.835018646 seconds)
done (took 7.147390252 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.072540368 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.143088897 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163595672 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206456883 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345148638 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.232860473 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.557846394 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150404468 seconds)
  done (took 13.742174353 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.165384837 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107896929 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090812605 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093967001 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089139257 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.111098103 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090428366 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091463449 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106853191 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090668422 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091380152 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107680634 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091598675 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089308928 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092089578 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104948696 seconds)
  done (took 2.400634399 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140707769 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138568726 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097533961 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09830853 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110016646 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097991662 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099354477 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11275432 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092634336 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093998059 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100388151 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11140048 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094573973 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091546871 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112070875 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116224442 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091743528 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112400074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114046907 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112281314 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098903195 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095738805 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111538987 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097621276 seconds)
  done (took 3.348272293 seconds)
done (took 20.219728375 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146077627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099023628 seconds)
  done (took 0.9746046 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.136409542 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152377857 seconds)
  done (took 1.023633532 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110264729 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088136812 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134178644 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102109451 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089956179 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105121005 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114683691 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10485888 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090308648 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089393609 seconds)
  done (took 1.767691397 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093357097 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093928756 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119403424 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134323395 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097404529 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109087006 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09498533 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091535314 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110083376 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089345666 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093061354 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122462951 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094823836 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12296941 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093952594 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095520511 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113361946 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093759186 seconds)
  done (took 2.601799373 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089182727 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091371886 seconds)
  done (took 0.920213051 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091779496 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089469771 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090662427 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10790384 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088867996 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088671918 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104474626 seconds)
  done (took 1.402083502 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483173405 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.258376636 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.354296727 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107199132 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142080335 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.34756322 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144201405 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.221592096 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100819574 seconds)
  done (took 2.932688449 seconds)
done (took 12.358962898 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089943536 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218128528 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.620776264 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11137267 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088412307 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157223084 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.285010937 seconds)
done (took 2.317699778 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337528107 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142412318 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081189899 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088929431 seconds)
  done (took 1.39248958 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079882546 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097914213 seconds)
  done (took 0.928614797 seconds)
done (took 3.072015589 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088456727 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087732627 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086561764 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104560998 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.086848449 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088431067 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086839908 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102759552 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.086757513 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.1343034 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.088573712 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087192182 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086336687 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105033117 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087791744 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088130986 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086899759 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103832922 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088002035 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087439957 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10260363 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086940884 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087623516 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086266862 seconds)
  done (took 3.00803757 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105604892 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089686142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106558753 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092771677 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091691118 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106771026 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09243356 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091094435 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108143066 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089485108 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092843596 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090780769 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104729184 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092548159 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090183561 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107626271 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092624297 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089444241 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105515651 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092806496 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091996936 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104831356 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09211777 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090794329 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107181227 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092606216 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089660591 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106018739 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092680455 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091498203 seconds)
  done (took 3.645473497 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096102058 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085414877 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086918255 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111932021 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085832419 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090313926 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100459345 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086934656 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089201409 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087437254 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105383044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087254863 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08492986 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104872893 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089322766 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091590488 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094730438 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103499304 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085995003 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088516253 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108118508 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085959352 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08879699 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088239627 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104273734 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085761937 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089220108 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102948715 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090223697 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088483366 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090194188 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.1076883 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087936654 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09643114 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107170781 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088150399 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093850623 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101761464 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089818595 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08514249 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084899366 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104494418 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085423816 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093779046 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104852723 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089750215 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086088399 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088275301 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103818607 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091962697 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084214505 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.10165241 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091343709 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089453002 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090097939 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.100667865 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089278356 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084430123 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.1041923 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087838967 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085900595 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085159914 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108791758 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08983657 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102857996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110756657 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086242462 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089792481 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106318203 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093536945 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090660711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114163847 seconds)
  done (took 7.513179277 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100799478 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097500995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088961488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107308929 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089189845 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08757099 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109786206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088253658 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089780474 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111515553 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088796418 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091243954 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088614335 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106726449 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089680305 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089481888 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110396776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090791052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088824035 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106256942 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089145013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093885881 seconds)
  done (took 2.86101551 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23250048 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096954176 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137307697 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116899356 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105633938 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119122152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094478224 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094696496 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108394763 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09889444 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097484723 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111013126 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107459177 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097424045 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113035231 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10029373 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109624608 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098377035 seconds)
  done (took 2.800329217 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103260315 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093446551 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12692204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091126636 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090455996 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090046946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11408184 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111081238 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107960856 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092258987 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098269437 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092980864 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108177891 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090957063 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091292272 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109141835 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091783383 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09044393 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113575964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096806938 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095482662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114581092 seconds)
  done (took 2.975047679 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104859059 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090764797 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124981571 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094718376 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089458486 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089312046 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112578125 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090852865 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096114889 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107816467 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090941089 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090149644 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121801217 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091471443 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096717145 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107950234 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090926533 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090789781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108005638 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091135205 seconds)
  done (took 2.74260954 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167628199 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12197747 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106883985 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113568619 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12299157 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106737945 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113562075 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123899114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107589245 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133255143 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107668246 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105726027 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129567965 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111951224 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105848543 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133034473 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116472128 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130923337 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107589241 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105438647 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134093975 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106093815 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131069398 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106045218 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105830594 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123823061 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106293536 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111040095 seconds)
  done (took 4.061384974 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090330447 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090161388 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089078922 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105299707 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089768643 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08882929 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087915053 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105530925 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089980612 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090163583 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106017418 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089867179 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090026459 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089463961 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106592346 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089896295 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087934099 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104813894 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089751864 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089597415 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088531444 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106113447 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091075735 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089579643 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08780843 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.106256064 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089300633 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088332012 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106406068 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089568017 seconds)
  done (took 3.582379603 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102374834 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098478098 seconds)
  done (took 0.969529788 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096596415 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104779177 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088678896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107896296 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097144726 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089123443 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11541412 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096149825 seconds)
  done (took 1.56506768 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.137494237 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157256294 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095004142 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101275397 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160614702 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149878726 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131017187 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094589682 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105778203 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085166114 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.134164334 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100700231 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090909914 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086674956 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109004575 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096777795 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091832601 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.118725547 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098443948 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091689154 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113206684 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096214443 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093321592 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.118899386 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085738701 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093093183 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112210637 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102731452 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087409851 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110704837 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090287781 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089323624 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111980072 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095708909 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09103001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15895571 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098523818 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085951146 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111245064 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096117124 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122425128 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.109474231 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092661224 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087009541 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112291518 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095298662 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094071191 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108631606 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084155581 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086436688 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.108030542 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087989896 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08987968 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108213931 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091976828 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09709077 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.11067575 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087694352 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087192446 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085858421 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107481163 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087370214 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093664084 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11222297 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091721531 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090386959 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107639232 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0912456 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092056046 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.109854328 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090087618 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105156057 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109166868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0950116 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096065141 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108879892 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089599246 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096451445 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106502739 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092353429 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095490796 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136171942 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09392909 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085318069 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104887661 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099672349 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09324709 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093027927 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102104927 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099968872 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092420902 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.110280796 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083974089 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088911538 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104379155 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094163128 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083386148 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108662732 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09015433 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094692297 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093851784 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108136562 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092844211 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094433158 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114912899 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090042793 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.151289007 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08878671 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086508705 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111125563 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095863525 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084856983 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108301091 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090593628 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089185962 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085641673 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114281674 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091834297 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092484347 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112191878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092702413 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091902485 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110395341 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090877188 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086987275 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.11079337 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09970559 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092929371 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110515882 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093794313 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092098165 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091004011 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112051924 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088574397 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094933407 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106598038 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090603628 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091914576 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113215935 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09154983 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087356318 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108264428 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093142907 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091356952 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110878846 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093526313 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086654606 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101143537 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094662384 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0873287 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091832836 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118295793 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087931097 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092506731 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106028687 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100203936 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088374317 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114050685 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093586053 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096214244 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114667779 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084288622 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088431924 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093847185 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11283331 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089713996 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.091546652 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.109233435 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098613842 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084554295 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112594699 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085103799 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088718257 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.11300676 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09581784 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095063294 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085904595 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147076273 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101671865 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114115041 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092170066 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090848387 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094299046 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111188047 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095550644 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095734581 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114660865 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089192346 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089090998 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113879385 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08893732 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094494927 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106767188 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09336784 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084412884 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.110087987 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0851621 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09524539 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092563138 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.114089594 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096151075 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092149463 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108493292 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100985013 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086976395 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113354081 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084695419 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097245634 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.120937325 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098637075 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097934802 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111537764 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090356207 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092488286 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098704648 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1115224 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092611844 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092158949 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103575329 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086423113 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096100859 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.11313202 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08939014 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091299235 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110906725 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094822033 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089369968 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084627282 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.114695525 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096171392 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086299129 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111577608 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088284963 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089969927 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118064104 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086259628 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087304561 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112507982 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096216095 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092128464 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110863121 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094881853 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097376603 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.112095549 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094442902 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089385044 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098512524 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108623771 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092749831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087976187 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.113872033 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087121206 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09263061 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111142984 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09011247 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088921765 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113416979 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098169265 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098828631 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108186049 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097437494 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097580192 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096337604 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108913115 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097252037 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087219048 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103871001 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088578683 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085796802 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.110959218 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088447244 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097071068 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106818924 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091538703 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094962527 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110873535 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091407399 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096730551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118747614 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086956972 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086520079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089443668 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110019394 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088167028 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097971398 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.111773601 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09371569 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095576826 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112740226 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089636059 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.090717594 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.116541505 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089557341 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097579371 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.11602935 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098196815 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087662087 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096725489 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107952764 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096823473 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084843252 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110035164 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092527621 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091875684 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108270402 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091670825 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088287274 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103437367 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090760547 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.09788334 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108795556 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097247506 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101240925 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108191663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090618707 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088381124 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096976883 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110224475 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098788098 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0918949 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103980606 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087716833 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.096880399 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109682361 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098232372 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087634876 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.113595516 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098524917 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095397172 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.090930656 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119656493 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100647021 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098985764 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116112109 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085855694 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089217545 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11543364 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092317936 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09389618 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.110855446 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087016848 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094136827 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.114812533 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094649899 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091335232 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085472906 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.111879888 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09867907 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.093874045 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.113787151 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094410709 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093514097 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104693485 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096764243 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.09707732 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110164122 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099328837 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091781034 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.095244786 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108720536 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099570575 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093609659 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105278602 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086819867 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089418182 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.115861938 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087201399 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097937535 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096348542 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107173297 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092573186 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096186577 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107525312 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095837221 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096969686 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108307923 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10401472 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.092777885 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109467403 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098431993 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097792693 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085814108 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110947745 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092629766 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09915689 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109684035 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097565136 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092594943 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116868517 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095998576 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.096752995 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.116028051 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098406244 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088098816 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.117810028 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097892857 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095916266 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089249537 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110230476 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089295632 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090488468 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117959455 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089826944 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099590905 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.116929653 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091437565 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091299395 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.115934868 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092248664 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099627624 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10761123 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094493256 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086732089 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113063539 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093563065 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099311347 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088846211 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10643704 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097556522 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096278796 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116580594 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096594447 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099029362 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104186774 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087393664 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09500056 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090312369 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122246011 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096254173 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089660588 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110692309 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094868057 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094591283 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118871488 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089022238 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090207681 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111936636 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095086155 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091882717 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106289479 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098124855 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092150208 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113212828 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094012075 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088283146 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091032638 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.119107475 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092199995 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088277935 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109487141 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101950208 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092070654 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109428065 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088598179 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098407154 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114591215 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100729366 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090085478 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11257968 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092731732 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095738931 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.117723651 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092035524 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092308668 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109439375 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10029571 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098634601 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089423213 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110677549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103848911 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097507924 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114075291 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095217144 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09207623 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119423822 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100929381 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095868769 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106512635 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088848062 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092599807 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086780387 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.11461017 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099440346 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09297934 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109959352 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098991986 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095914213 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.114204064 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096759845 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087843622 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117913289 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092233659 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095750501 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086274891 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106596186 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095810784 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097730197 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111123249 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094126059 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093950056 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.115315138 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08895182 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091248566 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115138373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09875077 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098634156 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091773977 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111689006 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097914152 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102058746 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.11395072 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093339819 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100744147 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.11861454 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095427123 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093344316 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115675454 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100786998 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095575119 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118674616 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09274317 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093332375 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118293352 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100769236 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103364583 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11179841 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089014524 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098076877 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091378419 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108144342 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098455403 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100420074 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120481503 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0948479 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090654442 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12264993 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101155366 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094319303 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111525634 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0926621 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09777102 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110714408 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099937134 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091718486 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099866283 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120430904 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100322326 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101549243 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108128831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10092996 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095218379 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.122413256 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096179693 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087975166 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107170376 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098050161 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101007763 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100642502 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.117835257 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098779648 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.097811868 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114167979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094497476 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091443835 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.120439473 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099490109 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094845325 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11499274 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094893453 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095340433 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095455811 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.120821183 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100737461 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094969076 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123401226 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100965368 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092131927 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111759707 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095635226 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095587328 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113913229 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100031868 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091179001 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107396837 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101246266 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100866837 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093713927 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121353841 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101923775 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092388115 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116644857 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102075533 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099152524 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.116122121 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096494433 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097240529 seconds)
  done (took 60.389282745 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142839179 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102036529 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11595675 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097763541 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112883607 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118604072 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097152283 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097682722 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117768667 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107448757 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096465069 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114626132 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113200087 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116650705 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133572036 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105771402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11675491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09912804 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096843906 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097095107 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130899834 seconds)
  done (took 3.155204554 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115706378 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110688367 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127691241 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111681941 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102841915 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128648458 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107249819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127552491 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11295582 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104238029 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129980562 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108733928 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12409727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105941972 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106702194 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125156597 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112963494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103479835 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129080621 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109228185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124879672 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11009749 seconds)
  done (took 3.361609004 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.126524328 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099668077 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093926661 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116232055 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099302567 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09554322 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117634082 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098056896 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105587123 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091817453 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107035932 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092674831 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094647192 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11540623 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09158555 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097490272 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123468242 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101172062 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101144662 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115307737 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089766124 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098011238 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096909611 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108191645 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10266989 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100507878 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117436904 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101421965 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089034851 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098733465 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116976274 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091713613 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087527254 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.107717256 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089140569 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100375328 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099131001 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117924306 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097996423 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08776212 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.116950712 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102312657 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088736426 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096476571 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117502179 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092058076 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.09992098 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115788885 seconds)
  done (took 5.739408438 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126102355 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162195144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102131821 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.133655798 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133061245 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106984276 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099348798 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13655066 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099444656 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122574947 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113753488 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110223793 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124413832 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106323781 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102730285 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125527079 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103273168 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100484655 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126106645 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101022674 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.124075249 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104915144 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110985957 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130641659 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.341344096 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099909561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119644164 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104776809 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109119597 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12770818 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105730749 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10356816 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131362782 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101079153 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099392044 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122091563 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115054267 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122128239 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102909047 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099539972 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120886061 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104549407 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103461714 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131934413 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102963744 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101471457 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121958317 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100366997 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109812827 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123666995 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108241966 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11082751 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123939954 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101015565 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103176575 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131115814 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102311748 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099457684 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123779052 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108295361 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.117695176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106684171 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109007004 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120603081 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107191643 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110865543 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121877143 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10381669 seconds)
  done (took 8.903289407 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130926675 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103550628 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132701544 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112753423 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104418638 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125356787 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105064054 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103565987 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124147509 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109382135 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12509707 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.198774978 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124118485 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108539732 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104885497 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125702218 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104979617 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102792078 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126743049 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106444951 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102970221 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133043005 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104134885 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130883591 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116842889 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10125122 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126054162 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104829952 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111827613 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124717583 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115104088 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125724726 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105245188 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111918139 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135890482 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104950756 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099324934 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126191616 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106191253 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10413094 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122398693 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113334905 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124549849 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10194501 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105226981 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125332912 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114137748 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115610117 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129670203 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110100835 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125704463 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114156213 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104160292 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126055929 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11365426 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138824865 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114632614 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112284782 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126905117 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113952939 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132751614 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120741404 seconds)
  done (took 8.115643429 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098677437 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099401762 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097028096 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118566477 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100431764 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098024649 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098142227 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118685732 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100114991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097393246 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117637559 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099458827 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098438406 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09803183 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119059462 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098831477 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097739439 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118897604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099722084 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098502162 seconds)
  done (took 2.914415882 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108473961 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116722786 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120960672 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107901532 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100903838 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126753872 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101102943 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101109584 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099737961 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123966119 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110741883 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128803968 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101620032 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106678926 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128513673 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107114539 seconds)
  done (took 2.633552674 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119665694 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116886837 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185650001 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103114778 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122685305 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108430593 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101734531 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102251211 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121879561 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107445364 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104853426 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125132546 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101249604 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101412246 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122057572 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10385318 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099993132 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125487172 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102740381 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.182936681 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104953539 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102108094 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.101098549 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.126250367 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101331338 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.105608559 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.129055282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100564959 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102858314 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122889664 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103565569 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107034299 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121903425 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105556944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101158052 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121673886 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101321552 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101289657 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123468205 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103054494 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103663207 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101324207 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.123725392 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104499148 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099258999 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122384067 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101576651 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105111657 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122580995 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104417605 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101204194 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128586464 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107856474 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108772872 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127653323 seconds)
  done (took 7.053653916 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11279936 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103544199 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133051341 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099528854 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101950346 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100765844 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12506087 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1032369 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102078269 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121151977 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104570957 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102805573 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123751306 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103055518 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102315859 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123896602 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100507469 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103124165 seconds)
  done (took 2.812861218 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105807126 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101198273 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105481329 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121907399 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102155803 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101218531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121422353 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101808341 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09959765 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100184253 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123459193 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101917822 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099588011 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12227191 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102420325 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101285005 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121345617 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101160807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101079287 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098913015 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122031295 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100985889 seconds)
  done (took 3.208053504 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113363884 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181815567 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106505281 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189077322 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097225783 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09522314 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127852692 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097845711 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112217373 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11778835 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097244172 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096242854 seconds)
  done (took 2.284621386 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128103442 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137265287 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122396583 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104082509 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110098136 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126660869 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106434851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105212793 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134814688 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118528526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126464646 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113479198 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112516436 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134452469 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110724944 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129402186 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106315479 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105155229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123978484 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120754327 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106022738 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134078115 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106382319 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104715528 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128314352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112862134 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133215362 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117137573 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106186564 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13456941 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111630004 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104967776 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136610591 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117050128 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122319089 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115159717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105658969 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141387927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11043392 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134500364 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10354198 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109997621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134980382 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111563191 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135152461 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106857713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11094486 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126878148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105786434 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126219857 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13232847 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113344577 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13196245 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113822349 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112551023 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147962913 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116269845 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135478532 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109920274 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137290858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113181858 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108553745 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136100886 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11677455 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132918871 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114366138 seconds)
  done (took 8.759578591 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140925753 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101720115 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126382787 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118401218 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135353739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107468856 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1091224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128008946 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108104699 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102488028 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169845424 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106743842 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113514202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135667504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107138128 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126850976 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106906569 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114705506 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12456331 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127558769 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127306075 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115349755 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115124258 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13446015 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117318568 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132761204 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108017751 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106024297 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127377695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107310107 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112655477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127087356 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115112127 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102275653 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136986827 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10766387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106376533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132890099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105883906 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13169782 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11584083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119757277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128969024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107255984 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139933339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108190445 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107108643 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124834471 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107638112 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102522296 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138789438 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118485846 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137949453 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1155972 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107136632 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128584868 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107659088 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106886981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129452706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110750313 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13587833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108357436 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1267886 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12893603 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108261272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11422023 seconds)
  done (took 8.727382197 seconds)
done (took 164.535078317 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147086968 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184123069 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.142931925 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175869123 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094228203 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12702649 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14580235 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14584035 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090816332 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114804921 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093677712 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093728437 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180643953 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094153324 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092481567 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094270256 seconds)
  done (took 2.872119918 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191146285 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30214415 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106783991 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118879845 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098597047 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097388822 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117828141 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099347663 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097621227 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125326041 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097668917 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09275216 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124865314 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093846635 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097796242 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097177086 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125252762 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098163688 seconds)
  done (took 3.048381401 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117935892 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140824229 seconds)
  done (took 1.124121815 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127610677 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.20994452 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277053851 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16646452 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119090009 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137288803 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146932989 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131379605 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185897735 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132313848 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110861939 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095507704 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145846466 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10262903 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134784482 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096310639 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125811333 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134536821 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111656129 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100261202 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140271198 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101772882 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103015188 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133289218 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17724612 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131134629 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102054089 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100882786 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123511634 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112307655 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104277045 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137281162 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110100896 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176031219 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101527188 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173184011 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104379267 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119391556 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112414922 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096878649 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124262019 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101517533 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131802645 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097111601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10104205 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12603823 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102406044 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100829077 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126465191 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107331654 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104428051 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127174275 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17064629 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106307909 seconds)
  done (took 7.743426978 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862096322 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139064794 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097868722 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.980387959 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147667388 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112963443 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.854831065 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143683936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254628399 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.879849752 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11460273 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110055515 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.258418456 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25768973 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.257728052 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37847014 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698377716 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134548373 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127684756 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160753719 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106745322 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145578077 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119975988 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519537495 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099548272 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099559674 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128400353 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113034371 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175411476 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099233843 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124682841 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172292863 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289283929 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206577058 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121220742 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100391551 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098597067 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182548803 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27144172 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215461439 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.192066446 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097084045 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097633445 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128877865 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117920472 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095034955 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177367535 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188612024 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188288556 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103385008 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132691542 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110364688 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107973589 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175209645 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096738205 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.377089354 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364720857 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098895115 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106645152 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137417402 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268112774 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099485096 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229061522 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148672144 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211183406 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098911355 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.865277969 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182885112 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098712027 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128307708 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107496247 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104304439 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129487335 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164886172 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.501556684 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110613967 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125355782 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09923138 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230040595 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098482238 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120928147 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156259597 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123533901 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107596455 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134271241 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113111165 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189136263 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.266113939 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113854254 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108174183 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127189087 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113925864 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099218567 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233274929 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223823587 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173939977 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231678076 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108635296 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179243583 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182913914 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105953262 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186765197 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106061409 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137469615 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107449917 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218210908 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156379782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101362698 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125700604 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108550151 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156617225 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103805577 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107462801 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187437676 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556470968 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180555886 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097335961 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104506282 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129629256 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155082265 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129248642 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263749124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110604912 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183556883 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108051641 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096528138 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129973767 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17755038 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111328219 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107279128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130308085 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10790859 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.276643044 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219445356 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132981711 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246900717 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175789359 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106507934 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190598233 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129710141 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163905844 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132080207 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106592974 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09971068 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880921688 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115656239 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106970854 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126734992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183526232 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122096867 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103412462 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09910066 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096397237 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839106253 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125900362 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098234941 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101031504 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130420917 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107456895 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128262473 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106618655 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175726469 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240828554 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112785368 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128170236 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100551798 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17642613 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102085697 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099078037 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123514005 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100890616 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108122618 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12735235 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103965705 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189943082 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172692417 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.2273451 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.633135911 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101661559 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099538569 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26021118 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101921273 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322303255 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108113804 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.25060182 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161448135 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119296472 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360459291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182675823 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185211319 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102726521 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188505179 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09608239 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130332966 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17697265 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101083973 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107019193 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17414062 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11395724 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137299725 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.279430784 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100468271 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251633691 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096487222 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185808786 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122111852 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108375255 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322034113 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098538668 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140960148 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175442734 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105793995 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099904671 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.674670295 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099750105 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134463957 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10821038 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229204202 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181069661 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129316111 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109228208 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112771843 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177894918 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23109472 seconds)
  done (took 47.463665736 seconds)
done (took 63.115917125 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29457349 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253896316 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302616797 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.209451632 seconds)
  done (took 2.020327144 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.260484546 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162049676 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.226955054 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096461463 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.235443585 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095818865 seconds)
  done (took 1.96730511 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.486502069 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.364827836 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.302748569 seconds)
  done (took 2.047824722 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251314398 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236674663 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328447646 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.410977171 seconds)
  done (took 2.231565392 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260894834 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123872193 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12228095 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.205004775 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.225875282 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209509302 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12716677 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17627241 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126885835 seconds)
  done (took 2.518005918 seconds)
done (took 11.675684835 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.276825596 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.28435487 seconds)
    (3/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.340821288 seconds)
    (4/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.279672291 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.220302996 seconds)
    (6/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.313493409 seconds)
    (7/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.260957069 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.135435777 seconds)
    (9/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.237308809 seconds)
    (10/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.313686925 seconds)
    (11/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.212781551 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.189190121 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.167602471 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18852801 seconds)
    (15/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.242603771 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107781941 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.126659444 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214841975 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.213562908 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.192217158 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.150890275 seconds)
    (22/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077028637 seconds)
    (23/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073880408 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103463961 seconds)
    (25/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.140004554 seconds)
    (26/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.146759376 seconds)
    (27/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106125436 seconds)
    (28/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.19543173 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.210307448 seconds)
    (30/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196984392 seconds)
    (31/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.203855747 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197001641 seconds)
    (33/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.165588281 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.147405979 seconds)
    (35/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.164251577 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.153348225 seconds)
    (37/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.189338529 seconds)
    (38/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.137326487 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.133900657 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10797246 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107932293 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.128745339 seconds)
    (43/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.127128348 seconds)
    (44/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.254844626 seconds)
    (45/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.139877174 seconds)
    (46/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169550583 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.188777496 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.12915511 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.074621194 seconds)
    (50/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.12280314 seconds)
    (51/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126191898 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100273514 seconds)
    (53/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131901218 seconds)
    (54/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170778065 seconds)
    (55/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075035871 seconds)
    (56/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.29737387 seconds)
    (57/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107519175 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128013357 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.132445117 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.085264439 seconds)
    (61/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.096825515 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.099325481 seconds)
    (63/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173962725 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.127699007 seconds)
    (65/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133179958 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132056174 seconds)
    (67/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.26775968 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076660298 seconds)
    (69/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.16373136 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.127154619 seconds)
    (71/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077672713 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.18833072 seconds)
    (73/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.165182941 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101356033 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121714999 seconds)
    (76/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131546803 seconds)
    (77/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110991762 seconds)
    (78/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115410109 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124419518 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077223022 seconds)
    (81/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084878278 seconds)
    (82/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077250132 seconds)
    (83/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074186165 seconds)
    (84/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.100268242 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122230296 seconds)
    (86/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075232278 seconds)
    (87/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.17195704 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.207931661 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076663036 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104242195 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.145488778 seconds)
    (92/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083406015 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075933894 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.211097557 seconds)
    (95/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0781601 seconds)
    (96/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.182319787 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126584593 seconds)
    (98/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108832163 seconds)
    (99/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170182434 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.123658302 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099106535 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109132807 seconds)
    (103/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.100511265 seconds)
    (104/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.148520422 seconds)
    (105/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.160030458 seconds)
    (106/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.098894099 seconds)
    (107/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086052779 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075126234 seconds)
    (109/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.077477884 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123514518 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.211910982 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101311761 seconds)
    (113/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074847002 seconds)
    (114/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.156281866 seconds)
    (115/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083829119 seconds)
    (116/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109495706 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076586081 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.197618605 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076089508 seconds)
    (120/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098665124 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126403951 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101562457 seconds)
    (123/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169775282 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132052045 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102328842 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.154471585 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106310375 seconds)
    (128/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.078547791 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077041001 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07491269 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123957128 seconds)
    (132/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076656568 seconds)
    (133/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077683557 seconds)
    (134/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.07810217 seconds)
    (135/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075215758 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.099810743 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076657337 seconds)
    (138/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13588842 seconds)
    (139/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084568945 seconds)
    (140/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.156531006 seconds)
    (141/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108694366 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101611138 seconds)
    (143/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077113175 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124814284 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12265755 seconds)
    (146/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122530026 seconds)
    (147/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.163731029 seconds)
    (148/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082121636 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098683078 seconds)
    (150/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084452098 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.132604652 seconds)
    (152/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.175080265 seconds)
    (153/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109159226 seconds)
    (154/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.082489544 seconds)
    (155/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.10012396 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111497021 seconds)
    (157/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078803835 seconds)
    (158/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07683484 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.098723296 seconds)
    (160/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175365331 seconds)
    (161/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.07809282 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100446388 seconds)
    (163/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126370487 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112256407 seconds)
    (165/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.07800197 seconds)
    (166/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075764679 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124430439 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.076545957 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099497392 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.130949673 seconds)
    (171/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079100609 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102175223 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120840576 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.125968067 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077078831 seconds)
    (176/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.078407038 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079148913 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.125063292 seconds)
    (179/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085521174 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075802725 seconds)
    (181/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.075728368 seconds)
    (182/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100782879 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.14475803 seconds)
    (184/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079031381 seconds)
    (185/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.076880678 seconds)
    (186/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108067335 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.125592311 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076944696 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077608354 seconds)
    (190/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0757478 seconds)
    (191/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075047623 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.09943125 seconds)
  done (took 26.105513933 seconds)
done (took 27.009266076 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.20762709 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126862391 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108145333 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10889477 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198007114 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117546724 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14679613 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110544779 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117635363 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107957875 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.123624355 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120153374 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108035269 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201004604 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10976346 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125476781 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099624201 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118246683 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148457843 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123767536 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198061647 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101797938 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117954614 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123542387 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174135589 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12464158 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107902956 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109465965 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119568037 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136519527 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109951977 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098568187 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.148736416 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124300095 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099269178 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.133317353 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10025305 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084250957 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132596825 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111237749 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120769539 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11021996 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.132656701 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101012628 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.109192059 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133938999 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100709251 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112134377 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124418708 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11134717 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102511241 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.148995177 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109135798 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098129312 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.12244053 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103412348 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118439153 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124121842 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124766522 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10130408 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100605546 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125713167 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111624192 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099775948 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13340398 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101930921 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109543627 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.134664972 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109476528 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103415037 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123469071 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111149561 seconds)
done (took 9.693921436 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105983299 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144968507 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.196800604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.205618443 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128750365 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11412363 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139548725 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12389345 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112670358 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144189478 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13845118 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155866185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.178886251 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140967361 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116367125 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112118758 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.136197925 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110513906 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.203843004 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125172558 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123733731 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142280664 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129027861 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141280662 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105615035 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126030983 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132543318 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113906644 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103914339 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14673171 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125564427 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105025057 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131700676 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125390503 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121591541 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13988954 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115991183 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113378709 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130334923 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106727741 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11270489 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144853215 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10654929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114512372 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137833218 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120915149 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112243045 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142572161 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107311103 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11228354 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130826244 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132120612 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116325541 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147492783 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117247906 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116789534 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143781483 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117366239 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.107091851 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.14279493 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107827755 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103972421 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131872841 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.12573663 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106788983 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143781592 seconds)
  done (took 9.453355715 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124291235 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133558767 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140230275 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116641572 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109634718 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123025518 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099777724 seconds)
  done (took 1.793577853 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101633348 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182326736 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206629245 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205343925 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.176330099 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.21512778 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147778375 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102155725 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134145554 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135240724 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182133531 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234513336 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111986817 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14186725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183499935 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125744277 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185132778 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125892866 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116328786 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208270262 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116453685 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130444679 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139353933 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101371138 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20413073 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102154723 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260487058 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119205019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135800382 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115916777 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115989955 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205870339 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.205576019 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11712211 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108713868 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.20724828 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.177907598 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140037594 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.219571276 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105170234 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.177583734 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.141140408 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115598332 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.140055187 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118021913 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.167930975 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144732904 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115479017 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114048326 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213279755 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110763153 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206282798 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111479316 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.141633632 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11155898 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116817065 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14796691 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115730426 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212474281 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118138833 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.206584409 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180238567 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.205355305 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.208442828 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124477798 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207816314 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.173997941 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139834191 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110469607 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116568129 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.209415084 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114058136 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141655923 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170145461 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144369552 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.182131719 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.209463839 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111900544 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.140060974 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10523083 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113220656 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.127496092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174294544 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138881313 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114629121 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118490746 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139647673 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116839119 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105133413 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149918358 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115785574 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.112427476 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.145634407 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115809183 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116292442 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211783991 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13642033 seconds)
  done (took 15.498791465 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104089919 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102795002 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107394074 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128718278 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103055861 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102767535 seconds)
  done (took 1.61065334 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139005256 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116462893 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149966285 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117428233 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160313544 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.213751302 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.216012097 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109817321 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157341564 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12649128 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.21311252 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190179263 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.213947353 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118801522 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.217849209 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11771322 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.217218702 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114622754 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150773892 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113602563 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114983339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.143942426 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114168012 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.204079089 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117451208 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11632747 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136721055 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125577749 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122166867 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137405234 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12074589 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116137758 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.13542895 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110643775 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.218418636 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108697335 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13814946 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120822162 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117537248 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.141200246 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.192878632 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138318855 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123380133 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.118768832 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136772365 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109455202 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117804487 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137287413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.193762547 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.144837716 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118938768 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115746633 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.144477168 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119964892 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10836138 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137604988 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.11943106 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.219606427 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119304589 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.133503953 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117668657 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.117163935 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136105244 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12130937 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116433768 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.143952744 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110446115 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117384325 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140579258 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118180899 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118730291 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143120305 seconds)
  done (took 11.058047833 seconds)
done (took 40.35763955 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.57608177 seconds)
  done (took 2.541503393 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.907678961 seconds)
  done (took 1.874611097 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.826977375 seconds)
  done (took 18.824683066 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.51812799 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.595367854 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.029844035 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149205531 seconds)
  done (took 3.259170102 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.072792806 seconds)
  done (took 2.056126005 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295027166 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266182421 seconds)
  done (took 1.533423244 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.735390584 seconds)
  done (took 1.714631303 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.496329956 seconds)
  done (took 2.465258096 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.350230869 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177121995 seconds)
  done (took 1.511211413 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.602846876 seconds)
  done (took 1.588989423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.062717112 seconds)
  done (took 21.049803399 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248245698 seconds)
  done (took 1.243094889 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283804759 seconds)
  done (took 1.2730086 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.58116805 seconds)
  done (took 4.572526609 seconds)
done (took 66.482820072 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113732312 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114649796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115266212 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139022768 seconds)
  done (took 1.461855509 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121480177 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116635533 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.139744737 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141937177 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121026411 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115544666 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141190605 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118078278 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114637571 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143718237 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116242139 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114412638 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145359335 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115976258 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114288569 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145324761 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119795533 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.114940484 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142284497 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118401365 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116471165 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143865968 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120529884 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117615353 seconds)
  done (took 4.012797602 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113297667 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105853772 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108830646 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131122278 seconds)
  done (took 1.455443576 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125422214 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128252403 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150500298 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123638584 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126178437 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152349797 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115165166 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111963494 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140707532 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123888168 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13130131 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154291745 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128714272 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117466087 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151335472 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109755992 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115481216 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.151574115 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123077951 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124060174 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142263261 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122391801 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119341086 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150342503 seconds)
  done (took 4.132701383 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189457329 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126973708 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17169503 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160546269 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.1757186 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114170073 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141972734 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147892818 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123598168 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117298432 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144888658 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159873844 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146647741 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118646412 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115333439 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148072593 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128611137 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120803446 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189088021 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120758946 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148256725 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128406715 seconds)
  done (took 4.133284344 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118578734 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107187278 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103499142 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132727616 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120168136 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109495439 seconds)
  done (took 1.69231471 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107186248 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102281044 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101446729 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126720648 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106075213 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101109195 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099910994 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127139394 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101465297 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100821537 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126305144 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101420219 seconds)
  done (took 2.304339023 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.329855647 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107571581 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133484432 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109312879 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112780973 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104614155 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144178795 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106175468 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271260727 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10123404 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143390142 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196158281 seconds)
  done (took 2.861685378 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199432716 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146020195 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310959307 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362744211 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159710781 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184265647 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262513193 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187178042 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200212965 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136044864 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208358413 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157968714 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175603525 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181888806 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163238877 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158096003 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190805079 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202905064 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167245639 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237167323 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154651358 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199433337 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1876096 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171602126 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13543168 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184320101 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116048805 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124952826 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188729333 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187507174 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166726282 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173821763 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137461717 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212970039 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248096174 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167851707 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269385532 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156312726 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167275662 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212681867 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257146363 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137739548 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209831451 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177532391 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127259374 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2126934 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150239218 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207287594 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131063116 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167667525 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176148538 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203636041 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198231919 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134705139 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301807533 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130935562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165522602 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164965118 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212327599 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222818777 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174501905 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120592198 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202099814 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214729266 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23575344 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14042821 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186921066 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123648371 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190297812 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203111181 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205306803 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183997229 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.197954952 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156832285 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166514109 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194193409 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148628496 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225625475 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194747399 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117775688 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172812529 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13088988 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122955223 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213368747 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120283786 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239757876 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127925741 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340340568 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206389348 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15186796 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183568834 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15447716 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187248779 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144642825 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126090341 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140944264 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184844326 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15395061 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125160182 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179098902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13602692 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.150887962 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147800603 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.145498139 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164798375 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130908888 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18653855 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191065846 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130611906 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199260313 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145243428 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.185625782 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165432102 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216358147 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127648515 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154986663 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214087423 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194606892 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133254743 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200810043 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22180033 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14833897 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130264366 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187884327 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2193613 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140649158 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223952903 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133894116 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159698705 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135907862 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198311212 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155457209 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.180624298 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125607152 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187313073 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188660424 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151649405 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137551929 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20374211 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13134943 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121551215 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161932751 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133200772 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.167508936 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146629807 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135949152 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178500466 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162240322 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189915197 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179592557 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133496204 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192975174 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128965162 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.18975556 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146707317 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116701969 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197018038 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220268322 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12700921 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202571008 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160187862 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209334659 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193734687 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127348216 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178766124 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152811616 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118388738 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186955226 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166366911 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185854215 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184925262 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207142617 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18831923 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159395002 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17211713 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189408173 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182778257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180910247 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142160009 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195202552 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1639633 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.145486309 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122593851 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124594268 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159821473 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127877754 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134449997 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200240657 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186885856 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177432793 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190953521 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134202678 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217376418 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121943915 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184357119 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170852128 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163492499 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214651263 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188181247 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20265352 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137817491 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185898207 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118374428 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122670986 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.15910277 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159116236 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163755755 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13373464 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164100506 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190544413 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19506672 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144095549 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217535652 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187394853 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226282527 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.11963266 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159574471 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194290205 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162605611 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.208425752 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131947526 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183630645 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189764801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165453329 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187285046 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192173196 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172814843 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219553035 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.188525031 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12777991 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170975684 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159447683 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132788676 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188980818 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141649708 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15557605 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1485184 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163479812 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137568998 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206350083 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139691859 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202729026 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156137245 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19263675 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12219417 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165361405 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171773317 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170022062 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104237351 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193386911 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19181088 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172974911 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151868818 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198909397 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127340109 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34417973 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209816391 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17292376 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159697745 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136240438 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194437132 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160930843 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18452097 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182656375 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164660564 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200763091 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193541514 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.14045723 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155596579 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145436033 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174165825 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137722397 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.174134986 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159946795 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.168016827 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179355087 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162246184 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165500306 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200466976 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144334072 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.173662748 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135759649 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24947836 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165195847 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195275465 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.159212145 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191365628 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206964457 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121316795 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123597574 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.157035751 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183096844 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124879561 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200205597 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197980903 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20988532 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171796293 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187629525 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138768754 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151259189 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163899257 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17255257 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184373373 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159372171 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134652498 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215068394 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125181887 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157254825 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159264764 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294055411 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146642409 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198369635 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104799352 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.289343649 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127750573 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128745275 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188247255 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191770053 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130242496 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179525727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197748297 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138430357 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190600353 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133120815 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205313826 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210416178 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162887397 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196975364 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141905653 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186874105 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156704174 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200358561 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141492578 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.172576528 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154412517 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220859591 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20609148 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130148949 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164899728 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194306416 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166472773 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198080185 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135045975 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208058357 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126575568 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189548599 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136615913 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151404757 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15531412 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200159034 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126859623 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20255602 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195090622 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130015323 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124298225 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172159793 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161941988 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166010188 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128612275 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206881129 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127089204 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203996196 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202831948 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156809297 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164012531 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17039419 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127777578 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134785645 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168826086 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128607583 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172420722 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202628719 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127475458 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203144323 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186305697 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159911316 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180363525 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14072498 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.358425648 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126222356 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188545598 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177284855 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220669014 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147476427 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200373351 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166049334 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17598174 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157730546 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172521635 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219189989 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189733451 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163262775 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156903359 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139933669 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13479028 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159511685 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148350462 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192986453 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13841889 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.161071727 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163714308 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169646087 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.143337981 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138510132 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225350776 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175675381 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180855587 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213433582 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133663966 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201490756 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168605052 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154747336 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158326393 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195384674 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14168856 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175734313 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131560652 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163080473 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20818257 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152364715 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1563645 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19846513 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166328939 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197308787 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131850652 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202946321 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137485671 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200497988 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126565752 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149692848 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197173967 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131914752 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.152900468 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168836276 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183223444 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16210707 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16827528 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174160619 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220639587 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123335815 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129775242 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293573001 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184490252 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191958721 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.16273901 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134239928 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142047641 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184141501 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15958083 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196619855 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127400679 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156252138 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14294937 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179463431 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143118978 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192709888 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168990641 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183010156 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185062676 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131285874 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284948064 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138565955 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197839675 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113826253 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154770749 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139360713 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131611188 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167847982 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207249675 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209954031 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.189689099 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143855029 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16256599 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125168961 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127269076 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192346813 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147487049 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19623538 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142784936 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132373621 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13774414 seconds)
  done (took 84.696012269 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159842385 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149905002 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165386701 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220098244 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191145978 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287283529 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226357821 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242554647 seconds)
  done (took 2.733621437 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117824228 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157349836 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138772875 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141837098 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108264224 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.441611909 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.127721222 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.14472008 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157732868 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149371708 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134175199 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.529470114 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113848157 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.140548606 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120282155 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132634748 seconds)
  done (took 3.936386054 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.036212446 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.035232404 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.767303125 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295026616 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.249948058 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20127351 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743335435 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.187886616 seconds)
  done (took 12.601526153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.145052123 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134116811 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.357293585 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.255428689 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.146718866 seconds)
  done (took 2.133715382 seconds)
done (took 129.137333589 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121741771 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120486556 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12029341 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151745932 seconds)
  done (took 1.595028204 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173591475 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090602691 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092576348 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117011839 seconds)
  done (took 1.56283439 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.429596973 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089102964 seconds)
  done (took 1.635402757 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146214689 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133860926 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163155277 seconds)
  done (took 1.548385024 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.131812033 seconds)
  done (took 1.225584498 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119435049 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.117998386 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.232794293 seconds)
  done (took 1.568478609 seconds)
done (took 10.234738523 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117560801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921345289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429443383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130961011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708741825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423431039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.421732289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172192146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171733577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134172922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129682389 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689000647 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.434827222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.877670325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.391401753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.906244553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692465888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109333122 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14353101 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110267731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.398856579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134696798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109497185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108708248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715624735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417186935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107014314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.913192306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107577563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110954372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423306726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108822129 seconds)
  done (took 20.856549563 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115677678 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16349307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143226935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110431336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110677049 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135939346 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.11991539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119286428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199098861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107819996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157827411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108107862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112673684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136414326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132674526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107064821 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139084538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111467355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116037981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137161169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131488267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107364974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136502105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111259495 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10897054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155801294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109853363 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120825473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134900992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113067071 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112496846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135126506 seconds)
  done (took 5.166783496 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155496834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174676951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145544245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146186739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184308019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110742296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.21978161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145906906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201364486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109707532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12962726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135038421 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147486039 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109433398 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161143808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108586662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111414473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138271939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117021941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11054732 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159081041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108286052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110128359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1385811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109394331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130073634 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136666683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121724162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108089291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140678056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114524485 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108956194 seconds)
  done (took 5.449792233 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.122635944 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124219002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129343307 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159661482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118106348 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121581616 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151277956 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118319324 seconds)
  done (took 2.154585406 seconds)
done (took 34.72675229 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133686964 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128869957 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128104784 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151251256 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.184756846 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143924832 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126736511 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115011145 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150632627 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129041617 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108317491 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115805542 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156352075 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120385232 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.215449692 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124150224 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.220341471 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185946709 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145633073 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126680013 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117724038 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.220167893 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120986675 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115081991 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.217920249 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110889047 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209286597 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118448955 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147069227 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111166527 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.18622597 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150717985 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116884725 seconds)
  done (took 5.950401114 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.207844007 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.11855691 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146792975 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116397376 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117189232 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145699496 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205644259 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144878387 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117434144 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116054268 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116697762 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217204306 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122935774 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142526914 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120577515 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107024841 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.235202334 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119475568 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108538418 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119092836 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11387926 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115820545 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.246478958 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113664352 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116803413 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.144353945 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120471341 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121749268 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.117844944 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.149105129 seconds)
  done (took 5.323632287 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12434359 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130885661 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134720625 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212521213 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.144995817 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157604216 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1368459 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130679404 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166569567 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111353237 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124874577 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.174187034 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126691347 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119409575 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143480613 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129158674 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132284487 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139085414 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118948596 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127934414 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159252053 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127736453 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133040282 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147373833 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110971795 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117928558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.147461885 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12597871 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118968326 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123711954 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141588742 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115245114 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112022709 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174022358 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11199955 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122790273 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.165576835 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123404249 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122729236 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171516324 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115306165 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110483361 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.165317944 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163521504 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.111183684 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152548927 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122854349 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124041943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.138915371 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129480554 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151901912 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.139589893 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131595512 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.109439405 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138310839 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11923178 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110954416 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141709242 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126433965 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112929224 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.163601557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11912229 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121290025 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111881396 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151136753 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111320564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109372837 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146120978 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13782636 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118385798 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.174444832 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112635325 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122190233 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152742309 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122692969 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123411722 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.137376311 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122902804 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120527569 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116197228 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.152644979 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114751634 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113271733 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.156018022 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132037068 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124158434 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151688674 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124158629 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.113937138 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.141674193 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128408228 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.111746086 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.144120162 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125585724 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11173266 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115247103 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155157517 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122380067 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.10829145 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167293006 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116038741 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110339298 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.164321599 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115127936 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115992759 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.150039628 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153271235 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.110886932 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151968913 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125108581 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111922972 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.146483132 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116941227 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111470338 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128014408 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.155988789 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119550847 seconds)
  done (took 16.612144454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.31410742 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.269112536 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208611815 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302602318 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124399982 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.234335055 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.298341486 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.300628929 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111973943 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178290595 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162535463 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.268541488 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141619014 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14202903 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.303084318 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.353402467 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171884343 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.14953797 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177779946 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127181581 seconds)
  done (took 5.473209529 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134172062 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14597357 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16478495 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138974351 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12313767 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157947429 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11189971 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134355978 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152535507 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121670017 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113635066 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15633574 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124861543 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127829551 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155493278 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145454057 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118496914 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146760491 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13471673 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116293241 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129312366 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137648343 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.1198884 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.162956837 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131642457 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122209681 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140289287 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11739285 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118867965 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148433202 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117313594 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130259098 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147402464 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104052988 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124050426 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.1272638 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.148663437 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115271631 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117115303 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145067487 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128383085 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.1243962 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.148346091 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097503335 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131378479 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108725079 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156006262 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125347883 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106266811 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130607308 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154883252 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127799172 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118513352 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163063637 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120271357 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128734713 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152240848 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12723583 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11778618 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139905214 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111266338 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115426782 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120448507 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157878222 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125949496 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.160069725 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129158745 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111949017 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.115771821 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14441047 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116424971 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125520214 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163241513 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121774556 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118342954 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15424921 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121971874 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093521857 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.148481061 seconds)
  done (took 11.536843722 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137548566 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123597807 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130840581 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176471781 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125929929 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117052586 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151205805 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131229888 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125672592 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160473269 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127272774 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125191639 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163076917 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12294057 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121896783 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156966764 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126467771 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149168245 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15940471 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143630883 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127150255 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.148425335 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125546774 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12269291 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171096444 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124869896 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137664939 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156844895 seconds)
  done (took 5.029632507 seconds)
done (took 51.038219776 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.280586109 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.458498334 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.23740527 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.23767467 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.228322755 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.260964746 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.236479127 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.249816784 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.607533293 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.208876975 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.236829721 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.236915962 seconds)
done (took 28.619291314 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.310570855 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.794366111 seconds)
    (2/2) benchmarking "String"...
    done (took 1.542399921 seconds)
  done (took 4.465827624 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.226843682 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.22813668 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.476188562 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.226980369 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.228730619 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.229295665 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.236434557 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.234585037 seconds)
  done (took 15.989498315 seconds)
done (took 26.124785431 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.284825311 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.415529258 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.464019584 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.230052819 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.256582488 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.229522631 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.232089338 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.250449875 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.229537609 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.237654049 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.635020507 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.484257749 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.232104369 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.590910976 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.23012331 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.246204481 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.244898178 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.474974528 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.230592136 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.261357584 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.206567766 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.209791405 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.259412976 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.231481137 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.236118694 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.245102172 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.293797942 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.233159769 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.425174869 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.253334617 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.263291296 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.233652242 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.282983079 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.233231155 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.241121603 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.236329645 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.43351169 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.238706982 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.208958726 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.252076195 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.435640234 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.232841408 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.228692032 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.251554372 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.230874353 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.311248996 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.212520656 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.363045658 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.250748742 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.232839771 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.234648012 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.591509794 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.23666866 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.237109714 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.244299596 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.470155223 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.247440387 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.284780094 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.255361208 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.236993309 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.232534261 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.25248592 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.239309907 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.232407862 seconds)
  done (took 145.557442706 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.232068434 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.235742071 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.237047915 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.257587515 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.236323739 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.236377972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.230687484 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.231747179 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.237967046 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.263110235 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.237218157 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.230005727 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.23548967 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18728912 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.242035472 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.252398752 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.236775244 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.232330757 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240984705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.232679216 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.240969737 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.237836096 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.249990844 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.233537093 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.236376385 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.308454 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.263799498 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.265943057 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.246079002 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.234913183 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.276741943 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.244659069 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.86204002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.104814548 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.248135072 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.260139699 seconds)
  done (took 81.375890797 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233602328 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.235689473 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234321221 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.26632399 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.233328205 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.235421413 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.801371834 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.807388084 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.199715089 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.283354853 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.580910885 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490057166 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.240109262 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328375311 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.248080482 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.236993164 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.249731901 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.261515913 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.23492662 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.233918284 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810664799 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.251321523 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.233530012 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412131801 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.252225397 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267474012 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.628861124 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.338871968 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239706108 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267966906 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.567342588 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.284948173 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.237173352 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.581328155 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.421487875 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347654304 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.238146905 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268714661 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.23611406 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.518687021 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.236404871 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.236868236 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.239976775 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867764524 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.240644461 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.805579182 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.23863211 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.182538408 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.23707271 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.236443049 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.198152914 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.945295488 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.242900366 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.238355961 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.240984768 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.235382122 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236085085 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.270161662 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.23815466 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.181986502 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.334632682 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.239701072 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.241735846 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269753581 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.239084831 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.239831502 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.239784627 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.552393996 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.299022919 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.330536673 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815192409 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241922308 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332877808 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.356094897 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.239259292 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.237738452 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239063504 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.240568376 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.349605879 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.239119035 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.930159803 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.415144851 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.257129155 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.605217457 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.340874521 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.238751533 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59788664 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.242425542 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.239201462 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937350807 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3353324 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.239870908 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.238589363 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.240569607 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.929958663 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814808077 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.48904769 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.244436525 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.816398175 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.243556966 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.105583955 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.801877633 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901416358 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.244196113 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352178619 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.416401451 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.258237492 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.240041377 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.601588898 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.245739139 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.299777993 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.241844232 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.241392281 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.641842142 seconds)
  done (took 376.996333606 seconds)
done (took 605.061491581 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.113144523 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.062499183 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.222340841 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.074026673 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.055639855 seconds)
  done (took 11.669720056 seconds)
done (took 12.813125712 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433988003 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.432948431 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301604193 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437149623 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.275106826 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.45155088 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417315686 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.257175365 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.350343696 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.323293149 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.360715378 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.293339045 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.274445543 seconds)
  done (took 18.750637991 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52930931 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.252890963 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30777091 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.512927691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.289503366 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537712247 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.591448188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.254532354 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388832908 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28625105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264688981 seconds)
  done (took 18.359598766 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528369272 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.253318381 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.309797257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502946088 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288459812 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522173252 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.54698263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.254221375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398949139 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.269700891 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26382443 seconds)
  done (took 18.282557389 seconds)
done (took 56.534949917 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.278796245 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.341273276 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.274836895 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.261738865 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.25777298 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.256436136 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.263921734 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.26255111 seconds)
  done (took 11.339261136 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.256008325 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.256935446 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.257636143 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.256595653 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.258029897 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.257895514 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.257742863 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.257413237 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.257382031 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.255890502 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.258483379 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.259258389 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.25593222 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.256331452 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.259237584 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.256269827 seconds)
  done (took 21.258466566 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.259835497 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.25506036 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.255286955 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.255954647 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.257124842 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.257569449 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.256824373 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.255689221 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.256067453 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.256030752 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.257450886 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.256442222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.257584944 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.257541097 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.255831417 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.258285094 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.257567129 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.25701638 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.25986045 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.25697154 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.257823379 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.256340783 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.257069186 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.257510418 seconds)
  done (took 31.310989916 seconds)
done (took 65.051872899 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.245289618 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.248041712 seconds)
  done (took 5.633867191 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.317124987 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.313883311 seconds)
  done (took 3.77409429 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.257484664 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.25709873 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.258777547 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.2560329 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.258778849 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.255916928 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.256295969 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.258105589 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.257438442 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.256640815 seconds)
  done (took 13.714151718 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.259210782 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.258852904 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.256969401 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.256936412 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.25627513 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.257923087 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.257073986 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.255737077 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.258457123 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.258667941 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.256350928 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.255526144 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.256777357 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.257220003 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.256780271 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.257468742 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.256315003 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.257429753 seconds)
  done (took 23.77116624 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.269398513 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.276368269 seconds)
  done (took 3.686045109 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.384493148 seconds)
    (2/7) benchmarking "second"...
    done (took 1.299307442 seconds)
    (3/7) benchmarking "month"...
    done (took 1.362583845 seconds)
    (4/7) benchmarking "year"...
    done (took 1.352824048 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.299579698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.2777451 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.299312814 seconds)
  done (took 10.417604794 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.258576238 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.46681605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.599926449 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.836825635 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.257134219 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.26267173 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.17048862 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.260764927 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.262514672 seconds)
  done (took 14.51606853 seconds)
done (took 76.654757667 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.254576384 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.311701595 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.271848162 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.259398858 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.595552808 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.250940621 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.248027171 seconds)
done (took 16.334598656 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.233037589 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.229095295 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.232658095 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.253618705 seconds)
  done (took 10.089609488 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.253912566 seconds)
    (2/2) benchmarking "read"...
    done (took 1.572514265 seconds)
  done (took 4.968021654 seconds)
done (took 16.202100914 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258251024 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.260587513 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.258039561 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.259805852 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.259220542 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.259266007 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.260146145 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.2585395 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.259616005 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.258373738 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.258992354 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258272075 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.259439287 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258611253 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258961886 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.260811176 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258579932 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.261377077 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258640053 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261224938 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.260183488 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258730044 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.259599853 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.260051041 seconds)
  done (took 31.370373602 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.261000057 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.259668323 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.260456462 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.260312375 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.259623012 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.258443676 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.258825482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.258253396 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.260483466 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.26032128 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259498881 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.259611198 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.260762072 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.262044732 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260352477 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.261630511 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.260804698 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259964282 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261554013 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.261331722 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.26206406 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261965959 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.26092605 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262015303 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.261315099 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262179542 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.260428039 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.260867415 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261038761 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.262283503 seconds)
  done (took 38.964619861 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.264601492 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.262182318 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.261641877 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.262247054 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.261217817 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.262225867 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.260717706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.263295563 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.261633151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.263697755 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.262725936 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.264135741 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.263280231 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.262365975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.263134044 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.264829022 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.263390914 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.265359344 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.26327019 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.261910574 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.26339548 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.26265356 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.263228846 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.265121702 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.26564843 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.264239997 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.262298223 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.263227617 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.26351989 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.262910672 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.264542945 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.264583761 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.26327152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.263236917 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.263428981 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.263923717 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.266070517 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.264399659 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.264151827 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.263071155 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.263779906 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.264648184 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.264412649 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.263611319 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.263773395 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.264011024 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.263052031 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.26522174 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.264628794 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.265502248 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.265365814 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.266623442 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.263172251 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.262108932 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.264528273 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.264835652 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.264449653 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.265168653 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.264877259 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.266680262 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.265460652 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.264351022 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.265721211 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.266651143 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.264789661 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.264954732 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.266042972 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.26537344 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.265329895 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.265107843 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.266807383 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.264894485 seconds)
  done (took 92.157448015 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.264983674 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265997329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.265645872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.265876429 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266709471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.265430858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265345215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266427518 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264907845 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266555057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267515818 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265874063 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264183394 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265625117 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268599639 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.26720076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265812695 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265893178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.267315792 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266044892 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26573074 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265849141 seconds)
  done (took 29.001978833 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266146604 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266941873 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.266888556 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267299043 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268732028 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267491547 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.267410066 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267885174 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266996548 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26571545 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266590543 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267685099 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269069851 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266470648 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264504528 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268768292 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266414591 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267896327 seconds)
  done (took 23.958607243 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.267776843 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.265239154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.267372068 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.267281765 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.265900217 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.267985128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265775007 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267088192 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.266828871 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.265954325 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.267611055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26774749 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.266574983 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268509697 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265555407 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.265646352 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.266583023 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264629307 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267164089 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266808111 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.266991761 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266349237 seconds)
  done (took 29.017994879 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267602867 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266146296 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.268116298 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.266180471 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.265249042 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268125366 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.268305196 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.266284194 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.269363412 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.267702916 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267512927 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.268232879 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.270022784 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267390792 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.266885188 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26906088 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268298475 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266547041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266124058 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266980164 seconds)
  done (took 26.500563005 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267998883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266948769 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268753861 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268086246 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26785584 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268087223 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269318249 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268194028 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268160178 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267467687 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270660141 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270254554 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266340582 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269241494 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268564944 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269209904 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268967423 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268739326 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270886923 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272012043 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26924181 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268301534 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268851922 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268644387 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268075928 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268483402 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26833295 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270427641 seconds)
  done (took 36.677372425 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268356076 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.268110863 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.267019578 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.268485773 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.267597139 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.268095854 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.267097795 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.271855232 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268710385 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268743611 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.26973801 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.266744379 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26907571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.269935442 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266672474 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.267720885 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267805276 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.268809102 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267977711 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269153939 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.268584114 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26862831 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.267348191 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269567659 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269798014 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.269814275 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26838602 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267504471 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271240479 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269989859 seconds)
  done (took 39.210068006 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.287918591 seconds)
    (2/2) benchmarking "in"...
    done (took 1.288134671 seconds)
  done (took 3.727222816 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.270188352 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268070912 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.271603305 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.269702605 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269377189 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.268789003 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.268591022 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268688134 seconds)
  done (took 11.305553067 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.259669356 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.268214545 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26857582 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.270687608 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.268496376 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.261550845 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268872782 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275765192 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.264344772 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.26280125 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263337061 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.261556415 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.265846567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265793981 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.26379487 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268532159 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.27411166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.271670766 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.272023572 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.272158396 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272021013 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263985624 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269039276 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.27441694 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.263136644 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.269755598 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270076235 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.27559493 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26422834 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.270257988 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.268199946 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.274896173 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.27319996 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.271858317 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.271540239 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.272574212 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273094083 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272456982 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.272650029 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277197332 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271510994 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.272462761 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.267193209 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.268531217 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27034356 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.275939499 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.272420143 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.273021435 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.264393276 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.266610382 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.275063284 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263480033 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.273977216 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269240952 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.271406228 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27613651 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.280322182 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.265273375 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.267949095 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.272988681 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281335332 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.276584099 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272876129 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.278684546 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26872688 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.273894153 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277705767 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.281078276 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.275725937 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.274392132 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.275196108 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284516813 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.279243739 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.280144256 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275367798 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.274562291 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267652312 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276748569 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275615969 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279275076 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.280180223 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275463088 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270347294 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273360493 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.269194528 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.278033638 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.27570161 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.274474418 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.26770484 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277313158 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.283462049 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.27488708 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.266744412 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.269856257 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.272951989 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.277660544 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.26854824 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271381684 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.278060621 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.276019794 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276032464 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268058904 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.27481429 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281104312 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277439457 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.278240616 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.282194238 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268780191 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.279370049 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.284313843 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278378377 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.269308577 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273348709 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.28055593 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26967199 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.274750981 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.281235023 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.272667259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.281996911 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.278134732 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274059814 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281004151 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.282737022 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.277083645 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.271879307 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.281629696 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277776124 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.274773172 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.283036654 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.275974353 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.275572802 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.272925456 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.28503381 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.272099599 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282292967 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271681542 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.28095271 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.277607954 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.27733122 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.273145122 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.279083996 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.274162332 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.278332745 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.280225438 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.286205994 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.277485609 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.285933063 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.279435459 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.276072654 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.27917954 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.283996711 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280334084 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.272255805 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.282254464 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.271828698 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28053593 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.269289562 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.282162041 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279634537 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.278065084 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278084415 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.270277259 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274938737 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.282803965 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.278355431 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.278794614 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.28210813 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.281695033 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.28034625 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.27074352 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.280525542 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.271785557 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.273807419 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.281616735 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.281452587 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.281372234 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.277389898 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28638246 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280049055 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281539213 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.273432901 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.278229579 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.284910399 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281040632 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.28897588 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278653178 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.281217262 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.274354856 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.277605076 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.282273044 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.273565004 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.284049341 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288064174 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286639292 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.27618575 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.28270543 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.273136159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.284448417 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.280194283 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.289282239 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.279839161 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281908936 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27298787 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282741784 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.276202085 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.286288851 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.274451193 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.281449569 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.281540792 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.28116313 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282057964 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.274059869 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279863997 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.284802828 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282457049 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282640069 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.2748654 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.284069128 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.271953219 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.276469084 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.284930488 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281633506 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.285528242 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.288900084 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27872985 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285609723 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.280869092 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.2761058 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.2843134 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281084827 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.283349383 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286696341 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.284593837 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.278915954 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287175263 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28534706 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.277011843 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.284040707 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.288400027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.28148307 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.276308108 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.283243729 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.2835386 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.281989175 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.281826631 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279200234 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286261519 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.285059009 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.292546043 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.276407598 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.284754071 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.278553106 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.286977911 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.279270808 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.28461145 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.282706254 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286261429 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29220395 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.283143571 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275874574 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.284057951 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.284831262 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.281893707 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278388736 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.288031376 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284378866 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.287435065 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.279928491 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.28161364 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.287709942 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.274862752 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.285746038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.276865174 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292239625 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.298689957 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287108679 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289040342 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.287482005 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288150136 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284499079 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.279385641 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280032409 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280137446 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.27913281 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.27885777 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.285869147 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275977244 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.286534567 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282281238 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.285880257 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.285596736 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.284316188 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.278753203 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.287496887 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.283607454 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.285263395 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.275926445 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.285406204 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.278440964 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287719545 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.284965732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.277833031 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289894009 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28860482 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.280531726 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.282160651 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.280325959 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.279542891 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.279467238 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.288100613 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.278162305 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.288497858 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278163377 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.282627066 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.280127692 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291254157 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.296531362 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.27762995 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.288222611 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.284472484 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.276421532 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.279146528 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.287215212 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28892343 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.29777036 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.278007049 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.287446654 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285937243 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.283605389 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.285213008 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.284907441 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287110967 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.284658285 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289542366 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.28889414 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.279626328 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286137235 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.295458417 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.286379857 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.284941734 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.277842242 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285633897 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.297110932 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.280032249 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.283844769 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.281817013 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.284750771 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.283483425 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.283339544 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.283342976 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.286731388 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285766548 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.288559407 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286844334 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.285651278 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.288817037 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295811508 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290530831 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.297490849 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280367581 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.292393664 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.288295626 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.282605355 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.283865818 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.281238219 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.289101281 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.277322932 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289790811 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.284493711 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281764299 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.286457873 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.291584594 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279319255 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284764632 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292221516 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.278265757 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29041428 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.285904835 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.279134398 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.288872683 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.287303581 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.278011465 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.281959429 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282763887 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291302697 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.279969158 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.29006335 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281069771 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291031847 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.284864562 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.28622785 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.286652085 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.286806863 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.28191629 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.287718296 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286580606 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.295938447 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.282624346 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287090181 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282544052 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.292693479 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.298045262 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.281958182 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292555788 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.286596849 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281232709 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.284710109 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.293093538 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28131752 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290771185 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.278839723 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282325949 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28035013 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.28963553 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.291375469 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.291116008 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282223617 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282979909 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290273457 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.287102709 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288246089 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.283827455 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.294741095 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280069284 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.281071609 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.289283608 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280928778 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291121228 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279633953 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.283898048 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286057814 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.290319386 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.288230296 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286858378 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278768963 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.281523969 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.295380836 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292759674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.283407698 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.282327222 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.290124389 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.280262775 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284462998 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.285841718 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283864734 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282532293 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.290288473 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.28074213 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283885907 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.281470197 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28904357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.289078826 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292520645 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282291777 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294903457 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297682688 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.296111801 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.280803554 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.284007276 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285250389 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28926071 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286466797 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283007671 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296774473 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.296111636 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292944893 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2873951 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.290297247 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.280767486 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289042586 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28967177 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284433922 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.293848357 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.286464948 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295052746 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288696833 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.289493902 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.280422843 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.283212432 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.283904767 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.284807925 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.290300397 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288201459 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.292832368 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285960464 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295462009 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291475097 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.289996781 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.28926622 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282771544 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290026097 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28169647 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.289948497 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.292355295 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285545211 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.288419942 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290682622 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283101732 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286245379 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.292152241 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.291891986 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283233502 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.291184185 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.292459896 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300583387 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.290077803 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283042495 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287912846 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.292412403 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289257435 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290751353 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281788484 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29849014 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304457343 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283825172 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.287256424 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293729324 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.302245761 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.288856239 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.290521228 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285756828 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288097725 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294140387 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.291556758 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29214 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296542254 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287128837 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.293136429 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.285410296 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.288108295 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292820239 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301048791 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.289494151 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.285558994 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.298665274 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.303279824 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289420746 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304039683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298243069 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.291213799 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.295437886 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285754017 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.293638507 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.287972444 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.297824955 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.292957824 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292056081 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292697475 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284649794 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293642764 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.300740923 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.299934695 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291714934 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285298827 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288160947 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.293492412 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292620456 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.29417861 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.293170259 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292734878 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292762763 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.285099554 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.303304306 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.306300435 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.297519779 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.293445549 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.293931468 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.292240645 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.298448164 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291860812 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.296882119 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.295144858 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.294292059 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.291840856 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301064952 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.295072805 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.288367934 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.285929177 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289925751 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.298596459 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302267176 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313876955 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297995071 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.29916835 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296909656 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295294358 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288276762 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299583103 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296296446 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.289548657 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291816262 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298893436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296260412 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295087568 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.289617251 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.298915783 seconds)
  done (took 765.930508536 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295753557 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293748182 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294799083 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295560738 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296688694 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295265196 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295427225 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295422655 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294456417 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296136409 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294514433 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295403774 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293875566 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295711329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296175647 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296012755 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295250624 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295094128 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296140324 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296487896 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295936601 seconds)
  done (took 28.374181209 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.298231649 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293203014 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296807573 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295070595 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295180876 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296248325 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294057776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296393393 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295486143 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296045199 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.294598876 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295636724 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.295367598 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.296875329 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296211683 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297275609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297769334 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295186731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.296750303 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295897875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295307021 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295564239 seconds)
  done (took 29.681638801 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298492519 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.295388189 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288959416 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.300680122 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.299827036 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.296641743 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.298330941 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.29884833 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297858262 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.289600591 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.288822668 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.290252225 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293978827 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.30194505 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.292279268 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.303348132 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.29775032 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297249459 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296686493 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.299273014 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.301753935 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.310318178 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.29819184 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.289957032 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299991981 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.297182161 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.299404246 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.300495436 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.288981646 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.301687194 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.296342707 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.291531139 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299248585 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.301283618 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.293518896 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301227468 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.298811265 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.29993028 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.298579767 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296329149 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.307585751 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.298080575 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.302413382 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.313312668 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.300253243 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292799747 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.303780864 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.299025897 seconds)
  done (took 63.480894797 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.303054915 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.298833368 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298732595 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.30020422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300356561 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300156485 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300306877 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299928454 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.299873513 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.301146839 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.299372829 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.301666944 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301014692 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299613429 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.303104686 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300297496 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300169861 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301381736 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.300153037 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.301068676 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299876349 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.300909275 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.30007619 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299707592 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299195035 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298769107 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.300286206 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301555345 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301349518 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299570359 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300665288 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300173448 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.301011801 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.301573626 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299861417 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303044957 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300618831 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.300323232 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301942762 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.30002533 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.301257584 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304018942 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.302460068 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.301705516 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.30278934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.302184451 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303246286 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.304348925 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.301388908 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.301203417 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303364648 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302143993 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301820483 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.301100433 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304340738 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.302569798 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302913256 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.303108643 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.303371944 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.303575707 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.302525729 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302700574 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.302468571 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302761866 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303173115 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302952941 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.304197672 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302732339 seconds)
  done (took 89.670904003 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306224284 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.305218272 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307472847 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304284919 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306046851 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305656203 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305929306 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303973117 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305053475 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306982819 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306866437 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306036739 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304372127 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305137561 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307984823 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303807181 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305115521 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305321217 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30411783 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306470662 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305414641 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305423079 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304877228 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306219502 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308336579 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305669471 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308573161 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305889224 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307197609 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308176155 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307561227 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306653946 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306885302 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.309154642 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.308489033 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.309113334 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304676098 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307800456 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.306726884 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306061588 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307673724 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307202235 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307964149 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305371283 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308581679 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.309709736 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308657727 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307379287 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307296622 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.310474032 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.308271988 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308559991 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306729144 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310233598 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307556724 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.307301621 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307180197 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309996602 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.309003333 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307165101 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309308333 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.306104668 seconds)
  done (took 82.208080666 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308764443 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307183336 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.310517556 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.3084947 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308197958 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307138853 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307985427 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308311936 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309839467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308529877 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308272498 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307803511 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310771997 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308774476 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.308901164 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309969562 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309093593 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310246845 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309967732 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309007839 seconds)
  done (took 27.358729858 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.310823897 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312080508 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.309469679 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310504715 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.308302083 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308522535 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.307340189 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310581737 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312049443 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311400033 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311022344 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310480128 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309369539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311809945 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30973963 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307587463 seconds)
  done (took 22.144445998 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.312274079 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.309946052 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.312166852 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.312924497 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.312190005 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.310139373 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312285418 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.312987127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.310700678 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308609073 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.31001426 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.31080998 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.311872631 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.310870997 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.310772355 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312731706 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.310994398 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.311917684 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.31326014 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.312601129 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313464936 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.311094205 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.31336041 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.312663169 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.311789068 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.313721324 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.312607217 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.314981595 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.314725957 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.310072614 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.312712235 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.311123722 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.311445979 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.313869351 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.314686559 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.313309358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.31315659 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.31515177 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.316368938 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.315485042 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.312473524 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.316384691 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.316175187 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.31277779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.313420966 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.316128162 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.316962403 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.31472892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.313673835 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.313560439 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.314912987 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.315791451 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.316315357 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.315836608 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.316667356 seconds)
  done (took 73.406683025 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317007983 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315985488 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314353735 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.31479607 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315779139 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.314371743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.315751199 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.318661105 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315347843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.317552402 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317125747 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.314640201 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315349276 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316239338 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.315118292 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315931753 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.316875522 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.315920356 seconds)
  done (took 24.875737968 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.316795687 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315355969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.315685994 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.317409366 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.318250246 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317283208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316009013 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.316291402 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317360307 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.317823832 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315677003 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315541298 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317214253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.317202466 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316157834 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315493026 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.317935882 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319413609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.317202528 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316784199 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318514272 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315714661 seconds)
  done (took 30.158888211 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.309445373 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.309113492 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.308697095 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.323429412 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.318369326 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.309537769 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.309187563 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.309590287 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.326930434 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.335386833 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.32737698 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.318427599 seconds)
  done (took 16.992912558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321502564 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319251506 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317630812 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319094654 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320347981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318240133 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318190298 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317832638 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315026947 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317678321 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316697365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315478533 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316614708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317191536 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31788979 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306260659 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305497462 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305836393 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307472919 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305223904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306450066 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306294004 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303654644 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298363187 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2975283 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298056262 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299024335 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298743466 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297632205 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299374867 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295503512 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290667618 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291131698 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289891853 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290501586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29043883 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292227905 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292968826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288149922 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288504896 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288774471 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289334097 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289197855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287962261 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28877886 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287182923 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285990555 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284743197 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285721206 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286159201 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285235535 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285338114 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285301417 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283210636 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280758681 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281689771 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279802664 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280304736 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281176215 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281270101 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281176542 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279501699 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278545242 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277769184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278365146 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276952403 seconds)
  done (took 86.776721677 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278113318 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278294371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278472039 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276928901 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275853641 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276368723 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27613741 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277614106 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276633101 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279902588 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273190529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273510553 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273863651 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273248096 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273148113 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274388909 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274001516 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274989948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270424026 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271017212 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270287147 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270806197 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27071843 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271593694 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270392104 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271956667 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270322227 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272218641 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27090875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270655279 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271164105 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271182824 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27134685 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271376226 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271172307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272243106 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269856639 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27182491 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272014289 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270816192 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271812777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272313394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270945597 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273142891 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272356943 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271440834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273355837 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272018356 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271715756 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272707882 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272133778 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2725207 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272734973 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272275479 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273920751 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27176439 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273294544 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269852241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268216105 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268636081 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268937511 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267724643 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269490849 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268011614 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269304407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26430514 seconds)
  done (took 85.133471784 seconds)
done (took 1789.231171178 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.419890341 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.382153254 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.254470047 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.266996833 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.253279849 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.251784068 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.264857364 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.252227761 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.253348111 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.252159831 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.253016199 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.441248637 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.286364019 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.251520797 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.250372624 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.347575744 seconds)
  done (took 25.828320617 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.273866417 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.264622092 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.366933743 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.269254315 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.286965712 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.437693595 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.323995916 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.270293721 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.419619905 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.286532238 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.255132358 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.291021706 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.265655869 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.256668676 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.287297787 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.43678521 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.514696866 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.266037101 seconds)
  done (took 27.91741085 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.666015618 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.268403158 seconds)
  done (took 5.086130385 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.283033182 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.265821742 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.266084241 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.2663906 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.26530311 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.262992045 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.263820947 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.264854776 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.268541189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.383988429 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.271469611 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.279696658 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.265910226 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.26686523 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.274233125 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.310046313 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.431336788 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.276147535 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.272817697 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.272110813 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.266614527 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.361741549 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.311348083 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.279688309 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.379929876 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.265126495 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.274206566 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.2742683 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.381622663 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.277835288 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.266650693 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.267014436 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.268451947 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.177522755 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.796621591 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.265971105 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.288758505 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.277098977 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.275026739 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.416244472 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.26913617 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.275325662 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.261370691 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.793999086 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.370251314 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.383807679 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.262821845 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.267949447 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.269923181 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.33075938 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.272015134 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.270067372 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.325157521 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.03234892 seconds)
  done (took 81.623408353 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.303875596 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.262687851 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444867227 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.285185956 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.270797444 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262739231 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.263540223 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.522941053 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.329972531 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261143535 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.569683906 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865880555 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.262767573 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.3328453 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.301793769 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.329668102 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.264817808 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.28197945 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.262298516 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.266409658 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823023863 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268707024 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.263431155 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.355023124 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.301643292 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77579937 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.264887182 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.264774036 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.281830966 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.262036157 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818333492 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.271291499 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.306316722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.258475224 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.534192783 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622743351 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.581362807 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.256757462 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.294290035 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.253848806 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.286433634 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755583102 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.603664046 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.250282861 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.25160146 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752145445 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.252987988 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.264309838 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.254803974 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515921606 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.252764236 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.252237768 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.251409071 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.251275895 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.24999737 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.327174029 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.325699152 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767239351 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.251359786 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.25213144 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.266608877 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.252100877 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.256476212 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252658756 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.254239949 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.602601697 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.56508283 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.258714822 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.599795772 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.801093586 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264468152 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883172976 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.257364293 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.276473064 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.299663673 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.253532381 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.25246209 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765156256 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.259542899 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.252336036 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580328499 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.253604052 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.547515233 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.270088217 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.25407452 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838583412 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.262044141 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.292913986 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.253017626 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.253673787 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.267650356 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.255824674 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.536193298 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.285518748 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.254977275 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.25446619 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.289372402 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.253932858 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.26776226 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.256336251 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.88285996 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.262809153 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.254051212 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.274844452 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.253873166 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.259943196 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.258243754 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.256167638 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54286531 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.2581593 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.260770005 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.257370013 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.256429865 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.256787598 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348435998 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.258349792 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.542972925 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.255582606 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2553268 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.257480391 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262246888 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.27925963 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.253091938 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.261464989 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.25680079 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.557668099 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.27358169 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.26913643 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256012203 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.256128996 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.271608421 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.257378975 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.311416871 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.256372737 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111155713 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.268877423 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.272847849 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.258357535 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.266509152 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.269564906 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.26761219 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.25967868 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.556117775 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.537344319 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.566074988 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.25631817 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.256163653 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.084472618 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.268023832 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439924142 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.275234753 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.25736733 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535785829 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540927649 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.256807871 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.259040846 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.261256371 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533728298 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.268087017 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.572337813 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850626871 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.262332168 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.262777095 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.102226928 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.066737349 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.263979222 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.259625514 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.546804528 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.27387967 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.258390933 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.257354601 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.259033769 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.259591917 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.263655034 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.257600109 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.258823429 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.259112001 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.550438458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.451787517 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.274730869 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.259001178 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.775502066 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.281991347 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.259073146 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.263251754 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.262530737 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.259988828 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.335171772 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.262867975 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.264301222 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.2601506 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.266758054 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796844227 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.259938575 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.279890879 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.453303407 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020624831 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.265538923 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.261542482 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.260853348 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.319729795 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806286762 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.266075369 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.549101637 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.270357927 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.299669662 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.25985485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.271001127 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807022272 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.266876767 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.276754334 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.976100484 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.260935388 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.742300026 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.262431312 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.261826732 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900749548 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.262699623 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.267011971 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.262664244 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.261755093 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596332731 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.262401227 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.300889355 seconds)
  done (took 481.913887393 seconds)
done (took 623.515657816 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.261863701 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.266351634 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.245565514 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.268915583 seconds)
  done (took 10.199991362 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.284712384 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.268714914 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.277522893 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.26868444 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.279455986 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.269086246 seconds)
  done (took 8.805424339 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.264051746 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.269444666 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.269653735 seconds)
  done (took 7.960666438 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.467661627 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.283315926 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.604473078 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.270610532 seconds)
  done (took 8.784268197 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.280322304 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.279655849 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.279621923 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.280559852 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.281038612 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.281849695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.27975146 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.280208585 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.281805568 seconds)
  done (took 12.682999896 seconds)
done (took 49.591056708 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.294605357 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.244237411 seconds)
    (3/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.254748886 seconds)
    (4/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.50243291 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.332541864 seconds)
    (6/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.244802575 seconds)
    (7/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.383780885 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.303506906 seconds)
    (9/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.243736741 seconds)
    (10/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.382545049 seconds)
    (11/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.366888718 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.483274369 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.367517682 seconds)
    (14/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.958468391 seconds)
    (15/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.448533787 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.299792299 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.352495461 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.245149817 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.420947725 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.454117896 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.346819173 seconds)
    (22/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.249429535 seconds)
    (23/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.383530718 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.379911942 seconds)
    (25/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.311333804 seconds)
    (26/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.477105119 seconds)
    (27/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.304763036 seconds)
    (28/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.411191368 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.410397024 seconds)
    (30/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.247464098 seconds)
    (31/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.061246594 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.14387099 seconds)
    (33/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.44404263 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.349385798 seconds)
    (35/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.517177117 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.397792513 seconds)
    (37/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.967811382 seconds)
    (38/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.380349457 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.343347125 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.300048107 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.298497153 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.334738593 seconds)
    (43/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.339815654 seconds)
    (44/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.247311038 seconds)
    (45/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.386381544 seconds)
    (46/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.41554968 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.270666849 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.418760956 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.456832574 seconds)
    (50/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.329295888 seconds)
    (51/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.338565635 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.368379615 seconds)
    (53/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.29871638 seconds)
    (54/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.409913726 seconds)
    (55/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.432005258 seconds)
    (56/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.247200163 seconds)
    (57/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.32972329 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.38500463 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.266993821 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.244013535 seconds)
    (61/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.087887342 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.094012558 seconds)
    (63/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.264638982 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.373659507 seconds)
    (65/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.303962161 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.513352531 seconds)
    (67/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.447454702 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.248262569 seconds)
    (69/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.250673174 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.447175346 seconds)
    (71/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.247941857 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.259534902 seconds)
    (73/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.478833109 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.277745004 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.370815434 seconds)
    (76/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.310485445 seconds)
    (77/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.347240008 seconds)
    (78/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.29327937 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.423966034 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.248418948 seconds)
    (81/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.252552205 seconds)
    (82/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.279177026 seconds)
    (83/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.950917176 seconds)
    (84/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.296703108 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.352590405 seconds)
    (86/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.088432556 seconds)
    (87/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.249935168 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.248868237 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.276891036 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.377309866 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.355530479 seconds)
    (92/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.387100721 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.279033718 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.02438028 seconds)
    (95/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.250237913 seconds)
    (96/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341683534 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.393337522 seconds)
    (98/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.303621999 seconds)
    (99/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.060606246 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.451351057 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.385556037 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.306270797 seconds)
    (103/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.250344912 seconds)
    (104/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.481887785 seconds)
    (105/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.333026275 seconds)
    (106/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.251294702 seconds)
    (107/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.252180534 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.423444474 seconds)
    (109/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.303044298 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.345303058 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.458175656 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.42373422 seconds)
    (113/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.068477344 seconds)
    (114/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.420927964 seconds)
    (115/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.435710149 seconds)
    (116/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.353233259 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.250768384 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.409496637 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.536057291 seconds)
    (120/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.378689248 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.275525305 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.380627983 seconds)
    (123/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.006100372 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.311693372 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.271991435 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.29028762 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.389154989 seconds)
    (128/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.105182852 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.253126594 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.283011593 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.358272395 seconds)
    (132/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.022948629 seconds)
    (133/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.253252578 seconds)
    (134/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.130778967 seconds)
    (135/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.128833029 seconds)
    (136/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.055396695 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.449726829 seconds)
    (138/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.369184895 seconds)
    (139/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.516795226 seconds)
    (140/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.351863021 seconds)
    (141/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.31231344 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.366016258 seconds)
    (143/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.274706746 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.384403583 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.366193379 seconds)
    (146/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.404101594 seconds)
    (147/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.438753425 seconds)
    (148/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.253716174 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.381501121 seconds)
    (150/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.619483625 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.341252429 seconds)
    (152/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.510573011 seconds)
    (153/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.315065437 seconds)
    (154/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.481404619 seconds)
    (155/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.240345116 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.352099329 seconds)
    (157/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.355540261 seconds)
    (158/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.269235086 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.376684112 seconds)
    (160/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.254405951 seconds)
    (161/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.420595434 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.39749934 seconds)
    (163/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.294938826 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.429614872 seconds)
    (165/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.352041772 seconds)
    (166/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.408962452 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.386630906 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.255027772 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.336522513 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.319770713 seconds)
    (171/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.341964916 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.288651326 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.390724931 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.427053241 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.279653022 seconds)
    (176/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.309541405 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.370712272 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.516797488 seconds)
    (179/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.275953322 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.121028933 seconds)
    (181/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.016371398 seconds)
    (182/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.32870076 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.480118431 seconds)
    (184/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.347125508 seconds)
    (185/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.155822685 seconds)
    (186/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.315183858 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.514635548 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.121758962 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.279105458 seconds)
    (190/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.98209372 seconds)
    (191/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.274917689 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.25746181 seconds)
  done (took 328.075724677 seconds)
done (took 329.235048712 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306007813 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.38293306 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.284984797 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.285836556 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288162988 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.281974478 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.307056818 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.286719734 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.299840537 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.300710421 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.283337778 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.295423498 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.300081822 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.297756168 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.319279114 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.288197921 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.286865637 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.297349511 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.301803128 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.30439728 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288490229 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286622335 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.312945043 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.287303705 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295619901 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295574168 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.293806241 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.279331712 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.295869056 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.302216606 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.27873272 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.294043554 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.305598571 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.299168355 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287812471 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.298247104 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287803794 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.385594412 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.309199858 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.298333481 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.296238211 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.304461398 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.293778224 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.29340334 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.300817108 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.315256277 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296832804 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.303585782 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.280420243 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.281036218 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309441215 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.301422721 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.297427925 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.2801888 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.292613042 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.304468463 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.298815105 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307963198 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.296995425 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291076749 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.323064612 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308034889 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.301905978 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297888338 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.298450103 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.303542482 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.298399875 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.306173188 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.298589635 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29046427 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.291499555 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.298696759 seconds)
done (took 102.717702305 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.413315087 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.281441074 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.445113041 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.297067636 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.451877472 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.412236587 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.299380557 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.299255636 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.298126784 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.08950554 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.29899277 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.298860869 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.284701653 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.299162211 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.410767338 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.299134665 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.298866531 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.989577069 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.299928149 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.425582024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.290520558 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.29937249 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.299261403 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.096092219 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.282362792 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.286381726 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.428302801 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.300344196 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.993614335 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.286324543 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.290473402 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.99393132 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.426947194 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.318496748 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.308710008 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.308611259 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.453911074 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.302234166 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.41525599 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.415644489 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448646224 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.338034031 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.284792284 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.291216599 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.302096834 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.300351415 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.299829135 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.329939792 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.292105524 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.301002429 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.991008406 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.310014537 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.309886325 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.301496599 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.300742666 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.320534235 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.301499372 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.30237843 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.427464202 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.302452691 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.416698267 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.099814965 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.093428694 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.300932452 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.291269882 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.302320675 seconds)
  done (took 105.726122188 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.362532066 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.370094618 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.400854128 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.294487404 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.344036052 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.403248182 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.293239598 seconds)
  done (took 10.645987497 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.300080861 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.302290473 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341582161 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341797767 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.302248999 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.466826708 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.302715376 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305430725 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.301590103 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.345780716 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.305392061 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.3028485 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.312082912 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.29359603 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341296087 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.306301648 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.412442215 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.295451344 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.303391369 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.448201071 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.302726286 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.312708981 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.345623742 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.304324697 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.306453172 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.300574449 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.081709149 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.303335727 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305209913 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.30461915 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304012278 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.361521909 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.303717358 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.294502862 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.302760073 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409508039 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.303226101 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.304370254 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.30465592 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.297699845 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.304842225 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.305310552 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.305221066 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.30554781 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.304944596 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.319518039 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.306076341 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.305097359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.305030995 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.304629511 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.345787817 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.305382231 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.303893567 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.305099999 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.350691206 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315857301 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.305930507 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.30625286 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306773889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307143989 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.45077001 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.343885026 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.306042961 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345001543 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306491267 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.305814976 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.307253853 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.304995587 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387322792 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.305867604 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.344256997 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.305772259 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.477425802 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.320802462 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.308037323 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.301180632 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.301176274 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307021548 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.296549502 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.304796934 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.307101026 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.300636806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.304848298 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.305618253 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306348511 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.458000122 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.404903784 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.3072567 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.314219615 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.305723186 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.307014181 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.349176105 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.307730954 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.306992615 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348091938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.41862862 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.349853411 seconds)
  done (took 134.419215937 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.311311538 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.31279198 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.303634434 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.326608407 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.300679258 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.299875155 seconds)
  done (took 9.039709456 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.301696373 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.311409538 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.309041416 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.308522981 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.309652998 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.311385165 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.308096365 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302146062 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.311065828 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.309801854 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.311325027 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.312996703 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.310270794 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.310216761 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.310301013 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.30904491 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.309547319 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.309018599 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.310689876 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311189489 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.298008085 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.310800785 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.311112961 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.302485041 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.315476087 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.310105304 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.325613333 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.309779165 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.309800504 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.306146305 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.313204572 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.312676867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.303032648 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.305565444 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.313647995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.303630777 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313221273 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.31311301 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.311622284 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.313921299 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.314394728 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312550201 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.312540752 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.315139538 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.305493658 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.306432736 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.317189543 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.326868408 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.312977778 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.314450939 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.313976112 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.311810738 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.315584201 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.31494596 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.305982677 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30812007 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.318398706 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.314379444 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.313471334 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.305055147 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.315269319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.314654142 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.305237744 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.315718398 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.31292161 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.315781282 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.305777553 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316264177 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313451639 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.313192564 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.316444488 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.311443879 seconds)
  done (took 96.593428913 seconds)
done (took 357.598560536 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.563013233 seconds)
  done (took 3.751896635 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.326321612 seconds)
  done (took 3.516783561 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.017990721 seconds)
  done (took 22.210196373 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.311414456 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.321288877 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.319348436 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.307742648 seconds)
  done (took 10.448867829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.697749356 seconds)
  done (took 3.887102976 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.310937035 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.311826644 seconds)
  done (took 5.814031275 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.462524419 seconds)
  done (took 3.651343653 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.515494932 seconds)
  done (took 3.706582252 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.330810012 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.328912034 seconds)
  done (took 5.858033085 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.279093455 seconds)
  done (took 3.470453126 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.901143303 seconds)
  done (took 21.09237437 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.324725007 seconds)
  done (took 3.518294142 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.341876564 seconds)
  done (took 3.533073585 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.761696958 seconds)
  done (took 5.953100396 seconds)
done (took 101.602359153 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.300357003 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.30236264 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.303839221 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.302759689 seconds)
  done (took 10.399656433 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.379568338 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378925226 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.387560166 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.372825442 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.373939471 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.382856517 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.341736003 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.342175159 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.371061462 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.368550086 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.383587579 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.372919393 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.383793103 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.34257823 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.369806334 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.385530941 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.374693839 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.389411726 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.343422679 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.37640585 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.318236463 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.375119895 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.367793457 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.318122314 seconds)
  done (took 33.992283768 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.806571277 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.378919352 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.46354796 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.360130785 seconds)
  done (took 7.201931336 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.421489273 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.422822756 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441871925 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477864275 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.523659758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.436930518 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.345325407 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.340211422 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.328423793 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.426334887 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.509827446 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421651004 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.637342247 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.319751692 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.636194429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.318741205 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.31970305 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.424068331 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.472697282 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.501624717 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.320299338 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.424082311 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427333246 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.423606219 seconds)
  done (took 35.5150411 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.327902586 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.335853813 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.321051057 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.3361971 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.320529524 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.321452298 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.322185536 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.32705984 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.321320837 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.322868956 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.321381488 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.335935273 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.321328184 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.322144582 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.328488817 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.323605328 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.323801424 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.328145029 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.330229789 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.321011463 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.321349801 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.327287121 seconds)
  done (took 30.355865069 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.306512116 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.305405728 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.655994648 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.560826333 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.307103263 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.312036149 seconds)
  done (took 13.643773549 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.37695285 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.519257002 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.318729846 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.646636797 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.738119118 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.319222421 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.31352213 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.550019316 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.834038894 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.825851229 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.376906833 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.381552221 seconds)
  done (took 19.397173611 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.314550543 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.314523011 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.319869066 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.330192445 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.367903391 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.318166413 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.321044697 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.306490132 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.37144687 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.374998647 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.32357002 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.367587814 seconds)
  done (took 21.228002993 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399340065 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316920216 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318013201 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391545125 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318645929 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318795463 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316577954 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999391266 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.323645051 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593913097 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318213423 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407396746 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565029307 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319195493 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339414006 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.260730497 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548695697 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787228561 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325943083 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326921647 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357048011 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328298558 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324942943 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.524998758 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321085047 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319107646 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.582970863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318670801 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587376685 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566252461 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567280982 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329823503 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596758502 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953818077 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431128468 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519564827 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33531762 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322137627 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.302303252 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.344326093 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327109036 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345761974 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562120838 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330031221 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321675727 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327543751 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020173248 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330003126 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.32249909 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322995629 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563909526 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410852405 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.328237071 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322259584 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329486482 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322533266 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.327564444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441389951 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963360654 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322273374 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332595243 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.33039729 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318866754 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32530778 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949154207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.33043784 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.328859936 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328886543 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324526377 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323870595 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34935145 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325472335 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.346164944 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32432316 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063971456 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33119149 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330109755 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848496858 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34259963 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.328748627 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549206297 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323839103 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325139738 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.322343783 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325289017 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023133718 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337893534 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.293948309 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367728358 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009525601 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523526774 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345018258 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35353314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.544182058 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.295054619 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325491618 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.325685165 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354103258 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346482566 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015870702 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324925901 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.331348667 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57241038 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.536632462 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325329035 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.269889178 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788217918 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335566168 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.356242161 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339868183 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.532583572 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.922955485 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579478216 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335377325 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365610612 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326249362 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098015829 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342174405 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.338227366 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327740288 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604506515 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.10028853 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334406233 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399696306 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337143904 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327325046 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327789081 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3356281 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327252323 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.50499292 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330057293 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592730933 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.335518983 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327480142 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.333702551 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328575916 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.334685493 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549248212 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332438103 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610292029 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329160431 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326260845 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329050926 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.545165155 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.338105074 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.334429659 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665987511 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341385096 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346070663 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57850061 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368100388 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442919642 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359826982 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.342553061 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58357341 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.334947771 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.335953153 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330004444 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353748458 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332748614 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.338599672 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324235077 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928896193 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311077258 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336584956 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330887144 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.344973787 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402345095 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337974282 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52946071 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.340140982 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335268365 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.338028048 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.338365818 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550728729 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573111113 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.339861804 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5114886 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.791131076 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.932801285 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352414098 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.332331358 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.33139867 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.331241813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332555633 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332194565 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33218894 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532223748 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58050637 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341924385 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937302287 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339524038 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340535662 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.346193933 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572962308 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.345947427 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331271597 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.332850419 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344151195 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343509151 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582643396 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559815658 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.347344892 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333028837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850829864 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341568427 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335953889 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331762377 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3602222 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345601471 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161775733 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67182882 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326433621 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59426063 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34566212 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.355604259 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.332901871 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343491235 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341246391 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.355532428 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341169836 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.534980229 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335638523 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340480983 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973900749 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087467228 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886488277 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343580994 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.338541061 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34160176 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032634766 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334767685 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334804014 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574915997 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03464051 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335688174 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798512732 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.346973249 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07132683 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586556682 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567077288 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334085075 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.362053795 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588941978 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553997353 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363547791 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337997958 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342372696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.306670044 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868390064 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335878991 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523168448 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03039782 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334693388 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344132072 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.401801079 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335836833 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744779698 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343131319 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337150988 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347611413 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342147706 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167915914 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34260099 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337136382 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9656802 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346918305 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.804656337 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338610616 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.53897807 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584483004 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.563669597 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.346215449 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.359952823 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.587980938 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583565441 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345990198 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341289651 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888303377 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.198382719 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.345424166 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338766776 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103772611 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355238082 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61450681 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.355875423 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.356621675 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351515497 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340712283 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341348336 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.339071187 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347827783 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31372069 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809236032 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.338917698 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343903762 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350425842 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346203883 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.585797313 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.356969393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942350379 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571041939 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333236443 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37091159 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.345960551 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338299582 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.318250039 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340024801 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340385971 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380408169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558709823 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340863607 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.317369304 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340839586 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550856219 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341519503 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342047459 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559767927 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.341379899 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.34370518 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118855435 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377913924 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340875967 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348215912 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335138775 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39483062 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413629414 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543958151 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.588924255 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594637921 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735109545 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345588829 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349379614 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.357163631 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422634622 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349173596 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.349479955 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.362384096 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94488978 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105119732 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959177273 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590395705 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349246807 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353529584 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343106878 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583846135 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343156725 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619111546 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342737029 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.335510366 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36410067 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342521213 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364680622 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559270174 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616532274 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342878324 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34357638 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350184115 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.346057759 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595968211 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.561015321 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818716399 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879666528 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351680807 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345758579 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049909864 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622277208 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345069469 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343852991 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34461179 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.35535328 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.363679538 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356725421 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346589935 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573340615 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590688652 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992183528 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594433809 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.535730746 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.345411194 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348510611 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597409216 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188464831 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54660833 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957556769 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050705122 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602428852 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420731009 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549742747 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.346638504 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582032863 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.344761886 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353380601 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347047345 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346815026 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.346135449 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593400754 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961925461 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598183986 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.353832543 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.347633242 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377063642 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.551241007 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569201758 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067329426 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571948341 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594938597 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361199213 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348502928 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962652437 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597585179 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355089018 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.354762954 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558916147 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347637601 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384021727 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.228345778 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.347106381 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880457595 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.565651906 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369115624 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347717904 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.061945392 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9606191 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.353068567 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824802033 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357345486 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354531576 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632952543 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.356949227 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351512465 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635939519 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.356646444 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355803759 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562732905 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.955007488 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101922904 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.366296102 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368828991 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.359220826 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351704253 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344862636 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350186937 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35981799 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.739761784 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357625583 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350586177 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364598244 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.354726757 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354907612 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.356428676 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352127854 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.359138461 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.324241156 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.326045432 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367354894 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472942345 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892313912 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352123648 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.967035069 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.689427784 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598069888 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360771173 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.326177718 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.357435015 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353695411 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354261383 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353680098 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346077093 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886111821 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.36428185 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.606081668 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36487374 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.562946741 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564668007 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355702616 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565326673 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358782222 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378937932 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.323293639 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353272394 seconds)
  done (took 962.124663943 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356957342 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.363443344 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.365001588 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.410528099 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.358540384 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.351615045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.355615045 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.406620118 seconds)
  done (took 20.195618089 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.349457382 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.351973957 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.350701585 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.352985998 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.34508989 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.813534835 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.352434634 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.353234613 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.365681332 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.354952446 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.353655022 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.966333313 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.358889372 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.353498305 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.351211299 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.354447864 seconds)
  done (took 31.95802671 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.045930418 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.376225579 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.883441818 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.389432169 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.386716193 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.34468648 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.477646407 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.362012575 seconds)
  done (took 25.496145196 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.357930442 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.358224471 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.357747103 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.359136925 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.359706951 seconds)
  done (took 8.023233576 seconds)
done (took 1220.723473756 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.361748926 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.362374494 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.361760793 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.362012234 seconds)
  done (took 6.677041925 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.326034246 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.325957608 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.327280067 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.343605255 seconds)
  done (took 9.5526201 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.028411419 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.859607973 seconds)
  done (took 5.117799575 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.901931218 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.900738673 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.8951801 seconds)
  done (took 6.928888398 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.630757166 seconds)
  done (took 2.861956913 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.331086879 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.351881555 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.08377327 seconds)
  done (took 7.999250105 seconds)
done (took 40.370533619 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349079471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.11053753 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.503386702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349058423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.507833681 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.502885427 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.598647111 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347768486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.356200506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.354826207 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.350327444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.543310657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.587680072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.113781629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.587659082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.112906221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.509438654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.359621639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.347729739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.373490033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.59943155 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.35021511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.348933808 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.35093325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.509104475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.495338373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.347955502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.115873244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360279674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.350549434 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.492997091 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.352312801 seconds)
  done (took 81.771955635 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.358836938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.358896911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.362030553 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349558661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.365210265 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.361477839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.349431889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.348315939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358955989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.351934305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.350086324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.364000041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36682329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.349336756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.368081218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.350425531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.350187989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.35058171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.366136259 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.365579799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.35190481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.351106182 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.363711657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.355796272 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.355555437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.352467491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365796754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.35197833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.351901846 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362418836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.353759059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.366413998 seconds)
  done (took 76.662254363 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.350515911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.353056665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.356682586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.350941246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.360967008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.358954714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.355268938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.352358107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378515908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.360836528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362731104 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.355481613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.355003031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.368188365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.353169478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.353488589 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.354690038 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358269956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.361832182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352616504 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.354943159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.360145284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.352630476 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.365293649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.358143607 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.355427787 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.353089575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.352052988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.354559502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.354321199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.360051284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.353200317 seconds)
  done (took 76.66433248 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.594003568 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.369222653 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.369563886 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.362867867 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370882465 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.370104203 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.363714866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.599720083 seconds)
  done (took 14.637799855 seconds)
done (took 250.96814593 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.373591139 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.841103837 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.390524416 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.364324191 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.379571797 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.392698072 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.579046175 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.390052217 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.580621877 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.381995764 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.37969538 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.372852407 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.146918166 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.512545433 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.170427123 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.274674807 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.224800601 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.356392819 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.905632596 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.645422934 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.389563627 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.360749484 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.158675787 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.235207866 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.345231113 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.439676381 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.45696911 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.585979992 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.523257737 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.439299125 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.852940958 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.373632305 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.366524648 seconds)
  done (took 63.42875328 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.363256708 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.373386884 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.373531463 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.373510806 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.372793243 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.37286364 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.361118004 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.372946946 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.373365138 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.37260935 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.373195803 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.372629811 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.371782479 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.372982419 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.371060782 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.346380208 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.362600536 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.37228214 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.362520898 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.345538275 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.374096282 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.373572774 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.371820187 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.373573394 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.375972491 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.373342952 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.37304784 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.374191546 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.374547668 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.374537869 seconds)
  done (took 42.33982112 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.374388604 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.907613323 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.087979767 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.376910615 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.364768467 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.369958479 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.647335414 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.381449932 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.366928891 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.370266538 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.822188618 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.381358836 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.399433718 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.095516575 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.374076509 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.375576129 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.374776398 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.366988195 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.918431756 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.381543545 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.646453845 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.380993822 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.646195084 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.381670919 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.366847585 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367684183 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.371849806 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.171124051 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.389892244 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.824475461 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.121766192 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.647461883 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.118201155 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.142397747 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.12022779 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.383538802 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.376399964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.829179105 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.376728448 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.367970814 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.647401951 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.373850077 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.10108197 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059505616 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.390328411 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.375904029 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.210671283 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.8323749 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.609802681 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.381872913 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.130100755 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.378265769 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.379513265 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.369253609 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.603204441 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.375346211 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368921168 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.203936589 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.377581485 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.647673914 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.385584571 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.368651976 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916965772 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.375144887 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.914310191 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.376363206 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.377281483 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.371438453 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.103883346 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.378342137 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.069558565 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.390433202 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379421146 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.829378768 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.921259295 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.251033403 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.371347179 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.929551688 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.144151396 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.668592315 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.380203483 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.150362255 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.665982011 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.374170908 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.38075006 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.382135758 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381036209 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.44473454 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.647227074 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.990275294 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067808774 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.227643699 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.65862574 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.384869193 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.374663398 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.218765318 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.387147178 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381254329 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.101154849 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.080332518 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.394143798 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.3791556 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.056509113 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.397023267 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.654866417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.382965203 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.139164162 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.380035579 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.44716948 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.381557862 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.378577537 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.376876067 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.653085577 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.382431195 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.382142594 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.055352651 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.86081328 seconds)
  done (took 191.734191596 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.36788938 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.367524734 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.367220106 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.365856074 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.36792276 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.375033254 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.36707934 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.367831236 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.372413304 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.366861897 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.368719942 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.375901616 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.37391112 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.36866126 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.367661925 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.387815195 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.366753583 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.368882395 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.386361728 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.368989157 seconds)
  done (took 44.668698022 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.38467237 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.926703623 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.895119493 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.389474961 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.383170909 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.374739783 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.430443646 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.385030423 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384792662 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.6648479 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.543693158 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.386807254 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.384210113 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.383438611 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.890502978 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.364225885 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.6659045 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.920600714 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.389810075 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.921424089 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.362714883 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.38682363 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.374246072 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.924051883 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.682055632 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.654842825 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.433797871 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.927371009 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.391980963 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.385193865 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919756681 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.386688068 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.375038116 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.906563047 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.389570072 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.398378957 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.384935003 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.432026374 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.432947447 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.668535648 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.928142926 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.669753252 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.397498819 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.531079126 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.388264597 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.358189144 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.930825442 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.387896878 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.357566785 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387971832 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.391481869 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.903172079 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.38297567 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.905752435 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.387646948 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.386552383 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.922742272 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.907718629 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.896050078 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.545794825 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.37632491 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.656719601 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.387386109 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.932368712 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.388954215 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388085161 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.38830603 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.545941972 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.925074668 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.658775689 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.670772464 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.671544785 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.390421811 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.445679784 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.390038646 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.671561074 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.443292013 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.747599048 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.673245342 seconds)
  done (took 124.859061346 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.653993067 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.492587239 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.748028339 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.951390671 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.873459253 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.514432769 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.493651342 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.619117965 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.388749804 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.495214368 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.012793907 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.469532989 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.092724048 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.443594235 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.483497014 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.501118083 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.765566919 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.328430852 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.002531741 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.994864449 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.38327247 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.49512148 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.904493722 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.575368902 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.394640733 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.930482307 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.303141786 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.891086582 seconds)
  done (took 52.459064301 seconds)
done (took 520.727135145 seconds)
SAVING RESULT...
DONE!
