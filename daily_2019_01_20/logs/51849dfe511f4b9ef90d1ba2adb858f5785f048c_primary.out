cset: moving following pidspec: 871
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32159839 seconds)
loading group "string"... done (took 0.542298287 seconds)
loading group "linalg"... done (took 7.421904658 seconds)
loading group "parallel"... done (took 0.170261488 seconds)
loading group "find"... done (took 1.144588961 seconds)
loading group "tuple"... done (took 2.062984316 seconds)
loading group "dates"... done (took 1.304391666 seconds)
loading group "micro"... done (took 0.242026867 seconds)
loading group "io"... done (took 0.968476463 seconds)
loading group "scalar"... done (took 41.334901286 seconds)
loading group "sparse"... done (took 13.48980747 seconds)
loading group "broadcast"... done (took 1.038176026 seconds)
loading group "union"... done (took 14.717882536 seconds)
loading group "simd"... done (took 4.997365133 seconds)
loading group "random"... done (took 9.550381536 seconds)
loading group "problem"... done (took 1.967032199 seconds)
loading group "array"... done (took 22.7846081 seconds)
loading group "misc"... done (took 1.998499691 seconds)
loading group "sort"... done (took 3.374581278 seconds)
loading group "collection"... done (took 19.336857569 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.568272757 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155972541 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148730419 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147116492 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19689988 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1424234 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157435029 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097175513 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.954490021 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170577476 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151872375 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519258675 seconds)
done (took 5.124464169 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217349517 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094763314 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10329253 seconds)
  done (took 0.854460717 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077225104 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144362565 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093381351 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077893541 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093851915 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077641113 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093757881 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076985486 seconds)
  done (took 1.319309635 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086799237 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.095871462 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081359488 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095302894 seconds)
  done (took 1.021045808 seconds)
done (took 4.159853212 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.721267174 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.269627369 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202577422 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461110809 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.191623495 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213991846 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687943788 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.371213971 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.24983778 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098251006 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133893169 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389762977 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136043939 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.695376666 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08910826 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122726155 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189817228 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432281357 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082080196 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108375878 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115829575 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141103309 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129858383 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09001025 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183055018 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083681242 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190834852 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108061936 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079201111 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.270449631 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199135631 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698410157 seconds)
  done (took 10.835081798 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109102038 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131968012 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095722057 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136442254 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132277773 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097406338 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08338299 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09458348 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120060114 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173878388 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.127967898 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12155247 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094081135 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080263737 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1135725 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242798281 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121478378 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097887691 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099028761 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101405337 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12064497 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110177305 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107783283 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09204962 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163380876 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220191805 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111191401 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12398264 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095868877 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111486131 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141297853 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142691308 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095032537 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080889139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169968317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121911862 seconds)
  done (took 5.058486169 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.091203387 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188326427 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121038136 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168118652 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080204811 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141920074 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093508552 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112645936 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254400941 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.193902161 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.486047369 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140969684 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099840338 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09815524 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082085935 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096814604 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.623612333 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15502451 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114949614 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113571017 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101821832 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08333883 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365222556 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096900716 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081612946 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098660279 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071375372 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164590191 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099965386 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.175366464 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121081094 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.15736641 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099299092 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13133313 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197298607 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124628547 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117213342 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095486246 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077063754 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.188952537 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087837531 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092703438 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079248964 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119120628 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131302714 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118949411 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100193296 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097724928 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194808487 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078628859 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112775614 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.913071418 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178144489 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089966408 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095357184 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282825071 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11549524 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09797405 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077289572 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.264894814 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186242853 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096821958 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078623334 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095560267 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079526832 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397035343 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081794218 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.66138176 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083672377 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107988988 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081290215 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095660269 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101737851 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085389373 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113468475 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078278164 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097470346 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078159614 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094885265 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079914052 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094000062 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103780038 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214129599 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078584995 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096130062 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07710469 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115441967 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124854187 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098061045 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078617473 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128815737 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097258116 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081105957 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132222394 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079688201 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107293137 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09838701 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141593611 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080173228 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137079418 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080927867 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125596878 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100288841 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113270622 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093334907 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109497183 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081010687 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.16703182 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094649495 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07716152 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096649069 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077173785 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097318624 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080427425 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108915339 seconds)
  done (took 22.60387356 seconds)
done (took 40.248414568 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32221368 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100638404 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101081274 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100860525 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099125744 seconds)
  done (took 1.466848353 seconds)
done (took 2.183119512 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.280815977 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171583428 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093715369 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163887595 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091363582 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.161472881 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159059748 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092773702 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213647718 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09288678 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158147214 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075515008 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092877812 seconds)
  done (took 2.586557868 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092865765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112400778 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082452394 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107640712 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076084348 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108282083 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091087243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114423176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107266497 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084441411 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091583979 seconds)
  done (took 1.782735261 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094030223 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110976099 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082193806 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108815661 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076285617 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109071734 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092141545 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114845543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107847927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084946511 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091935321 seconds)
  done (took 1.783913973 seconds)
done (took 6.857033599 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090111469 seconds)
  done (took 0.797996458 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.908880824 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.368058227 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111695233 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147702918 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.312797674 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.169196131 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.455501526 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12365935 seconds)
  done (took 10.512455883 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.11328859 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098732973 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110378591 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082318943 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099044092 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081413168 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100118263 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098133339 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082004956 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096760723 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08399142 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099627896 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101185494 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084834629 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100000703 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08538439 seconds)
  done (took 2.299274639 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117276922 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115948251 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105533306 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105561226 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086230628 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101980949 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104404132 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087682065 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099554399 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102423706 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089004826 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102276655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102493925 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07886301 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104393281 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106148687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084049371 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105234321 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105132796 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089313804 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104782279 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093946933 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086309408 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104051278 seconds)
  done (took 3.207520694 seconds)
done (took 17.529848635 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155909058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106012461 seconds)
  done (took 0.983624614 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094094609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110186351 seconds)
  done (took 0.926112235 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095610991 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094017264 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119182075 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106933837 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079708319 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094925881 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116397385 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078832772 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095836302 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09502902 seconds)
  done (took 1.701255376 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081525769 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107680432 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099260947 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094143207 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103375939 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092646744 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087382263 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097712605 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107554823 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076678085 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.099989692 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112137879 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085033794 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114004232 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103059449 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097626172 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084247982 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096491259 seconds)
  done (took 2.462879262 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079096837 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095494786 seconds)
  done (took 0.899775849 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079381704 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092786525 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080090688 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095750805 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092033573 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075695736 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091545391 seconds)
  done (took 1.331358448 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.431264495 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134635206 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256733382 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099561163 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101125847 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.293627474 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095459053 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083879079 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102100884 seconds)
  done (took 2.378658747 seconds)
done (took 11.409221639 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092096917 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114009043 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111263618 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.451236079 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106144567 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096117277 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144913742 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244442965 seconds)
done (took 2.093321627 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142527723 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.561746777 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418912099 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.227550252 seconds)
  done (took 1.941639024 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.397240477 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097576772 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083331989 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081531007 seconds)
  done (took 1.397240601 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079093164 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098588096 seconds)
  done (took 0.913327251 seconds)
done (took 5.128505911 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079261172 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131213471 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079700953 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094715892 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080186276 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095609156 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076780745 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096868844 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094752866 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.08043409 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.095235641 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079255203 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093078449 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076890636 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09519035 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079690352 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093006952 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077813583 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093174296 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077895392 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095581887 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077253722 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092701013 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076390223 seconds)
  done (took 2.881860768 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099220546 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096349255 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101685806 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084985416 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100537407 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084884619 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102422573 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095757916 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08530975 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097639435 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100590879 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083704848 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098004742 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084156406 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098041628 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100227209 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084579378 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096401531 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082827273 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100027212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101438272 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080389305 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100103201 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101360951 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082922267 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099779216 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081692438 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096177561 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102270499 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083840174 seconds)
  done (took 3.545341169 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084318034 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092414334 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078082609 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099986625 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077215369 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095785164 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076707793 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093523069 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077654203 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093890916 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078393402 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093774613 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078118213 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094426017 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078230624 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09750432 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110823008 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077982942 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093367361 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078339988 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097040446 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076932889 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093887814 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076609233 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093654168 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077416924 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093530497 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077226841 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09413049 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077352497 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096947879 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080658068 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093434237 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083970162 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097352408 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093350642 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080405656 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09314665 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078020965 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093732718 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077473258 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093715785 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077583044 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100985638 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077527156 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096515605 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07678148 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095372238 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077837817 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097071033 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076508637 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093609335 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095691716 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078627236 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097728778 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077777023 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094892883 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077457082 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095079341 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077172442 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093642305 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07711607 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096116723 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078518811 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109608564 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084301409 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093498622 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079925376 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095626918 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096094812 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079783558 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108081889 seconds)
  done (took 7.068267557 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.129006457 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124439499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079186077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096988124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076300572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094329308 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082286652 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095008772 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095561428 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084238094 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094377578 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07946933 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09559384 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093808606 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094618376 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095233785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084866615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091839912 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078569004 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097946717 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078302429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098393608 seconds)
  done (took 2.785776973 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204682267 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103570592 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140321383 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106003595 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08228371 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105792173 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101089524 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08562653 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100387346 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08251934 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099101722 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101599155 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082929693 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098788654 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099308643 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083684754 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101077695 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084162527 seconds)
  done (took 2.610569213 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091924774 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09774153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.206406271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097733653 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097048139 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082698579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102500617 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106046423 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082567868 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0968491 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089996371 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099030192 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099988468 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080670522 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099058074 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080408438 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099746728 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080489015 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106805926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103166744 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085610259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107361342 seconds)
  done (took 2.944697113 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096076278 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099561329 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116387446 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082795145 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092916385 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078368842 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103131235 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081105154 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104719255 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098278228 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081022924 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096342884 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087012429 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096135562 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102087096 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080799502 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098892718 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081352447 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100496285 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078087626 seconds)
  done (took 2.607035899 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10086124 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098750434 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098379089 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090407927 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099087546 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083683932 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108705481 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101081044 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084773099 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126188144 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101190686 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083783042 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10796622 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104161986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100814986 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093404643 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109632899 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109924235 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084299575 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101771838 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125659912 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08413802 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110398745 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099000136 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083345904 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10111271 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100617916 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089827528 seconds)
  done (took 3.538189526 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080746224 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097099257 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07782222 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095127292 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07866932 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097195396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080100082 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097978538 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08173709 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097393057 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082530542 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099583182 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083555807 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099254939 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082935705 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10055021 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082670852 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09784789 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080219461 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097829046 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082601906 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100316144 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082860341 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097799878 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080602606 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100590935 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080658452 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098020035 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082633463 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098774148 seconds)
  done (took 3.453515516 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089362275 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104155189 seconds)
  done (took 0.952030144 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078823101 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113399411 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078110882 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100857054 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102383741 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081264356 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106327656 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08467885 seconds)
  done (took 1.501705221 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095658989 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109481849 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082704325 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110814162 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10778368 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097964252 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168343587 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09922019 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10436149 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078641417 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111208421 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080019928 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104850314 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081220212 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103285085 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088302838 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095412935 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104046228 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083502238 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0959776 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082447192 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106483077 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10297866 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.077612013 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099646597 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090885677 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11138783 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100467698 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084095929 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10567079 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086911937 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091507069 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081108851 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098065296 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079543058 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107896206 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114802433 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084764368 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107703467 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099792937 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093645587 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093671915 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085793999 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10468704 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108111179 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082866372 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099780634 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076609971 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098121188 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084180849 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093298028 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081266175 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094186673 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105457097 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085377266 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110191014 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079551353 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100225155 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084226505 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101859916 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104849835 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08363681 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101736856 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08079168 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109416241 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086302809 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108678578 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093379981 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075360239 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096321199 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091497865 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121401236 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105518549 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082785452 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100335697 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078792014 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101796716 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099459352 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087297403 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104702141 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081183995 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104766444 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106000759 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081590367 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100916156 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089994633 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097010425 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100107384 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079024272 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116049253 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079848068 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096370894 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078871057 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109623027 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102092981 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082088054 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095990357 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088012058 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091997686 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081955159 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099659411 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082956823 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110607451 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104011941 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104921538 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091277422 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106502704 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082167834 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102029104 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07869036 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100001806 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084165621 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10668623 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0924042 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084563981 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099199216 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082834776 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107484145 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079632922 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099487606 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106145138 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086661345 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096916455 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078509684 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101611499 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081504205 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101840331 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107142795 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079825231 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093465357 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076974875 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102345427 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081072602 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102521962 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103323336 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084533575 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092852874 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07962259 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103098053 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108267272 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08205227 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099450526 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088030092 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0999022 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080782369 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105346852 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10106531 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080548766 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105189098 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082343864 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093379261 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085305504 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101314903 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097488744 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085331783 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103599699 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084120414 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100056949 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080460212 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105217108 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100620191 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080430094 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098635669 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080562207 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110728592 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083377594 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094763726 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095865342 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090093488 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097309356 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081464642 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09845283 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084244203 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100934541 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079417533 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099572233 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100744305 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0939051 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103912864 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100455883 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086756671 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110672219 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082280126 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101845752 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081623088 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100712787 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100403696 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090999864 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104818873 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087127477 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101253217 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095085444 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087734066 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106790758 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081359393 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09621344 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08079993 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103298989 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105036476 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085294023 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09967461 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079826792 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099402978 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085266492 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102269042 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098659604 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08113516 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104615113 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081357022 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.1066068 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100301538 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092387492 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102409916 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077192222 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10291042 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079794317 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105418447 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094451593 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079256598 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097931916 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082582999 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099106598 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084636278 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093183927 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088291396 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107196664 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099896497 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081587797 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099317427 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088979458 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100359108 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086373013 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102512852 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105865838 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093026595 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098838096 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085072656 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109555864 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099230247 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076023961 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104325105 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080197719 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098537439 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081509271 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097580029 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084678038 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108573179 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.1065617 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076197102 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102524411 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080800966 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.09771653 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07766258 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104650552 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103137192 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083707056 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106633817 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083276352 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100157428 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086004625 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098410084 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100860982 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083177041 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101805728 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083218195 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101959208 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081003693 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102621815 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081270988 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097932652 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101146124 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082319549 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099390469 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088554002 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098887477 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082595663 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103660715 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101495879 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082988921 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100347381 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082138958 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103210988 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083239927 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099930938 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084825425 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094359976 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107518297 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081945647 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108505447 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082302034 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095893789 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088015265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102462863 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10535143 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083000881 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10045483 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083193314 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098952073 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085304535 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106694114 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097270881 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092828736 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107836599 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082917423 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102450415 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099699008 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084934687 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098786179 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08292049 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100333785 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081804507 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099469184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086180577 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102666883 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101069069 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08670874 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104506076 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08499473 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104832727 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079195675 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102288574 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084223763 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103976518 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113859847 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08626948 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106777617 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084393371 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104934834 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084462107 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100451524 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112032946 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094545638 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104616209 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110172542 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081269201 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102620244 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093772792 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094508166 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080574296 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098662294 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08031496 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110575179 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104823199 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095331751 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103096246 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084417343 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100432824 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085502938 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111209023 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078940818 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101039256 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108416722 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08798903 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102245891 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086003053 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106638155 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086889778 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115000507 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102830015 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085909065 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104129033 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082346045 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10160751 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083467341 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107052146 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08626639 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101581406 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082257275 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104256428 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.1047603 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086390067 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10300067 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086685022 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114027122 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084851275 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106732223 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10836888 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080366102 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106698023 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085268467 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103105876 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084362565 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108298418 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088276019 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1057931 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113831653 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085334096 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104644878 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085132563 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102083053 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084727816 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104570427 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104143682 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084932874 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105405903 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095289453 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102101988 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088031828 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103740596 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10391792 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091716736 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101060716 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085805038 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108874859 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085121802 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102547433 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108563908 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086627602 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104015703 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083236448 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102805721 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106397227 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081266917 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106150276 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082789034 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101566301 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084357684 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097548691 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08190549 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101017427 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099495337 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088084338 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101910261 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081535434 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099456883 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080169406 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101855814 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103855332 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0905333 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102667679 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085619546 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095857616 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080303188 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101220624 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08030012 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102063442 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103945395 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088990135 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.102273277 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083064328 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099730898 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092282153 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107217163 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104146193 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080536415 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10425723 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083941375 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102855723 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082907365 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101000113 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10227066 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087275769 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10147107 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082112284 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108183148 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085997416 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102650979 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102616503 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083855971 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100196499 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078278991 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101386229 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085000849 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106318017 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085270439 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102083674 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111634688 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082882788 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101097377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086519039 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10050022 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105844057 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078835402 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101851047 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084425988 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10166832 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07787706 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100542106 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081107749 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103222602 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081557136 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096115544 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112297077 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092524296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104099694 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081887285 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099638052 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07760713 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096534901 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100052498 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083865344 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102776254 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093201998 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100044683 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081789845 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096461213 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082486376 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104981822 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.103336935 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08050409 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096578704 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081575055 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104299642 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088200789 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099824017 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082057715 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104521842 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102249639 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080776529 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104569192 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079435071 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104317222 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115269205 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084154409 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101790049 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089284638 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109870382 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10227173 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078527984 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101594726 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08682536 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102002843 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084362857 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102813594 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117912487 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086948627 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100744292 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08237071 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103699426 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083028302 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109432525 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102915855 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084725429 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105789684 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085793185 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111038386 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104330165 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09119916 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104802784 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085774783 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100677382 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082888944 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099923178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100141357 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084611157 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102542591 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087724803 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110577794 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100160869 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095002538 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11131333 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088725875 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09891156 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082468174 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101511679 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097117806 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084974118 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099920351 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08169418 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099543153 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082355502 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102509791 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089221213 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103718249 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084927568 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101642629 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095705873 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085964568 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.103938125 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084799618 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098043696 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08384298 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10298146 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087290609 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105779167 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102159418 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085362489 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103084803 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08477459 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096645914 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090174675 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100586943 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085820903 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101467436 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102178461 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084700915 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10537644 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088904323 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102655196 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10374676 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095689539 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103824427 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081314602 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099324166 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08843189 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099892921 seconds)
  done (took 57.36031703 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144300892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080460883 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096866078 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078900149 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110936777 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098087844 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079155454 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097742752 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08004423 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100608014 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079299809 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096936508 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107024763 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122200095 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091980424 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102940417 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097268166 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080187305 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09753921 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080127984 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106374041 seconds)
  done (took 2.833207437 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102701491 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118575161 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113871373 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117172999 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089228255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112954311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112379779 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112842784 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098475691 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109445677 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115940018 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113273816 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089378978 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10955299 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109463834 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092763197 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117971668 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108530396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114329211 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094167345 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112212632 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113031967 seconds)
  done (took 3.181761051 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083681639 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100478312 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08579852 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09583297 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082813867 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096883596 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087470275 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099762418 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08695985 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102097514 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081186169 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10100917 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102408154 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0788226 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101243693 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081435825 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150153275 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106273957 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082278094 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103699305 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097124121 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084993136 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096821228 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080042015 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100141353 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087622868 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10228563 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081492562 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102040772 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081518742 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101362639 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099641898 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08528508 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101899645 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082983867 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.09972335 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083425933 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10170163 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078826337 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100276886 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083889444 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098315659 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08336162 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103502173 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080900115 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100670011 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.102846709 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08356658 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096752941 seconds)
  done (took 5.399801587 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103838006 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15974169 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086155217 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142766194 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118659904 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111610305 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088217691 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1412428 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101225794 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082175498 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123379063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118821293 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101855306 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088640783 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109723223 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101372167 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084854254 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100768682 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106395146 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083416854 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106643831 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.109414254 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099087535 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117007774 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106793202 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083300371 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10245486 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10706853 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097352994 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108077324 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106650105 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089782654 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120043936 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10737883 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101711958 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086582495 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119578531 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101932298 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08643199 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100134459 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086193937 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107984614 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109050803 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119853247 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084193093 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108488326 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083156178 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10082902 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116067994 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085745849 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111592395 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117498012 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106330099 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084194526 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107837817 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119070499 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084180749 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101243577 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106346543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097060524 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100415061 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107068162 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099442577 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104701219 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111504089 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117819094 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.089833188 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106390483 seconds)
  done (took 8.039854946 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09328739 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108389034 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119202794 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118636908 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090543586 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109663456 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109104879 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089754093 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108992898 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11421096 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108989449 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131628015 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085683764 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112316714 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110267067 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090007417 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109603149 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108275755 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090603703 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109926981 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109461408 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11856245 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089899275 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118585283 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13973221 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103549156 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088706707 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110264814 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11838378 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108855057 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121907897 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089878957 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10945292 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118881779 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121784223 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089917891 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101924562 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108583739 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090491322 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110064616 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104363583 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118780407 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090411405 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104531752 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10989944 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090091373 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118793272 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121706884 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113071813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114579735 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090568907 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118721835 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108863962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089763052 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119183307 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145211445 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118711472 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11753229 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109456825 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117852013 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09843431 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127688174 seconds)
  done (took 7.5571687 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106292756 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113205577 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115328228 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099551217 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082600842 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106712627 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082055331 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101165698 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112170118 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093616545 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114561128 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107319586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091728329 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116151371 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107591076 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110516177 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088493622 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107660673 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112879898 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107646036 seconds)
  done (took 2.901277825 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093165028 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121967115 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084577584 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110917305 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106087524 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090406067 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105598456 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106787703 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085331853 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105972804 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094700251 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115291046 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103668998 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090301559 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114834912 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110037236 seconds)
  done (took 2.462912698 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096027804 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115339752 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119271348 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083681291 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102641019 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100645463 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084501753 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098928127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081552696 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119440556 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104247045 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.086431643 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103123735 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082551748 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100081972 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086902924 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100294318 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.101684604 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084326087 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118128597 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09510063 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103751681 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104948637 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085683756 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103677588 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089712886 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104484155 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102040384 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082341584 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103883188 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084097596 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111888276 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099886085 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083119614 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10213972 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081740444 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103459291 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104323504 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.087769163 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102973307 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082411741 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103623315 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084221577 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105116151 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099615483 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085214062 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09905612 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090353945 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10226731 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08415682 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103800907 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105442649 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085261718 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114455305 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.107573656 seconds)
  done (took 6.186280144 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098768679 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10749026 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080927077 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102280948 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087411176 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106516781 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107364017 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087190709 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105153228 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082273368 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105585509 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088731553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106109719 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107539355 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086518725 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107856395 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080351374 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105279659 seconds)
  done (took 2.583048672 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090542113 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104039056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091655953 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104402011 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084432628 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107105648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080208831 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102561527 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101879851 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084602369 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104071159 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08695778 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102410912 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086273567 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103705037 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084732088 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106744012 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102068856 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085452771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098891512 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087228417 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102263083 seconds)
  done (took 2.933985197 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11807624 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123598033 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091567756 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228543354 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103238676 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130508485 seconds)
  done (took 1.628799507 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108520922 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119190486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10484701 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106016647 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112069297 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106229303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086572558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106764025 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11557931 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100373435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107117868 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116182833 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116107851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096046064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113420849 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112957701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105835251 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086550581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105343439 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125814546 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087597598 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117255174 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106141551 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086222468 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106405964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115144264 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11631985 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11996678 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087081397 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116911681 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112229681 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086751294 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116141423 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120193738 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108174997 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096504949 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106557905 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126862779 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111986141 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095362119 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108612789 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112955982 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116287461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09257529 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116271216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106609452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091428643 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10652192 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105772804 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132762306 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113594015 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095258018 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112409522 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116785519 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115992668 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133206653 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0998484 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116143902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113572107 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120531046 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114774951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092325398 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115374996 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120960183 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113291543 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115818889 seconds)
  done (took 8.024959492 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103049308 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124940308 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106282214 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121044764 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095232647 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106052587 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105668145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086860484 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10589622 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106736766 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149585522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087149172 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11539328 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115560436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106681897 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086443285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106255469 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11601193 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086236595 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132515662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106340259 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116077974 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115302498 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095535287 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120469924 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113365408 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106663159 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087060614 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106262498 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10651379 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092296659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106949472 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115844661 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085293701 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115414758 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106640481 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105840213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092146363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107533845 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113491519 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096063604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126165452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10771726 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106235034 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120275022 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086622366 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107229996 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086309252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10711199 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105360778 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120280478 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100867915 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121013413 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115671762 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106613318 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086614088 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107634677 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106817909 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087405679 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113934448 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115054179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106688948 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133763634 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086638306 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106739257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115429587 seconds)
  done (took 7.895818 seconds)
done (took 153.610673157 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.243334407 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.23485943 seconds)
  done (took 1.311814605 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.086334008 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135441822 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095718147 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167084618 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08441281 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138964196 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1368374 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096865664 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106134517 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08617251 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10668684 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086748972 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17008603 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084858439 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105605981 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107266797 seconds)
  done (took 2.639981013 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112581767 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25235877 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121423067 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104074619 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088984264 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109149022 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083644156 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11005908 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088521283 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103250957 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08746252 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105343278 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083846321 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105603945 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109049462 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087760883 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103739375 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087464033 seconds)
  done (took 2.785074977 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112375373 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151026091 seconds)
  done (took 1.112168706 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243238258 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160071886 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.22628877 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.463281944 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.266778638 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.353853773 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.196862023 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208426989 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167997414 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207622778 seconds)
  done (took 3.339642524 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117513222 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17784862 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314593961 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154373567 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105719322 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125747009 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156574429 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129368667 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.120773713 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101109574 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120573898 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117163981 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137014304 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094357807 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114111247 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11613617 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120396941 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114294425 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113026703 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094275401 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136389529 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104776893 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095151867 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112960714 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.117597945 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097109171 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104991825 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084499199 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.1151325 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114003382 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092385715 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123826436 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118117307 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.152651034 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121799331 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155655995 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117589507 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090397412 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114372785 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110122817 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097571732 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117131316 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123232936 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096268087 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104941621 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095875864 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104801736 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104911992 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093182524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117273714 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113436659 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092054418 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1518176 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118094997 seconds)
  done (took 7.303606284 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.78340324 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155255015 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08997535 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.874849962 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134845693 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103724489 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775031305 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110885986 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25362136 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.748919503 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132030551 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119857197 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202772663 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257225212 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953885342 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288158149 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.64317365 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124459383 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149579042 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151768694 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116821873 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135304052 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10980326 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452163553 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116685055 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111174816 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096450792 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118732324 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15946494 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124629399 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112577665 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17532579 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248560848 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201424205 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0931477 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111340464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110264346 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167832967 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263600133 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190422856 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178913792 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108155688 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08856645 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121569663 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131278481 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107294127 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16190908 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172535922 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167728789 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113745131 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118613732 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09799803 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120827422 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16291441 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121196129 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319204908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306750593 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088074888 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121405479 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124571454 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256888964 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101257841 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222339595 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138664552 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208373688 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090235733 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771517973 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167361665 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110840548 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095297473 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119281532 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115098858 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120300098 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168063198 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367308878 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12368057 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113242358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088364714 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.250028491 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12460156 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089860663 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15891472 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115930797 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119624388 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123733132 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099700055 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188449924 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228416719 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121693267 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097958634 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11567361 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125259569 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093844859 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209725984 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216090612 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18123789 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206101281 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120524019 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161571998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167281387 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11866065 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170943189 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120645008 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122957318 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100506549 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213951755 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145413784 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121945471 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093520226 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117498121 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147870185 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126765444 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117536952 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169082434 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.475710386 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189589466 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086965799 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126876427 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118532309 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160618501 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116607889 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234209163 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122000028 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168202595 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119336304 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086555252 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120315003 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160441936 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121761807 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120956817 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12144307 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09721634 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256426735 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.191684739 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120896176 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240077724 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181899886 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095921393 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191746534 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099106361 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187783263 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098207928 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120583726 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117326195 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768240807 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12373625 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119762601 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09320041 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194242482 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111597945 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123259225 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102019207 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108717079 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783085103 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104698196 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120060476 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12367569 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094953195 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120502911 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11664712 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092798029 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181450984 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225208278 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097167718 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119963346 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123245588 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159532292 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115247761 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102184436 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124050545 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124404687 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099169096 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114860123 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12334485 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167992809 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161430379 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.215931458 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589028801 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090204661 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123827901 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22491094 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110998918 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263541015 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119642637 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221675888 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161441812 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120393326 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306624376 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165142784 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193210986 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125843129 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172619918 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1079524 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097123649 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.184201228 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089716877 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116585138 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162504425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124021178 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100320998 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955815038 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111959295 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22373213 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10795461 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170707689 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115470736 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098248754 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292689569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111466857 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105532984 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184025427 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092940038 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12577013 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.719875474 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102314008 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122277232 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117321648 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217358591 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162224078 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118675457 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097581507 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119121743 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161229288 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205011727 seconds)
  done (took 43.663068369 seconds)
done (took 62.995855138 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279783059 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216984565 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266242317 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169230735 seconds)
  done (took 1.88233023 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170087358 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149248368 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121189933 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107612268 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150094034 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084943956 seconds)
  done (took 1.656893768 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361175588 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273988377 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241650785 seconds)
  done (took 1.752145841 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288576622 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245638109 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473716697 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324850735 seconds)
  done (took 2.326421037 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208225872 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131602773 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109912326 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102666711 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195398201 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.243964451 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141249478 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198969475 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098514096 seconds)
  done (took 2.349337084 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194990216 seconds)
done (took 11.036057771 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.222860214 seconds)
    (2/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.242429115 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.178650097 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125517237 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.193951343 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.240675602 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.217962763 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.214618987 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094937039 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.145285434 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090378164 seconds)
    (12/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.209071654 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.250444664 seconds)
    (14/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095073142 seconds)
    (15/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121638868 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121677833 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095780322 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.144465656 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.172139578 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120741186 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096959189 seconds)
    (22/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118004129 seconds)
    (23/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.116500661 seconds)
    (24/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.198923668 seconds)
    (25/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.147189003 seconds)
    (26/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113747945 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.114599693 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077978759 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.18407466 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.144976049 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.178502782 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139621572 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095895399 seconds)
    (34/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099872487 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.108497257 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117654045 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.172304024 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108231149 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087037308 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134914312 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09656399 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116181386 seconds)
    (43/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.07650538 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135595835 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.147053559 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113755163 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118281461 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136997844 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.216561734 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.169487701 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09374527 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.137359202 seconds)
    (53/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098458228 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.11631931 seconds)
    (55/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.172410538 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096743004 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13414323 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085794236 seconds)
    (59/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.207316393 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.149595583 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110039754 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087088318 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.239682237 seconds)
    (64/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11397861 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.19486058 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114997439 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21638694 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146395791 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.215358422 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197416236 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12159915 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.19798282 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132637822 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119425818 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.19836946 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140648199 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111967618 seconds)
    (78/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203474239 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121028357 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.149952867 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093548573 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076466728 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20410299 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 0.17066779 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.191891129 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066068069 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.135300588 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.086807971 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134782245 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.204080294 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.191328916 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101065326 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117889574 seconds)
    (94/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136235022 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.157733233 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.148758844 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075498608 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215435708 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189904788 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.207752363 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085991872 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136134829 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091126504 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.189873908 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218472351 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.175817985 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13743745 seconds)
    (108/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111715539 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.206198799 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11771665 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076465437 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198673156 seconds)
    (113/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077148616 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108323062 seconds)
    (115/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093459047 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09004861 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.109719646 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116940561 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072035395 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106239863 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065702074 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14313505 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168325533 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.44363999 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213292236 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.19894356 seconds)
    (127/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.077386007 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.178045912 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.184182495 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096535883 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114513972 seconds)
    (132/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173127708 seconds)
    (133/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153811804 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090209 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091780507 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.178887337 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117127827 seconds)
    (138/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097012963 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.115593551 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06815853 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.13303474 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11359122 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092717476 seconds)
    (144/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.119570221 seconds)
    (145/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217944112 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067285616 seconds)
    (147/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.108791237 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089293653 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.089281175 seconds)
    (150/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.175366069 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10003084 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136454978 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08581859 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194599838 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116439096 seconds)
    (156/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067083532 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.1307539 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084912802 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116394606 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066995716 seconds)
    (161/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115694093 seconds)
    (162/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066533025 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119778601 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09214154 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.092097367 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093908592 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109056471 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066165539 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118834405 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084707527 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067658355 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.147272961 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178831246 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092234981 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116022144 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085184617 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169320809 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065736357 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138994594 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111395903 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154394643 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091998993 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095429636 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.108430725 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065661212 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176124514 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.074793748 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065476912 seconds)
    (189/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173363633 seconds)
    (190/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.144771583 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076749775 seconds)
    (192/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157872661 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086249276 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090254076 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066825788 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.150206253 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068919663 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121231036 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085607431 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115406165 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118336229 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.088991982 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110440666 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123769695 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118022475 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066216685 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0869304 seconds)
    (208/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124945008 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114675032 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066766303 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065720328 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108478746 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15068338 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086323628 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108393993 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091258129 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114492422 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066067834 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212922986 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.205174054 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076050371 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.187654172 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087021108 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120101776 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117031546 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085334203 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222234291 seconds)
    (228/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066061279 seconds)
    (229/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090223458 seconds)
    (230/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067576437 seconds)
    (231/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066299504 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110180509 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091235206 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09057843 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087039899 seconds)
    (236/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112022708 seconds)
    (237/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08988132 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.134581889 seconds)
    (239/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092753341 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090670924 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086613548 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109551793 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093958423 seconds)
    (244/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123855509 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152167471 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085581522 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.187841965 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118029108 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128103366 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.091806505 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112990483 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090539756 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06690964 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116119479 seconds)
    (255/309) benchmarking ("sort", Float32, false)...
    done (took 0.149124649 seconds)
    (256/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.105767433 seconds)
    (257/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066607465 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162453352 seconds)
    (259/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094207422 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109610517 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091905886 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089622389 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066396142 seconds)
    (264/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066568224 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089734474 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113848703 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115909902 seconds)
    (268/309) benchmarking ("sort", Int8, false)...
    done (took 0.187212287 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.084513161 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111282275 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118021602 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.084927518 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.181322684 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067042841 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066645046 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090989065 seconds)
    (277/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066494851 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066352876 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112870425 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118644402 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085474738 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116848219 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088813074 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108870484 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.0869819 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111495286 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085286634 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124341148 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222564067 seconds)
    (290/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087945746 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117995895 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099740947 seconds)
    (293/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128562601 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11481863 seconds)
    (295/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088578988 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108633263 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066366187 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109267829 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086507053 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.135731107 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09198602 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116031444 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066048353 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111768182 seconds)
    (305/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066118752 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085657277 seconds)
    (307/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.089350034 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068835574 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110157945 seconds)
  done (took 39.60500374 seconds)
done (took 40.485301679 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099591199 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145482982 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095467403 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134809092 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123139426 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090228349 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118260251 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097474253 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122602971 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123799415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097840095 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092882819 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095942169 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12043627 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096113913 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13787901 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123736339 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092843109 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118735485 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085519141 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118447568 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086351734 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111081903 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069697604 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120521051 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093298459 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116551732 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120045278 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08548653 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110225571 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089475821 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11777112 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085578466 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123456585 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092568391 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117982256 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119450623 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096159628 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111058829 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085921799 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120315669 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08633612 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118714029 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093997789 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117811444 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092469021 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118212852 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121911631 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114258817 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115296407 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094032217 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121247527 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095251036 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117469471 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089671474 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11809065 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115455149 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114671371 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119318465 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091569325 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117991547 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093676677 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116162924 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118261461 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094778551 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121400987 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097939748 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115434548 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096207529 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116184573 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085781325 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118959915 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.113561667 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085741691 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119734375 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.096868909 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109024026 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09225459 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116724518 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091409881 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109426663 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089442303 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111867283 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092882452 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113369551 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069540308 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114298407 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093353858 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109190322 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094651352 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116214648 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093567417 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111708914 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121786738 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.085807742 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115037206 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086616428 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.109763533 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087848827 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113882114 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086158791 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112257721 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095593487 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111854704 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092333465 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122910441 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086373888 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116779661 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085265166 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109939876 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125007225 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096572132 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110423293 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091346053 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109677715 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09338962 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109607169 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086281303 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110499622 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086177324 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116700456 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086590852 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113471573 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093505923 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124793987 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085889026 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114251534 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088857551 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109785973 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09200251 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110073955 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086513072 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11260766 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077048403 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113259186 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086266351 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118117611 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089056547 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118581845 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11138326 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095293707 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115426484 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09203587 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115733937 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085460095 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097829666 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092140959 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112928475 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088452253 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110721259 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088715583 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110418805 seconds)
done (took 16.846695951 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086444212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184315753 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151821145 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141960679 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107046646 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111282457 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12206775 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118002886 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112251752 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142799805 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109130461 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13137672 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147880557 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085795671 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112501797 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090561681 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112782337 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102194792 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145047643 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132845191 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164038014 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086180626 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146095856 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135257267 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120633851 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104507369 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112277412 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090613847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114411973 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112432108 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132843175 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115218269 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087220591 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133419224 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103915123 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120570854 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086628174 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118392937 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110855427 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.086483634 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140268492 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133055127 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092029147 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117372597 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090685777 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114535738 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08822615 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12057112 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121288813 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091176615 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126228349 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15728242 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090569941 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121483064 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086002873 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122141459 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121699846 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.088944838 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11232097 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089483124 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113860491 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091451568 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126982042 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141046908 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091053079 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120484905 seconds)
  done (took 8.578463639 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103790312 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138703932 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129772658 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105146681 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111937903 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087509504 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112413691 seconds)
  done (took 1.735762903 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08742568 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134101051 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127600446 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134911835 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131719659 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108051305 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123091241 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087420112 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130277755 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088583568 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13281489 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151687872 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089900361 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120481673 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136896143 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087219552 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137059059 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087512923 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11682316 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136089605 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090779715 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13511434 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089689323 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113091237 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101451322 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114357326 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162408365 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092831366 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114285071 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091676936 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112083617 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165410885 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101596814 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123945671 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112474755 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102156547 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127784113 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086062931 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129312554 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092890271 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127564614 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113702277 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089310208 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111744158 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093256581 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12401094 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.088837616 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.1147084 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091255182 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132959561 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089105479 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127782426 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088393329 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116990056 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114681199 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093980617 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123608348 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089676455 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13329608 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090494067 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130800317 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131801168 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102005371 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130311993 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091232847 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127921161 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.126707773 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0910958 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114630149 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091629086 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130090262 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085441226 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115446412 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09822568 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11525389 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.13711422 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11125098 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114470468 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098970957 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113711444 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088613574 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113109603 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111367622 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117358756 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11425156 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092120608 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116539795 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086127772 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.11281898 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091636889 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11241391 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089862824 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116654412 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088928462 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116228413 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105719161 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115195828 seconds)
  done (took 11.760077588 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089566234 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114268627 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090913772 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114900816 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089167226 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115468856 seconds)
  done (took 1.570882639 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113558842 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116942405 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103414239 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119919382 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155745881 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128819364 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103930856 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122905916 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10796318 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127273366 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129399613 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104868412 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135647701 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12140636 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10358034 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120319585 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129044036 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099362852 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127290271 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095317592 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13569898 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120232278 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096416184 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13127485 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117504278 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.093892196 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125118492 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102091082 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127044981 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122544077 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095478496 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117793108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120332904 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097727498 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129768056 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09562853 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120405749 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119312122 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099867068 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118505994 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.129568144 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096272518 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127493678 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094294348 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122806188 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121125695 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093189042 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124382434 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128423364 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09296664 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118990924 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093879435 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117401253 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118489287 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094654496 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122657123 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093879069 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129102952 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120944117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095632051 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118842844 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092979907 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122428486 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117577277 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104542916 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11931248 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120705448 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095618505 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121858909 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095092207 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119748282 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116805799 seconds)
  done (took 9.194044885 seconds)
done (took 33.778764664 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684643917 seconds)
  done (took 1.640268589 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.719500529 seconds)
  done (took 1.676283782 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.200178599 seconds)
  done (took 18.159045166 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504912268 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579945082 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.811056275 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178240312 seconds)
  done (took 3.039809884 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.935264207 seconds)
  done (took 1.911774418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295264524 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258031615 seconds)
  done (took 1.515425944 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.775423659 seconds)
  done (took 1.745126674 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.317507887 seconds)
  done (took 2.284848656 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329498153 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184641276 seconds)
  done (took 1.483763523 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547149838 seconds)
  done (took 1.518414621 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.759411538 seconds)
  done (took 7.736250725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258239321 seconds)
  done (took 1.242889756 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297422915 seconds)
  done (took 1.272107212 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.530802598 seconds)
  done (took 4.50626807 seconds)
done (took 50.69360486 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098000388 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12659815 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101574009 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124155294 seconds)
  done (took 1.417872243 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100185749 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120507447 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100139755 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119762832 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125968455 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095225065 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122651671 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.1000634 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119796256 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096037657 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120658408 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119804573 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097617805 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12238003 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092593496 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123217061 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124615158 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095758946 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123966783 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095529148 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118855631 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096714534 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124069315 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119829412 seconds)
  done (took 3.651496864 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098922964 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118474573 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096431256 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117879243 seconds)
  done (took 1.406553023 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099654184 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141701493 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138464624 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099841371 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142352188 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135505009 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091552331 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117436383 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093681016 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125082759 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090094068 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14879245 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137315119 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098598872 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126010366 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113745226 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091323288 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135815027 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09990801 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124817997 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092774902 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123877198 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090100747 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138986154 seconds)
  done (took 3.775140051 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157515291 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150087984 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138521182 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095133018 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.154515042 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140852886 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087591256 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139927877 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090294293 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129911365 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118469834 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132461235 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128463494 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087708647 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113446391 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087539883 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126943735 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127661637 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090638704 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144569467 seconds)
  done (took 3.426131618 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097055867 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117417654 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088237429 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11661933 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098603342 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120581913 seconds)
  done (took 1.621472787 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09085255 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114333648 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089880326 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114237602 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094173805 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114400611 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088068119 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114829225 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089264694 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11469727 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088285017 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113442288 seconds)
  done (took 2.210085055 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.454011203 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092322182 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119793469 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11167021 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095641346 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115251202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103539285 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118090076 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140526007 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088278335 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11491455 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090790318 seconds)
  done (took 2.628835981 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237753787 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124735176 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291065123 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192558227 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158907544 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17183291 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151889483 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164876449 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224179162 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157088768 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208935474 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221648119 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12499935 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218867023 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111644997 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143311483 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226754846 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218008127 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154551529 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23186113 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201753376 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165612835 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179468159 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151399484 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138683738 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168819174 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121478849 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104488449 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2359902 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179388776 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214690432 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163986231 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146335555 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241104633 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248780471 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197371357 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188160145 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134979188 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146179844 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16451431 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268512934 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139038842 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236225747 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159840806 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10480685 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221215523 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168238926 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174705909 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15019966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138932969 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198650498 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241000095 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193309947 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138571371 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163200726 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160903254 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167425805 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152178095 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252852029 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19845804 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204140457 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094374744 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145966386 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191494841 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180944916 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167095433 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.20806297 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145044988 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193141431 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186776959 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165836725 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217055311 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182315347 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138185442 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169289563 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173260932 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170320336 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254469599 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177500464 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121228524 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168141921 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149313409 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129971295 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16643138 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123714031 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239855607 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122616212 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133389845 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162403133 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161404549 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161026285 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196983137 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218381321 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147314676 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083752051 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15560973 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15518379 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188956078 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13920121 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159820755 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159951686 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129584789 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176162603 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122942911 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175010269 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090973868 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176473921 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2092565 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099266264 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157691575 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152080568 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148493119 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180415928 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197206135 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139674411 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132488285 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206046652 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173032281 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.148172875 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204109425 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198059233 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141837334 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148732871 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197805608 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246226896 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112790044 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228919422 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155615965 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133745446 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10660204 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178227289 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154500214 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16011074 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133158445 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179338268 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237806629 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097842116 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137505352 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188259128 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132707219 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132596215 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159728519 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148284908 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111015329 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147059938 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151728836 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207491975 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177758718 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151933899 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166482442 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151534355 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248683854 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113706453 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148500602 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149189317 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119392496 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192042954 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197032704 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130074656 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20223701 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198838705 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128165803 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195825936 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107610731 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177409774 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130303108 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092597766 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220031044 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166521318 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162607349 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193855778 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154326946 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18169309 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.207765971 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172972934 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174235679 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164324361 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159127491 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138475256 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15809541 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165055714 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096229302 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142366722 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13412019 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156270261 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142338282 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106149663 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226930117 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170924771 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148372941 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15733766 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149545777 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178075014 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101367457 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204964023 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17568899 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146971729 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196379158 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19131355 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21263769 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115467773 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231984083 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119729016 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098803108 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141969715 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171454076 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133000673 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107278803 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191833312 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177981413 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185144131 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175230488 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162604004 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174736775 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188214834 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120655928 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166801354 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184549674 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174692345 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184210647 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139725953 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124749846 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173289234 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153714368 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254901545 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164847533 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201604792 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20778639 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148558629 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131060099 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149293519 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185996602 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153115929 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17699081 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146244533 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139750517 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159836037 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107829982 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158461497 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212073318 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162094263 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191783405 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149518138 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184684334 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12692629 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16461629 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157873776 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164917696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108191972 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176666175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202227568 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14641271 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16907603 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218040646 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103777722 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.177666482 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24057193 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195988222 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137641019 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158210161 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158089537 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163798755 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172774911 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177376579 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1591463 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187701859 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156466355 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136054207 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139325665 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149629891 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124524621 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132821914 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147365061 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174234924 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138509129 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187304405 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159607482 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156866218 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16981739 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151115868 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144161481 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14913214 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215175594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173546253 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240431706 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148285443 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179360523 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20438033 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1246748 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13160305 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105733416 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176708183 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135559398 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21602973 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.119775197 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157208143 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179284775 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219800657 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110827244 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119976883 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156221058 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172658124 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163806483 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152262734 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158275145 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205849306 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142095503 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131527552 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171585103 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128220164 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14716107 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222937198 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080354282 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147749889 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099529783 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134217353 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164006571 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234686803 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108814876 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182987275 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168076409 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16745985 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164472162 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149269358 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148878183 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165779437 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19931093 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209761817 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104157527 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157517068 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175619818 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222553886 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159871744 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139913993 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202142563 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192175563 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224458507 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113830969 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193611013 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164913551 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127982069 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211531198 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13382313 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204443312 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135312577 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196199558 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151069981 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142184045 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174987401 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147968003 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141813361 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186111944 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172351364 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135343441 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132599603 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167256125 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174985457 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154498614 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126234996 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18100242 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124451674 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19040256 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258089721 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105967569 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15342429 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147547324 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134769979 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156976336 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15830944 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138121501 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.13779557 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229348797 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106704635 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218137563 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201043832 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196599052 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174984457 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143308508 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692052678 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10234219 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219447986 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153738859 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205085586 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1514993 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171842063 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156981104 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171131569 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192121743 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157104303 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229816768 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219728517 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177473844 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131061417 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157751887 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160460511 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143766018 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152854182 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166414292 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157899905 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123339273 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203186679 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169477602 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133354706 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11147912 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223977077 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127141817 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2120632 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179370724 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109755912 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199591477 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185702816 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132609382 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180371417 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23721837 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112214684 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1500761 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132182767 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155661147 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258011937 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096659715 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226918507 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175542796 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1572333 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166173693 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146586094 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188553188 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156475766 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202457874 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117635491 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15697687 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15476939 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136550311 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129198323 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153079147 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166476883 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.119843281 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184464937 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137467877 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189717652 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122644287 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14299062 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126974039 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217075138 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212751044 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13807823 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134721611 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161837928 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150081176 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172660982 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176707205 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134111248 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107017308 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135747872 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154835313 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111674988 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154278883 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15555621 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165033681 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203718384 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135904794 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276749901 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138876541 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153662626 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089059172 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13162476 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149934446 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118222094 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155604909 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149564064 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258989762 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145758335 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105295903 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148503373 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124885932 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106743998 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164194058 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163824685 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201753062 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144116601 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08128219 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158246499 seconds)
  done (took 80.543281765 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17244169 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.14907759 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157325141 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221620212 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189035966 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289777422 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.224400633 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274679015 seconds)
  done (took 2.74621505 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092848458 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144467628 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152115492 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132637389 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09056983 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118874826 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.330231112 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132379264 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090133059 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.138958451 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.148341925 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117448414 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.509038792 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116788592 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118924297 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083712929 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116111369 seconds)
  done (took 3.701372208 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.463578771 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.714287532 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.479334022 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124513113 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.110696886 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.13416162 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.747982121 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209209956 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095675532 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487358703 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773948828 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179887094 seconds)
  done (took 18.592580257 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098429207 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.12094007 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106855016 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135907829 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096224585 seconds)
  done (took 1.63190114 seconds)
done (took 128.326979704 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104340752 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402347663 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071878948 seconds)
  done (took 1.584002714 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107704737 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136946819 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108734622 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135657282 seconds)
  done (took 1.572115249 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096902431 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126771341 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10916236 seconds)
  done (took 1.410042502 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323021801 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.18989342 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142879577 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105504566 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129528137 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10222176 seconds)
  done (took 1.413990813 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096714795 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12700155 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098274206 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129710672 seconds)
  done (took 1.532479768 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093890621 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07054355 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100560124 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074350091 seconds)
  done (took 1.415673457 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113461299 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13125839 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104268161 seconds)
  done (took 1.430444985 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129234132 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138896852 seconds)
  done (took 1.3498854 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104740818 seconds)
  done (took 1.184082279 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118024005 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169018927 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189827148 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165327828 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226734562 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16482596 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141409313 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113807384 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129999277 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143147003 seconds)
  done (took 2.646157195 seconds)
done (took 17.378653092 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103414144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421715677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413449732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116516466 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721538519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380983563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.067932772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145935201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164875194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093370112 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139540116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67329449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02180984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376165579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980384173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373476575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705405447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092042425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119728169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093753986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.05243884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091981751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121955527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092000955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702897371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425590613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093929047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375127868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092605387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126773535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383081497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122037217 seconds)
  done (took 16.958495605 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094045504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173796725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098748806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136042469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122324277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093901162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124108989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092988332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17952913 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122392769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110495537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120638344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12583161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095051808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142076356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091722945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125380467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091935177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120667082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122158716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110788815 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120255229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093839036 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120719444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092781108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13511606 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122922682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092536036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120931134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098131823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127583933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094633491 seconds)
  done (took 4.801595785 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140897281 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18374558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127997637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126353155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168814648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123739966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199320709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146366882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154309302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122743545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139615315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093404089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156748158 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123641828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114274601 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121983537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096606401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121839405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092909716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123562481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140616128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09261321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123014144 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093777157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122976345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136119656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094822033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121673587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093506051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12695463 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099654462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1238348 seconds)
  done (took 5.139499659 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096535499 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126172672 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109454465 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139123072 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09618671 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125800764 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097396909 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124136434 seconds)
  done (took 2.003292214 seconds)
done (took 29.983798162 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11019566 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126878386 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107095274 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134167044 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10245005 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132017334 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091299272 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133582633 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133774419 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101647406 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137474188 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.0914548 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12301341 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091181035 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134588188 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097365032 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13292487 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102073279 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133745228 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132569114 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0946587 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133346442 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102806674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13316416 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10339264 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133039683 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137548789 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099104905 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123004921 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094902289 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124258952 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103247277 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124334444 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104617965 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126532706 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097204491 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12337829 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093867173 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133046959 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132308253 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098965977 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.1328368 seconds)
  done (took 5.980751182 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106695504 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139948921 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104699444 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080607873 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116853466 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080114405 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137722949 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07846149 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110350622 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10767101 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074386566 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105822131 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078358018 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104581887 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076672312 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074730528 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108539578 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074748558 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.0761038 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10567013 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079334061 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072228627 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108152274 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078430825 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.103949933 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080717426 seconds)
  done (took 3.556012678 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100094235 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136011594 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112535691 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184226256 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160639781 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099456654 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132782478 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140825715 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108554597 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120611662 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095379534 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14948478 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111052714 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128669269 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091715812 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137374628 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135854636 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094184517 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128360026 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113058891 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138924742 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102458063 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143157923 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13353279 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091558215 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122731187 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096860305 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135674605 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096859051 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131277395 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133516366 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096747434 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123213675 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103460914 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12612074 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093936046 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142732685 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13210006 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101459174 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121884958 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096062511 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122093862 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11324732 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166941296 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.12078154 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.100248715 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128851516 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102765166 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121596167 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110391787 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132157142 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091576794 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124583842 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091131445 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121262151 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13559817 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094363621 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124231143 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101553951 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124614686 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105255009 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126039789 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107587001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121661399 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129512012 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091901453 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121393414 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091858722 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144450658 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093630876 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163383483 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122690475 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0934823 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130838739 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100164971 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127833063 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093010042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138410404 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101696288 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12569248 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130895357 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096109268 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124631249 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111953171 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124368664 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094051758 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12246744 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099570053 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124988748 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093764809 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136498937 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122068682 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095903303 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139593403 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091960123 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123529662 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098541581 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126994143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091787772 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135428998 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12723349 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093870231 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131211013 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093468 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125136282 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10266143 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127303568 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091496986 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12691253 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127143159 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093133258 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123381575 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096453366 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123308117 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103376328 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128291169 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09755094 seconds)
  done (took 14.802732554 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227528093 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214384735 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.247756514 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.266607485 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135313757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144780491 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211134038 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124292053 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122898249 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160706005 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162594128 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18603138 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170483856 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180181149 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110965983 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121265792 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141930697 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134006471 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215410582 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290140046 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141931644 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101574904 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161374092 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159456738 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13659607 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101941878 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14074644 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133348154 seconds)
  done (took 5.761277984 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107150181 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156400104 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.127829246 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.115241888 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148582548 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093347578 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128385463 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.124973445 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.105519915 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135194965 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092853627 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128420911 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.129376786 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.102572592 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123055983 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103030055 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132090989 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094764543 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126278681 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098240278 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129408666 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132260301 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.096960374 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121954007 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.099362397 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12189749 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086162492 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141311751 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12212536 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11469389 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121015301 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100202548 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132361956 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093635501 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123023632 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094893199 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125017828 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095225518 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124306823 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092010494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12158429 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077498973 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122059404 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135847902 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098776156 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109100504 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099752479 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128460636 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098392044 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120674594 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096497527 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125452574 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09612716 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130053145 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099013417 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128340094 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095780394 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115709688 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099197596 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12518766 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08403011 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121444158 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098725116 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117436058 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101554273 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127671708 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092801618 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125695079 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097086008 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128605695 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.124528701 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096004164 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120793546 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095310988 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127864326 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097411702 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12633206 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092120603 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122526759 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093907823 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.10608202 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093123266 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073718673 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126016576 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121222424 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092386346 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.124265184 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.098892739 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138026561 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094755514 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129611829 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12300353 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092109946 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125763947 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083366384 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095775124 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137936958 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14056028 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093142659 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121336155 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10680176 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127881359 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122040438 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075931231 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100020824 seconds)
  done (took 12.917234076 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127158615 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153717875 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094854041 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142138951 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.1556013 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157860271 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100374152 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129934036 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094132847 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142795525 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093781694 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131471014 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096983405 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136697663 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156151243 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103259953 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125443348 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106328474 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131561107 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169757485 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111789417 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142003802 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137394698 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094391638 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129472493 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110722901 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16153399 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.137845373 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106932996 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141639142 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10737486 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160860409 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142604762 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098076821 seconds)
  done (took 5.460387057 seconds)
done (took 49.567952796 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.222062145 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.411654638 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184486574 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.078674188 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.220274618 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.217249089 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.196015497 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.184535011 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.832601655 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188154684 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.438432576 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.873505966 seconds)
done (took 60.166844108 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.274929273 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.320116378 seconds)
    (2/2) benchmarking "String"...
    done (took 1.453970304 seconds)
  done (took 3.901365332 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.538677226 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.136833671 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.444345757 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186284392 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.186199924 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.472724729 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.865813958 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.536721493 seconds)
  done (took 27.946150501 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.189330881 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.590306951 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.942573661 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.941860269 seconds)
  done (took 18.781248301 seconds)
done (took 60.560649374 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.189963941 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.258128512 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217663404 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.166571092 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300710245 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.219722303 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.439388679 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.296549549 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.214068154 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.17289318 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.208399269 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204182659 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.198746157 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.393455654 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.191767955 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.187435305 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.227283038 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.882902646 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.599998557 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.190322832 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.19461024 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.253852509 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.206726391 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.190570469 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.212923294 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194276718 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195993122 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.196355002 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.79683515 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.192837994 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.199547425 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.528157006 seconds)
  done (took 190.241385961 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.188304852 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.219492882 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.335286792 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.216525682 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.656774684 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.390996114 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.326372905 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.72629274 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.210082262 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.222989158 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.439341019 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.195937038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.513726237 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177677502 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.199301219 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.291390819 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.398303264 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507870623 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211717895 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.461799159 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.205683458 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.465615546 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.365626884 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.396958153 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.255565063 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.268180515 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.222433443 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.201522871 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398757511 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.33414026 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.220668303 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.227023956 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.83228175 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048892427 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.199788135 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.215023251 seconds)
  done (took 149.870357195 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.490196695 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191887302 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19068437 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192288779 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.224769077 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191376768 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.76461775 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765500762 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.734870485 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.553140753 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259466152 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.464535914 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190796274 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286661278 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.203961387 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193188894 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206374138 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235046046 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191969119 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19307873 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785999404 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209554237 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.261044122 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199516852 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.191762945 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22594424 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582975844 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19200557 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225779735 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.517169138 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.241660267 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192423917 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192932755 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.567542696 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.914866927 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304783604 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19427267 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223940515 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.192542761 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.466541126 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193201195 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.192311944 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.194143599 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19626289 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.847478755 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.199533191 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.768495776 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193652672 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.144513809 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19284709 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193715016 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.697315238 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.825091771 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.213775478 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.193693383 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195721328 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194420683 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194539911 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.227071528 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.654617105 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299104836 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210646351 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198234715 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227479312 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1942236 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.600980568 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194674844 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.99427794 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256383439 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.41013956 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78967416 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199526957 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291063336 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31643263 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194540566 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195281104 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194834748 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195017018 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.304412006 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195682305 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194641525 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.635072187 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201899988 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.196614244 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25789546 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292727612 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195377667 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55793114 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.2007974 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19552941 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942947888 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291389353 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195932154 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.195527228 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196157419 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.638710102 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773818082 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437407286 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201576463 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.590239878 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200922617 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.6523498 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.769938147 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.860729018 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201611207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.196084712 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306207132 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201354523 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.198478826 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.196900241 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226974628 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214196694 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254905371 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.196797166 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594856293 seconds)
  done (took 347.086973483 seconds)
done (took 689.806674465 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.885986859 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.832090621 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.969320264 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.852686526 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.830804778 seconds)
  done (took 10.498001595 seconds)
done (took 11.622261639 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.388033649 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387722815 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259978384 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.388892662 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227675387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.406315904 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366549597 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217861111 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301465502 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282026656 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.2999332 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253059414 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225885241 seconds)
  done (took 18.133198653 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50852486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.563145374 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266881504 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514654172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237451041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555189635 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394949907 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416874733 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408840552 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230170659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212195479 seconds)
  done (took 16.437939494 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512307815 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512977381 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266446748 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516407696 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24008852 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556884772 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398939865 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.414473243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416123971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230947659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211938382 seconds)
  done (took 16.406687627 seconds)
done (took 52.102685192 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.207097108 seconds)
  done (took 2.336804993 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243699506 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.409281778 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227970252 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.212013559 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209023193 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210217686 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.213088362 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.209514616 seconds)
  done (took 11.065675415 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205301371 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204981764 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207671375 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.205273277 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206311361 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205650917 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209430412 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206745099 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20632786 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205326526 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20855027 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209029916 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20942636 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208468638 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209911547 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209978029 seconds)
  done (took 20.449434563 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.209612021 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206715343 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20617677 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207940989 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206995982 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206830918 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208036914 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206952096 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.207401134 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.207193225 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207706805 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.2075982 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.2076351 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207954202 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.206409822 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208275912 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208243885 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.207666816 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212630196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207753378 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207565314 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207958125 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208118471 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208541556 seconds)
  done (took 30.121613943 seconds)
done (took 65.100506532 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.356892309 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.968636203 seconds)
  done (took 9.458834737 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.211351213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210629572 seconds)
  done (took 3.557906208 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210880509 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210525679 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210905005 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210355998 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211231644 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211107862 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211489827 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211985322 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211359728 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21143901 seconds)
  done (took 13.244811296 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211699891 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.211833217 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209084815 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212214087 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211625684 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209342105 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211536151 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211672045 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211450778 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208763726 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212812437 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20976007 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211622481 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210409409 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210833447 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210054775 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210147001 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210379073 seconds)
  done (took 22.928992274 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211794718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212943386 seconds)
  done (took 3.559159141 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.209932269 seconds)
    (2/7) benchmarking "second"...
    done (took 1.208734843 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209757281 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210674019 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.210035285 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.21088898 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21116214 seconds)
  done (took 9.606020364 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213866333 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384307616 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.46214306 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821382175 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214298027 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216176697 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098830168 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.21668712 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217870473 seconds)
  done (took 13.980042321 seconds)
done (took 77.465881492 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.236530642 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.222529651 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.421372783 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225513606 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.22393847 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.550075818 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.227669408 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346563126 seconds)
done (took 37.587173239 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.208896854 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.967075113 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.966370616 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.206708788 seconds)
  done (took 11.276632227 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.186813359 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.171742828 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.19374248 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.241969383 seconds)
  done (took 17.931326701 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.260987623 seconds)
    (2/2) benchmarking "read"...
    done (took 1.542589567 seconds)
  done (took 4.94006953 seconds)
done (took 41.490349851 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215733277 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215505294 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215533298 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.212877584 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214208378 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.212090135 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212918751 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214565016 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.214834785 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.216617159 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.214936586 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214648823 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212394512 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212819553 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214833113 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21584732 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212284615 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212939593 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213661959 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214446987 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215500371 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213007834 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214030922 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213278814 seconds)
  done (took 30.277181505 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216195535 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21402664 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215676176 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215848065 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.213438567 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.216651401 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.216226346 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213516228 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216140143 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217429212 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214707459 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213890104 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216618925 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214507207 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216714938 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214718351 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.217667248 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215742733 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218045979 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214711535 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.217809517 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214635929 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215275381 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218119323 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214743654 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214152714 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.216748939 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216032949 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217316799 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216763352 seconds)
  done (took 37.613047906 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.222747641 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22536664 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217417647 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219257696 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218012017 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217794338 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.218292008 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217997277 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218118493 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218591799 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217629854 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.218177863 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.21856787 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217674188 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218528395 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218846052 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.218778739 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218255269 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217944806 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218565412 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218841618 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21857857 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.218143732 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21900946 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218929405 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.218689352 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.218873 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.220045291 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.220587646 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219644496 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218742452 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21961025 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220860329 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219386476 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219987793 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.21988662 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224504201 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228165809 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.218997223 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218657268 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.220343136 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220044383 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.219264925 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220577376 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220672512 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22033222 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219227363 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.220036266 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22118223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220962687 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220533056 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.219939035 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221241923 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.220979691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221058452 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.220711884 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221794862 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.221709813 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220683649 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220128895 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22137164 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.221960674 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220046256 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.22118717 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223070983 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221633808 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.222366609 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221281538 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.221716417 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.221904136 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.222231234 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223108143 seconds)
  done (took 88.992254273 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.222564287 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219806793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219618655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219809943 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219882253 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.222328004 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.220093508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223146719 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219503033 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229291379 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223218575 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.220059175 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220946813 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223121989 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222818242 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220952031 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.223359433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219358465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223606097 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222548145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222732467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.221023139 seconds)
  done (took 28.024006645 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223460088 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22557231 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.22032533 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222660668 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221034798 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22318687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22309188 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224847513 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223328209 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220921011 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220702946 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223613239 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220514715 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220678795 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221179574 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222291521 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223884886 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224527729 seconds)
  done (took 23.150537663 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.221611584 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.221653708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224041916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2206433 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222141448 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224552166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222820654 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224256888 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.224472691 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221848082 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225724886 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224722737 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226893632 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222647445 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226057337 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222124381 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.225293439 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222170542 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225711899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223103918 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222649754 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225437537 seconds)
  done (took 28.067205798 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225149339 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225888954 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223048337 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222816667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224015444 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225905912 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22614725 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223296155 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.227725488 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225681062 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223970227 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225834021 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22633473 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223887326 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.224618303 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224885919 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227391456 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224164608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22633948 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22410743 seconds)
  done (took 25.648996777 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227145879 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228080028 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.227307773 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228671797 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227331598 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.227891822 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228395915 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22754058 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228265646 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.228340462 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.228118385 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229413919 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228247886 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228714744 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229482444 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228224507 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228657686 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228061615 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229246747 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229375655 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229123021 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22848788 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228164598 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229668813 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.229388347 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229482931 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228861207 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22993076 seconds)
  done (took 35.549396457 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229072512 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228745458 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.225987836 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.227223176 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.226250452 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.226524919 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227209379 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.225831837 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228698974 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22765904 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.228488962 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229653216 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228980646 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229608496 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231000731 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23032335 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229548793 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.227638835 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228200691 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2277355 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.229448797 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23006857 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.230330249 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22834635 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227016819 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230005863 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228015283 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228778045 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231956871 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228317067 seconds)
  done (took 38.007932089 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249267454 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250104909 seconds)
  done (took 3.650642934 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.228494988 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231833849 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.231504003 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22797027 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228635879 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23181682 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23119678 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228597549 seconds)
  done (took 10.991388872 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.230562917 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.23290216 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231648038 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232223239 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232043936 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.231997421 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239953888 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.251481167 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233642855 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233483365 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.239272413 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24021086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.235298928 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231662683 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233187397 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234290346 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232838681 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.232710304 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232771737 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234245318 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233180595 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235360952 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234122295 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.230206261 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234220725 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244968529 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258081452 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23358065 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232699712 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23644639 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.234783396 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.230860755 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.233929182 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234057078 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.234318918 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.234133734 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242940529 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25381617 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.2393842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253734887 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234584001 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232344006 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235702611 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235746268 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235639692 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234066033 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235529335 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.231621716 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.233504897 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237198765 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240936733 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23392861 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233207623 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238426211 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236358146 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241831625 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.255011813 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23909932 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24493703 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245339467 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267954141 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260916492 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237609879 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.235139426 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245435317 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261152653 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243527943 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253114534 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.233765576 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.236253288 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242943023 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268238451 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262669368 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237376983 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236759773 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238441416 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237318722 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237414121 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243431346 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259167478 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.237054127 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237483455 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248323048 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261465492 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237806127 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.237109936 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237810771 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.237473909 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.23993139 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248741703 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257280551 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237681636 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.237022039 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238800264 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.23965646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239012599 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238361371 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239009114 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236742744 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238997603 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237896305 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242196526 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247375557 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239580075 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238324141 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.243646091 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259137877 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238706784 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244197987 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239885062 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23919454 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240910003 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245394027 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.236893327 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243512575 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248062747 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239160634 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.241682321 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.239618796 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.24047059 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248891414 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266129607 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239573525 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.239253746 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244670636 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.251769137 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240501544 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243094423 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240287533 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237540549 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239217542 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24161073 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240535094 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242094925 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241383572 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241762679 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239137756 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240626323 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.240822459 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241340041 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.242313036 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241650995 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242820188 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.243145846 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241015182 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.242913925 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246356064 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260448309 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.242831966 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243678229 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238433376 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241997604 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242504326 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242267339 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242696117 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242683608 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241701366 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242005835 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241259055 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.242313448 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242193186 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243212838 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246429776 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243073153 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.246141951 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241779753 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241014556 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24311673 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.243132113 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243172875 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.243692436 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.240938243 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24649122 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251474702 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243578919 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241941918 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246094598 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243996447 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243868172 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244222985 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247464827 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251927373 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244603668 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.249695207 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263863827 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244155408 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24506633 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244153446 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.24325591 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244351359 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248211557 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.252516478 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256559556 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270301639 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246697296 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248530362 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246181912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.248421834 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248254188 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.245040743 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.244944685 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244363272 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244743745 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24565733 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.247109327 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246098238 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244076508 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.245619511 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.245444382 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24455992 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246560074 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.246616734 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246977911 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.242946173 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246133834 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246351903 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.243984603 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.243526245 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.244885664 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246191862 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.246671272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.24695537 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251701726 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243933095 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247089868 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246511188 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24587597 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.244770992 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.246133691 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248240123 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.246115058 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252893147 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266726242 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248276242 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254452718 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.265097967 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.246742094 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249219443 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.247982795 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244190304 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251334066 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256254719 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.248352749 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.248132641 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.248245555 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248186745 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249030208 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255302603 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266753243 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248293224 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249829768 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.249566872 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245707667 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24990973 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249193747 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.249713143 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251124688 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249777275 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.249418426 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250046676 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249210139 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250166192 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.248740179 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252551652 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258884233 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254116584 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248942222 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250802195 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249540695 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.252638339 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.250072172 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24871464 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24934722 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262009789 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.274523156 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255550145 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270210694 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250925957 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253636865 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.270968678 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254290617 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249899564 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251686327 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.249951971 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250821107 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.248201759 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251760509 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.250693225 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253665989 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253878733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255016514 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.251347513 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25075573 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.250574478 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.250655886 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.250255174 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249750787 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.252727897 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253578313 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252454611 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.250438926 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.251517469 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258086643 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271166646 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25244641 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.250772754 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251878305 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251355633 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.25324755 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.251595962 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255618714 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261138814 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.256489296 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261198873 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.254582515 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26135919 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.251884625 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255354144 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.260259095 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250904783 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.251562476 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.252786338 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.252941289 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260270373 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.272744986 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255598634 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.257477953 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254795338 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251779776 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.252996181 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253793623 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254135356 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.253398961 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260814679 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.27611863 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257876977 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256057162 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.251505909 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254815351 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.254955867 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252591177 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257065477 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.253524856 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255104577 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.253762588 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254366406 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.256598795 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.253896917 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.254454374 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252734132 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254352694 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261876132 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277170595 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259527672 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255655118 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261245953 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275292954 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263386473 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.275807882 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25506104 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.255844311 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.255572684 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.257612055 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.255333717 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256687716 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256900387 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.257075421 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.260816437 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.257065552 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257011554 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.256963934 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256316151 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.255821528 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267610964 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281554176 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.258856857 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264599126 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.254544373 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.258184426 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261061588 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257989811 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.255312288 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.262433681 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269272065 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264936298 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256672952 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256997599 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259627705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26091901 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.257888068 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257623787 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.256756251 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.259765034 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.25742147 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260366725 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261717565 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.258430801 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.261212276 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259845219 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.26083129 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.268647779 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.280106406 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259018299 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25856435 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259987565 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259913393 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259215448 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.260701469 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260776917 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259206826 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259828088 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265632991 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26667768 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261316535 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.258209207 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259658808 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.258264665 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.260540871 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26097977 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.261214648 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26122619 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260004388 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.260570007 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.261072304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260717332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260527376 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260968554 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260856989 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263585723 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267550054 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260884843 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257080779 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.25984489 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259874182 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.260171069 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.261096057 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.267644803 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287433012 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275878657 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.26949834 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.264462126 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.260501573 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265245785 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270504235 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.260394709 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261937692 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.26403025 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26266164 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.262564505 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.265839409 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261504115 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.268464099 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.282958679 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.262115512 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270051125 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.282816174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260999044 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.263113031 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267163317 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265574436 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264295046 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.262390554 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.261546596 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269369059 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284308976 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265167041 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265145778 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.262411382 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264930196 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266568112 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26672917 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263349863 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.260062276 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.263232618 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263267721 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263010504 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264272413 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.262865886 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26587675 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.268862758 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.271426307 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26265321 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266684981 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.26495033 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.265529547 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26398197 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264461218 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.262640722 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261302043 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.263769979 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264023518 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264918066 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26617459 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.264266914 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266273229 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.26693718 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265698009 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270414275 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274817516 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.272222807 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.262755045 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265026952 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267066115 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267948496 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265081055 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.266359853 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265642197 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.266248791 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.266599522 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266809582 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.266370817 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.269588765 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281375467 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.286088251 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26566478 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266217077 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271541554 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.266698525 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.262941204 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.267265435 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.269779175 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269361838 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.273505675 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.266925967 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271720756 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286453861 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269134806 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.271729533 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.269758861 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275303005 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26920582 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267670899 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.266806869 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271816737 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284492476 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26749386 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277712345 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298100447 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.286955051 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.268358671 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.26968656 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265565692 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.266999508 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.269425233 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.268209523 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.269177378 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267592552 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.269791569 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.268827655 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275459217 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.269528981 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270420487 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26968119 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268911889 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27114998 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.266923709 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.26923311 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268404844 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26801985 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.271017544 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.269378815 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269825753 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285099659 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298201958 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269755136 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267633041 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.267502622 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.271794522 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.272753421 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283690565 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.278620276 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.26935324 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269769875 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.271605612 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269912916 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270778656 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27113734 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27211343 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272745789 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268134153 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283428334 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299010321 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276195147 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27025711 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270440067 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.270945896 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271029683 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269807131 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270104742 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272650264 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.274202332 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274192574 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.270058464 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27294999 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.275195892 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.27865324 seconds)
  done (took 749.022412689 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268249684 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268897254 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27030829 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268391306 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268794885 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268739913 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269333502 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26989942 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269333227 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270206891 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268646324 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269010656 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268702424 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269331027 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269191944 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269981621 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270426351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269937176 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271506242 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269558115 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270200089 seconds)
  done (took 27.850457942 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27286802 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270138272 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271451444 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272879755 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270172884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272900153 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.26994811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271651303 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274851733 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272057494 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.272779022 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273747472 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.270717316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.270688945 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270425418 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273625034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275438704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271792871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27428181 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271351283 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274196559 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270780802 seconds)
  done (took 29.179359397 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.274531367 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.275126145 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274598385 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.271209914 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.275096328 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.272866655 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276189639 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.274172798 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274821268 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.275485777 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.273678119 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.27634334 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283971388 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.280683851 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.276137838 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.274695517 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.418551127 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.275265443 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276351088 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274977541 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.272773526 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280363526 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.295548666 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.272794383 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.273567251 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275377837 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275345206 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.275552966 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276228691 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.27764127 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.279635003 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.276314995 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.275892738 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.276691542 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.274248163 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.277343241 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281988314 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276055281 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.272775072 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.276336689 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.286726511 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.298616244 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.278330432 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28177761 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299327841 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.278152557 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280413727 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.284385463 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.273813716 seconds)
  done (took 63.953881561 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.277163621 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277799184 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.276326926 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276724582 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.278275526 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27880035 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.278190645 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280129546 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.276242452 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.27462832 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.278147153 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.278016723 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27456832 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.277340979 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27790592 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276318127 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275775138 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274818291 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.275199234 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275748108 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.277865993 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.281803776 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.279354586 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.277340111 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278582874 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276576219 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277491908 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.279017714 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.277642415 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.276134839 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.279744048 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278339984 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283040112 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.275412606 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27601718 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.280165265 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.280826791 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.277094159 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280039313 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.276790716 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279691903 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279394573 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281953013 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281045024 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279511941 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.278047374 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279470895 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.27948998 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27735434 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282352232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28205407 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.279103499 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282053475 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.278962504 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283662865 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.283083298 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282139814 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.279699823 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.283416895 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.279923793 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280349326 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281567739 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.28246647 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.281058776 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.282100811 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.278491525 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.277936665 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283046455 seconds)
  done (took 88.165074398 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284740588 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284407671 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282555099 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281584613 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282217049 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282859085 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281244489 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.281372388 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282767545 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283905858 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282347581 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283028661 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.284368969 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28247877 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28202322 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283700442 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284039009 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281879137 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283026589 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282147815 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.282893247 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285436005 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28299766 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283437958 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284549555 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283596452 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284196384 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283891789 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285314681 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283104775 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283565951 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.284534319 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283764362 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282747843 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28618502 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.284446884 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28416158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283571959 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283878071 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.282743132 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28325287 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28333977 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28392197 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.284224884 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283424474 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283623381 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284042133 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28501226 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284830668 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285833676 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.286718569 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284677299 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286439203 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285523487 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286301637 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.285416484 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285956963 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286235144 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28494746 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283840229 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287209216 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.285143108 seconds)
  done (took 80.809594952 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290736792 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286049623 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28285827 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.285127256 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28790809 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285083309 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284646049 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.286721833 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285876632 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.286559288 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287236719 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283658181 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284838977 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29029192 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28512602 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285760666 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284067092 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284187886 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287328789 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286190613 seconds)
  done (took 26.924528689 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289860181 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287874739 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.284836443 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284013062 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288234857 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283463151 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.287644208 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288134432 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287838126 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290144409 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289500251 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288924138 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287231182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284907803 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288426851 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289163236 seconds)
  done (took 21.806380694 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.290121785 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.286710011 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289404727 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288871943 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287987993 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.285244955 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287869799 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285948564 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288505864 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290716519 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.288858767 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28998822 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.289108362 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286834471 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.285946335 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.28736347 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285943674 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.28784681 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288482882 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288840851 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285857383 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.286712613 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29218027 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.290941918 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289364679 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287214146 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.287269862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.289533991 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.28905011 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.290182644 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.287934147 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.29034463 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290663292 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289770226 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.289590128 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289945014 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292418749 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292611238 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.2928901 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.290124883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293467559 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289706799 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294183128 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.290490955 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287998295 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291931571 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289663028 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290009555 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.288398538 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289678425 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.291702911 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29068988 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.290559059 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.291817864 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292298334 seconds)
  done (took 72.124474946 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296567652 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292414159 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290627073 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292883086 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295610536 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292970547 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294473067 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295623913 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290198334 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292694648 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291617004 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294188307 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290519106 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293967405 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29296388 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292994601 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290840824 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290623079 seconds)
  done (took 24.483770454 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295568123 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291024537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295809898 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.290340244 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29113213 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293754222 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297634391 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296786928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294962598 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291476383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293323469 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.294532825 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293592165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296912168 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290710709 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292402676 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29524625 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298114088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291252179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294070452 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295044983 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294237369 seconds)
  done (took 29.679628076 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.29671176 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.294214616 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.293713666 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.313828746 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.319922744 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.321331525 seconds)
  done (took 9.053023748 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309059792 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295738871 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293707882 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296682272 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296885908 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29476421 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292348926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296529037 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296726296 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295438653 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293140814 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295492244 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294614669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295396496 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295944638 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299308999 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29291013 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293707384 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295963559 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297021841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29438913 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295306389 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293811631 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295778042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295320019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294862224 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295979764 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295755579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292514868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297379886 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297460475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294761122 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296080766 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296145158 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296254775 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295948312 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295391971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296397742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296870155 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294137607 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296811795 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297900336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301287497 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294097614 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299730055 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29586762 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294153097 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294331582 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294951225 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300185303 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297995727 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295275718 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296015935 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295489273 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298568763 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299260372 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29633492 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297645285 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299158748 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296682741 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295937345 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296638496 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294868129 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297572585 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299673649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296208782 seconds)
  done (took 86.797999101 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302718309 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29814813 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298337895 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300080018 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296297294 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295461504 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297632274 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296816088 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295905201 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297440861 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30002076 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298847486 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298909046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300362254 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29569749 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29755129 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296537652 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297112419 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297812205 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304680273 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299936724 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298055699 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297875698 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300370745 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301529517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3036306 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29940233 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297647373 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297837771 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298725671 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298118448 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299460187 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300026984 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296424399 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299161225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299655386 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298977097 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298131338 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30027939 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301282597 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299234572 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300952729 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300492591 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299850004 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300571524 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298414573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298949214 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299567215 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303223667 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300620211 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301527835 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300443969 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301738468 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297943019 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300650806 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301371623 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301651021 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30113761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299689073 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304271535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29966441 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301180933 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305035244 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301329933 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301013794 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301338219 seconds)
  done (took 86.994555846 seconds)
done (took 1747.951968474 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.421170912 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.422336115 seconds)
  done (took 14.065991191 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462577923 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415498069 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30327443 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.330745817 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303108273 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.300153329 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.311391068 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304413121 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301550462 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30229963 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303430937 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489834747 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.297455933 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302552869 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.303144195 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395589464 seconds)
  done (took 42.651499484 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.336632241 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.309090053 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.431501598 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32932 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.330203986 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.508031365 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369279542 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311745268 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.504143248 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359106978 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.016183816 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.335629789 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309094108 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.524824761 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.32778523 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.507032704 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574872109 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.020946015 seconds)
  done (took 30.625927873 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.815450872 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.321874899 seconds)
  done (took 9.359752557 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.330578462 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.370714903 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.327870675 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.327578163 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.337619747 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.359076734 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.330591327 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.408610508 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.32044212 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.338182372 seconds)
  done (took 64.683998048 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331579584 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309310374 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310016309 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309164945 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301466353 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.300788599 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.304204086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.305443334 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.426379505 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455395208 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.33483853 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.31803017 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330176931 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31734828 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.308481457 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347211609 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.450224816 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.33333951 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.311864375 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.313992699 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.31157787 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426953895 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355102633 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.313521071 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.452359928 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.424843381 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.309633295 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315753565 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427565785 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.330950625 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310884312 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.30909136 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312545054 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.899315131 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.788558355 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.328532592 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355253562 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321395849 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310997089 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.455711241 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.33242342 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320447764 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.306719674 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.770468472 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.473081021 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.43882469 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.667032317 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313330879 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.311297213 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378648068 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.317543539 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.31333992 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.344967102 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.097849059 seconds)
  done (took 111.39282326 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.333112748 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.794854255 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479373036 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326671888 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.198533439 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.148860958 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.323481618 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.62610999 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.391164149 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308693543 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.598042983 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848942062 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.330075394 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.32928988 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.717686042 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.354992911 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302879066 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.25049502 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.327147484 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.31253561 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733529511 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32575025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304714983 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.581966901 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.348932908 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807008266 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.044006128 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.894176714 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326003739 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.305591176 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807606788 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330480878 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.392478977 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.310282546 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.593955633 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.697616014 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.689252308 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.323739527 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.348045777 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308545059 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.329198259 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803085131 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704139202 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328234826 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327484499 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80492039 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328461041 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.311296647 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.314505998 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519654527 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.235798378 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.310077131 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.024786552 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309015591 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.602168914 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.393388289 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36987715 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.832619087 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326929662 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.505610982 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343939707 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310491173 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308413398 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312576803 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308845126 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687372607 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.684684482 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312203865 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.687339821 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.822671195 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.343683213 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866276599 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.234506746 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322156936 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.364740095 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310471277 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.077952358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852496887 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.373620128 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30679172 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.67841015 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330689104 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60118813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.328497693 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311559711 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744986086 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.328262308 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.353771219 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.309402935 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.308567259 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.083459642 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312363114 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.614701591 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.374685454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310591509 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.310479623 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.315254403 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313738614 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310784806 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.313091522 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868260957 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.33522635 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.654892989 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331221759 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324698191 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310139492 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.310289425 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312929381 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541260465 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.840037639 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.318778167 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.314383056 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.312574769 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.321016326 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.539983883 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.314256235 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.651407849 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.330468075 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318958966 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311349991 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.178701986 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.36955061 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312048762 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.312026153 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.173835549 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.542119464 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.339089663 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.313789049 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312545427 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331360726 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.956694456 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313601728 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.387136919 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317467135 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051526672 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.351293452 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.354857517 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.900823542 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.319934099 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.327879284 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314517277 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311054117 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643856792 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.6152948 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.589600798 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313357032 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.33263397 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040016827 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.366257234 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451239593 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335958201 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311329625 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517996237 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.539644431 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.315743279 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.878064622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.314094093 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538719777 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.318342447 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.679543146 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840277126 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334689083 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315908181 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.056082997 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047210656 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.129988639 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.319928094 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.619002777 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.318485785 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.775007261 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.315602696 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318362983 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.910719153 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320569968 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.328936872 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.316399851 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.314821849 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.382202373 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49157043 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.011047516 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318677436 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810079481 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.387097452 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316770085 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320513695 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319848055 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.666897877 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.323888776 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31850585 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.357276232 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.319622449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317844831 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822263951 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.270705536 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.320938065 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474743071 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9846115 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.336316575 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325700337 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.023278045 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.522984152 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.900037857 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362469395 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.659814448 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.337529693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357691902 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.141419086 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.410983372 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820367584 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.338016565 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.316109355 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957366252 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.337821707 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.468305875 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.318290246 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31696137 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885479534 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.337325465 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.319250759 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.065553078 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32500032 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578242474 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.321529268 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.334642602 seconds)
  done (took 1112.373418131 seconds)
done (took 1386.372598489 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.321973935 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323790449 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.304871148 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.323585234 seconds)
  done (took 26.515219666 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.332769197 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324150135 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.326627495 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322316984 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.326943998 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.324208085 seconds)
  done (took 9.200476967 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.675797229 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324714812 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325537875 seconds)
  done (took 19.569556368 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.574154454 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.722914813 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.737218558 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.770500819 seconds)
  done (took 11.049122085 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.328716083 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327575981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.324279269 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.326739347 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.328581804 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.328636901 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.327090659 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.328860825 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.331574432 seconds)
  done (took 13.196165669 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.644132465 seconds)
done (took 86.415589821 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.323863371 seconds)
    (2/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.664513 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.820966786 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.157184094 seconds)
    (5/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.696629757 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.663000997 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.438242324 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.269043848 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.347332688 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.323015334 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.589042028 seconds)
    (12/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.381259583 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.989344761 seconds)
    (14/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369223666 seconds)
    (15/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.406602742 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.360232324 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.346875813 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.675224753 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.32866422 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.381758832 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.408535663 seconds)
    (22/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.345988961 seconds)
    (23/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.728019537 seconds)
    (24/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.744968904 seconds)
    (25/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.767209573 seconds)
    (26/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.404298269 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.152024561 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.304488576 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.458713317 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.16538668 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.957126592 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.132366827 seconds)
    (33/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.420664717 seconds)
    (34/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.612936653 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.429132321 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.365058864 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.956329755 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.403954891 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.373759883 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.338802595 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.331793834 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.425004131 seconds)
    (43/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.026495119 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.060556749 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.011996581 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.27227258 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.331596179 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.322147728 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.44427887 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.439462514 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.4074164 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.01162023 seconds)
    (53/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.331749781 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.435096311 seconds)
    (55/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.321314205 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.349445314 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.589689367 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.137727288 seconds)
    (59/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.703168763 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.209577699 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.406907528 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.432868157 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.313410165 seconds)
    (64/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.408862801 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.334287942 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.336713116 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.325422586 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.752503445 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.065673904 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.068978752 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.394373766 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.304902731 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.126912374 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.397363749 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.494410563 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.348011268 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.363535682 seconds)
    (78/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.881943271 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.357536469 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.227777365 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335326483 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.097035497 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.782782046 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 5.701503531 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.898989282 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.519699301 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.780859658 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.60447323 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.142519987 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.672688834 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.777740609 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.927916266 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.358363827 seconds)
    (94/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.354972431 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.738173116 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.165354351 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.941600861 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.347032847 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.329510155 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.520682605 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.043205919 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.369376092 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.596662837 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.350294289 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.339841591 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.941623204 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.401631233 seconds)
    (108/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.082561029 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.884456293 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358512607 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.764881801 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.321497683 seconds)
    (113/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.777472457 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.751360538 seconds)
    (115/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.432520577 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.323611355 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.584637905 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.542531411 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.463612082 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.490481487 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.519658709 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.328247315 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.32646547 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.631682083 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.351588138 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.087638946 seconds)
    (127/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.520343435 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.210536263 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.809499089 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.448112858 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.169889439 seconds)
    (132/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.309253266 seconds)
    (133/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.681579823 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.320743759 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.875968813 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.861258908 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.379297545 seconds)
    (138/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.337296799 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.589366323 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.32277118 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.603201271 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.19111207 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.609435786 seconds)
    (144/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.328801082 seconds)
    (145/309) benchmarking ("sort", BigInt, false)...
    done (took 6.349512814 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.089442982 seconds)
    (147/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.328222225 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.394606642 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.253819503 seconds)
    (150/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.624626988 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.099963152 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.94934572 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.341826552 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.330788083 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.43091859 seconds)
    (156/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.159428012 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.807481149 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.197523023 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35576343 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288637559 seconds)
    (161/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.329092987 seconds)
    (162/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.661688412 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.419679383 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.361541971 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.470999288 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.37164338 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.334815645 seconds)
    (168/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.473490205 seconds)
    (169/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.40513658 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.557493869 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.33248353 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.331097687 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.331470101 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.377681409 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.17006042 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.197472217 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.323834963 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.01975601 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.224432195 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.395319544 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.987029147 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.311226269 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.78451997 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.720359745 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.784378703 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.795576922 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.918622239 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.596422727 seconds)
    (189/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.264675867 seconds)
    (190/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.718639026 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.310817542 seconds)
    (192/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.382409071 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.389463427 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.781677418 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.3853855 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.393752136 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.340378284 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.420313305 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.020301291 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358008842 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.969303789 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.729311053 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.349899915 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.441603038 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.37545733 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.984771139 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.340601308 seconds)
    (208/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.517193609 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.461662231 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.470937403 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.878541151 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.290496808 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.313210445 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.344351799 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.391342654 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.353011086 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.361085112 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.316666586 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.456847348 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.891219401 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.22564475 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.442555547 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.335507117 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.976687965 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.554168449 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.836347109 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.333825005 seconds)
    (228/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.772849188 seconds)
    (229/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.002558397 seconds)
    (230/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.317535044 seconds)
    (231/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.083664195 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.353127112 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360007113 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.472254201 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.352324156 seconds)
    (236/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.461502731 seconds)
    (237/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455578268 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.382769199 seconds)
    (239/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.362974054 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.330216119 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.351653528 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.378901188 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362456212 seconds)
    (244/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.09019387 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.435760297 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.346705316 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.334396648 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.380628289 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.317184996 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.75692207 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.989731058 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.269015946 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.990667652 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.467896182 seconds)
    (255/309) benchmarking ("sort", Float32, false)...
    done (took 5.386862882 seconds)
    (256/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.905184421 seconds)
    (257/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.55738446 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.35849543 seconds)
    (259/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.346260692 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.568483305 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.418934154 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.197774192 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.993486299 seconds)
    (264/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.03358465 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.855459106 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.975027647 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.363212263 seconds)
    (268/309) benchmarking ("sort", Int8, false)...
    done (took 4.366098627 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.46689187 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.423600402 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.725396155 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.356264718 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.35547978 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.941763304 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.264207746 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.964725705 seconds)
    (277/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.877731662 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.530581671 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.392947739 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.358189838 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.108457341 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.421862643 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.46179666 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.422054762 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.363859021 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.340696087 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.518672322 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.844672051 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.337486099 seconds)
    (290/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.491473376 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.131815491 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.855626622 seconds)
    (293/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.884772986 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.382740871 seconds)
    (295/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.40276538 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.261870146 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.904225656 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.280776629 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.774307878 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.263590999 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.38856809 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.920372743 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.649231205 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.444712753 seconds)
    (305/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.654018255 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.711222068 seconds)
    (307/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.703701209 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.339926629 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.918694824 seconds)
  done (took 940.452311905 seconds)
done (took 941.692317026 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.372622285 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370749549 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.35015664 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373493774 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.463879373 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.376770448 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361688296 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355390752 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.40128459 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.402622174 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.34978628 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.374220973 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.354076474 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.349489928 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.350520794 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364987231 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.560697173 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357409348 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.369133524 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.36068119 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.368804172 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350531276 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.400951779 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.373973274 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.356244996 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353537302 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.353958619 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.371566062 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463648255 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.356262363 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.356449097 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.36447957 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.524992055 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.357642517 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345343043 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.371156996 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364823427 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.361793263 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357257009 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.383751096 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.950579728 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.372997592 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.353889506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.352112508 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353807027 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.358976459 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35390884 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.360354551 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370137328 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369834274 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.051041943 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.395709401 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35728614 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.354911875 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365497331 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354883423 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.357063711 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373125444 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.373352622 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373128932 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.549421499 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.364695689 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.356458124 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.370602644 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.360741319 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.093718556 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.376173768 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.358293456 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.950614253 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.381302983 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.977150808 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.385824348 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.358275635 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.368515754 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.387694669 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.563030949 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.359211765 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.356210165 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.362946435 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355443864 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.367021819 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371771147 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.362728906 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.357761589 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370342309 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.380829173 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.367755178 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.35828833 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367056764 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.376682342 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.361723824 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.366380997 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.358809682 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.351991254 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.365185406 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.358829325 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357998696 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.358360068 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.362193473 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.366669715 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.953653271 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396970177 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.354247275 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.352924296 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.355497599 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.370955964 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.952519183 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.379407062 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.382092892 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.404560672 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.360799974 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.558379506 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.368749724 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375806925 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.365535907 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.360643836 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.356451543 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.559503604 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.953796466 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.395867285 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.361545236 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357538875 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37587168 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.360998874 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.355516009 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.559675868 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364325503 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373704393 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.481752915 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.369379645 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.390864832 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.355674269 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.362565703 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.383706918 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379887474 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395299659 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.364805746 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377731697 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.378072086 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354687867 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371868457 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37062105 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360870243 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366493618 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.355135691 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.385703138 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376138512 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374731696 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380093877 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.480836728 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358644936 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.498881024 seconds)
done (took 231.8424177 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.42895724 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.35893473 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.448226274 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.363713528 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.463061902 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.471975891 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.35460019 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.357600465 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.353918209 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.737537474 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355072962 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.354208606 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.358154151 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.354510401 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.440572044 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355201747 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.353578056 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.699793552 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.359002898 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.42690123 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.351539993 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.356681366 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.357726373 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.740734774 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.353033971 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.352559005 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.427248126 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.36005844 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.704994045 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.359111287 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.355079269 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.704255806 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.450072214 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375476241 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369552999 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.364391181 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.461590619 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.381796861 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.440808591 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.44087701 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.44387618 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397755679 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.354077236 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.360554173 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.36488586 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.359510911 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356088704 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386184973 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.359347223 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.357407254 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.700305338 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.368285853 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.357391438 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.357374049 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356734534 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.386552883 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35697686 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.361183569 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.450706829 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358253195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.421261574 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.739355068 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.740534637 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360395116 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.357096448 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.359135904 seconds)
  done (took 150.14553679 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.42676355 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.431241748 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.482179904 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.384763628 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.410670276 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.48557668 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381947766 seconds)
  done (took 11.281558551 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.366316454 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360642417 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411382432 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409507544 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.361792034 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.505925661 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362880414 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374325862 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.359779252 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.412341775 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.363742728 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364165124 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367797476 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357400942 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41039617 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.374126951 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47720631 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362125848 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361743274 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512122342 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360690888 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.370000121 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.412229335 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.372021238 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365737124 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.369772145 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.933672327 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36225102 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358951332 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361688822 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360181897 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.400649636 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364873645 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.362384607 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360346262 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478318939 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.362247981 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362280946 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.364586704 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.364481488 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.36326707 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364246476 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.362702586 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36052582 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.36201083 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386853991 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.365834613 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.363585082 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.364684057 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.364031144 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41371796 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364747283 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360704772 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.360547771 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422678718 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37105289 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365184287 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.359896754 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.364486427 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362494385 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.517109423 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413479934 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.366295734 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.412848434 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365980074 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.366450958 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366232876 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365506863 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418405612 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365719422 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.414440733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362523361 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.52059151 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.387182186 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367140503 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.36767239 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.368616879 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364880442 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.363257614 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.371141764 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.363043589 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.365784627 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37072181 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36418399 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364629403 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468937445 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473901205 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.363534796 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379627128 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370975797 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.364112928 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419109125 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.365965741 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.36277562 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417182601 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480298597 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.421189599 seconds)
  done (took 156.167967664 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.369419388 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37383368 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367436256 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.382322501 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367188927 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.368192305 seconds)
  done (took 9.509545438 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36942974 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.368946047 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.369250402 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.367750242 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.368036472 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.368094204 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.367945101 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368076379 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37141539 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.368140533 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368991246 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.36920079 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.368579535 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368072225 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.369437754 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.366852014 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.368026458 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365501239 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.368348005 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368626316 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.47466587 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.368393131 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368813235 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36799332 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.373465038 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369599897 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378718395 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.369175846 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.370436918 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372548249 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.392736516 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.370448678 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36950133 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377582077 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.3767937 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.371423832 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374226751 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36976284 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365677953 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.372414328 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.373752367 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370874219 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.370921521 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.372126463 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.371983472 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.375700376 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.377610439 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37838716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.371743907 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371315615 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.37405019 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.371784415 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.370348267 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374070301 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.376607383 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398248485 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.37967727 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.373797572 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.37487381 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.37582261 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.374914454 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.371505635 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.374605489 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.375320031 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.371864107 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.378312582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.373096327 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378050573 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371696768 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.37146406 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.375601381 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.370201942 seconds)
  done (took 101.198803607 seconds)
done (took 429.570159239 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.477654918 seconds)
  done (took 7.765768449 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.547796049 seconds)
  done (took 7.833175931 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.151463595 seconds)
  done (took 24.444362832 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.37979197 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.495807188 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.38636571 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.375921291 seconds)
  done (took 26.924720292 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.532356926 seconds)
  done (took 7.820423625 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.366408423 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.364413436 seconds)
  done (took 14.019525966 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.526964827 seconds)
  done (took 7.810046765 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.859353551 seconds)
  done (took 8.149749153 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.368264802 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.387297373 seconds)
  done (took 14.303970135 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.346202927 seconds)
  done (took 7.632270989 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.644185695 seconds)
  done (took 8.930304846 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.377426843 seconds)
  done (took 7.664966647 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.428413578 seconds)
  done (took 7.71372129 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.266672014 seconds)
  done (took 10.550922075 seconds)
done (took 162.848344354 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.367455424 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.852537132 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.365753016 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.368263009 seconds)
  done (took 27.241550638 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.40937756 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.408019828 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411368523 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420534405 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409752101 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406967679 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.39866967 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.400034196 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.418844983 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.411078285 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.414968743 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.410751145 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.42243381 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411406304 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415037278 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411162101 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.420120469 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411390767 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401392613 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413826472 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.376601462 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.421247441 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.41290107 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.379299757 seconds)
  done (took 35.103874797 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.894474782 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.445870498 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532381862 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427504262 seconds)
  done (took 7.588077186 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.429300358 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.431916056 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.444020735 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.483040906 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.506608197 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437958375 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.402828786 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.39678058 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.383413422 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430321058 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504904023 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.446038576 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.515796054 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377605215 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564558516 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.377687752 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.378294314 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.428485028 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.481944612 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499764745 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.379431259 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.430550929 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.433223772 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.446556526 seconds)
  done (took 35.901304659 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.389599372 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.383112745 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.377753753 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.375657953 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.397364446 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.379904427 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.377890764 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378410785 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.377655952 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.38378643 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.37835451 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.388649085 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.377279984 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.377238418 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.385199874 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.378043199 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.385964254 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.376766346 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.378769436 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381070617 seconds)
  done (took 28.920350763 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.369090265 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.225155157 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.721490119 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629559327 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.371535844 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.370357368 seconds)
  done (took 27.976648039 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.461108749 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.626735679 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.378339867 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.790374658 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.888993653 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.398457132 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378207037 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.648233385 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.021295507 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.029053638 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.452291524 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.455535876 seconds)
  done (took 20.825089871 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.371699893 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.380789019 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.380216289 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396319256 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442321822 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.403670439 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.384587285 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.37242588 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.451175118 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.465380914 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.404935579 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444074509 seconds)
  done (took 38.189445537 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460631112 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424550423 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.480279096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245099619 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099162232 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587519262 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290073524 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.822518162 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.378797051 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649187328 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374116142 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485214266 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632154652 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375900852 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374986075 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.44514669 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623447462 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926324258 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377008889 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.788806442 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407763005 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38383162 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.995338716 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.415529843 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587605004 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359765094 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635601011 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.152270415 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701866681 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38637909 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388257892 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377482864 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650429638 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087901504 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49605181 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386352256 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27153207 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92476371 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.379669175 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.813607999 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387136433 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378965779 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386163268 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376256858 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311811287 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387529163 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846295346 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.383931525 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.087881399 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376328963 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387968111 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47284977 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380493718 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.950927144 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50229664 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.384339932 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.374308773 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383827257 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945215375 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399777627 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39233361 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.319962229 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.882428596 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.802936707 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083227807 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.500874248 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380909447 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382485247 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313073581 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.876205925 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401742131 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517402861 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405229166 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042740017 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163989315 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.416035065 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308647173 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992099901 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389411657 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.31297058 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608563318 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155549919 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320438519 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.33096321 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315285359 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18247798 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38973072 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.864853674 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389848603 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.829052373 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391550098 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399523717 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405048419 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.6054208 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.258732606 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380257358 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.381139075 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496030433 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402273468 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.837861548 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315923293 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.383642292 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639000396 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.592748426 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385766774 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.470436495 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623215573 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38162501 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401618069 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394287661 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.398619654 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.02837636 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415467202 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412437856 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40659115 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155830348 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21143039 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386006234 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.488431698 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380901262 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674685598 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.226935571 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266583577 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450123729 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386743648 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381227168 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921147349 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242816337 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.263973785 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.378993121 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389372636 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.399386951 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.382988472 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349821798 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.38023861 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411562115 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.159803681 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607150881 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38602006 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660487641 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318254385 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521450852 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399223209 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.607488312 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.712024126 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.403226055 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645542992 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39288639 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390852948 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402799903 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402134477 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480395099 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405103055 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.383450064 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649424081 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387155303 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389427761 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947363599 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.170273344 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391406651 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389801876 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281669048 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040516548 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377307518 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387467327 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278818651 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.398256204 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452673627 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391751978 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397012231 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.475176797 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.424645539 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390532238 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.389625489 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610053537 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397031212 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.863250398 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471699227 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.603410641 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043483809 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41988621 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.321416159 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.096919413 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.07852963 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386062094 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.587754135 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386376739 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395731194 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398435629 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.069633558 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038184081 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407249117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.865284384 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.400593557 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397000825 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391620969 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387435035 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.458662606 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454297514 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409775057 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.405425779 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531340508 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401359665 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321542308 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904229386 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392083233 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387112291 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.165700816 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423200269 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.849954825 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894855602 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654084334 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.287570237 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401071786 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.069011993 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.431607519 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.38873736 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396282582 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396473184 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.414335225 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397586752 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.400243005 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.965266884 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.844721755 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952827291 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190978996 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020869745 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439440834 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.390812426 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.318605362 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84554306 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32361516 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.049425102 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603721583 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864813465 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347004023 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609314367 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.717772084 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277040802 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400366598 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619391146 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416229498 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.400531225 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403247813 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602203876 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424464733 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.402647005 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326067239 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.670653496 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646437059 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406938781 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468605285 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847923075 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405345203 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169086062 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.390086722 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.86619137 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603650009 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.022038794 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78647808 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404331222 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40446439 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891624245 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395987274 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922658834 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080104558 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42169883 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.620128352 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333363629 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.40353692 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403259321 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.388312891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.96047005 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.423320742 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.64883273 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403577475 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325888131 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406030912 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995099955 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.282930691 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398994859 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393959721 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243290051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40244405 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728633879 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.403262759 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.454168383 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415847381 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327165574 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327395655 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085432384 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402325834 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364365628 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962600402 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.847557412 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504265689 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427040568 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26669126 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651305921 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407265409 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051442022 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642176772 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.370192424 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416369995 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.496837396 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403506301 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.375165604 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.276606217 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632939616 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283400105 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61920253 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.540489042 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.296189183 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394256277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607582943 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277666557 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399577705 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667586307 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.126161951 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.399532045 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20348481 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444203058 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39925458 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413514617 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.902901761 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403636427 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46764782 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407868446 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.407200126 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406581902 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585700221 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401338468 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399532985 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.408438101 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489233282 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478439877 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.462395791 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.187923797 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061753687 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226465844 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07776018 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42880877 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398068026 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39562196 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332623446 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54513234 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925776479 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669646889 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516819884 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.992584908 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419774566 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397350437 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408780979 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618215254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672701437 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.272936397 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407487314 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068167899 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.296459726 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409353726 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.610665774 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971942715 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037202553 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516547825 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407994691 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.863666736 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67289713 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491551803 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398721614 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992877127 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.409334022 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.90104198 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.427420603 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415170638 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54806869 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409104219 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109024549 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.433551663 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.558807609 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172401892 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.022371139 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666225544 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.015291613 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421177573 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063682176 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244824504 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676882812 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471674914 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412547812 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.519331274 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545097588 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.410427748 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305795918 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400698349 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247845742 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.112926169 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.413427007 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066284425 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686413725 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.398617414 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.411469911 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426652216 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.410924663 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630126004 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205523405 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628467318 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411353742 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414887413 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.398846549 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06474476 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436077987 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337948554 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409079711 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675375071 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661429614 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428232209 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.856912829 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.111934134 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028300527 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.37963651 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425866783 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403085166 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.206778308 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064645715 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.491934243 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986736928 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064834378 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401777147 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707296927 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.409504664 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408500928 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685728369 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408047807 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414566937 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423303891 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.064835278 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308164756 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.415443333 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.957001777 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.346710154 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635714685 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132154607 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342070315 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407935185 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.612108602 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406360757 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524867082 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417244983 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.412790139 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41376744 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.146138441 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694584532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410541884 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.388483273 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.397394806 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408275475 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417918241 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664249785 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409150933 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.080426513 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758779271 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664275706 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418865263 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.393969521 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.409787386 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408817232 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135148635 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383986576 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.092344528 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054586971 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.427468855 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.425883623 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414148844 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624791979 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619133609 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422328321 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420414853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427002325 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432113404 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.314719197 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182636391 seconds)
  done (took 1631.793879695 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42234001 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.458105734 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.422684846 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.461117161 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.454649881 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.531192072 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.47461544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.518963646 seconds)
  done (took 53.067078259 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.417461452 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.569640573 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.443445556 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.422136249 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.418539997 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.426721248 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.954950304 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.445384283 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.41801602 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.416062943 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.411631326 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.423830976 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.160602738 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.419764731 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.418592415 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.402457821 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.419871003 seconds)
  done (took 66.923276965 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.425959094 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.095119237 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.455001791 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.4099952 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.107568641 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.427899288 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.971567057 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.407977529 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.412971352 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.558764582 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.074218642 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.425124549 seconds)
  done (took 82.101802375 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417270684 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417412095 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.41662843 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419127895 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418010911 seconds)
  done (took 8.41496219 seconds)
done (took 2065.33455583 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.660680723 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.227578503 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.112319964 seconds)
  done (took 5.667649404 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.565327732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.610788325 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.760465295 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.750576443 seconds)
  done (took 8.013917996 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.703651626 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.788664535 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.611398267 seconds)
  done (took 6.433752937 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.076572814 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.432445743 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.565213877 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.418425904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.423801063 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.422542624 seconds)
  done (took 20.593273957 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42666624 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.423770675 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418859265 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.427878504 seconds)
  done (took 7.028597907 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.40202733 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.120507785 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.395017888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.420787212 seconds)
  done (took 18.66915177 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.170763585 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.187363034 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.160890198 seconds)
  done (took 7.85032437 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.423285074 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.258001067 seconds)
  done (took 10.011328988 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.735245584 seconds)
  done (took 3.06363288 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.559100077 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.748192713 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.601699819 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.531383433 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.638572538 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.05989744 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.416924082 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.906513498 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.504277168 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.965795802 seconds)
  done (took 31.262769484 seconds)
done (took 132.65311407 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.762074822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.43545956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.622693396 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.729204487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.652911465 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.625479154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.920035809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.70014942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.238521218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.226827173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.736022965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.648737536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.63662221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.443877205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.636360498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.437282187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.653719153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.78540113 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419205932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.427573997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.915032011 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.36264779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.559611126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.380975219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.651010908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.575355041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.947948511 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.430707172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417654694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.977880018 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.574679188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.418102719 seconds)
  done (took 200.28252914 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.423101569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416388881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.433524302 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.427601277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.418929902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.425279371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.418887583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.440480898 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418324455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.446171034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.429339337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.419798586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.420184529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.457513463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.422906361 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.438692002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.440776126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.424026638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419311987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.427259054 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420583901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.421892936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.420998624 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421009027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.426348052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417930506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.439513756 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.441583203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.426211322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.420389834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419880887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.439902711 seconds)
  done (took 207.017595796 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420080034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.419345579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.423441571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.419643331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.421231446 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.423359449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.423215849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420169766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.4420165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416875921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425026268 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.4211671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.441927684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.421408152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.42452906 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419107668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.437358558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.432390785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.426686398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.422043727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.424191992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.425383589 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433269754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433357982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.429428606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42196049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.437040628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421324242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.421411734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.423294665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.422191921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.44114648 seconds)
  done (took 206.971568965 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.628478137 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43309783 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432880456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.379547579 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.435769363 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431584666 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.431688176 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622084186 seconds)
  done (took 15.131213136 seconds)
done (took 630.729342638 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.891858675 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.584707116 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.648049615 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452548418 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.336288947 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.472230878 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.455770442 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.649579885 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.402011279 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.661267833 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.798405058 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.467984509 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.957237798 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.449884433 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.733729248 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.559850966 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.413011696 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.544748685 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.804879706 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.089268312 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.740556345 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.094647682 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.666144826 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.391980358 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.96086899 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.046074492 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.325815919 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.3988897 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.470407508 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.815993435 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.259057934 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.579931079 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.529759616 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.525368575 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.592120539 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.571799318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.570271309 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.531531371 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.669448785 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.806431089 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.082799503 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.207465785 seconds)
  done (took 98.548814509 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.422282633 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.416460195 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.418125615 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.419555877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.415665367 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.421221139 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.416766691 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.412874326 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.416227718 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.412493197 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.414681094 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.417311003 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.417144559 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.414649131 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.418927199 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.417203132 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.418169727 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.418838952 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.41557685 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.414865598 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.419728645 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.416376391 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.419738631 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.417989241 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.419567207 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.418552625 seconds)
  done (took 38.192912936 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.439101515 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.712272157 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.889785498 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441824145 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.436572934 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.439929099 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.529905096 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438373573 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.437424847 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.440648668 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.620838865 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436636894 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.480031967 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.919553814 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435790113 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.438203555 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435103961 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.440729163 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.719586307 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442059771 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.556664908 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.439836169 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.530583154 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.451257073 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.462576129 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440563737 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.442854254 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.974749668 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.458621902 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.623745639 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.379787323 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.536149429 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.929021789 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.915604671 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.374393369 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.447209531 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.440094732 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.619813535 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.439602438 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437664542 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.536534055 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.438211763 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.897552758 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.090772319 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.457428103 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.446450378 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.003690804 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.641967682 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.724355617 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446659828 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.922154139 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440434641 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.445886826 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.438386431 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.725489403 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.444653862 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.437705953 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.004004165 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.465132018 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.531899876 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438895897 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.438374835 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.729225621 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439507732 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.711872991 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.44140079 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.446262176 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.45973587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.898046472 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.440880357 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.120527607 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.45849099 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440538164 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.618907883 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.715717478 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.037559207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.463486189 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.728596496 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942401142 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.552033438 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.451217782 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.973015425 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.562314955 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.450570665 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.44489893 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.445372877 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.44088209 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484595254 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.530209964 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.045931399 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125059785 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.029122383 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.559848453 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.462095618 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441935224 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.010654185 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.463218045 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.443692385 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.912403731 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128089909 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.463562661 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.449919743 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.135740598 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.473360287 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.536457289 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.456023639 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.922869544 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.452111895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.491094434 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.441639992 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.450127666 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.469735125 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.538916131 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.453347772 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.444345849 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.094324368 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.657007971 seconds)
  done (took 190.217683269 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.441729889 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.4354434 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.442889708 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.435142313 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.442530737 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.451575753 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.43735265 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.439825038 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444780325 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.442024379 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.444798852 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.442375019 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.437806158 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.470742317 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.447317452 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.449878649 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.056779784 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.444728266 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.440024083 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.457099534 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.279451888 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.440766635 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.459864007 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.434436265 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.445383136 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.444841106 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.440477451 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.439296959 seconds)
  done (took 155.238410994 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.453256522 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.106482226 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.466134783 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.601781073 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.47106072 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.450053184 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.601220176 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.516283298 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.466691278 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.451335874 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.44846927 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.806447853 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.448304592 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.049834637 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.674568554 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.616232295 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.049360709 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.467110751 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.448044058 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.447184455 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.608997796 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.451237808 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.805305814 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.111224031 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.466298775 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.115507514 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.430842514 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.449852378 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.452390547 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.119481049 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.464021023 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.813678816 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.540197678 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.518654515 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.130065857 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.067071902 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.067847418 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.620398397 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.447531865 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.449790213 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.447188628 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.433039721 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.115935912 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.46806548 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.453596092 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.104968993 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.469358672 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.451164583 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.460606231 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.44857498 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.52220822 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.539580696 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.824121179 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.115978698 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.560247127 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.469416631 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.604136985 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.855914265 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.44880635 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053977638 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.430362249 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.11176417 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.47015338 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.436532743 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.451610656 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.457168976 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624346676 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.603599416 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.060601817 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.46911527 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.063580198 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.646020772 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.446310878 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.449920079 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453958615 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.11523436 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.093865604 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.646403135 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.606172811 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.678055146 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.435821424 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449279211 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.437181 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.54600843 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.456734459 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.118553443 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.079681379 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.468900019 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.45332294 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.454367528 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.454894954 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.663179731 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.130963876 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.564644154 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.047197976 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.825368785 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.804655556 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.452984027 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.528415684 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.473269236 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.812041464 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.45321913 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525145241 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.930727654 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.808167078 seconds)
  done (took 175.061799457 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.732085895 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.784734212 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.554006214 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.60927913 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.099749376 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.046432322 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.756030695 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.602746161 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.578230329 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.739143082 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.731572365 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.537183554 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.671395112 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.540033037 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.234861536 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.554412 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.576356466 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.606774535 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.58389021 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.547447135 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.140301644 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.759042983 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.65528605 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.528278907 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.558021535 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.337492593 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.056053688 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.053852237 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.641031744 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.877064511 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.03532375 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.660002811 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.497438358 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.197837453 seconds)
  done (took 70.440065482 seconds)
done (took 729.03470029 seconds)
SAVING RESULT...
DONE!
