cset: moving following pidspec: 29381
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.282830975 seconds)
loading group "string"... done (took 0.581523945 seconds)
loading group "linalg"... done (took 7.127296583 seconds)
loading group "parallel"... done (took 0.167462647 seconds)
loading group "find"... done (took 1.119387135 seconds)
loading group "tuple"... done (took 1.977690029 seconds)
loading group "dates"... done (took 1.266788803 seconds)
loading group "micro"... done (took 0.237444558 seconds)
loading group "io"... done (took 0.993225813 seconds)
loading group "scalar"... done (took 38.489115502 seconds)
loading group "sparse"... done (took 12.282697979 seconds)
loading group "broadcast"... done (took 0.965595765 seconds)
loading group "union"... done (took 13.012221969 seconds)
loading group "simd"... done (took 4.409049649 seconds)
loading group "random"... done (took 8.927023847 seconds)
loading group "problem"... done (took 1.953758569 seconds)
loading group "array"... done (took 21.049332321 seconds)
loading group "misc"... done (took 1.913038129 seconds)
loading group "sort"... done (took 3.192993984 seconds)
loading group "collection"... done (took 17.8619012 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529185499 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140810045 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11620363 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137965778 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183306559 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130783717 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143137834 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084175897 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.058743585 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169207748 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137295403 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.477024749 seconds)
done (took 5.057275702 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200210427 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086345211 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095217056 seconds)
  done (took 0.876048002 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065185772 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125164414 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079744896 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067436778 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066477841 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080158356 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066188859 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065004435 seconds)
  done (took 1.252260684 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07359668 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068130744 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08361187 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067661118 seconds)
  done (took 0.995239309 seconds)
done (took 4.101826078 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.894190492 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234109835 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186988414 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4520007 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14667539 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18668857 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669101255 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312791694 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208058403 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100327748 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103399206 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.375838864 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106355199 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667685391 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074434507 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105111025 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170839407 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.421860796 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08036764 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08187659 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102716528 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143533539 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.099890185 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075851099 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167332622 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069205814 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146079318 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094223264 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067940811 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.239513598 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189262443 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.711473596 seconds)
  done (took 10.422630137 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098929729 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114340032 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06835678 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13730133 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100092315 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084525838 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070562545 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082184234 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090236578 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156237296 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112406359 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104681793 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080765003 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068935086 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099969279 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210370945 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104955226 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083797956 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085932645 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075713803 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12060556 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080872174 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092350099 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076863223 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150837201 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193733856 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109767191 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110128363 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068220296 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080153607 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13000646 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.139805533 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06551036 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080257244 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137505215 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109304468 seconds)
  done (took 4.493271659 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.020588529 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159006398 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090491733 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15115042 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085214811 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107999708 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082041218 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097927602 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244655575 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.073301687 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.453479016 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127140409 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10019275 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066688905 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08308591 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066851885 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.506925687 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144503451 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119315541 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083802479 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088551161 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069125522 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356432896 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066957065 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066092676 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083450373 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058936101 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144205731 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067443784 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.217481289 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088078336 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086622658 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100669573 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191461531 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093041411 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121855864 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080244068 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066454702 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169009215 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072757878 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082414485 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08645387 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119243298 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117226653 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067587913 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081394141 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178976656 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.127593449 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064462645 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099940167 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.86944314 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.163364761 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076217706 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064511425 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285426108 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083465874 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083754898 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064028964 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080061493 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.235151473 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.168744271 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067934836 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065348036 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082332327 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067258403 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.730192819 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081956672 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.778076198 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070186291 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075655395 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084581306 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067106596 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087657632 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071401997 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099628996 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066391474 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063787332 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083999998 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065742572 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08044059 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068586056 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098144446 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064513927 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203239919 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065671755 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082662268 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064582065 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099497867 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096317638 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084120981 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065153544 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114305383 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068723625 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06726419 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118351305 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066687825 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10094753 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083171459 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113056363 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080961623 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.113172044 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066606107 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110250667 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076233833 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113423606 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093545414 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06765938 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152693047 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064138098 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081008156 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067138596 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064395686 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083890031 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067610796 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09721733 seconds)
  done (took 21.107647991 seconds)
done (took 37.746358812 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288752986 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091079843 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090170538 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073854543 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090020736 seconds)
  done (took 1.414238081 seconds)
done (took 2.1697481 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119615115 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11558746 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062866491 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111762248 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062738264 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116024517 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112889274 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080234811 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116178247 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063624622 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111339144 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063498197 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062661746 seconds)
  done (took 1.976936677 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082056396 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083723086 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0842681 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080729563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077558156 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080677513 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078961606 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10367461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079345472 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086365722 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063232021 seconds)
  done (took 1.648967644 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080635447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08308181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084564889 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08015662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077406521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081241441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079735462 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100736644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079971846 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087707902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063339468 seconds)
  done (took 1.650672383 seconds)
done (took 6.01910645 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078022301 seconds)
  done (took 0.824272341 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.696073623 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.503261745 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082618034 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132791333 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220200895 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151587861 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.434879687 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107807731 seconds)
  done (took 10.248725077 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102672139 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086384894 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069448677 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086630621 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072392147 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08771575 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06806901 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068425024 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084850953 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067989123 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085874293 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069699579 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084405269 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067885799 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068958007 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086296592 seconds)
  done (took 2.07270115 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09239778 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090925921 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089223669 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074422861 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088019279 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072074562 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090620648 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073296497 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086333476 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071661432 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091256087 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073869284 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0867433 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065602267 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09019468 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075838382 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08650345 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074724079 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089886835 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075168262 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090566602 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064854457 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086660877 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074470694 seconds)
  done (took 2.813050991 seconds)
done (took 16.712674524 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.12963547 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075405369 seconds)
  done (took 0.959658118 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080173796 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096681735 seconds)
  done (took 0.93926119 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081949684 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080014297 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08910224 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092842353 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080379492 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065227147 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.100787996 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066258761 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080529512 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065164274 seconds)
  done (took 1.564507033 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06783361 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091630106 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070264153 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096432987 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073249477 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07903016 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072356979 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082957219 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07732256 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078544636 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070640898 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097763387 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07044819 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099075355 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072532469 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082490224 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085898035 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067866707 seconds)
  done (took 2.200450433 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064949214 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066464122 seconds)
  done (took 0.896202419 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066818935 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063850248 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080459604 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066321136 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077550428 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062941409 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078784528 seconds)
  done (took 1.261652639 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398553298 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108035106 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241472741 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086746343 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102072094 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261662114 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082156375 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070203451 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087381482 seconds)
  done (took 2.240121352 seconds)
done (took 10.824216634 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07909922 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085755894 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109258061 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416045703 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105028359 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066548093 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.140867113 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.204823082 seconds)
done (took 1.972613386 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124305243 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.607207228 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398098996 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211401896 seconds)
  done (took 1.985216844 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370498133 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091309479 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073559142 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066614005 seconds)
  done (took 1.373563965 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06557404 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069057873 seconds)
  done (took 0.905602951 seconds)
done (took 5.159919703 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066264273 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066192266 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079162638 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066205294 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063380227 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079240822 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083640616 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082520808 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065933686 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066468382 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.081854555 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068818585 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080427039 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063069534 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066401904 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078658442 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063909892 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06629242 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081097661 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063329788 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063468033 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081226557 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064083671 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063593356 seconds)
  done (took 2.508980262 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085048282 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082402494 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071530873 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087740908 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071108324 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087496731 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071672085 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066637564 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086483375 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068779709 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085508981 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069732109 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083432138 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070339455 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083428735 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070059026 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086460011 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066855447 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071594036 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085435077 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071246199 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081864331 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070841386 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086764318 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06957893 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085605805 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068474948 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08214274 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071756013 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08560948 seconds)
  done (took 3.09970717 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069968832 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06328722 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079845102 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06992073 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063385831 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080197553 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063488766 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079451866 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064403993 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063965128 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081010118 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063449791 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063532989 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079998715 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06442194 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0825374 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079151884 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064396665 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079388204 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064520271 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066499639 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079485718 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064046395 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07966371 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063388445 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063496062 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079347263 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064094353 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064611808 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0795221 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066169949 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067260926 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079034008 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070715637 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083110512 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063172212 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067688445 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078906068 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064258315 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063418921 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078710527 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063655975 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063023312 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085466774 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064457694 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081131353 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063599286 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064819597 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081221391 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066498774 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079003217 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063657689 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065591731 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080636325 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067491054 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062602763 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080315257 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063318568 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080067927 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063651837 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063053787 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079142901 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065552185 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063595017 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094529495 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070939515 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079408199 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065816195 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06512689 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081035599 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065826357 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077232041 seconds)
  done (took 5.893296434 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116128317 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090590407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081393809 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065434556 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078505807 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0638602 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067501581 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079286475 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06625281 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085286906 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064129047 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065722677 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080779352 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076926428 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080774873 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065997872 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085225571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061485777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064093164 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083004446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064461435 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083577649 seconds)
  done (took 2.452831749 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.18588503 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086871552 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108608673 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089201587 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084243344 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07358665 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085359577 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069763913 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070135243 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085070475 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06862737 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085680659 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068559795 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083408744 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067947837 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083652963 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07000375 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083875453 seconds)
  done (took 2.329412424 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077918206 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06554213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104584173 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066325634 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083043473 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068674388 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087107339 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074695998 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084430594 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066146715 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090040818 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068563728 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08493496 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065774331 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068293147 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081886441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068208199 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082295211 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074499194 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087220946 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070883349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090358703 seconds)
  done (took 2.491861643 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079783833 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068005528 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099609466 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084418238 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062173558 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064558699 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088781218 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066328738 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088117586 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068424086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065454342 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080087665 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070770741 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081941662 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071477049 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081980317 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067911757 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066135005 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083817776 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061911476 seconds)
  done (took 2.28459717 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086358633 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083092962 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068033428 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091985063 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068191047 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084002476 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075592378 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08305146 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06802133 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107179727 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067528229 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083239517 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075427634 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088034619 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067372387 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091245045 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076233684 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091268779 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06761586 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083803478 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10775236 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177117108 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09185586 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068156144 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083477632 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066858102 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06791106 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088890556 seconds)
  done (took 3.147091899 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066698678 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066068276 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080137233 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063725869 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064525389 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080765307 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063809248 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063953781 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082948432 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064077702 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066359504 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081857661 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066509048 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082659439 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066014637 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067044538 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082184933 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063955492 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064345586 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07974703 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066996478 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066253713 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081590854 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06378329 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079453444 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065624842 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063986011 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079737253 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065669563 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064200978 seconds)
  done (took 2.902152461 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076893849 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089508878 seconds)
  done (took 0.95682179 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064529788 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080635911 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080218168 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070368377 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087124923 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067103967 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091171061 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07060342 seconds)
  done (took 1.400092126 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081334585 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077593417 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083599055 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077602915 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092756155 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083228991 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154141825 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08425612 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07349015 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081746582 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079619327 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06623468 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08929206 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066934003 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088576032 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072360951 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064579699 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088352861 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069034617 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081397003 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068399451 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091333301 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068772469 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062869332 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08442411 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075290325 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093961664 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067513067 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085804962 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073119878 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071864743 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077016955 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06641452 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083450276 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064735269 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092060365 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081469039 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085334133 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074846229 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067425904 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092201108 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061902707 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087468044 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072707912 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09300642 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066453595 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066990965 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077652386 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06470906 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084771971 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061910197 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067378979 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077766413 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072852917 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086292358 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076826641 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083320113 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068622254 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06945103 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086017665 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07311012 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084314733 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068432604 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06632387 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092557728 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070845359 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09145161 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062279044 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060659222 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080788087 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075575213 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10511603 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072419435 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083592834 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067777967 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080729684 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068964308 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067154701 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087475358 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073450279 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082560971 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071980623 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089935644 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06694854 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06820531 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08980589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064739366 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084742064 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064728027 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098511892 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065550607 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080456828 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063721815 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076045846 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086257211 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066309379 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080178231 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072889759 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061123266 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083402401 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067382546 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083976205 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076266665 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087970064 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072423368 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091442493 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074343288 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066775629 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086371437 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064050557 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084090505 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065622087 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073067251 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077231465 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06930021 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083956555 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066733803 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091232665 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064823426 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066240741 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089553216 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071435843 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08135741 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063598237 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069639432 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082939383 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069786761 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090616959 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06472456 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061961135 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077857346 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069682306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082550875 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069874415 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087016591 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069681126 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061466985 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081232753 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070829902 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092039344 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067113202 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067363764 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089036668 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068455184 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081908762 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073342373 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085810571 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066061674 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071899643 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083407511 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062413347 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086971477 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068899393 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064705759 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086780458 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069755679 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085533763 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068141481 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081432747 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071772847 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067580681 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082076248 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066481801 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082036782 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076323964 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068017533 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078204029 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064574772 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088912095 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064918852 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066567007 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082267542 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068756421 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084078444 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064944801 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065615315 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085467794 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07690468 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087830568 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067840626 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087761556 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077455194 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082779411 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068932223 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065539725 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08384909 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067540347 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092394999 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07179025 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087295358 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068486221 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062731783 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088795196 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073735332 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082233458 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064268274 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065521171 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08626587 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071799177 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086886678 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0672615 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08048093 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06723888 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068910013 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085310226 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067073833 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082176375 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071159714 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082819648 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072797192 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067708049 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092832361 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069320912 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078580065 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06916152 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080897623 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072125817 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062201631 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081150383 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066136097 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084197736 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065452606 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069616062 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077148888 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073460735 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090236124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067177082 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065847369 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083379831 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073062465 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084319208 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07079875 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069641964 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088970567 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0761126 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082463655 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069684278 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093531714 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066381557 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060808441 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087943337 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065519446 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081434384 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065935972 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063910293 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086186612 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07432759 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089862367 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061041017 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085514204 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065645883 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065860144 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079252314 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071311252 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085799971 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067283679 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072874457 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084656085 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067516212 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08674797 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066209763 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067023258 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083688047 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069324782 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083892017 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069005308 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065737881 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086744241 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065967063 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080719935 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06805117 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066817576 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083622553 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071990983 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08279039 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066710895 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085586468 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06679258 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06765669 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08426112 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066202949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086077534 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067701067 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067684916 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085785596 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062464377 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090612526 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067383739 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074023171 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083991776 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063834147 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088503485 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068632078 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071102344 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084436658 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06797314 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085439245 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066421832 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085334823 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073177146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065214188 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094289139 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074376045 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084201543 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06931345 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083532426 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068148046 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06551051 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084923413 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067586878 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066604875 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083633509 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071125623 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085730432 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066798303 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067623623 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084357424 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066725711 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084480419 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06135285 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065626529 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083129076 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067027761 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092463684 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067198267 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083257058 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065626448 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067812003 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08252551 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064145405 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091091979 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075278053 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084456338 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073816807 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081409784 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06826944 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076900738 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077753768 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065908026 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081166674 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065180866 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073889094 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08388517 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075621204 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083497621 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066466628 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063253733 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083860699 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06492241 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060031304 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081598802 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070294807 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082610918 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066490694 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065989447 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086969712 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06766559 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092493371 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065962663 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084481003 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066805312 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063404724 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082300364 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065998677 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086182488 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067343526 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064916841 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080943785 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066729938 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067486255 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084926384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066800873 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085186299 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074575757 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083203998 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069228603 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070116354 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08101803 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069928796 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082688357 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066432011 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065518178 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087364179 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06949819 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083959336 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075134788 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082807789 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067375667 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066608638 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081250193 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066997838 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066325267 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083381171 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066332947 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084721462 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074498764 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080637822 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069131764 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066336456 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084172744 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073145856 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084312104 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069887638 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0906816 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067428105 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068696245 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09066447 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070542439 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086525771 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067628477 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067294869 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090064395 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066045032 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089653456 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06720113 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084141669 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068306155 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064497225 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083398965 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06703818 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065288839 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090394314 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067169072 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083317803 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066270843 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081504607 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067572075 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069972505 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091187064 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069516942 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087121109 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062807984 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064141166 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084977066 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06557633 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084982746 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069847669 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072360095 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085893413 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067815497 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083320528 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075800808 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088991691 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070190122 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064811995 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087218624 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068410527 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086181108 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067431732 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066775345 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084608917 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070714331 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085010397 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066384652 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073430342 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0869209 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067571173 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085508969 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067375987 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066482194 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078946086 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06735715 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086214686 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071572254 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067714268 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084052917 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076285815 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081850731 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067407238 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087291973 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066396923 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071592279 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080093915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068372256 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085055391 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067749276 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062119483 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083124717 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065253666 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085634223 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066469167 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06236336 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094323011 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075463229 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086936685 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066182208 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065073494 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079640255 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062476615 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083606144 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067969647 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068669533 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093602659 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065946676 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082394496 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06301162 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066579804 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086962525 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069803937 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081682815 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062185368 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065353731 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087559637 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072382563 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082478833 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06698892 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069782777 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086792025 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065211332 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087175887 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06442176 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087412912 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078893932 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06659063 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085074737 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073001733 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091241576 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067542712 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078799331 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067278762 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069347343 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084229643 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0679444 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084734379 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082158362 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086731682 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065617957 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065708059 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086715459 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066323651 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09195411 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067995414 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066242564 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088827571 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069053608 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092617326 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069567082 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090951997 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069964639 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086710655 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065993637 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06651006 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081801692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065660388 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085248342 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068022062 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070760034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092319742 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065822828 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094630969 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075073669 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085461658 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063511283 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065398384 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084298788 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062220828 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084520509 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0654189 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064923155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082081794 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066352215 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084516411 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072416854 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069140387 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085267837 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067225491 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078418507 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069127085 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069123204 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085545398 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063983277 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06598846 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085975097 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070826674 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087610145 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064642093 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085220305 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068417465 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066858598 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079641967 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073760014 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064898255 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087528791 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066293515 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084380166 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067356303 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086702809 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072108017 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067856305 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086124746 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076526017 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087055053 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064680963 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063499641 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090003389 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064188168 seconds)
  done (took 45.846492619 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107139517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080995202 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062297319 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08015058 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074528131 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081461979 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062492828 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062679513 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080756064 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065729681 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07995705 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062006434 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088409013 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086209459 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092762151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066544815 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080119176 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063270552 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078955276 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06296397 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088999925 seconds)
  done (took 2.447295742 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074470329 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089224168 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072916661 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093759692 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068435273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089148432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073053256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088649421 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093796486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068259665 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093901357 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070650149 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085013189 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067871922 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084835614 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071529461 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093967251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068545252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.087596503 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074101 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088611743 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072635285 seconds)
  done (took 2.605540729 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067083471 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066355782 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084913248 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061735157 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065239355 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078823326 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070071747 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081500708 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070097507 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065415803 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083444819 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073011239 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085564167 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062340667 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065848692 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081833254 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131040031 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07031644 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065264388 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085234149 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061490823 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085808194 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062389938 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062039583 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083510325 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07037605 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084809721 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064336751 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066089126 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082759586 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066407593 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080855498 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067336105 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066253806 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082819352 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065452392 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065552655 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084037126 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06190868 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081765437 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066519365 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06285711 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083456526 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068097513 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063183912 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081991247 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067724157 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083647363 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061830211 seconds)
  done (took 4.441159505 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083908665 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.12927534 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086501532 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09007669 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100422376 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09160786 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070285801 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109153012 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064337101 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082935068 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082679984 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102775723 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084982876 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07165327 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090686733 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066879834 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066839796 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083975424 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070396959 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083960973 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070503392 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090913788 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098835264 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080815713 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088798947 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065490234 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08339026 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071531283 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096914772 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070973342 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089159169 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072293402 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100074924 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071659222 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083522305 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069112143 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10100114 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084162461 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069555003 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064563645 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086290135 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070846431 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091252407 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100573417 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066539121 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071009318 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083933913 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063385647 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096979909 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068435022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092141184 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098889237 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070778986 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084200612 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071859682 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098584848 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066605472 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082802224 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069658832 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096949224 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064182207 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087616471 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080231012 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086195136 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073804563 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099181074 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071432885 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088660562 seconds)
  done (took 6.58051862 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075309465 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090691472 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081217855 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099330474 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090867592 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073764688 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090692168 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072423427 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089830739 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07738882 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091382571 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111967188 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068361152 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093850396 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072447834 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091535674 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071967136 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090766175 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073215404 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090882633 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090746068 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080776444 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09104517 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09894641 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10289506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085659966 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07266653 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090616009 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080940194 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091190177 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101798619 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073864635 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091583088 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099583418 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084562307 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090159253 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065934951 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090821898 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073183262 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091324262 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068282361 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099338256 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072560687 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086255171 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072981009 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090179738 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098193121 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084141365 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093449168 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095694626 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073465593 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099163045 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07242837 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091199759 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099068273 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106393996 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098472354 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09901802 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073135418 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099546825 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097815526 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106686791 seconds)
  done (took 6.270659238 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087467069 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093872454 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096552116 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061675105 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063863497 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089011086 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064645072 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082636704 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076120308 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092757003 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07752826 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08784717 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073482495 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096432651 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088001395 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073372106 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087838002 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07086004 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093199075 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071163962 seconds)
  done (took 2.475105961 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076278742 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101632908 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067440208 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072561062 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0888548 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071989764 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086921297 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068884121 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085690575 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070341244 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094360422 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077303711 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0855206 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07298251 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094746835 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073271021 seconds)
  done (took 2.140799977 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078614487 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095192483 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081019125 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084839398 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06517808 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081952018 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067788762 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061910702 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081778586 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081016592 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086011196 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069340865 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085888721 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065641869 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06327311 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088025316 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062709883 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08272968 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06701205 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099485478 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077908564 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083392562 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067135448 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068111007 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086480951 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071244398 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085764868 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063669033 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083772477 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067192141 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085360753 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074075587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081588776 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065667231 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064386305 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082001394 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06650557 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085444108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069202578 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06562849 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083070937 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065890127 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085254545 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067521086 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080561247 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067102334 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062240807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090814989 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064362274 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085058131 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067296837 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086408465 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068073343 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076430324 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089091965 seconds)
  done (took 5.038022726 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080042376 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069095883 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081232326 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064696881 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08822317 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067940504 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069205376 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086787774 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068276556 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082394675 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068461818 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087493489 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068107339 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069951782 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086256884 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069186056 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080753238 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068422297 seconds)
  done (took 2.212450585 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071941132 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066221331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09219848 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066462693 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084782674 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068982865 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061916914 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083945749 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0654669 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084233794 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06677459 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068401521 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083491869 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068137688 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084683325 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066498954 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068410848 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083733721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066783486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080369842 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068958231 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064648327 seconds)
  done (took 2.47496762 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071782184 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093240359 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161006976 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106165361 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081988694 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.09782946 seconds)
  done (took 1.470685552 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09006477 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098037215 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067050499 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106712076 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075004546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08711691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068741166 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086927295 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076927522 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10009473 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067646535 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096335773 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095537168 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076455254 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093318564 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075239517 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086548466 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067576769 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085701398 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104954927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069011364 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094641505 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068876224 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085980474 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068456453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094874286 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07744498 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101271569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086863684 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078023785 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09182353 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068313064 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09559359 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100670018 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070206132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095929465 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068596133 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104493021 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074050229 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095002821 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068330007 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093687884 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095862287 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07355194 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09530889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068638478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091737042 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06831782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087808847 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111354534 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074676378 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096124569 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092597065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077110991 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094956914 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112154176 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083125988 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095523057 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093012168 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082871468 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096360813 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073432661 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095623201 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100949107 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07392099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09570296 seconds)
  done (took 6.54987736 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084979615 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10542182 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068811476 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101359225 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096525983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069275435 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087179889 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068850745 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086970563 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06862593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129022607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069792036 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096301333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095219669 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069641125 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086845055 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069350394 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095285329 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068416883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112134206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086519422 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077108754 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09532655 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095991066 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081730091 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093007291 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069349106 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086939607 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068920319 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087429247 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073138567 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087757225 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095326887 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068538906 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095162114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069337748 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087050775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073328616 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086549964 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074368609 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096028797 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104898928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06937217 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086850368 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081279286 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087689995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069121693 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08724485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068671196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086546237 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100593447 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081897794 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100549827 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095686597 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068986431 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086521296 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069028616 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087278346 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0701646 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092595681 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076650139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087139536 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112458514 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069831472 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087069264 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076744612 seconds)
  done (took 6.447937879 seconds)
done (took 127.239593273 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203179162 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185304171 seconds)
  done (took 1.249200911 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068767818 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09554089 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096825147 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127806679 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085816146 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099975832 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117709512 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078174998 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066361915 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085733291 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066706789 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08697833 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132449095 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067189937 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086159926 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068643185 seconds)
  done (took 2.298996983 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102768351 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194891135 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108244196 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065748356 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098954253 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078263775 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084716635 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077173197 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094075685 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066395874 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078462013 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095363731 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065463176 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095176604 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074709464 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096596181 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065616207 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097025259 seconds)
  done (took 2.511463784 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104216407 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140619014 seconds)
  done (took 1.113649562 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198803347 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122634538 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20125486 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.409583221 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205415552 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274460869 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.171513412 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169660809 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15593574 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.16924924 seconds)
  done (took 2.943878944 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099440678 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169725686 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309185545 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136775453 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085868281 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114535291 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137503078 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089881626 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101379258 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100190624 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081405191 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096201133 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097674478 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094940039 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073977754 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096437326 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120826216 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074462386 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095623197 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075963872 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117386134 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067318593 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093032545 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074535221 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077584733 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098311962 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066380601 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085168091 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075607687 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09333789 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0791566 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113516593 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096062611 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130587581 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081867862 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129983453 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097118397 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072798603 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093701471 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072989342 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097499327 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076778503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103406474 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094880946 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066718181 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076759931 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085463534 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067319342 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098380362 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077255673 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098560286 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078724233 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129772528 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096223012 seconds)
  done (took 6.182429779 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.742765924 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109820282 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093330318 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.804918875 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08912231 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105589696 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.709699053 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115991857 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208652683 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762886993 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089495434 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097904497 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179747258 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233773447 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9063571 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287403259 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.6308497 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103487879 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107969766 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132085022 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137999747 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176549221 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149175367 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439130385 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074317038 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091694984 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135936749 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09528748 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139097751 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084513303 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092689312 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155858133 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226631468 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15503868 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096462342 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069587562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089771497 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147985493 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24109816 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170045137 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157585308 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06722205 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090193455 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139626635 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130926182 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067622091 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138361956 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173756769 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147111919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072897417 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095127546 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142136148 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137393934 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142375298 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100231708 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294505173 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.262442378 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089500458 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118625388 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.083008304 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237508199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082826053 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198238755 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138763627 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16570333 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090029191 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730487445 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146005452 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091233033 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074168602 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118448482 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094021492 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137406148 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142386818 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368328572 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140806607 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072966123 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089713904 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208386823 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102798602 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071068041 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140378681 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094821584 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100518943 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163311012 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142001405 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146404067 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212359459 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140873124 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.15971779 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074519147 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122900578 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094792946 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190687792 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.172536346 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139379781 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205623478 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141048216 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141281922 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147018311 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096142326 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150308712 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119390056 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080627966 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135780807 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19132945 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122345562 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081826445 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093953663 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139696313 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124562344 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084320236 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160428421 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.150702832 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459919421 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145250091 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088401629 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085969476 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13885756 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160741883 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076170564 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232834967 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100135079 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167047507 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1210493 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068504526 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118679725 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140443284 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076530651 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120948963 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156980394 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077490679 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213016791 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188188111 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076533145 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213292129 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159935315 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074801475 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147722986 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119520299 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144982107 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097533115 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138071322 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074800092 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775262715 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1427973 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120508614 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072951536 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177452462 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090035099 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082314247 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103532686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067598131 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749509624 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08561493 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101242496 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103113265 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075291823 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120937842 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134981024 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092481455 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139205277 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179663411 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096600272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118601777 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082739042 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138566699 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095768369 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102984242 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084415654 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102992118 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122774434 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073516833 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10283005 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145970306 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140367224 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191271155 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542174995 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069077277 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104336374 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199222329 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070555169 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259333849 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137051992 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197491665 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140431147 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079383071 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.278708345 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142726451 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174708847 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105035101 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151069491 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068612346 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135977783 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142254033 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090713718 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075562024 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140112887 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164100251 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143595688 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931958279 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070648593 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202185407 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067316829 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16959676 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075682755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095292724 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.248377595 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090653098 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14622532 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142403264 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092527569 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082964203 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.683534417 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104770745 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137107354 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093938432 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.173086894 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162678743 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134776279 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137786194 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07455895 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138768284 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20709059 seconds)
  done (took 40.253717041 seconds)
done (took 57.422942338 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255148081 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176707005 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.239461877 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142811815 seconds)
  done (took 1.779730563 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143237868 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103838854 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121428163 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085100599 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102461345 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085582772 seconds)
  done (took 1.532666681 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.400159145 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262913833 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228243449 seconds)
  done (took 1.788967972 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.281493204 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210667741 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445772828 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29429229 seconds)
  done (took 2.234078677 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.172861762 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112842797 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067344922 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105291489 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156562268 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250632762 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126750308 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186632036 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078589401 seconds)
  done (took 2.202867033 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196324459 seconds)
done (took 10.63075068 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110396334 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.227012859 seconds)
    (3/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.208492823 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.223341511 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.072722084 seconds)
    (6/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.17703065 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.224684087 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082312574 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.132654228 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102342744 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092340685 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.146610325 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079781544 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078284324 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.235603136 seconds)
    (16/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.082676644 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097117488 seconds)
    (18/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.156643553 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.128144361 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072764643 seconds)
    (21/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.262155156 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102346323 seconds)
    (23/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158105399 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135807103 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.161747894 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201200135 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.177117358 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199336271 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111435248 seconds)
    (30/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07798781 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.12298074 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095704882 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094205146 seconds)
    (34/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079809136 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086213175 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.154728694 seconds)
    (37/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113569777 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.165640534 seconds)
    (39/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076172825 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119423931 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051867082 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116364765 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07368196 seconds)
    (44/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072653782 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117478393 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075390706 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.166479045 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188711128 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21385895 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194815851 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099227839 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117043932 seconds)
    (53/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077346988 seconds)
    (54/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.17270362 seconds)
    (55/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207174136 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094729053 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.147355954 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201088935 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15681607 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073122553 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.180939521 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151861984 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091365559 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087444081 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170428027 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099531957 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093752466 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.201950181 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097503374 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174861 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068016382 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072904644 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08700456 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051318977 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069511501 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072042343 seconds)
    (77/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159172947 seconds)
    (78/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100888281 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066636895 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.168184463 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157101511 seconds)
    (82/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073440216 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.243773854 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097209773 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074072188 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.188311431 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075045964 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101807849 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.135821318 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109649997 seconds)
    (91/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113427427 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.160647168 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065849947 seconds)
    (94/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.160945509 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.066806164 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087831551 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.170893382 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067667621 seconds)
    (99/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053162989 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189743896 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124723964 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07196158 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067546865 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098681185 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.167117868 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065758483 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095203081 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113387794 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103923503 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0666306 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073543551 seconds)
    (112/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093246951 seconds)
    (113/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070777853 seconds)
    (114/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.128602954 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074343122 seconds)
    (116/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.169935778 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.160639208 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110897273 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.178275544 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095304565 seconds)
    (121/309) benchmarking ("sort", Float64, false)...
    done (took 0.147966382 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07426495 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.199763699 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 0.149446076 seconds)
    (125/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062983471 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110368237 seconds)
    (127/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067967694 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.157280074 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075106919 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116284228 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073162759 seconds)
    (132/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.127320547 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054512488 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066465254 seconds)
    (135/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107769884 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081439093 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092341222 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053723595 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072904243 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07429677 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133415421 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098702995 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077952852 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09472076 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.136999531 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.08887099 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.132529915 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096604459 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051664009 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065626415 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094819809 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071180369 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097919693 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07059405 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.10074722 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08283356 seconds)
    (157/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.146184351 seconds)
    (158/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.120454243 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065894671 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.071879771 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074772726 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072868622 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094202525 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074596161 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073946237 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.074056898 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067351858 seconds)
    (168/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063379788 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094422152 seconds)
    (170/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099691248 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099873158 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092440116 seconds)
    (173/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099812831 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148393891 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076161862 seconds)
    (176/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062674304 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051638335 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086867726 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073895826 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051134803 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169241612 seconds)
    (182/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071806146 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110071082 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069195029 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090202201 seconds)
    (186/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110144852 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093535945 seconds)
    (188/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052882029 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051801835 seconds)
    (190/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052138607 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.129200747 seconds)
    (192/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068575278 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088419446 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079883559 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075138368 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144664982 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096838884 seconds)
    (198/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062288289 seconds)
    (199/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053215769 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08790366 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051557501 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109251939 seconds)
    (203/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.298230486 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054443265 seconds)
    (205/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106956382 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191029058 seconds)
    (207/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052917845 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073888403 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051608756 seconds)
    (210/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1194635 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09379808 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052161429 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064165512 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089003402 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07256443 seconds)
    (216/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09851278 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070307491 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065639394 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124591615 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065334359 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096167208 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073644972 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051943799 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089626136 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090595552 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066787855 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.074265523 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104669896 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072721929 seconds)
    (230/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069121607 seconds)
    (231/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052592585 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052037526 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092808045 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052098307 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151093884 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.144863542 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085939378 seconds)
    (238/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052835218 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050816823 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155099107 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.197859954 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138750281 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092654626 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051791185 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117354451 seconds)
    (246/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052904427 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113010605 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087584843 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052577013 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111693248 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089693348 seconds)
    (252/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071619433 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074149405 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066888887 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087155539 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097794113 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053228016 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091054161 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066292647 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162343331 seconds)
    (261/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061535261 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072685625 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09551054 seconds)
    (264/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090599157 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072518889 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051517671 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065785027 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051021023 seconds)
    (269/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093240389 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072514799 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086646757 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073174973 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065501379 seconds)
    (274/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073869109 seconds)
    (275/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052135977 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052546176 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052377527 seconds)
    (278/309) benchmarking ("sort", Int8, false)...
    done (took 0.162566676 seconds)
    (279/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088937252 seconds)
    (280/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052578969 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08892823 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073404239 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11301152 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066133711 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064900974 seconds)
    (286/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.072873236 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064847609 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066381307 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095276008 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051075557 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064964942 seconds)
    (292/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108909734 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064637142 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.106923851 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091919025 seconds)
    (296/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05320508 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093768446 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052631828 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072447426 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088972829 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066044307 seconds)
    (302/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052587729 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168224335 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067148746 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073443608 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071505727 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133008496 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051116454 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13728889 seconds)
  done (took 32.86356947 seconds)
done (took 33.773470241 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080865037 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115696088 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074201074 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115835341 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080618288 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100915058 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07320362 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.100455058 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079975131 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.103937233 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079078251 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054120142 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095861856 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075649101 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096541946 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09176715 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100884504 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072607692 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.095923287 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065465687 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074386289 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087183405 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067730116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056885405 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099836245 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072960345 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09471755 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075997172 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065876208 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088317282 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069666517 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07254866 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088014314 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079210701 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093947044 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073853658 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097299699 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075709233 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067695935 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086989555 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073439871 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065420889 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094076978 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073177306 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.092748459 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071331662 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073939902 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100811966 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091192919 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090171896 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074243015 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098003575 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077337572 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072122919 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091659837 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073993979 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092076386 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091317338 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096703976 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068069313 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073166247 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096116864 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071469164 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095418295 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073750388 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075101915 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097980377 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071881009 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097631669 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070741631 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065768025 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095973963 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069448465 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087623374 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076372874 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076938764 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086161043 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072046276 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072648238 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093174852 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06580776 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089127572 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067284783 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07225486 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090297524 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054785683 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069661375 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09354559 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065336073 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07397889 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093508215 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073450657 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089412423 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076583471 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065636449 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093023744 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065758001 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065773871 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089364443 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070415225 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087045666 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068069654 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074925017 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089294168 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072169481 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079662039 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087485255 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07264227 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086328628 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065483697 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082420938 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097743645 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067191997 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090146175 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06568497 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073026849 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087198125 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065621752 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065805084 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08832281 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0724807 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087726048 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06800799 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073757079 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101436642 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066080338 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069208486 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089713137 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0668478 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07062732 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087650173 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066496166 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090124352 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063530571 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068105617 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087982141 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073567783 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067558826 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09587674 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067611548 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096367563 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070886603 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071794031 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093291515 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065424959 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05897951 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090056418 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068687376 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067300857 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08825721 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067538769 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065226031 seconds)
done (took 13.111898383 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066401297 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16752201 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125754874 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095225687 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108799385 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066752793 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099434904 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102571829 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090198289 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126955969 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086425114 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107202898 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114121897 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087564413 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066631939 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069603946 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089814863 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088265134 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123028305 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108379814 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117157512 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087725185 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119858451 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089759149 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111989793 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094357445 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08879841 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069826668 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.090577559 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10236042 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108077498 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06984493 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066915161 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121276485 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115787128 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085468498 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088405945 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084152088 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088083284 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066561916 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11406822 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100263497 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103584496 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082133568 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095048792 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0691413 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089408882 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085613364 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112539269 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080974564 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110251169 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131910732 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069701882 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104823884 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06580091 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109423844 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103989734 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068605621 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066946872 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090259897 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06572057 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069803289 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110537551 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114094582 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070771135 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104011137 seconds)
  done (took 7.203521285 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084840456 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115390151 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084570298 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107799078 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06696101 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066526918 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08940135 seconds)
  done (took 1.579279267 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067332833 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08920417 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111869881 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089749423 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.10873517 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08724613 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099197529 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067268536 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106555866 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067735176 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087270431 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12648884 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067355271 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096739794 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090615263 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089795482 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090630949 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089080205 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070231123 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113112729 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069898397 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110231197 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068399345 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067539949 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103857655 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067817605 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138639034 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071362364 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090004479 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07010548 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065493253 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139379302 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103108544 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07861575 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06694997 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104179803 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08180966 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08705398 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083621807 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094127184 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081477399 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068089657 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09058348 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065367549 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071516474 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099939326 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068796806 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089432277 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069425531 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086823524 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09057218 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08160177 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089455962 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070581028 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069042801 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095246208 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077232488 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090383075 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08774986 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068429217 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106848689 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083406756 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103716247 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083333954 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092550156 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081815472 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103887955 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069754759 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068794054 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093019266 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084722364 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087611721 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069506649 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078043177 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091488985 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090493404 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112585176 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06886795 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100049378 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066851447 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067801261 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090683131 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09098726 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093562578 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067812799 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071836252 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092949986 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065502662 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065711363 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093590515 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066411347 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090895227 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070229808 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068162623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092824601 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084736607 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091152372 seconds)
  done (took 9.26037069 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067843945 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068319726 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091930063 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068579935 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068403723 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090998135 seconds)
  done (took 1.431181365 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098060632 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091844377 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081418819 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095594068 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106107097 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104686241 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082707302 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105240223 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085792989 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102343771 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081665108 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10464668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088088294 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095667842 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082182043 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095014572 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082797221 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09943928 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079467358 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097525583 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088095929 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096191689 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073522896 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106433939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071400507 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07228203 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100062192 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079386303 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101836651 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083056707 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09521201 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071208499 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094301614 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083446288 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104862299 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07222493 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09530692 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072144649 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099878728 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070523898 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105255677 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07274412 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077722755 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094623032 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105695822 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072432489 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071872952 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099914135 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081603655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094045843 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071785602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094276769 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070763204 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094111588 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071831807 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104941801 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071917438 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104622715 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073944261 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07221226 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093546295 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070857441 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105049307 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071684936 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103827711 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071842482 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095095293 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073434759 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096387999 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073324848 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071956994 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092502464 seconds)
  done (took 7.295346082 seconds)
done (took 27.734488507 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.647419061 seconds)
  done (took 1.621354643 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.760227199 seconds)
  done (took 1.736652732 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.481576587 seconds)
  done (took 15.461624252 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.607717447 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.75262095 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.806963229 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133554768 seconds)
  done (took 3.276883587 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.8844354 seconds)
  done (took 1.886748511 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232611072 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222848954 seconds)
  done (took 1.439325559 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.725479966 seconds)
  done (took 1.717755594 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.275186811 seconds)
  done (took 2.257703991 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.317592261 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180349316 seconds)
  done (took 1.490740486 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.518054141 seconds)
  done (took 1.509349478 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.596614036 seconds)
  done (took 7.592716278 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227978525 seconds)
  done (took 1.233823378 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266812386 seconds)
  done (took 1.262433503 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.096164798 seconds)
  done (took 4.092350808 seconds)
done (took 47.562981605 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077797604 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08168601 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104152835 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079506333 seconds)
  done (took 1.335055517 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077161723 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073852755 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099828214 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072514156 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100446052 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073967853 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09819996 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077443526 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073045831 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096620243 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073453661 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095426826 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075728166 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098074351 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070998799 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076508686 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099561038 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073323858 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099189855 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074157568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071075306 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097740749 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076011838 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09472948 seconds)
  done (took 3.022578041 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077028634 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072976749 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09761125 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072122083 seconds)
  done (took 1.320165359 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076870951 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115712934 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088553571 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077456255 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115174177 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109534671 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068889016 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068937482 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093992139 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077458975 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091295895 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097701337 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110473013 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07736199 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101722827 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06595259 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068557734 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109500876 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077501764 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100410337 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07107867 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080093439 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090996943 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091085683 seconds)
  done (took 3.132369729 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076158043 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126918085 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078133504 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11340752 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09065249 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08921458 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075253145 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114894777 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124433041 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089716182 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070181435 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06561703 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.095218586 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066074314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076212231 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132142077 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135094117 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068120032 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120391852 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065100855 seconds)
  done (took 2.88331486 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075439361 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069509513 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088442858 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068437485 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076204637 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.095076295 seconds)
  done (took 1.484006311 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067972082 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067910654 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.08976807 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065923651 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071307844 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089191042 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065844384 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067048074 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090089298 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066898484 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066075663 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08809905 seconds)
  done (took 1.902932377 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.379555761 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092055145 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069730773 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087650529 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071368706 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089616412 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080576253 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068570806 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113912777 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067199786 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090930926 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06851299 seconds)
  done (took 2.289441958 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259702277 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077371827 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322431622 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167232931 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140017818 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154658798 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105295727 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138744435 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19620629 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137149506 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198657907 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224066631 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133252302 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167071478 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114628219 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133164843 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185616301 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22012913 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129369599 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199551926 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205887704 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156119379 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178824457 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127596153 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134462104 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149070179 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072061602 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104478289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230850862 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160569823 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199756509 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137427049 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096890648 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228815128 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225156859 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193849535 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161575921 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084375526 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156844589 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163745432 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254577574 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114404286 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193188906 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133290571 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105148748 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17188924 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145641372 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145812885 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135711052 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114060768 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173230084 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237972499 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164958744 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111868682 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137051094 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141656339 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142811514 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104179704 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266999447 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194977285 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158500764 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094810914 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123523872 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185971322 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157814168 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1411932 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152408518 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117633091 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166341055 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210005203 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145224881 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172118128 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178278808 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112949813 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145973663 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170142749 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155481321 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226205858 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154204345 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072970677 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152487481 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129268956 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106968759 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143312665 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10092395 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232589018 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099206002 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138781956 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139750628 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135277385 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136544889 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193997429 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200799956 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129004587 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06648474 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129721798 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148949507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175435966 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113066465 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135559978 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147731151 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10455455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16583591 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076082737 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151764799 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103443959 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152274083 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162266266 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101288354 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153552201 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103505365 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127276895 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162225376 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218895233 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115227296 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083229384 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225071991 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15548798 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130589596 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174331912 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213985271 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102480107 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128236491 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204270479 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241608648 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089904821 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22104197 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134436772 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108939032 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088597362 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154465555 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138339281 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148551209 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108058695 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154139919 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225557666 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075726454 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121144058 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165694887 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106909755 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082762611 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139349932 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12673214 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121198883 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101897063 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132779405 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193784766 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154010169 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132948813 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153197278 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124592545 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199456528 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114490717 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129580284 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129310424 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069692848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.163900816 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216223873 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080496661 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223998143 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154233326 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130559451 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148504683 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108126981 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169811659 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079187073 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096308347 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174085816 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137232554 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13680289 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18392243 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129472943 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.15473878 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150084037 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187582217 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160252761 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16126485 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132231351 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088284326 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138986146 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178887909 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073961315 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120657122 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082944819 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130024972 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121402292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084079295 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195771125 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15470804 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126485853 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140222782 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098155393 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202952054 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077925793 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183906265 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146938443 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095779971 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209947053 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187131579 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190172883 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101561395 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201591032 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071534112 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099878919 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092052721 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180055523 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084461276 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109113843 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144455794 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178399565 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155580198 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193049059 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112748344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148188487 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211445833 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071221086 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142901883 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177288263 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17757684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131500618 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111468771 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099881792 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199257146 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135211312 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245528028 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14229085 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152482811 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18149547 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129513465 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10622105 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106904412 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190643793 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13202266 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180439108 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125395349 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113247469 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137568266 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08135591 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130510833 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15447102 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147304512 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187026886 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143779214 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160395789 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103242132 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144501263 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151435675 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15029715 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065311695 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146364162 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219186761 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120741731 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146216297 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185592716 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104966871 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154667302 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237300858 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173949771 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110165667 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136925113 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153925425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157236085 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147590698 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170081869 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138369995 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162505097 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137676465 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110895378 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088098824 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124134452 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132700092 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095208661 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.163470166 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144407903 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095793356 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184321117 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138228409 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110759251 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145358337 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124653459 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092309782 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123860136 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234427037 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14953281 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233362897 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126664498 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179996333 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225419503 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075798803 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105279693 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106701061 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169298645 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085047008 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187582848 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098302387 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131665713 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154470748 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172358599 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121564895 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093480174 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110994702 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188888957 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112920681 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123738544 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132329094 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220315275 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129190971 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080755789 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152870586 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131146234 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103926965 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232211484 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086510886 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098938278 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101300978 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081257486 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181920036 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185136123 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107917791 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.131876111 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14119126 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172857082 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158042978 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128448144 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10036905 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141044873 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204852916 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156413686 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090611073 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138431572 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183576317 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18853553 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133253786 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120948083 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230949524 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185880612 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220338203 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114980007 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143643859 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11651505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136098117 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195793241 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083711457 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224098133 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10958589 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165907505 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131656699 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119667079 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15868664 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12489605 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089060124 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20421158 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147487857 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125473827 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080052181 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146250484 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149542375 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133659786 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100954552 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168210902 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072857954 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19142139 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201243222 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108033211 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13292937 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096696791 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107918242 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136589573 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13006053 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113513242 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119075634 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228868457 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117204412 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181595406 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197057755 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143366956 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165730071 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126141853 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662472577 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079310093 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210931611 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147387979 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236407955 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124304707 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146457032 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137971512 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151288706 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177178696 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130361717 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205018055 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162424966 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147202331 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10528051 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130973853 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137679255 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091788593 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133404957 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142525963 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144717566 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12760329 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148816463 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154596767 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108605604 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096225979 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215180253 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14477477 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198609554 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170411657 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084934471 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146315842 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194881697 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080407814 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175994019 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186785681 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135076792 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125626446 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081356618 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132575247 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231302014 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099379857 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193895731 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152971044 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137368409 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141687933 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.173162468 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162182572 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135776254 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15358277 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122749161 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139708311 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144537733 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084666207 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103730148 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133205716 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140266843 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100623299 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12856503 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143269108 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183740876 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097565816 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098127668 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130283121 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198924246 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210556164 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115690053 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108693998 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147049129 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141174847 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144033712 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154016732 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081928159 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109348161 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109181567 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113954263 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136269883 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141724887 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13105071 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138529667 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198074172 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110760116 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251436629 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095957809 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133449301 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069900598 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106003214 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122460239 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098349014 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134739943 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126819694 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231578645 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12254169 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091375299 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11984174 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074004451 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109981517 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158946317 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139054764 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149246788 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124999069 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063483258 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137043214 seconds)
  done (took 70.961869707 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131751575 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.102825151 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116393465 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171214412 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144693137 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23671966 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.178558417 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.220880232 seconds)
  done (took 2.391767083 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068768628 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.115987507 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101978727 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115105809 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089290292 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06857179 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.291885955 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109598619 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066963548 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114043092 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.117467824 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09067339 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468133846 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066184302 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093567849 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083966342 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068191239 seconds)
  done (took 3.209818398 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.424878538 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630091646 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.447083396 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072780079 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.880801845 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105429497 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.357161729 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160843097 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089981663 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428412056 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727395383 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147602572 seconds)
  done (took 17.560907178 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074815585 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068478987 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108714239 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082517672 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098211336 seconds)
  done (took 1.5248889 seconds)
done (took 114.012895474 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07909726 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.339362454 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052969681 seconds)
  done (took 1.516833027 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08292294 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084392859 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110671944 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083557215 seconds)
  done (took 1.46274671 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074131593 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076176496 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10959448 seconds)
  done (took 1.359473529 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.275837101 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165115417 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086851498 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081476855 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078124683 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103385005 seconds)
  done (took 1.360792802 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072201742 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074813465 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097958204 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076131137 seconds)
  done (took 1.412385797 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07528467 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052121214 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054698452 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081326036 seconds)
  done (took 1.361752865 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088113539 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105363872 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081261957 seconds)
  done (took 1.371752992 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106604797 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111423939 seconds)
  done (took 1.317668862 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080836306 seconds)
  done (took 1.174989269 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093752688 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.137424824 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154707019 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135756217 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165108865 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135388221 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11276655 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088207565 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102439339 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.114343299 seconds)
  done (took 2.339550344 seconds)
done (took 16.373647131 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077716822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.482036718 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360105211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116195485 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666469067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356263198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003525539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118001764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120358601 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093545028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08290461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673853118 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.966228434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.438812723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953331336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.417038254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675246652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068093624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092457466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067824724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96444032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092710146 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06722148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068255131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673896404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370920137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093649562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.411701497 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067607143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09556823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354782002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093805311 seconds)
  done (took 16.274627795 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070332922 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143808937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073052138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08290731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096159556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069493067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097470229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068283493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151588605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067357543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110933669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06785502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097649536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06878414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086383316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093882889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068695115 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068848631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093613001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067981377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111859407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067596969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068069347 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094046286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068649713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105774506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068472433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067507898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093852633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069620593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096496615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068929014 seconds)
  done (took 3.826180562 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113818093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151439282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073390774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127610913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112457263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09657833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.16965506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092568913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154625054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068101637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110548763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068230685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127046154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068671197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113403538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069153645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069373074 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094228414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068052547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09485644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086497246 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093320272 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069568879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068804427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094737034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081367369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093813074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068026659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068807735 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096095082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072509932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094265478 seconds)
  done (took 4.139228295 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071550246 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075184728 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108219129 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083211361 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096110705 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072236519 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072177577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095274745 seconds)
  done (took 1.776903347 seconds)
done (took 27.111786604 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077600076 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069654612 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098462592 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08006431 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.09910154 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078317621 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066967922 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.1008283 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075985834 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072260312 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10112092 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067488575 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.0968068 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066782959 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074596152 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093458843 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080091106 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097302807 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07868676 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104906516 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069469991 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076742624 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099679981 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079043498 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105355446 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078992604 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.108611528 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073653072 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069697178 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096599942 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076923155 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110095098 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068752821 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079671664 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094231693 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067521308 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067949464 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093865542 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079506606 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099785203 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069735104 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10013876 seconds)
  done (took 4.64366332 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087118707 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0904643 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110596476 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064729989 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096403828 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064984306 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114611703 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06385459 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058962231 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114368058 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055813579 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058916033 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089564815 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054279321 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058860889 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055910386 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088182248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056212873 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05883521 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085346775 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057696231 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05382785 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086709366 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062587352 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056899706 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.086978257 seconds)
  done (took 3.040542349 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074996516 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083501668 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113913562 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12729478 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132165078 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077481192 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104547887 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087303949 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112004598 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067119509 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071521598 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122174932 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087406954 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100878113 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068073906 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.123023882 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082058937 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068787661 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101032673 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089898433 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110362649 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07782163 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118819241 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081076426 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066717942 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096781934 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070844209 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107687461 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071867073 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076909962 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098355936 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071460728 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095940228 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078572365 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.097735493 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068825745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089324613 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103540272 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077728125 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.095036996 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070723941 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068699501 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114421597 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.110868354 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093784602 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074193159 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.101682813 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076821486 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066950263 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111648706 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07652914 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093928155 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070612199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066952153 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094168148 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081242475 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069981599 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096072466 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076725363 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09658429 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080039555 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07111113 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110046179 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067297859 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101240337 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067199896 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068869677 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093013138 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091201101 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095230109 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109050513 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096062431 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069000209 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076325781 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101927262 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073623149 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094497962 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083277506 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076918131 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097516659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076131368 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097614092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070295044 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086592246 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096733445 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06890189 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068083533 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099934463 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069789158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095348581 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080677705 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067446217 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096616369 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084433197 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094088199 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069074298 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073160257 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09922397 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067047506 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105527851 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073597382 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094835636 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077443741 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067279023 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0969017 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077717023 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098253291 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06617893 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071789256 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100761758 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069028101 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069536134 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09714732 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069668002 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10326085 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073322054 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072752089 seconds)
  done (took 11.24635926 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189983353 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183676124 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07049304 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.1768265 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075915156 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106650147 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177553414 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096032686 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095819121 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067997726 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069043848 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129431692 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123497334 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106804765 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105251184 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06778558 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112749009 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104036033 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180848872 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.173337186 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114835895 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075933425 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070140993 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096675815 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070137097 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077179348 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111751568 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076947357 seconds)
  done (took 4.236117416 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081218829 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128048433 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072761893 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088563459 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118947654 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067788633 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100821907 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069354226 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.106920824 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07936569 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094311548 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073264616 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074102894 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104119158 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068322052 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104284196 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077364807 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069284478 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098008342 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072407338 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103686648 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080088678 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099045533 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066755554 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073932745 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094058882 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06431162 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112532494 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067574838 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117087436 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066256464 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073790512 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108451536 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068183511 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094885682 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.0709052 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070373029 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098158005 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069150901 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066048989 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093165384 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057769788 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067017278 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106713272 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073561457 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086131032 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072750895 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072399558 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099789622 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065959105 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097337305 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071146312 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071154528 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103614736 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072520248 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073220899 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099603105 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066064372 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102589819 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072112109 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064515056 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093376159 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072828953 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066637921 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102497173 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071855307 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09314391 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071262758 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07215181 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101889687 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071227051 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07055744 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09315382 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070004034 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098947393 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072162115 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071757954 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093740944 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067796982 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068723855 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082595531 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067667785 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053872326 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.0976464 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065941901 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066224528 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0983673 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073388564 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.10819869 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069047233 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101323033 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068587614 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067412209 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097410397 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062995664 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070454437 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.10985784 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110492423 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067585462 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065546179 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.1096897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072807484 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067445331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083885355 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074243807 seconds)
  done (took 9.774696985 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.0955538 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092331402 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096774292 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082754116 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122759754 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093606696 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10267611 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074172646 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069393571 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111882692 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06844137 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103704396 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068504235 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076754062 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122838638 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075214813 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097410871 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076298328 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071437201 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134569127 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082647797 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.10858345 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079585499 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096167663 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072790094 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079577048 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.122435142 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078836503 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105878235 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084773387 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.07977692 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122086041 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085415347 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098308598 seconds)
  done (took 4.27350026 seconds)
done (took 38.317410688 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.189050111 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.393104696 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.181806226 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.047394018 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.207233489 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216849325 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194355035 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.182131818 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.420717612 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.184816427 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.432215609 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.815132003 seconds)
done (took 58.595966511 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.272179357 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32340327 seconds)
    (2/2) benchmarking "String"...
    done (took 1.451780363 seconds)
  done (took 3.902614808 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.538561633 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.050047016 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.436893546 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.182718958 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193705228 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.480667089 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.763631682 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.010022089 seconds)
  done (took 27.245520435 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.182508373 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.543969209 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.460094687 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.459492653 seconds)
  done (took 17.77371213 seconds)
done (took 58.863331559 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.210622003 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.21882131 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219186546 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.173161459 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.282911629 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209523087 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.518874658 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.410972641 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.178396163 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184730047 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.178024281 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.18588404 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200655192 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.508918638 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.181560399 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.179311211 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.190769831 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.636023828 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.545106313 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.17888205 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.192806382 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.215130544 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.19089946 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.18230859 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.179774117 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.178673433 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.19731159 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.177703457 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.23973962 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.17797525 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.258820252 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.66173297 seconds)
  done (took 190.57148267 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.177756069 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.258501987 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.33532193 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.199438866 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.681285503 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.377837383 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.313281012 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.72499552 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.193606748 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.195931051 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.511973041 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.176507831 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.572603861 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.140407087 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.184483385 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.238499035 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.48688494 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.551401985 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.190129344 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.490195342 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.19382196 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.41902416 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.326510883 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.444826906 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.197900327 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.228665071 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.203899093 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.19332831 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.365644762 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.423744992 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218578824 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.207486361 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.713129151 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.034897914 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.18729093 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.205862123 seconds)
  done (took 149.689451728 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.432984543 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.177151956 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.178033488 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180046535 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.203198334 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.17676817 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.662061878 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.668291985 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.677172956 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.649936133 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235902066 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.335925602 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.175461665 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265001863 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.188870977 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.178170094 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.190947942 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.201964104 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.17832144 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.176916978 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.659605413 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.18947725 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.287675038 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.18375724 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.173345152 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.200219516 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.56751346 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.173447597 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201397816 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.480600537 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.213484739 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.17359691 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.407412473 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.852052493 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279385057 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.176042815 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201500562 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.174584182 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.43576487 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.174907991 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.174510915 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.178488157 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.685181244 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.174613458 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.647081992 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.177135759 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.00903416 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.175064846 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.174866103 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.175316018 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.451794507 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.467523391 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.175558358 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.175950874 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.177220188 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.175304574 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.175865431 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.174606153 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.201357082 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.521895551 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.266904049 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.175484966 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.177837004 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201694074 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.175046943 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.263526215 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.177311588 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.625186552 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.230026236 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.28189636 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.637025244 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.177140462 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261947684 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288703226 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.174294839 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.174731106 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.174850627 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.174860937 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.175090649 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.276391591 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.174054526 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.522403622 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.174958534 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179864149 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.175749895 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.231810871 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.263443471 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.173610806 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.400784914 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.174364867 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.174653288 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812188573 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263083507 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.174182772 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.175009825 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.174549853 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.527185008 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.634529678 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.303240552 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.175343738 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.527817104 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.176446641 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.535894315 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.626741592 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.673783007 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.177035708 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.277991164 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179643898 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.176958956 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.175883238 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203691734 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.175501082 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.233641927 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.174858673 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.571339116 seconds)
  done (took 340.165894242 seconds)
done (took 682.987792087 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.856425261 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.83619433 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.936317378 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.835308914 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.818763119 seconds)
  done (took 10.402872526 seconds)
done (took 11.523130992 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34014544 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.339126008 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.22713873 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.340934507 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.201567359 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.35554874 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.31963635 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.195761158 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.268494315 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.24113947 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.267188112 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21883845 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200651432 seconds)
  done (took 17.636921555 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474740312 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477430337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.240521221 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.47466015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216929164 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.473775884 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.367251177 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.371242035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.360760825 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.19149165 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190673508 seconds)
  done (took 15.961864206 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478117651 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477243269 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243552627 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.476640628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.217823857 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.48169156 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369513458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.376480937 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.362448072 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.191438368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.189674568 seconds)
  done (took 15.987383798 seconds)
done (took 50.706846619 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.185668377 seconds)
  done (took 2.308113874 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.216383432 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.377666746 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.199803348 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.189876315 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.187290959 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.187516952 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.191109578 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.185722227 seconds)
  done (took 10.859851529 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.186124296 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.185834879 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.183513111 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.186893383 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.185796512 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.187254858 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.183135845 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.183708697 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.18683115 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.183690148 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.186478907 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.184151309 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.184238301 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.184461494 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.18488754 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.187788426 seconds)
  done (took 20.08873429 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.186078373 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.183099115 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.184179231 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.186109561 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.18426822 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.184972038 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.186054828 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.185075679 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.184463231 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.185275285 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.186519014 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.185196441 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.185533811 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.1855562 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.184995064 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.186544455 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.184637749 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.184829317 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.189685849 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.185287215 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.18545527 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.185491742 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.18594707 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.185062565 seconds)
  done (took 29.577090394 seconds)
done (took 63.956456584 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.013805415 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.623109189 seconds)
  done (took 8.762177766 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.187732222 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.188293294 seconds)
  done (took 3.502900267 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.187515818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.187808861 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.187107244 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.188103445 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.188581356 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.188001224 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.188101315 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.187459849 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.188173902 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.187714867 seconds)
  done (took 13.004237263 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.187598331 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.188760193 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.185703125 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.187982381 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.187931373 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.186841349 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.188108425 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.188606771 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.188123507 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.186776795 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.188642698 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.186475761 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.189316877 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.186610406 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.188705678 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.186834539 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.18718912 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.18638613 seconds)
  done (took 22.502718841 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.190251836 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.189583687 seconds)
  done (took 3.506223922 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.187280702 seconds)
    (2/7) benchmarking "second"...
    done (took 1.187304202 seconds)
    (3/7) benchmarking "month"...
    done (took 1.187646429 seconds)
    (4/7) benchmarking "year"...
    done (took 1.186670512 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.187272328 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.187587708 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.187392873 seconds)
  done (took 9.437554419 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.190766135 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.364361035 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.441204544 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79265083 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.191842444 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.193709114 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.025566045 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.193155352 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.195302509 seconds)
  done (took 13.715665387 seconds)
done (took 75.556737333 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.160213164 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.184823303 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.937780164 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.185889481 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.202154934 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.52637038 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.18781158 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.298510408 seconds)
done (took 36.811636372 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.195273897 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.872143725 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.879785161 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.186390545 seconds)
  done (took 11.066397005 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.170285198 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.012697886 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.18299176 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.132579097 seconds)
  done (took 17.628583284 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.739635046 seconds)
    (2/2) benchmarking "read"...
    done (took 1.514392306 seconds)
  done (took 4.381616222 seconds)
done (took 40.399236763 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190144123 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.191493973 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.187709398 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.19138665 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.187642477 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.188838759 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.187474209 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.19054066 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.1905803 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.191183037 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.191090081 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190777218 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188055704 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189361501 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190641187 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.188090712 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189252956 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.191998992 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.190748188 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188532684 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.18899279 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191348798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.189377409 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.189684834 seconds)
  done (took 29.683014425 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.19192749 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.190107646 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.191061224 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.192301782 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.18956568 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.192412016 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.192114279 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.18936942 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.192644829 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.192457236 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189830326 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.189905026 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.19265385 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.189689391 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192673677 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.189666647 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.192970898 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189512278 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193335144 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.19009652 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.193031896 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190645165 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.190065516 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193026955 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.190680909 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190496039 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.192805708 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.190939521 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192922054 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.190545815 seconds)
  done (took 36.869210499 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.197088721 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.198652954 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.193298503 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.192708806 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.193822318 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.193190425 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.193037745 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.193703488 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.193114082 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.19338381 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.193574682 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.193604489 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.19289742 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.193631764 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.194475361 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.193154817 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.194058121 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.194270927 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.193865817 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.193595392 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.194385804 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.194484713 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.192476384 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.194413277 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.194368108 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.193973366 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.193556668 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.194424969 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.194360523 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.194438725 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.194494251 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.194599721 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.195553071 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.194468679 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.195172803 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.194607434 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.200908911 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.202357163 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.194846442 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.194510324 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.194496092 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.194944707 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.195244834 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.194517052 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.194640116 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.195269458 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.195376723 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.196073561 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.196250796 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.195414236 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.195322917 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.195346533 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.195362376 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.195483822 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.196038279 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.194879122 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.195917498 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.196394839 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.195263844 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.196031239 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.196053362 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.195927952 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.196060487 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.19657783 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.197510188 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.197330716 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.196870224 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.195843045 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.196766353 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.197079935 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.196278931 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.196490653 seconds)
  done (took 87.181125245 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.196479723 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.193959799 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.194263296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.194801977 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194966221 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196803829 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.193765814 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196739877 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194039914 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.196817273 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197606973 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194557501 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194944485 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.197441397 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.1980616 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.194388033 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197757903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196119256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.197771288 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198223232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198165913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.195498273 seconds)
  done (took 27.447383117 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198472278 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.197593829 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.195454509 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.198220793 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.195737263 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.19836177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.197465846 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.198620061 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198803742 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196686645 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196465866 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200401091 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.195148736 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19560661 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195411005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.196754773 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200100465 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.196594478 seconds)
  done (took 22.687297427 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.196153565 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.196361293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.198390738 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196241574 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.197286714 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.199189521 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196926603 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.200491308 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.198779585 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.19691857 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.199131362 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198865407 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.199736033 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196700632 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199379394 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.197217336 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.200183911 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197437805 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200219402 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19717213 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.198361207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201111896 seconds)
  done (took 27.498026288 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199301206 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201057586 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.197805388 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.197970956 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.19759644 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.1993468 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.200284437 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.198261513 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.200424673 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.200224268 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197269202 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.201286564 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.197577497 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.198337726 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.198570619 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199308281 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201001474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.199265155 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201545728 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198265338 seconds)
  done (took 25.121706196 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201888025 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201318423 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203030258 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201768519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202172494 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202974848 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201900424 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.202272877 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202441885 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202106787 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.203100031 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203011701 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202551622 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.203225208 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20214915 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203505006 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202804379 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203183103 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202872017 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203839638 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202587337 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202699028 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203142488 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202318618 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.204159454 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202992035 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203963642 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203382384 seconds)
  done (took 34.816070869 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202990811 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20288131 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.199787243 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.201087917 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.201127876 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.200855516 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.201122822 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.201257278 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.202663473 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200196663 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.203122415 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.203728233 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20363442 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.203043824 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203319352 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.204274538 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204162365 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.201334706 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201884765 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201560724 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.204628756 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202846859 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.20377071 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.201016155 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200958085 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.203549054 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201547582 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201473172 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204867194 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202088343 seconds)
  done (took 37.211187884 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.222625192 seconds)
    (2/2) benchmarking "in"...
    done (took 1.222692764 seconds)
  done (took 3.586082504 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.201214581 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204397722 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.205128044 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.202652494 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202862206 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204925039 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.205482016 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202962552 seconds)
  done (took 10.770669155 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.204653836 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.205080324 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.205157378 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.205243191 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.205555958 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.206234335 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214861868 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.220777426 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.206949507 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.206276374 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.21117908 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.212429086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.211726708 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206522889 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.206868694 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.208069683 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.205868493 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.205677796 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.206026011 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.205431328 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206227393 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.20942034 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.208805306 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.203512873 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.206917333 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.2196854 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.213706718 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.206055612 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206274588 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.212923834 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.206834848 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.203998215 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.205973047 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.206183856 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.206981966 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.206873416 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219798494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220739123 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.214874269 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206956089 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.206854245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.204594545 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.209135449 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.209597862 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209103027 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.207748525 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.207132888 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.204917425 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.206115109 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.209939657 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.211029598 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207380849 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.204680559 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215577498 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.210555442 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217421448 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.222654449 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.209735392 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.214993662 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.221037034 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.222870197 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.214741989 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211232354 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.207927587 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217773809 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.230455871 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218299867 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.220985983 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.207253425 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.208352843 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.219142938 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224829491 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.218240308 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.209049165 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209103345 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.20920002 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.209947506 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209202768 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221538078 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229352052 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.209234689 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209507019 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.217987528 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230621314 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.208539005 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.209788353 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.209152349 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210138298 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.211822973 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222263503 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.22435621 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.209208491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.210207446 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.209427497 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.213738369 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.209767751 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.208803165 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211639045 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.20830736 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.209733757 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210275284 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213896016 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.219190104 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210028166 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209280597 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.220848575 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.211480876 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210057829 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.222295347 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.210903731 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210335975 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.21152952 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.218498394 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.207930483 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214381513 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.219231899 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.21181946 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.213152695 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.211475922 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.212246572 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220339249 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.237678886 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.211265849 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.211789014 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.216897318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.222113033 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211213095 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217490656 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.211300575 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.209432262 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.208808755 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.214226059 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.211874022 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.214842658 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213029602 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215133515 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.209108665 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.211699933 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.21282604 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.214336161 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.215166649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.213410886 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.214953009 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.216368022 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.213322221 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.215102886 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.221174771 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.213818632 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.215131852 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.214841238 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.210866412 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.213327988 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.215655178 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.213088287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.214383114 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212729089 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.212581285 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.212859282 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.21554836 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.213024972 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212942304 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.213685525 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217178534 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.213562497 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.221010316 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.212973986 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.211359659 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.21463804 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.213927564 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.213330182 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.213294284 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.213318242 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.216152649 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.220116408 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.213226883 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.214163645 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.219379494 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.213774081 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215058695 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213999428 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.216888862 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.222075901 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.213776337 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.223543775 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.214741338 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214592412 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.213829139 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.215387167 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.213756354 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215004348 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.218120479 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.221036882 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229299506 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224138221 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.215460336 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.218586476 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.214923352 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.217184684 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.221476002 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.214093021 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.215910116 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214975801 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214021812 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215137614 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.218197815 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.214247403 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.21503148 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.214893191 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.216367022 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.216229176 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215123738 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.216401813 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.217707882 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.212961778 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.215998358 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215564334 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.215435601 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.213065113 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.215337564 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.21548043 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.215744051 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.215189644 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.227364413 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.214041717 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218282979 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217038838 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.21777537 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.216209834 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.216961095 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220494711 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.217892723 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226803435 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.232951088 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.217925716 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226075633 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.231831703 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.216870468 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.220874095 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.217313954 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.214666662 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.220451867 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.223950513 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.217339623 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.217901954 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.216870246 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217873662 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217659573 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.227544429 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.216031187 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.216290515 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.218317408 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.221700014 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.215542004 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.221712841 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.219332592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.220357574 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221849266 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.21946057 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.218520473 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.220996393 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.219416024 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.217275999 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.218365055 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22094171 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.225524631 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.225397748 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.220903735 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.222749713 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.220401051 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.221889307 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.220242165 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.218362843 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.218594888 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234528163 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.226023608 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.228091466 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.222680209 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.220178112 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22780754 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.220259338 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.223586957 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220170573 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220220937 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.220623057 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.219026901 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.216634736 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.220859358 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.220102502 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221351388 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.221680605 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.223300708 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.221214019 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.218477793 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.219659217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.220211975 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.220441748 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.220439693 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.22019184 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.224996885 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.223088773 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.220086571 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.221095209 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230499383 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236837588 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.224160191 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.22123225 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.221324023 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.220656253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.223311421 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.22166585 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.224220707 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.227969609 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.224345161 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.230772749 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.2232202 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2331443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.221474252 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.224164639 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.228322569 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.219273751 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.222098206 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.222697588 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.221263984 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231680088 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.236714937 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.222793725 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.224117586 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222436455 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.221675826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.222166186 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.221840301 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222445143 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.223040141 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234832674 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.23808581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.225215832 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.225824551 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.220466164 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.22171652 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.222619951 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.221364554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229852007 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.222994296 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.224503897 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.224186172 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.224222597 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.223259214 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.223157681 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.222864968 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.220941546 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.223888749 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232582529 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.238635538 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226547159 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.223812226 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.236497309 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224043651 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232916441 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.237973232 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.224788441 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.223878508 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.223499526 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.228137372 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.22410585 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.226489606 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.223307581 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.225165747 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.22714531 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.224253292 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.228503479 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.224942254 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.224235835 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.224014476 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23426919 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245542828 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.225978411 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228488851 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.221823967 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.226148159 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.228170256 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.224352215 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.223376089 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.227634899 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23485146 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231940908 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.225824 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.225410527 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22580278 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.225239109 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.225676246 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.225662952 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.22493819 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.225516019 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.229192284 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.225604144 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232615031 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.22631617 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.227595246 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226924613 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.227224962 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.237647899 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.226593929 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.22834245 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22639365 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.226076522 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.227648565 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.227629387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.226627172 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22832798 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226593704 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.228326602 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233115488 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.231505825 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.229978536 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.226863877 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.225857449 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.227666735 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.229049069 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227213163 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.227815177 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.227605969 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.228051581 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.226240406 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.230121635 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.226801218 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.227338853 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.229566204 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228304968 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230088397 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.23314211 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227725142 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.225051135 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.227254551 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22772251 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.226866402 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.229255707 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.240460108 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231323194 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.236932673 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.235156525 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.232274613 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.228429414 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.230958324 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.236061646 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.227373439 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.228919666 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.22866444 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.231800795 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.229999077 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.231086067 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227411187 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.238790788 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.230160604 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.229294948 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240862636 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.244467411 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229086949 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.229953244 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.231333953 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.229934887 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.226085078 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.229009781 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.228866551 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23947226 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.248038197 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228476293 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.231461115 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.227934459 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.230101921 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232310132 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229949539 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.231244902 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.226443708 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.230185107 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229690605 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229695685 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.22670748 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230315971 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.229306268 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.232956068 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.236419856 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.227438892 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.233480789 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.230655361 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.231796966 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230445623 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230127612 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.228480366 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.228148103 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.231139297 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231323515 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.231270471 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.234848223 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.231616285 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.231581409 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.231138917 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231983719 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234186238 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.24011124 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.236781209 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.227899672 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.230563395 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.232472018 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.235297122 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230376254 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.231089021 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232132494 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.2343602 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.230856019 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230912262 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.230391347 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.235189969 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249506183 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.245865096 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232253468 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.232701573 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237906486 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.231304786 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.228869675 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.232413794 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.236312374 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.235223351 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.238648437 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.232446603 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240407746 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24750257 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.233450946 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.235940816 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.23591022 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.239586674 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.236139472 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231752509 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.232431304 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.237374658 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.251042987 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233909018 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242809524 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263252525 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.248131648 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.234838195 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.233669261 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232206103 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.233426385 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.234665995 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.233415607 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.232574227 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23369759 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.233409518 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.234358149 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239510582 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.236644145 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.233426269 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.232353948 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.234328069 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.23663046 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.230861914 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.234061243 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.233720218 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.233572282 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.233930986 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.234040806 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.234619507 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24849427 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.245141505 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.234054197 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.234531257 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.231137627 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.240060771 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.237239249 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243808392 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.241330277 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.23469793 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.234838077 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.237930207 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235616402 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.231702413 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.237274058 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.23626059 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234299092 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.231931971 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.250337877 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242937951 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.242846181 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.236016944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234860067 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.236345513 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237335009 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235994838 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235004855 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.239360422 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.237256644 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239875938 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.234770855 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.235509688 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.238445778 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.241695731 seconds)
  done (took 730.155871047 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233276288 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232897551 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.233580043 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23268464 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23322328 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234068355 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233498696 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233086602 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.233494197 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.233207683 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.233705233 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234411151 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234499192 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233919821 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233219164 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233812803 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234299243 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233844476 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235308697 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233946225 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234723604 seconds)
  done (took 27.080798136 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.235743841 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.233368614 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23501812 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237747407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234036342 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.236753577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23418099 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237367569 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237526888 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234179543 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236229238 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237959502 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.235013234 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.234461701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235615192 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236370352 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237291091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235574229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.237670591 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234473766 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238092708 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.23529678 seconds)
  done (took 28.362694973 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.237645694 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.238153672 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.237604477 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.235476916 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.23925803 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.236590673 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.238733391 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.238210857 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.238369515 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.240220832 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.237619256 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.240083077 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.245107075 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.242818177 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.242748969 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.238012445 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.383240917 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.238995069 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.238814395 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.239263734 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.237199604 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.247725632 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.236116879 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.237390087 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.238439761 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.239589984 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.239929663 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.239032471 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.239163066 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.240083557 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.242411103 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.238667393 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.239820041 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.242433705 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.240004273 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.240955087 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.242710646 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.239834231 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.236408588 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.240228367 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.249947228 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.258972223 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.240514048 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.248994461 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.240942774 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.24095398 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.24320883 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.246911925 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.238623366 seconds)
  done (took 62.109912034 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.239563335 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.240664951 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.237777968 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.240390242 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.240899307 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.240594864 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.241687098 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.241032842 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.238644852 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.2390724 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.240353201 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.238091521 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.238460089 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.241594292 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.240619562 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.238472968 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.238149022 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.23784655 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.238142865 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.238616812 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.239074298 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.241571482 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.242182857 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.238977518 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.242624724 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.238661899 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.240135184 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.241654509 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.240566727 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.239013445 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.242127698 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.24098989 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.242403702 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.239144133 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.240344177 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.242155212 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.242956496 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.239966485 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.243054469 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.238642183 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.242635015 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.241960545 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.242683137 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.242636433 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.240252002 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.239254696 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.239213097 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.239729597 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.240655139 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.242662392 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.24311316 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.240271229 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.243968969 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.240814389 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.243136172 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.24362517 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.240817697 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.24170104 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.244229984 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.241688638 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.240803145 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.243670565 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.241987736 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.244175652 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.243047124 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.241382954 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.241604758 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24408955 seconds)
  done (took 85.561214806 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243766051 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.243262415 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244198269 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243810559 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244684502 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.24371972 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242625392 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.244854915 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.24455475 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244498486 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244596948 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243387739 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.244566439 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.24496782 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.24471565 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244820584 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.24430448 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244733114 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244143047 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244527977 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.244854078 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.244585092 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.245377302 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245002504 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2448026 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245592221 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245314115 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246011798 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245927349 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.246263998 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245525595 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.24478603 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.245829907 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.245742579 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.246465657 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245810946 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.247003609 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246689804 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.245648062 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246337256 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.24642444 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24638927 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245678088 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.245687204 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246881542 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.246257634 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246023698 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.246343837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245997711 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247108236 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.247317989 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24700728 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246676937 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246572957 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.247377819 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.246516145 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247083374 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247769827 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247938824 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.247785144 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248102605 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.247546179 seconds)
  done (took 78.411021653 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246744888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247086135 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.245328735 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.245342335 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24705602 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245530957 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246930185 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.247534509 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247989625 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.247933978 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248003798 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246185944 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244611542 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248660277 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244486343 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245443993 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245644536 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245208695 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248189922 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246117222 seconds)
  done (took 26.113831629 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.244668465 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.247889082 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.245799891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246328624 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.247828427 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246560191 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.248575899 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248607646 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245997079 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248397651 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249097104 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.249297296 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24574251 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245701466 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.248418571 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.246177666 seconds)
  done (took 21.138548264 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.246953266 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.249061814 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.249303595 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.248283717 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.24647507 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.247126437 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.248966847 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.24648818 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.247371816 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.248743502 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.249348354 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.25007587 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.24976031 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.249990588 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.247690937 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.249720872 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.247225222 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.247176647 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.250145449 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.249940157 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.248201935 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.247679764 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.249307569 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.250824556 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.247966603 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.249651183 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.247670184 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.247833327 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.247995512 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.250772407 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.248480819 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.24876539 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.248233885 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.249062986 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.252507233 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.248833722 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.251666452 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.250393046 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.251640757 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.251343087 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.251618351 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.249673178 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.251345687 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.251713557 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.249037783 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.250999688 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.249309599 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.248922837 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.248467827 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.24847608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.251594991 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.251545077 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.25076711 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.252610681 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.250645577 seconds)
  done (took 69.900774605 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251269224 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252119106 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.249416193 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252283901 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.253028889 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.249920636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251962413 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.250057385 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248400729 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.252225653 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249881203 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252311358 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250443267 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.253334555 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.25133083 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252519676 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250297924 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.250600678 seconds)
  done (took 23.708489348 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.250287366 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250672604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.25277614 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.250905573 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.250263892 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253254272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24994218 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.252701987 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253105654 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.250389312 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250100163 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.254064014 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2526577 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.253452726 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252180965 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250776218 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.253626896 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254510941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.250800017 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252076614 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253937752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253664412 seconds)
  done (took 28.734346199 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.252342763 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.253935828 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.270759103 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.295341932 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.282075076 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.252449594 seconds)
  done (took 8.795192766 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252156045 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254572668 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252371829 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255592106 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254172852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252610925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251361021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252089934 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254690443 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252939312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252016916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255907067 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25563441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253252343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256268482 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255293297 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25321126 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253562701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253997252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255356832 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253671634 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255871388 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252588647 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252581589 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253606514 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254369548 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256101854 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253130847 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254170553 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256408121 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257009323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253200621 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256396298 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253491233 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256967181 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255647119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253627791 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256477301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256176067 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25433718 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.256531296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256437964 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257105258 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253866266 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257150271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253808702 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254564379 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253901202 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25379201 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257099421 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256660024 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253909444 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25711826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257973503 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256357874 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258103138 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25591393 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254642337 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25702749 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256131811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253901175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257976537 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255394151 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254545674 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257872056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254295713 seconds)
  done (took 84.016669827 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254843283 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25508755 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255581427 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25698461 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254777916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255721827 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25438083 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254754968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255257984 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255416393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25852075 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255800514 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255217517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255689181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255128748 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255297712 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255841782 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25589466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256486791 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259266764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256567624 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256756626 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256274939 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256043842 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256202343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258451399 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25582456 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256295934 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257549695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256612918 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257218208 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256130588 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256554241 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.256536257 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25599281 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256749379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257612189 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257695483 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256667916 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260134469 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257298764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260084136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256961679 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257070414 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257712021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257943952 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257903689 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257450259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257246253 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257676312 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25735969 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258996924 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258815065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257849852 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256873064 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258236788 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257852237 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258031618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257246464 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260748904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258465776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258589714 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260415621 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2578756 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258007622 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258456831 seconds)
  done (took 84.159839028 seconds)
done (took 1702.248749702 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.358639269 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.292049507 seconds)
  done (took 13.845974975 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.421650199 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.375268379 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.259719664 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.287117888 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.259353948 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.283746187 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.280723432 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.259925388 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.259438648 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.259953827 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.259704102 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.447507017 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.254773468 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.258729671 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.260214304 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.352749577 seconds)
  done (took 41.987381033 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.285515968 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.265638036 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.365792756 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.279791533 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.286444278 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.43039948 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.315502339 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.266530603 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.4143203 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.301860546 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.655944896 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.285725744 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.265478334 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.248547044 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.280575291 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.431632018 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.490141375 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.659636932 seconds)
  done (took 28.726192128 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.658656548 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.285546792 seconds)
  done (took 9.141375697 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.287149138 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.268476744 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.255436712 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.290732275 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.292066989 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.28801911 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.312429519 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.306461795 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.282159658 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.314293127 seconds)
  done (took 64.103796433 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.28309306 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.265597527 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.265928478 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.263921546 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.257513478 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.257195419 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264448301 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.258925384 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.486171679 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.377135424 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.278610768 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.272502882 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.265555729 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.265713896 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.263092214 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.300185618 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.403293256 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.261799295 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.261546068 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.271163639 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.265719854 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.353228794 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.301759077 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.263165647 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.376701548 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.502913172 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.267413532 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.272002554 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.383406537 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.263088975 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.264578783 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.266295479 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.268272139 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.826998398 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.79513532 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.271514542 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.288602042 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.274767221 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.263858272 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.38249339 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.266718196 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.273799137 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.258845301 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.774591227 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.42277898 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.369816292 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.404686006 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.269370303 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.268769971 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.326026736 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.269814904 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.268063176 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.292880998 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.993255037 seconds)
  done (took 106.634408976 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.305914936 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.754311694 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427234572 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.281450978 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.093435665 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.024976138 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.261066639 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.513173305 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.265538261 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.2588993 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.535563718 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.732761592 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.269871563 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.329187087 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.777577852 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.350834642 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.260209636 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.115420624 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.265347073 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.263522964 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.66499609 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276076184 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.261272162 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.301010765 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.298270926 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689760684 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.575986574 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.815097113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.267164959 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.261546769 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.700358611 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.272388287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.272271283 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.263507898 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.519499107 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.582199778 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.558660223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.263683665 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.278042094 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.261654001 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.279255465 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686734381 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.571574581 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.26207676 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.263038935 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.692051482 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.261655482 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.271492084 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.267459845 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.466937987 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.991777308 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.264698887 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.560788796 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.262947252 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.602066125 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.345644674 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.288675162 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719258444 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.262460208 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.450048888 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.274231426 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.262309195 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.262933976 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.264853998 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.266997502 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.575902642 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.661701149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.269065149 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.577428811 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.693001563 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.263435987 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.757536782 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.178023474 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.292654028 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.320291859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.262850908 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.967067303 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721760574 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.320172507 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.263962181 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.562502974 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.263702977 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.529473615 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.275321906 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265160161 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.676315208 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.278926652 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.335032672 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.263856903 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.26594662 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.057995559 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.266330324 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.530085743 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.293619462 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.264663285 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.264543725 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.292644079 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.264186961 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.277665664 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.268260213 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.761509284 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.275300054 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.382176789 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28145145 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263432875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.266485625 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.265153399 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.265996533 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486839883 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.789256267 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.267229451 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.26685134 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.270802858 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.267466615 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.568953827 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.267676244 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.538831325 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.264734393 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264310628 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.270911945 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06905087 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.299391634 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.265634248 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.27008115 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.101593483 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.471305456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.282051078 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.264296012 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.266755698 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.279781556 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.494820853 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267896407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.32593631 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.269962608 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945804364 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.280133141 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.268093556 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.641067057 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.267779196 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.116296943 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.282330916 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268121412 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.562043932 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.526151746 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.603369802 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.270405261 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.266879375 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917453172 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.31696638 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.413425566 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283942167 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.251343718 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.467305374 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.503837907 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.268742601 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.816709927 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.268281501 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482213913 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.26969379 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.575440731 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.72764325 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.267173441 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275097428 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94855568 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912030186 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.063518565 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.270245543 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.5290646 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.267915153 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.709634094 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.26712209 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.268394109 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.850568681 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.269664774 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.276288956 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.268645004 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.268551188 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.33220228 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.442217363 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.058199183 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.27289948 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.695964526 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326220921 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.268424674 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.276069188 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.273310493 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.620747237 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.344422362 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.268959551 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.293248876 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.274815016 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.276484267 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707548636 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.217530275 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.27156918 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.421454722 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870030515 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.270541066 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.269186612 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.953649793 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.474918831 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.785566779 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292768647 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.546923708 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.270070894 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.309091035 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.031125714 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339030601 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707798317 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.269420035 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.270370003 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.836518517 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.27062578 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.317065282 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.271320814 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.271734527 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.775628314 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.271501699 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.274204791 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.504022844 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27112923 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533096721 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.272439743 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.289974698 seconds)
  done (took 1095.655208011 seconds)
done (took 1361.289835368 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.270751408 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.272300487 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.262924618 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.274513667 seconds)
  done (took 26.294059231 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.280196753 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.277423301 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.283195593 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.276884118 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.279511245 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.27897687 seconds)
  done (took 8.890180665 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.36213945 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.272013556 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.272598374 seconds)
  done (took 19.120016265 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.479338994 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.444261268 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.61509168 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.242808122 seconds)
  done (took 9.996875875 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.277902502 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.279655075 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.279586277 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.281053282 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.281706789 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.28219546 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.279618152 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.28228314 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.282422263 seconds)
  done (took 12.739819056 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.8739534 seconds)
done (took 83.127044567 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.331625151 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.282854017 seconds)
    (3/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.491402957 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.671704446 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.583240612 seconds)
    (6/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.844122931 seconds)
    (7/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.269410651 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.518866059 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.273751055 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.425726075 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.289696481 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.554732913 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.299200029 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.314166863 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.523638748 seconds)
    (16/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.631151292 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.301027896 seconds)
    (18/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.266746166 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.120934811 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.316982606 seconds)
    (21/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.275737882 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.450690528 seconds)
    (23/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.797595669 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.353175588 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.31063124 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.658888418 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.265643582 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.278345465 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.635808387 seconds)
    (30/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.300446205 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.276421574 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.890442413 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.381244956 seconds)
    (34/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.982407567 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.894101944 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.723579069 seconds)
    (37/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.359257478 seconds)
    (38/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.632994514 seconds)
    (39/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.40328897 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.81043365 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.408293525 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.123460194 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.378357066 seconds)
    (44/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.286233664 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.32390721 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.382856577 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.399712298 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.700830103 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.2908261 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.276351435 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.042213422 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.622111482 seconds)
    (53/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.298843182 seconds)
    (54/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.844952219 seconds)
    (55/309) benchmarking ("sort", BigInt, false)...
    done (took 6.289406225 seconds)
    (56/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.276671054 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.325438077 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.282894326 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.795767927 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.388060914 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.500611631 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.386459193 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.536822831 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.278659413 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.279833448 seconds)
    (66/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.288047459 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.495144991 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.621818016 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.290429668 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.831114582 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.336823262 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.038917783 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.277969028 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.066029089 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.887980796 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.535892845 seconds)
    (77/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.280205123 seconds)
    (78/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.92484199 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.817803284 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.845907495 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.548727521 seconds)
    (82/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.306489107 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.689821619 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.617754034 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.317062147 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.330821829 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.290252691 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.40871291 seconds)
    (89/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.435359254 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.601412593 seconds)
    (91/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.503622436 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.293662352 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.084934079 seconds)
    (94/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.615357574 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.432373802 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.339932256 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.270949037 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.296744948 seconds)
    (99/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.103675347 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.280471915 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.462791322 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.728196266 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.332071435 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.399728875 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.382877751 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.675479284 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.11927297 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.461294641 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.566859214 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.680299716 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.507207385 seconds)
    (112/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.403390123 seconds)
    (113/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.343562772 seconds)
    (114/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.46320968 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.385549124 seconds)
    (116/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.828462708 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.890903938 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.615937731 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.293864013 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.445009425 seconds)
    (121/309) benchmarking ("sort", Float64, false)...
    done (took 5.505973495 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.3812745 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.105756493 seconds)
    (124/309) benchmarking ("sort", Float32, false)...
    done (took 5.245007226 seconds)
    (125/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.455584222 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 5.045848209 seconds)
    (127/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.36614257 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.783082252 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.30248411 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.079290457 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.558130061 seconds)
    (132/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.61984635 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.276610806 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.305329041 seconds)
    (135/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.519750154 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.98795728 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.983719099 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.268807903 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.562922281 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.569953832 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.280452026 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.292794404 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.292096829 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.38393713 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.567517413 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.366344661 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.01807678 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.365232325 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.747836566 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.992086129 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.307771198 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.478087786 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.379388913 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.344917552 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.631755761 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.069550749 seconds)
    (157/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.585150625 seconds)
    (158/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.633260937 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.139834109 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.986400931 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.303882839 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.554778888 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.307644569 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.307183342 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.30764863 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.874146927 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.297021695 seconds)
    (168/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.340741691 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.994671641 seconds)
    (170/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.044738865 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.35011604 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.287566281 seconds)
    (173/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.284438979 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.284836804 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.273832233 seconds)
    (176/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.976823049 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.54430648 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.527809526 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.583072102 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.272288584 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.417345126 seconds)
    (182/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.36838126 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.299117026 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.13823738 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.346100789 seconds)
    (186/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.460626315 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.309392367 seconds)
    (188/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.466636935 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.437818313 seconds)
    (190/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.332318124 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.639755693 seconds)
    (192/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.465747185 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.28293991 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.401720641 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.325975836 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.27900798 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.312598577 seconds)
    (198/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.019917814 seconds)
    (199/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.271852585 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.75682202 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.459800564 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.446214144 seconds)
    (203/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.624820335 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.272555967 seconds)
    (205/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.442760568 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.2717806 seconds)
    (207/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.37932358 seconds)
    (208/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.74848938 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.603494783 seconds)
    (210/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.286394584 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.310371612 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.528146798 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.342911597 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.301300572 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.987391709 seconds)
    (216/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.286310273 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.461341136 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.082310328 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.337285718 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.367511122 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.815621335 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.486920958 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.823367114 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.348498818 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.04397686 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.420252554 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.817196042 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.361631506 seconds)
    (229/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.894239958 seconds)
    (230/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.750735033 seconds)
    (231/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.854833906 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.883268759 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.308792337 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.060581067 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.312287463 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.586606301 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.326605145 seconds)
    (238/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.875487288 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.538084538 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.288490079 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.298870585 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.28662257 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.371612955 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.469756152 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.338491869 seconds)
    (246/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.740059322 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.365783566 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.832818962 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060886203 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.318530616 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.300209367 seconds)
    (252/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.328446579 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.063398648 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.289176756 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.485027588 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.28871629 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.761299545 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.304296049 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.701310593 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.311461962 seconds)
    (261/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.601851651 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.32747709 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.674987879 seconds)
    (264/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.313505378 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.485953765 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.694941831 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.998654362 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.454909579 seconds)
    (269/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.41171395 seconds)
    (270/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.310955929 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.569795641 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.294927267 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.684370275 seconds)
    (274/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.898735173 seconds)
    (275/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.865418394 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.274318501 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.297083737 seconds)
    (278/309) benchmarking ("sort", Int8, false)...
    done (took 4.301058848 seconds)
    (279/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.287056269 seconds)
    (280/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.477016515 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.287446353 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.371537987 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.595979164 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.688464588 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.381596348 seconds)
    (286/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.290630134 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.421887327 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.14285051 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.469738509 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.487220533 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.386015878 seconds)
    (292/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.303055011 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.969455475 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.587691123 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.691339019 seconds)
    (296/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.284592506 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.334749978 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.288782143 seconds)
    (299/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.319242702 seconds)
    (300/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.374508733 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.968468519 seconds)
    (302/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.60048278 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.290248688 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.410841945 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.881292022 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.32463488 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.32173228 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.992404662 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.394523058 seconds)
  done (took 898.422931735 seconds)
done (took 899.639814868 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.322882699 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315337328 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.298788562 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.322154661 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.41061945 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.327636232 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.310513041 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.302595574 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.347222588 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.349493767 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.298838409 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.326388265 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.29984873 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.299412459 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.299886975 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312800108 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.222191331 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.300515482 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.315532762 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.3111591 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.3164958 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.297685042 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.351108099 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.327838015 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.304935331 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.3045649 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.304675389 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.318773182 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.412015272 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.304397006 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.304558041 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.312176973 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.222211194 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.299926694 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.298224436 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.319384519 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.311486812 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.310125919 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.305597199 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.332581542 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.591491699 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.3008493 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.302324841 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.302864852 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.302861693 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.306382303 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302473532 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.307911015 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314211112 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314665344 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.584414723 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.316358482 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.303424921 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.303184078 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.313491434 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.302186265 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.306125917 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318051583 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.320715688 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318281191 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.21611481 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.308409686 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.305431338 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.319052159 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.310247316 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.624906122 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.299209721 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.308316674 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.599642855 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.30840156 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.625362498 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.311464778 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.304925546 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.316825781 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.334663995 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.229149146 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.298968513 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.303559646 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.310533722 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.302093566 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.314449 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316039871 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.309415698 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.30485209 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316645554 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.33156868 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.315285439 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.304203828 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.31315764 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.324178662 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.310921728 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.314740037 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.308654769 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.299128477 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.315038491 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.308750175 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.30637133 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.306106989 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.309123364 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.316423466 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.60063122 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322342321 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.301343373 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.302680571 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.304704553 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.318157109 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.599902876 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.305413954 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.326888 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.354162513 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.307276466 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.22732668 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.308357008 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320483344 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.314460153 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.30947856 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.302219939 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.226568909 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.59757767 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.320166522 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.307222293 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.303033349 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321376101 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.308845971 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.303605011 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.235144125 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.308090069 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.320487679 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.427128537 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.317396274 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.338151832 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.304481281 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.309736014 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.333743365 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321320546 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.337769603 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.309944531 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321041251 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.32301188 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.303554819 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.317568699 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.317912422 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.309050738 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.313172772 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.302638209 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.335302293 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31968385 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319529058 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.329542674 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.429518089 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.305639676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.229292823 seconds)
done (took 218.859047325 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.366993673 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.304400302 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.389181346 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.304851905 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.404419694 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.40410667 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.30227892 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.302544731 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.301937638 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.732992951 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.303704285 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.30334661 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.299530568 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.303436129 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.389054015 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.305056219 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.302526946 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.648446217 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.305916912 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.376466518 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.299236895 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.302999635 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.305363142 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.691719282 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.302566845 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.301936856 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.375987773 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.305476721 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.653390135 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.299035014 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.301047581 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.654892595 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.396065658 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.322972321 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.315810984 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.314422724 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.405736993 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.321402867 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.387371719 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.387432209 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.391093809 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.345059234 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.308312939 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.302317296 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.309102612 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.307657924 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.30529449 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.334311303 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.307817173 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.304131969 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.691053142 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.31809976 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.305373629 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.305172589 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30727422 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.337008473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.30548776 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.307929365 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.398100557 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.308446791 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.370043284 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.693160872 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.714542379 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.308397094 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.30229465 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.306699875 seconds)
  done (took 146.73016846 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.373894167 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.382583298 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.416133833 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.309075727 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3595783 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.420645269 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.308361889 seconds)
  done (took 10.810707267 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.314048406 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30930709 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.359198682 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.359150817 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.30831651 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.4561306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308889037 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.320594942 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.306020649 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.361471328 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.30937741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309610443 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.315511122 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.305646994 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357978956 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.320258966 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.424596367 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.31132901 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310410682 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466729091 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306479648 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.317364983 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.36244105 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.322302956 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.30963314 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.317154873 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880043234 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310463506 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307134352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.310743955 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309492395 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.349309814 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310895876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.312816886 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308292471 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426467121 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.310157033 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307984953 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.310841092 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.309475877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.31065288 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.310693179 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.311745896 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.307573546 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.310320074 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.335530089 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.311183972 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.31079577 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.311030979 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.311123826 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.363374029 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311731003 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.309364548 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.308487306 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.366927003 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318606528 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.31245676 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.308886749 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.311961287 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308509012 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.467571683 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36122518 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.311313116 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360008004 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311515258 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.311784155 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.311733437 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.311428678 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367580156 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.312201503 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360779035 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.309305967 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.46746767 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.335980003 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.313548415 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.315444543 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.315369151 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311930035 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.307498894 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.319702687 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.309262741 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314430879 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.320531811 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309109945 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311586239 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.416610622 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421373291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.309766844 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.326590656 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320609933 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.310268091 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.367273627 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.312953804 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.310823888 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365858229 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428137524 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.366806946 seconds)
  done (took 151.036368438 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.316976752 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.321212389 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.314709707 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.329495652 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.313260867 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.314019691 seconds)
  done (took 9.15615636 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.316046306 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.314382873 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.313478701 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.313144858 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.314951623 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.315513176 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.315212936 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31627922 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.317102071 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.314392855 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.314585502 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.315706796 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.314466106 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.315445383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.313857018 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.314597841 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.315929133 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.311682688 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.315140168 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314787156 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.428951509 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.314984459 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314830496 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.315822506 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.31936126 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.315511951 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324844834 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.31538932 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.315355177 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.323613191 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.318264974 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.315827626 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.316988519 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.32109034 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.319321567 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.317618887 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318269808 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.317560737 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313759569 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.315631552 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.316593362 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316266891 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.31561458 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.318534416 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.319323274 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.322713221 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.322372754 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.327329009 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.317165865 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.320739859 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.319306921 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.317927743 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.318169682 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.318388009 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.323827005 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323438532 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.323134345 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.318618467 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.318334098 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.318991602 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.320306052 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.320501874 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320557535 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.322332035 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.316211667 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.319409144 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.321774507 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.323020925 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319328995 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.319782777 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.31926987 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.317385733 seconds)
  done (took 97.245784397 seconds)
done (took 416.216799138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.572060974 seconds)
  done (took 7.825176803 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.319967468 seconds)
  done (took 7.573619541 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.096291014 seconds)
  done (took 20.353672137 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.352760161 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.423133085 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.310254332 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.319891567 seconds)
  done (took 26.657575852 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.500991711 seconds)
  done (took 7.752194881 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.313496708 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.310112554 seconds)
  done (took 13.87716463 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.816123836 seconds)
  done (took 8.068219559 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.845741226 seconds)
  done (took 8.104044339 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.309844993 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.310410703 seconds)
  done (took 14.139261623 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.300353987 seconds)
  done (took 7.551158806 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.058174233 seconds)
  done (took 8.312008451 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.31062593 seconds)
  done (took 7.564400712 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.379032597 seconds)
  done (took 7.630888208 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.728379064 seconds)
  done (took 8.980617359 seconds)
done (took 155.64311598 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.312751992 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.314631615 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.316350369 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.313424662 seconds)
  done (took 26.508671217 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.353735122 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.353804192 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.354688461 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.364646289 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.355909545 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.353706207 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.345791377 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.345342444 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.364414348 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.356464612 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355269257 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.355876379 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.353067481 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.345970085 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.355525449 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.355141078 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364719037 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.354094101 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.347158799 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.357624085 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321208512 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.365226438 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.357039829 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.321076155 seconds)
  done (took 33.71191841 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.516777324 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.391727114 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.472879476 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.372716999 seconds)
  done (took 7.007249905 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.372948139 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.373832845 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.385721556 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42392384 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.450787367 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.383419951 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.347504986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.34261776 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.328786918 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.374024565 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.449415374 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.390330224 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.458954385 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.322114977 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.502467963 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.321097913 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.321706698 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.373063626 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.423904259 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.439059672 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.321968794 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.372243861 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.376836437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.390173791 seconds)
  done (took 34.50134247 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.319442048 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.328533651 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.326649069 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.320050826 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.320163588 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.321257114 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.327237462 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.321319965 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.342000466 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.322665158 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.321396789 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.32172298 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.319716229 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.321098021 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.320132505 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.334419432 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.335334159 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.321242827 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.325687777 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.327651441 seconds)
  done (took 27.7532257 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.315391042 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.170072071 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.666978418 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.571667508 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.317512042 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.317421824 seconds)
  done (took 27.614917086 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.386266764 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.504328473 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.321467231 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.649987693 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.726743872 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.32305874 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.323942478 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.538978645 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.818243035 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.824737261 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.376672756 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.384421279 seconds)
  done (took 19.436362396 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.317357961 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.319285254 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.319361098 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.333979248 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.374012121 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327097246 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.329760231 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.316316159 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.375840165 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377313989 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.327077315 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.374499977 seconds)
  done (took 37.349121792 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406187113 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362462828 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.26534225 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042567523 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.696552591 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529949375 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.101351933 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.744193875 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325409095 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593076595 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230742194 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422650151 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.572808848 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319044809 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321416723 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299508213 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54444618 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78517271 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323284497 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.078056044 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346122369 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324997616 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.254335621 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.346961136 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530966857 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449827426 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.580396138 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320259669 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583367416 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331991014 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329303295 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319670338 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5931398 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972830562 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414602245 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330382393 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.006896396 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.03325013 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.318814009 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.093744545 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.931670564 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324529781 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330521449 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320971777 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.254949105 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321076374 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753821491 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.328687042 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.031416296 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320455235 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332472221 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415004948 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.325073099 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.135988492 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360765257 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321678687 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.31857961 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327607802 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895268953 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.566403393 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325635468 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.258053186 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428387111 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.089563243 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904454992 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.425257729 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.325648415 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325270738 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256854201 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.180013975 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341325428 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469504463 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343412487 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971112701 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026743712 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.232115333 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264604078 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845052758 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329597185 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.258326324 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550602797 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322193411 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259160927 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.263785637 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.258065483 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997190034 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331456473 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.67847524 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331355703 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.74514987 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.334704674 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340908556 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346295197 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.545449298 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.351078186 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322468316 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.971476935 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479687684 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344845404 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.746409938 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259431579 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.328456933 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579244134 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.535104767 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324747984 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.290826239 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516319656 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329227817 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.341978087 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336251302 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.335299537 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.870687247 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336148047 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.583267054 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342644864 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.325078334 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038140756 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330491051 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.426582352 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.223380948 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571680722 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.075628339 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326806849 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407447658 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333987361 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325947033 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.21702573 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841826081 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.326762163 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.330189253 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328362499 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.338830644 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.32631277 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275217803 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.335084197 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253232995 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.327695379 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549086823 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333311512 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602657031 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261004325 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472262539 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417147654 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.549240962 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.45546907 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.323061993 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583814622 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325325372 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340495412 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34003522 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344815237 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425043221 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348117078 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.326299408 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583633571 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.33037984 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331189404 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.212604094 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331320398 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767455276 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.332257587 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.152599462 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870737085 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307337772 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334046979 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21721801 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.341837866 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391998146 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33232125 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337016262 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.039831533 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.121682264 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.333878228 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.332936225 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552106124 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337404354 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.10167618 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408141171 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.515567392 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874838943 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342712786 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.261836491 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.038689889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.020002629 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327703563 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26203579 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328819957 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338160346 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338687946 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.552890618 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875788943 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332952805 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.10933654 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.338006163 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339587338 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.334286754 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329196919 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.018528478 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.595071498 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333204922 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.34307449 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472530295 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.342890064 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262212161 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.332639835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333789893 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32923858 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328418877 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361704642 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.117292072 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802282691 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587417662 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.00436338 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342940037 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.193554248 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.361592935 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.329097162 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.01790902 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34905087 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.353205737 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338429116 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.340940349 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.113940649 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004083311 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900535828 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018260679 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830055845 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233672408 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.334540492 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331086933 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760503589 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267506641 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894182882 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510062879 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.7620973 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278989069 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5206554 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.475139702 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055654202 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342145751 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559469532 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224272702 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.034503684 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356634351 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542129702 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364933403 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.342223557 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263009444 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.620176489 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553873053 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.994793291 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410950517 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760437024 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.024101239 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348407015 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.3308287 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.67056423 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498074485 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.044654671 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.50346008 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341308257 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289688704 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81436743 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339391818 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.557929298 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92167823 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334121564 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.540062118 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27002205 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.342694485 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.342315233 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.337126537 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.531393526 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.342141402 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.586221365 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343196342 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265763244 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342787359 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832854202 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.190783315 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.337559101 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333294018 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051917483 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340737981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602648946 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.343618759 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.004461644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337236147 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268038101 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268219079 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.026195207 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33922508 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310325582 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807000851 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.425384462 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32243008 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35893634 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18476215 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587891354 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.348587651 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.882702733 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562984323 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.112850936 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359053513 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.435007278 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.093155624 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.337896445 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333660092 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.570641963 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159219177 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558291269 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.301360413 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.245460696 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.334249222 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549865913 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3353639 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334004649 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570178354 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.047989971 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.355644158 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013973205 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361295082 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306173186 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265740927 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441062985 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342014164 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415033782 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346587143 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.346633032 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.346437221 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499680661 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319839633 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3527569 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.350274326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429477723 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.633336145 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.013994439 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.340221102 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88810885 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038633185 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.893959882 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350842022 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335827247 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343511399 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271011498 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486012652 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.562994614 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611234138 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465290018 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.481924516 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358481136 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.103249779 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352896425 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551517393 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612289276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.232470071 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34834385 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.349147531 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.337674583 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349147575 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.548747796 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818977266 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87898773 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456358167 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347283841 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.768645953 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614032792 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337702117 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337631728 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93091391 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.342193516 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.689736449 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.346112823 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337804395 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487690214 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348981051 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995893108 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.351387287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.498175423 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.112681179 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.22672625 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596231356 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.764522067 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350252963 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892388585 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.004506864 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604836264 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40581756 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349135059 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.44628231 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48587976 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.336068075 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341978244 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338815623 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181742078 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.049094367 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.349107781 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897322444 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605491564 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.337324336 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.348163909 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361667253 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.349748484 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562808518 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029920086 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563551093 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351425495 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345407395 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.156021659 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897012379 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354825235 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274950499 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.343414341 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572131808 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579420561 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363399158 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.813953813 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.051684437 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884097805 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.3145177 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36264035 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340888633 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013994391 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89988822 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.027272737 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819613247 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909496857 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346199033 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616562938 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.34589261 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351482593 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61834098 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.345183239 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351707142 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352956419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.895455483 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074738667 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.34475349 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.182138589 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.280130555 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683929235 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964616018 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281358296 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352128911 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.522470502 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345500552 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47344924 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353325757 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.349911814 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341645645 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.071771864 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614626007 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.347196837 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.335829025 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.1549525 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358074455 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349892424 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567849593 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343503296 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.016499182 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.692343609 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596143358 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.342841028 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.333426786 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.347736766 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343811048 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329998828 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.542624721 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.568533448 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877080738 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.358105539 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.356173695 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348080523 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.560420813 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556605238 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343360968 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358019234 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34596833 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360392735 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.256544141 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.845287082 seconds)
  done (took 1582.88662876 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.368683519 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.353247644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.357839139 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.432306237 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.397384567 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.397098728 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.354612158 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.412799101 seconds)
  done (took 52.357459121 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.343934036 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.566282047 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.37371585 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.344080233 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.353728543 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.342969194 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.761297624 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.344630309 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.353725596 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.354467224 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.355991316 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.357968726 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.958276901 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.354154675 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.3566335 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.346819829 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.354016134 seconds)
  done (took 65.512509076 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.354959095 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.705490099 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.428654133 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.345301938 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.150666366 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.362942195 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.779734764 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.400796723 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.356075122 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.48758934 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.999780171 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.353372879 seconds)
  done (took 84.010472374 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.351675205 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.352145367 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.350917765 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.352939204 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.350753994 seconds)
  done (took 8.042105561 seconds)
done (took 2007.946923385 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.599413121 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.005317925 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.995075064 seconds)
  done (took 5.285426806 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.495017935 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.544534406 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.665382963 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.670637145 seconds)
  done (took 7.662447399 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.628708537 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.718420063 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.537263095 seconds)
  done (took 6.170466924 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.684924782 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.352000959 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.43698403 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.350786061 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.350347201 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.348606945 seconds)
  done (took 20.339225381 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.353275901 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.355351524 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.35326785 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.355655116 seconds)
  done (took 6.70531001 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.338327628 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.09509604 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.338555807 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.355260685 seconds)
  done (took 18.415056415 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.099182256 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.113263081 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.096225169 seconds)
  done (took 7.595601728 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.348499186 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.190806132 seconds)
  done (took 9.827089859 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.659110904 seconds)
  done (took 2.947422938 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.483703847 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.622708317 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.328848548 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.283131037 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.369446028 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.949880568 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.890417967 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.494464108 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.268457731 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.394632243 seconds)
  done (took 27.375069905 seconds)
done (took 125.68172161 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.968385309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.720932556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.55600671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.981153811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.581192613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.554559212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.573130289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.949265323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.449828538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.438255009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.985793154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.582326383 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.515135091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.721133087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.515811251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.721730566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.586411856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.009530838 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.631157001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.828837588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.574150953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.577371118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.816205632 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.600932674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.5857905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.511340281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.160977512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.726471411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.802811527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.179258739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.50814195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.998013867 seconds)
  done (took 188.202720977 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.362132117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.351871383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.351911768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.373642712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.352386219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.374036849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.354516599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.365803639 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.352196136 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.352853187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.352592403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.366631662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.354452037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.366173683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.351727855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.353156401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.37121699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.355629913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.358026074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.353621811 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.354877762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.36468428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.352971009 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.352414267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.35297175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.354016192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.352557847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.357422322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.353260141 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.352947821 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.354688435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.352159845 seconds)
  done (took 204.721506649 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.353086695 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352644919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.352618964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.361744078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.365156779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.35407705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.355115799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.35436276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.353630545 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.353996209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.364029583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.354554255 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.355820758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.354740463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.353810669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.35465661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.377577394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.35420304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.355325969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.356217182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.354207922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.35733398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.36485482 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.354329741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.372451078 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.356091195 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.35434977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.354375669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.355095377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.369183919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.355516383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.355436185 seconds)
  done (took 204.734572335 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.558319265 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.362654473 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.363158218 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.31818948 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.363143743 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.361887814 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.358296616 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.572621102 seconds)
  done (took 14.553191576 seconds)
done (took 613.50032304 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.597655619 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.322154701 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.568651758 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.385538913 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.07554462 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.384575746 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.38415157 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.543108319 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.261203483 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.547038894 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.568960548 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.380833601 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.700176488 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.381156914 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.628494689 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.47612692 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.215009108 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.323826568 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.683135544 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.870208576 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.634339833 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.785329176 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.543354256 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.260392494 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.71869565 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.787235472 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.035107302 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.215232632 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.382814854 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.694146695 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.992431227 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.283131714 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.439199344 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.419944025 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.47427097 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.457972281 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.247018622 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.419361913 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.556240582 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.543140134 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.866330552 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.082287907 seconds)
  done (took 91.432004795 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.354956581 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.355783807 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.354932656 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.355792756 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.357419625 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.35475654 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.35538852 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.354433072 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.356356263 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.354679664 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.357232311 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.357664658 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.357148639 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.357927175 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.354563088 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.355910712 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.356126937 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.358513334 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.357024058 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.355724465 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.357073894 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.356329608 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.356446861 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.35603105 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.357375751 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.357172093 seconds)
  done (took 36.560834702 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.36583427 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.596030948 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.76346714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.372294458 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.366481131 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.371323184 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.440746114 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.367670454 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.369285299 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.370550336 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.519839849 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.371064332 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403898332 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.771386138 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.369521937 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376911138 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.367409056 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.368126738 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.603622636 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37788951 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.441620949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.370021848 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.440842048 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.378238746 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.371172454 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369671701 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.372870968 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.86834377 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.372556627 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.521444138 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.101675198 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.440453 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.819382015 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.780220225 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.095588697 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.372966158 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.367659724 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.52474977 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.37256508 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.368922819 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.44250814 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.371289307 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.777735906 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.986695766 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.384743424 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.370100124 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.883453106 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.528348066 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.602281316 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.377455105 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.805589665 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.372883851 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.370614042 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.371571863 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.598833885 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.376407819 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.367779639 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.885679923 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.376565657 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.443197253 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.372197634 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.369899394 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.606989908 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371078541 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.597088214 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.373180146 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.379391119 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.372783255 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.78317649 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.374805444 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.005275389 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.385204663 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.370272911 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.526281284 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.597331351 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.91318567 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.37527166 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.611519659 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.829367849 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.443383755 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.375657223 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.852142172 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.446305643 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.376370461 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.374883311 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.373124879 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.371470279 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.415263889 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.441888 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.931384794 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.998506606 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.905124501 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.448994766 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.38525984 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.373241499 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.893660309 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.389246425 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.371789552 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.781545975 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.009717429 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.387509187 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.379408242 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.991390467 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.387528203 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.445382741 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.377140567 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.787245182 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.374766853 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.416702361 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.372444881 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.380181588 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.377172183 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.44615634 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.376736336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.372981019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.979797386 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.544790776 seconds)
  done (took 179.231767374 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.366214627 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.366982255 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.374502748 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.3666491 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.36526348 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.372798228 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.366978888 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.367629232 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.37174766 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.366678599 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.366757369 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.366568352 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.366574377 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.390557706 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.376348969 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.374437072 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.979775549 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.367228871 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.367411464 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.368497049 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.152220148 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.369695845 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.368273631 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.367530065 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.367086342 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.369375661 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.374537212 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.369943713 seconds)
  done (took 153.055116843 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.374556012 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.900846006 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.374886181 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.498162781 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395370008 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.372031445 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.495742203 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.431357324 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376590136 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.372088558 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.372236729 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.656450223 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.375501015 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.852393084 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.552302399 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.498451145 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.852420125 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.376244132 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372837894 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.373820176 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.500002855 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.38528828 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.658397694 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.903082963 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.37728108 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.903684281 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.367665919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.374744791 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.375542281 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.904542816 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.372793457 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.659028539 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.447920681 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.431413187 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.907294975 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.856008119 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.855930825 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.511674758 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.37745337 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.373385792 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.375145825 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.368173227 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.908882315 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.378111904 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.377338676 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.904192403 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.39073411 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.378060685 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.385951154 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.375414879 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.433070788 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.435033312 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.665688638 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.91478712 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.44843382 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.398451149 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.499843509 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.749085207 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.380036375 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.856538801 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.367545497 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.912261485 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.378904942 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.368125121 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.377505491 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.381980406 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.516958151 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.499568612 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.859089886 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.378693361 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.858670398 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.516623143 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.3768015 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.375860501 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378376261 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.910499064 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.859223597 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.517373942 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.50304014 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.558301658 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.371182071 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.377176293 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.369314898 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.449786716 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.376935416 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.912326144 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.859942921 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.378935122 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.37870755 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.379302124 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.380051345 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.543997557 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.914780689 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.451431872 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.855781673 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.67909303 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.666138994 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.381027245 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.434956969 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.380395309 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.66700978 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.381301653 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.433955812 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.811014593 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.667482956 seconds)
  done (took 162.748959372 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.606360263 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.524552432 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.46798048 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.487195981 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.887708276 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.935819543 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.61904054 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.501128983 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.482112178 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.612400869 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.488952274 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.46672126 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.553092645 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.4526778 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.080210425 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.44287878 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.469684873 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.498371559 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.483452006 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.383251436 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.994280145 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.660098562 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.540876735 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.4619091 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.472263969 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.101425022 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.914091512 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.880889914 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.541976432 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.589850762 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.883216608 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.482368181 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.30147787 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.015244045 seconds)
  done (took 65.596921916 seconds)
done (took 689.919819004 seconds)
SAVING RESULT...
DONE!
