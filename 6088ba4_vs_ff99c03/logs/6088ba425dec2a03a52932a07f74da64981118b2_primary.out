cset: moving following pidspec: 17439
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.791412275 seconds)
loading group "string"... done (took 0.552858297 seconds)
loading group "linalg"... done (took 11.43183929 seconds)
loading group "parallel"... done (took 0.183637403 seconds)
loading group "find"... done (took 1.459744833 seconds)
loading group "tuple"... done (took 2.442223706 seconds)
loading group "dates"... done (took 1.545703442 seconds)
loading group "micro"... done (took 0.212739213 seconds)
loading group "io"... done (took 0.593231593 seconds)
loading group "scalar"... done (took 68.233170653 seconds)
loading group "sparse"... done (took 15.710026088 seconds)
loading group "broadcast"... done (took 1.375964861 seconds)
loading group "union"... done (took 13.083953449 seconds)
loading group "simd"... done (took 4.18503889 seconds)
loading group "random"... done (took 15.697609463 seconds)
loading group "problem"... done (took 2.371712155 seconds)
loading group "array"... done (took 26.378566269 seconds)
loading group "misc"... done (took 1.281179318 seconds)
loading group "sort"... done (took 4.062176193 seconds)
loading group "collection"... done (took 25.8803011 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.706823513 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.151903091 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.23754169 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.369395926 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239836181 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.152994996 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156685704 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.278991631 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.304854102 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231102309 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152381493 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.56133211 seconds)
done (took 6.31053102 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260816224 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.257550039 seconds)
    (2/2) benchmarking "String"...
    done (took 0.179327257 seconds)
  done (took 1.140935081 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091382333 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177521824 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095589668 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111965829 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112429725 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111832513 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095447114 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110865554 seconds)
  done (took 1.52191921 seconds)
done (took 3.728313828 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.566942736 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.877874284 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.58385842 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.171072229 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.323474027 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.352787412 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.356220391 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.212882778 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.110016069 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.108679849 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.183141964 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.44232059 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.458547612 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.068832077 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095596798 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.116848421 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.137997028 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.785958519 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079755815 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.136521247 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.579115432 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.202413482 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116672505 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.13513699 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19966493 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11771102 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17962969 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105671082 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676242889 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131988524 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209467976 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.081341007 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181281754 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.244613295 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.22136791 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10767011 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672177559 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20103613 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101354043 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100997266 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686976686 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.13114678 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.173690319 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106009529 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091958529 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191851259 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118451023 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094101935 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116699039 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086182122 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166620355 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462029833 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.092537159 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.177665582 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091699055 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.704251264 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101343459 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281034347 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137626392 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10836318 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.075809682 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.105179202 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159026022 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110288198 seconds)
  done (took 21.060151799 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.171899403 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.174182815 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076768916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.16042662 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14637335 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097708539 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085478526 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092753738 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12852859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.244445705 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12917247 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192367966 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074483035 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.1044211 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147171706 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233501321 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12239 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122587636 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0859076 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108520504 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144867852 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095251867 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111696634 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113029846 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168784104 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20413622 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109117411 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123056383 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101261339 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118160368 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.12605527 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164936965 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093196717 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08435448 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194564872 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121996592 seconds)
  done (took 5.507812988 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.231657933 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125772521 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246184917 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.176908829 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150503568 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.174465072 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.164644483 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305525726 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.292136464 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.198343512 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100318319 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165193042 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129965525 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112249875 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078369714 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.103367515 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079998962 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.586259773 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186553011 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152063516 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156618809 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106825961 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.105239282 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.392062725 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087281696 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.101338789 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085971791 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.095081633 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.212331669 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104674003 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.158616189 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105621667 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10904306 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130373358 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190051078 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13262364 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124462835 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101059684 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098693598 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221353121 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11426766 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081206343 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131198651 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077807222 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134113908 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133654249 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102504656 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109557725 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226186272 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102286597 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127309378 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.075630729 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.212274853 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126372737 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101421953 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319516177 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097707787 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108669501 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100811374 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.286284804 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131204814 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097194781 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080384938 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101461217 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078115159 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.458152321 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111755506 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.88003013 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083041073 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163828706 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105527471 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105281261 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102537625 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085606213 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118073597 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079385661 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096074312 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079123362 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096761025 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084138932 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121165481 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101505597 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079263257 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162452578 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113055119 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098322563 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126357456 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103197378 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079100411 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128487082 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096312542 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083612256 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.176060716 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108431061 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122343307 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10380652 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125271474 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096337921 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.212365757 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082473127 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125029812 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100161321 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11226799 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114191627 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098059407 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083633134 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099505924 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077348413 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.0995639 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147359972 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09704232 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0842339 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103909402 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.1112511 seconds)
  done (took 24.163148305 seconds)
done (took 51.437949023 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.537077019 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.124996256 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.124405408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104389306 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.124186498 seconds)
  done (took 1.812610332 seconds)
done (took 2.583350284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.407006965 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.21101631 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122124981 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.201666954 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106802857 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.211653099 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.197590834 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114391364 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.24402272 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086883821 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.222247714 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087169324 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108439274 seconds)
  done (took 3.113856869 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099002941 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.130510173 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099820879 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116385996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079979434 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115862092 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096930207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131910259 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114707875 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090403905 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098207845 seconds)
  done (took 1.941033721 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095886065 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125201066 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087255788 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113311855 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079552198 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113236464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093700115 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127686845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094086901 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108992361 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097710546 seconds)
  done (took 1.907441026 seconds)
done (took 7.721070855 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229336959 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.034612234 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.155907507 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.227470257 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.409461916 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.243320262 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.643069188 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.173245608 seconds)
  done (took 13.053626625 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.186050072 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084763095 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10455302 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084728456 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103700927 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084637866 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.1048178 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102196183 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085853706 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103389165 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084812935 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102006022 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084988989 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100192591 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087552599 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101832223 seconds)
  done (took 2.450620405 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.123396633 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122858045 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111018569 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114631043 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090809071 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108116991 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093341907 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109541972 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105930883 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091399932 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112539425 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09451355 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110279014 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10473373 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093949169 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113610738 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088765404 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109480654 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109279218 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094212927 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.113299678 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092197272 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110733265 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112292824 seconds)
  done (took 3.417199271 seconds)
done (took 19.693425064 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.178633165 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085026745 seconds)
  done (took 1.046370406 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.156972544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159033439 seconds)
  done (took 1.106490479 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11272009 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101059286 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144458941 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1215333 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085379881 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100966423 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.139523895 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.086823986 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.102325309 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08612201 seconds)
  done (took 1.87169799 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09038391 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.105860915 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.097828758 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154864305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115164 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.107092858 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090056923 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.106810495 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.090875287 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.103825631 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.110265835 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110123372 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110980767 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129456953 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090692014 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.111498094 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116406138 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094558059 seconds)
  done (took 2.729568271 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084961187 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103402347 seconds)
  done (took 0.982856686 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092575641 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102345665 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091482451 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106867745 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087066139 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.102990232 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102476722 seconds)
  done (took 1.476945645 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.576868911 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274016022 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.410317626 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.122796123 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146012804 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.370745826 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145785818 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.120664918 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.119584731 seconds)
  done (took 3.117794648 seconds)
done (took 13.119981414 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093507939 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.237662736 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.655714028 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.126136545 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084998933 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161690024 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.321370671 seconds)
done (took 2.479293838 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348780918 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.167332234 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.095577247 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084794478 seconds)
  done (took 1.492262613 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080539341 seconds)
    (2/2) benchmarking "read"...
    done (took 0.110224931 seconds)
  done (took 0.992203055 seconds)
done (took 3.293211922 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084344749 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.138682118 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082695176 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.102203219 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082909072 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.102676738 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082708497 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100536063 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082983849 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.09960704 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.082758636 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098697078 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082900875 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09985011 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08307524 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09918673 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082131198 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099787307 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08395917 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099197065 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082786641 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098901211 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083533398 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098105189 seconds)
  done (took 3.07058634 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107938223 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.104501212 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.090771427 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.108001749 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107945846 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091122214 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107447627 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086926028 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107458371 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102849212 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090808681 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108720667 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086176479 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.108737215 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104891108 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.092058018 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.107544933 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087199511 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103466404 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091363581 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107968624 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104334565 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091572583 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10779776 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.091094489 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109756618 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103424238 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08749896 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10773339 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091980634 seconds)
  done (took 3.803298185 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094598245 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097358344 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085312917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108398602 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08108297 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.103151567 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081124545 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100225602 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.086019974 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.101036633 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08669504 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.10115168 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.082140937 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.103528681 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.086569121 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.105598614 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095642028 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0997908 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081323771 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.104035454 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087187445 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098621092 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085196636 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.102007057 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084956244 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.098112996 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086643855 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.100937357 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088492153 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083459067 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.104084262 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105205405 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0853115 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.111824872 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087335938 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.101248324 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.090268206 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.099206324 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085826399 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.099250201 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082169329 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.102555746 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082843212 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.109340932 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085637429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.10369816 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.083335435 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103972072 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086660112 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.105994814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081756435 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098927261 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.088147154 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.104883515 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089659328 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09848775 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.086884852 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.098095174 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087896603 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.102121586 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081220874 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.098527891 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.089967964 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.103360959 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104493985 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109872409 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082327053 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.105076166 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.086068807 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.108091774 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.087699592 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115142994 seconds)
  done (took 7.636938678 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100517246 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114807641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087200369 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104540126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087286128 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.103716612 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093734533 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103205196 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088283665 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113045633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103862297 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08848739 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104985106 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087404937 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105002254 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087648152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113210384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085919194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.103864645 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087811722 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103397781 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111081796 seconds)
  done (took 2.995682464 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.243305296 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111301559 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.15489735 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12079746 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108370262 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120661651 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107520564 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093268165 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108666645 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097874784 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115289385 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109130321 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126688271 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09786246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115476822 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115501056 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09159114 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116496139 seconds)
  done (took 2.973020612 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10503687 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.107652282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.112747675 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108164163 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.107468107 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090224795 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114528784 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104522145 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106699317 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.089597096 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117505472 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107270567 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.090227863 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10682097 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090058048 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109672463 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.089164635 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106902298 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117007682 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097390306 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.1164715 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117205986 seconds)
  done (took 3.134197216 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105324266 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106538438 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121198126 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.112133293 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.106332606 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088844665 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112831274 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089828182 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.114511113 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.089047295 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107798555 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088085701 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.115414279 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106721202 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096708521 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107784377 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088647135 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107176189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089022405 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106525746 seconds)
  done (took 2.884235392 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.189931161 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103917833 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122520943 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136066563 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104232109 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.122236516 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136019577 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105140001 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122615359 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138536012 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104933295 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122271593 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136135585 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113356737 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121905322 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135681441 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116558799 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135630701 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123181543 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104701116 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138506296 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122501564 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135552167 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106015011 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122951572 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.226096777 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123214701 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131090652 seconds)
  done (took 4.429836971 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086865212 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086423239 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.105718291 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.085292716 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.104447606 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086207771 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.10530528 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.087340049 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104975586 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08745968 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105715674 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0867645 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10563361 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08644933 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104428095 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086788911 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10466363 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.086874323 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104231729 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086353832 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.104272682 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086642253 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.105022878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087441526 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10430523 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0865419 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104892633 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087128781 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103765813 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089065441 seconds)
  done (took 3.685644227 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09943225 seconds)
    (2/2) benchmarking "in"...
    done (took 0.114409065 seconds)
  done (took 1.048096206 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096592731 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124341857 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087434571 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105647905 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097247257 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106558017 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116248497 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09765235 seconds)
  done (took 1.664034969 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.194313321 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163081586 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093865063 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119455079 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16223244 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.175181726 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159561683 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093402488 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107781429 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081272823 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.156385708 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102859005 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09179314 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106399238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107898452 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115883119 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.105428372 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.097114012 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.113120188 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089135299 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111208843 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100456776 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113580762 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.115981062 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084497214 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113265479 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097554935 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.118200504 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089588594 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113676889 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.124096954 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089425068 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10962305 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093921726 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.106142794 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160784595 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101566124 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.12541346 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091546823 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112695836 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115499531 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.089700831 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112972579 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08939516 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113520986 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092805977 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.11156092 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.088555834 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103128174 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085466248 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.10720553 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08710874 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.106194096 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111929199 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092927074 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119154361 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.091481064 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104286236 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086677527 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105964549 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091849999 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106889426 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113266424 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.091922606 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10656043 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0932624 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110232302 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088495123 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.108016743 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.089563192 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110353915 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.135943081 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095691589 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.112205649 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093744946 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107196176 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090559695 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113034688 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092014509 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113403516 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.111391605 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096602879 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108421048 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088173333 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106469581 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095638335 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.108803918 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091316032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100781695 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102398832 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.109318612 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089141168 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105934265 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110131153 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106623719 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.110085804 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086565232 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112001986 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087675753 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113422964 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094579529 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10505477 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095880805 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113750692 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111864529 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093545388 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.154580387 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108209425 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08760236 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.109434422 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095024687 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104757167 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.102953932 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.105584779 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085717212 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107333331 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.094021356 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112883737 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090264897 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112123377 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091117917 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114205539 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.109753862 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.088567956 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106101782 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093521118 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11746354 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095070784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110978675 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.089360185 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.108439043 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093889014 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113333104 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109336665 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094855461 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108720814 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089238548 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.108192927 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.095238308 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112684673 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088663807 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111965209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11319107 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093670726 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110469379 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095820242 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107053392 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086009417 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112614848 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089495758 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.108712123 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098980694 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108802547 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.109988321 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089979107 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118057682 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090867812 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113769436 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100880185 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.113682983 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095412485 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102459963 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0904085 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111325479 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096150837 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109403034 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.108287593 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.090249894 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.115219002 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08745741 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112295526 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086055298 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105173779 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09596068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109070985 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092170575 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107992522 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10656851 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123507947 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114656307 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092688512 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112026994 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093714676 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111970464 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.093986006 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114440282 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.094878666 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113442099 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109750275 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096263914 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10502416 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093707207 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111330473 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095563368 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103401396 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.091035292 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103612468 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095038759 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115343892 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.095134465 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.115018956 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091614548 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112239558 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118634816 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.117382843 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.111929562 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086184034 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.112656495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099585662 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115830982 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097178567 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114600223 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090983677 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.110177636 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117266391 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093207028 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113798846 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091920624 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10645024 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088384429 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11529957 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.093401367 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109437625 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090529981 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116389124 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098375612 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112100778 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086582233 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.115278819 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118126433 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0903873 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113343395 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090025566 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111537269 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102080124 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10609434 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107939656 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09791083 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.113992752 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090387367 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110157554 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.093305359 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.11583332 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.094126664 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.112441825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09288961 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117164035 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092206239 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.108661948 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091611501 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.113005583 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087931201 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.110984286 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09505319 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111478172 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110398824 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099443365 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117140048 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097601685 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112479021 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095609256 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116618132 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097107153 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108470694 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116642384 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090111935 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106857796 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090727813 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104147132 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.092168418 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109560775 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095935524 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111946539 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093530797 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.114240436 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096446579 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112636975 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.11525324 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106982246 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106646658 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087787184 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113105568 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094810531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111111089 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109983951 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092794617 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115288716 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096006003 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117369614 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088453149 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10985961 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097334658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110753315 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0970585 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.117529695 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097247892 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110829641 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.114539924 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091974875 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118956679 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088937368 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113712255 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094965043 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114511673 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091618841 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113414659 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109487484 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089321047 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111114995 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097736963 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10832391 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.094941058 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111622622 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092787537 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108607636 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090477259 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116549668 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088217127 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.118298946 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090717697 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.108287112 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088303122 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117254341 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115635235 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097687702 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110180943 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094125729 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11715977 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095367575 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10946498 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100637948 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119626844 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097511736 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121054 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085992347 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112308438 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120867828 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091361432 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.111880511 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.093506174 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107903592 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09847284 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.117178606 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096142283 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113807454 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087852023 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.111207197 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097835425 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114041736 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093245751 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.112605775 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115956544 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090695418 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114730306 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097829913 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114979829 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098794819 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115047528 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.094988666 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.110932457 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09713093 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11262871 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08868813 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.108257899 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111204589 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098865228 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10549739 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096961896 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.115006776 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092943119 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112415717 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096196887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.11101029 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094062049 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11595856 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090688703 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121674738 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0918848 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111436237 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09514819 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115719326 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087971272 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112428128 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109622169 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099336152 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112640854 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096381347 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114202519 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096201124 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.114266136 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.096091947 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.117094961 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098031693 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110045506 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098317614 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120646511 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.112831381 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093503714 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113453206 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090117577 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114410805 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099492959 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112543957 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100241596 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.117354689 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093382925 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113532822 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.096920679 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114945424 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118552934 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091200825 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115725309 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090106243 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.119254113 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095493681 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118688622 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091450733 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.11025919 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096821937 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116535012 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095206382 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118836712 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.117853105 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089241009 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108088076 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094158351 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.111925078 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103414098 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111995521 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093825506 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115462334 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.093161187 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.112970615 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099136565 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.110289497 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111566754 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096631017 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115083658 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090499319 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109377068 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096005391 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114655391 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095463936 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115341826 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089589577 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115309288 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098664078 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11472849 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107059193 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093290391 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119729114 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09609516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112268824 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089901868 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122635163 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097860207 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119908783 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109692279 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097302708 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112404651 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095440093 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.119268014 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093893157 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11623592 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095040644 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117621097 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121509156 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089047034 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108867689 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103183326 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115283326 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.101992164 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.113757518 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095475292 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119280435 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099266129 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.114212933 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089325973 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110933345 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090871704 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110094902 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.093946728 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123915592 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116128521 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094418326 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11726975 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096348242 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.115501706 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095297058 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.110554464 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099879104 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.114112258 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100428501 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109885282 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087313887 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.114726448 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096888298 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111476416 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092091059 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.114149322 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094502444 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111690893 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114758992 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101198224 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116899659 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100029046 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116495167 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09489217 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.116417714 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1036182 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114333024 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094279628 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126409048 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119979616 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098163092 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.118412901 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10080311 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119684289 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094395968 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120109665 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093067362 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.111834805 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.120159663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101436628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128491317 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095076083 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110787714 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.095670677 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111972162 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090608683 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121873106 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100048243 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121341153 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117968512 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09379417 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121421708 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095057884 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117782888 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094236883 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115233273 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097188494 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115995859 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09505881 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.11451889 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100438671 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.12186565 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117853356 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101681607 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110328583 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104785957 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.121737001 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100550801 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.114165564 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090296444 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.1126737 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095241332 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121490013 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098732801 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.117906721 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0961257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118182031 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097720178 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118852123 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115472751 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101012761 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.118432271 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094275215 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.120135311 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092023192 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112717979 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093512411 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.120543482 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100019203 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.119853532 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104846155 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121620129 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116466846 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095110269 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119041248 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095753104 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119131136 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096975329 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115257831 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091692283 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120271359 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100449318 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118664946 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099914473 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124331375 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116258491 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099814959 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123552633 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09840506 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.114766846 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097613648 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.118349621 seconds)
  done (took 63.749952607 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.172817304 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102507635 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116627766 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095772016 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.144275063 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116433348 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096030374 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117340663 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097895745 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130698368 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095289632 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117560567 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139183503 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147176378 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122256617 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131450558 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116412488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097003818 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117818567 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097838932 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.138393832 seconds)
  done (took 3.410207105 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.12004738 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.136027986 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134539935 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.138728344 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106344926 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132831897 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.13415223 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11154453 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.136677852 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.129866665 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1375655 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111017313 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129752884 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.129364363 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107827779 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129675379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.137436057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126934823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111856556 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13505392 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12871262 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112253995 seconds)
  done (took 3.678559106 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.104631992 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.119036119 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100671804 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116336657 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.098964536 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.11575121 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.10475725 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.116239924 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10408242 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.117410085 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091513141 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.115888773 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096289839 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118071883 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093474734 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.116305143 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.103127682 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.119940647 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100403552 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116691826 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.134018208 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095846615 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.117352851 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092667455 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.130585716 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100012864 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11724723 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.09814688 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.113199055 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099087444 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117395359 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097363801 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.120585794 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093045154 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.113453664 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.098443576 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120368835 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096038949 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.1176615 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092900066 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118759089 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120345384 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102722376 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.116298987 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095789696 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115040583 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.098767867 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116282122 seconds)
  done (took 6.126501352 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134287564 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.17632147 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100430626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.16610237 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13990849 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.134774785 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101319528 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.165032687 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.122804868 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100653589 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.142804376 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.143775024 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125454496 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107025319 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.123754662 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101910554 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.126307479 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122729285 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109301279 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.124553373 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108918185 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126303698 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.139467464 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.141487924 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105634529 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.124583607 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101489747 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128620304 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.139394639 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.132414764 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10712218 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.130455962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.14094995 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107271576 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124240384 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103439503 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.143028298 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125874168 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103774311 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.123243509 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.125938472 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106589496 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.128012702 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.143163108 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103708238 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.129856992 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103013003 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120774343 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.140628116 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10299905 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.133665184 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142861079 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128509191 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104504949 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128643414 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13924559 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104465564 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123491153 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103797983 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.139356154 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122501553 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106581032 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.141344698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125666937 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11207327 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.141831467 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.128753625 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105310417 seconds)
  done (took 9.513327215 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135255467 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.129481206 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142382062 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119558625 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129994986 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129863872 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106998424 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.130257086 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129638276 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116540152 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129482883 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.221974409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126090738 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.137027246 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106987646 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129954868 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106656167 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130343889 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129275253 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107927573 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129242117 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.14314887 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107989416 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.142475612 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145063037 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126032049 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106407408 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130703718 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142619839 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107818429 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145244363 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130001079 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107418806 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.143820165 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144328288 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.12944619 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099497529 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130404697 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106772628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130683143 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125825757 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120138114 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130008522 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125807635 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107303363 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130303038 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.143031087 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.145607107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114081697 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137332641 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129414281 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120459572 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130312211 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129952593 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120163225 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152059276 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142494191 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142718738 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129844628 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119886548 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142274987 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.153245092 seconds)
  done (took 8.961022254 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096794681 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096938112 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121118735 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.096279025 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120977183 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097175335 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119351815 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.096313251 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119159786 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097060024 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120060039 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096883559 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120108781 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096623688 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119298716 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097856397 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119674425 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098023169 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119795724 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097865497 seconds)
  done (took 3.070225215 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110499221 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.144108678 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.100655603 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132331963 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.123564308 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110728552 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.123783309 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102022182 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125117561 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10255815 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.136733455 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137309411 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101529691 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.132624171 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.136702298 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109708635 seconds)
  done (took 2.857068617 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125813181 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.145350745 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189414717 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.128481191 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102404339 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.132901827 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100924516 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125605914 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100162336 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.131402996 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128301822 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105399515 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.123344692 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102383582 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124460278 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105424977 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.123788801 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.106089594 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.123891259 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189443617 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.130991291 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104128412 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1254708 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105450201 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.128318568 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130445507 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109293272 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.125461478 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102780366 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.125341459 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104954056 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133778488 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123607313 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.1067255 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123653883 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103245317 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.123867829 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102530532 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.129513546 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101352065 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.125369382 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10470289 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.125072916 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.126724136 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100481966 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124756828 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099908665 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131324614 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103898947 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.127904848 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101047576 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130464481 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130008405 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112248877 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.133337086 seconds)
  done (took 7.56437654 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11515555 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126125764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.115966599 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.121743335 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101801356 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.127230805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125012369 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10469995 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.126407511 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099339438 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.126997363 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103517981 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127419632 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102790572 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12810202 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102430398 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.12273397 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.12581167 seconds)
  done (took 3.035834748 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106850085 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.12419877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107351873 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125377896 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101556845 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124526231 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100487693 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.123060973 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099365448 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125175336 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102123684 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.12387868 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100224458 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124647863 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102112317 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125159243 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.101366888 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122459446 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.124824749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100992434 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124627523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10016909 seconds)
  done (took 3.424107114 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118673899 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.189705976 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.137146113 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.203823653 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.125831138 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.101730817 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.136002985 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.125006003 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12347858 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.124218686 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100971236 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.12419292 seconds)
  done (took 2.551661361 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129913886 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163505203 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125865111 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103027282 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138512485 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108008191 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131101215 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131664122 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120699551 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146566322 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130968617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142490686 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120092379 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144904055 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13776024 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1380073 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10907501 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131538089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103186382 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15496978 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132074332 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143035053 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10893618 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131584867 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10799159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144791667 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141985517 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14757461 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131755517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120226682 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13726703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131562516 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119933613 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148518904 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126192265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118751056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132560158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154961649 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138136932 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143771334 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103112909 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138252562 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119881151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140686942 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143403328 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132517802 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118158168 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131715439 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131930192 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162261833 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114385233 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14495408 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139023952 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144664807 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120439073 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16218373 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147481518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146040484 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139184884 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14819802 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122849615 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13858563 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145773317 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148067933 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116238803 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145209736 seconds)
  done (took 9.761626088 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148277404 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12863283 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132384016 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125070742 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144569615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132366339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109026687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132505199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132328983 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105132288 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.182398924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132531129 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148721553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146285927 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109704438 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133394668 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109029688 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144898057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128975815 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162889088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109101511 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146367313 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14585865 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146418891 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148418212 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115509047 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133283991 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132672251 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110035476 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133119806 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141474174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109151564 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145491083 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127127148 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123132782 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132218854 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132389499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118444513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133504385 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139357341 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122979213 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.156004757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132655084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133830156 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125131866 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13369123 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132962927 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105693883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133434695 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105339369 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149360496 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148710259 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150186971 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145933031 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109552578 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133497742 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133030856 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109211483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133516452 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138923384 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122620493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133945792 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162493496 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133625449 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109499567 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146371125 seconds)
  done (took 9.703297979 seconds)
done (took 175.533484476 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173967958 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.194328867 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.171316121 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160863425 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.120244883 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.131017344 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.155301 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.174305239 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096226131 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.122344148 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09704726 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.124409118 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163319901 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.120030787 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.096382543 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.124205963 seconds)
  done (took 3.17126258 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195811943 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.359405141 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.140253049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12942402 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105304935 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.123862068 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105269532 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.131735423 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100491699 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.134967613 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.122758613 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101045683 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.134987141 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100704312 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.126140246 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123066725 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111295751 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.123583817 seconds)
  done (took 3.426162015 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124690954 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.169965871 seconds)
  done (took 1.252124545 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134227267 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.204965571 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.332944708 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172621424 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.127945625 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.148516001 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.174390418 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.141220358 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.212202748 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.144466304 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120149883 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.127349005 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.153007816 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110821296 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138992669 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101617968 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.156474828 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138390515 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112889782 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.130531985 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149264955 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108330859 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.135120691 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137031016 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.202144441 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120418461 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.131482101 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.13179571 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107470904 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.136786704 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107037517 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.146189456 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.143657061 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193435031 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.133606918 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.21292778 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114574656 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.128131712 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113242788 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.127350053 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.134295027 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.109557623 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.147972719 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.127540526 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108310509 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.139155442 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108873189 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.131984983 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13217344 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116079902 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132508489 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131114569 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189526283 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.141472673 seconds)
  done (took 8.668825944 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.827872282 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.170578814 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12914841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.957111244 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.156342121 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144152295 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.826496571 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126558944 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.294524397 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.855307682 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12037379 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.141988196 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.272375917 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283993279 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.197488302 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.379618434 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.732329578 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118855567 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158382002 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.177238955 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139083399 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131689932 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153053636 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.44734356 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.129825498 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103622656 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138886275 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.141594668 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.192183675 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128107443 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109546631 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.237136514 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29704242 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.248950304 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10503019 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128150418 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102654767 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.22338756 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.315996625 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.272298296 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195875105 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100405121 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127560948 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137385666 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126227735 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.125217049 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194541336 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.227956678 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.205728006 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.133980749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117947393 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14132596 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136856142 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.192483835 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100589479 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.383354404 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.408655263 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103306925 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139695442 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120066668 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30819821 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127566268 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.269294495 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.158649695 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.256889046 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103921559 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846136178 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.198014476 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.126943344 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110548098 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.139673842 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137675622 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111882024 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.194179411 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.427608444 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117804147 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135076733 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102981828 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266395421 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128031241 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103637571 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195890517 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130251589 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139556945 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118384124 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141403553 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.201462165 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.304801056 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116876336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14201426 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.136734499 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118770805 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.129537426 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.243950894 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.261795832 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.214245893 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.248136997 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138603778 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.196560262 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.197545906 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136497019 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.201167005 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.139186405 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145090359 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112994168 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.257662684 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.168776753 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.129282959 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110207464 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140833242 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.17024774 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.132420561 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11630329 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.225197637 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.485310117 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.222998667 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.100487829 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.13274205 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115171409 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.219502414 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114277309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30633828 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142178855 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.200133817 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.138509111 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100960082 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.139990101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.194590951 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140314371 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141038506 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113355507 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142173064 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.283055424 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.263889916 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.142457441 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.277245925 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.203316299 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112944626 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.232152842 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114000567 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.229241622 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11581809 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139277335 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131548403 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840205632 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121386051 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.140318165 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136256923 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.219851352 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104069682 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129978855 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103715713 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125506657 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.85617479 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108217615 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.126190731 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106535978 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136482707 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115818525 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140038196 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.136225052 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195198182 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.27869814 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.14207424 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114966222 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129126668 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193342884 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.13178549 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104942803 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.129545709 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104658189 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.141192022 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.135944181 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106196139 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.229576332 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.190191868 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.265543876 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565452015 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10499476 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.129432164 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.276301541 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104192132 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.35272249 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140720853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.270698514 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.200472645 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.126377823 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381946924 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.203228644 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.221537803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.133822905 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205672347 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126359397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116347725 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.217927178 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105747894 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139764347 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.19127847 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145414952 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143827452 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.204751361 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105426632 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.262064308 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.126738935 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.200931924 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132492007 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138051039 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351590321 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1065093 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148865413 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193564447 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136825698 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105195856 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.669863122 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106000276 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144160494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138265748 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.268350141 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.200667226 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141376331 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1412185 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119196782 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.219274691 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.244450322 seconds)
  done (took 49.98829134 seconds)
done (took 67.459797458 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.331666682 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.301558564 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.360028015 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223878993 seconds)
  done (took 2.288354451 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.259372545 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.177402343 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.216726359 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.12917066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.222747985 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.129263754 seconds)
  done (took 2.13155497 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.54743395 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.426260472 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.393264944 seconds)
  done (took 2.364229666 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291097646 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.314110097 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354578869 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.512279567 seconds)
  done (took 2.577759276 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.284555827 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.156552236 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.148099693 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.210160393 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.243523905 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.231868465 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142761341 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180597064 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152715843 seconds)
  done (took 2.796015334 seconds)
done (took 13.156893231 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.360777322 seconds)
    (2/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.179182986 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.333584411 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.198176428 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.329407314 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.338680453 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113189801 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.255972717 seconds)
    (9/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.23665112 seconds)
    (10/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.229302591 seconds)
    (11/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.339652381 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.17214226 seconds)
    (13/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.382255397 seconds)
    (14/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.240164229 seconds)
    (15/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.147149922 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13771051 seconds)
    (17/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.106827527 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.316256424 seconds)
    (19/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.393057572 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.356447867 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.171267109 seconds)
    (22/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.193139786 seconds)
    (23/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.278426572 seconds)
    (24/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.204866637 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.149724966 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.139246769 seconds)
    (27/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.112311691 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.122681303 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.144988863 seconds)
    (30/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167620558 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.233755635 seconds)
    (32/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.138543348 seconds)
    (33/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.259687019 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.224150819 seconds)
    (35/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136995476 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111065657 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.123086266 seconds)
    (38/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.329794323 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.138607003 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111790969 seconds)
    (41/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.229059483 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139298669 seconds)
    (43/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198423764 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.135168038 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.244543853 seconds)
    (46/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.302316063 seconds)
    (47/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.12318551 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.20842475 seconds)
    (49/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.200052815 seconds)
    (50/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.138736613 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.26121402 seconds)
    (52/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.25757862 seconds)
    (53/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.096995043 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.17280818 seconds)
    (55/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.131213708 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.146762811 seconds)
    (57/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.138161184 seconds)
    (58/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.20661611 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.136673976 seconds)
    (60/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.248192787 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.09616194 seconds)
    (62/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.137333229 seconds)
    (63/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.239779697 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.249303865 seconds)
    (65/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.148181403 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.142042564 seconds)
    (67/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108550592 seconds)
    (68/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.13647578 seconds)
    (69/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112050766 seconds)
    (70/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.12333962 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129448418 seconds)
    (72/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.204956759 seconds)
    (73/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104095704 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.123106649 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112010537 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.139726729 seconds)
    (77/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113389009 seconds)
    (78/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.194902066 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138691736 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.128405719 seconds)
    (81/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.193086949 seconds)
    (82/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.222880856 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11162902 seconds)
    (84/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.224913964 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.158666235 seconds)
    (86/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.207660957 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11298173 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.123501727 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.197077941 seconds)
    (90/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.227414411 seconds)
    (91/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.12426155 seconds)
    (92/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197607406 seconds)
    (93/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.226980492 seconds)
    (94/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.124029017 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.104591443 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138229221 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.098619656 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.122976253 seconds)
    (99/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1141473 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139974521 seconds)
    (101/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.224826664 seconds)
    (102/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174257792 seconds)
    (103/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.13331827 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119503664 seconds)
    (105/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.139585462 seconds)
    (106/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.168509099 seconds)
    (107/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.129788793 seconds)
    (108/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.225031028 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.113193448 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.134585372 seconds)
    (111/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.097335251 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13777009 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.096060789 seconds)
    (114/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.101358408 seconds)
    (115/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.123811751 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104979798 seconds)
    (117/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.123749068 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11019082 seconds)
    (119/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.135946765 seconds)
    (120/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096989809 seconds)
    (121/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.247001668 seconds)
    (122/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.102439751 seconds)
    (123/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.124690308 seconds)
    (124/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.097156116 seconds)
    (125/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.134999049 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111516026 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.122566438 seconds)
    (128/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.097222329 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.253897333 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.096257574 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.132262106 seconds)
    (132/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.096726153 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123565194 seconds)
    (134/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.097187568 seconds)
    (135/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.096464357 seconds)
    (136/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.124370894 seconds)
    (137/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.200386413 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.131754564 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.158184413 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.097482577 seconds)
    (141/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.124519447 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105664301 seconds)
    (143/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.137856926 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114161354 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.138950615 seconds)
    (146/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112592409 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.139641908 seconds)
    (148/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.098185467 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122800123 seconds)
    (150/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.108643908 seconds)
    (151/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.126887309 seconds)
    (152/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.096229795 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.1455835 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.09629289 seconds)
    (155/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096789398 seconds)
    (156/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.152328115 seconds)
    (157/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.13919676 seconds)
    (158/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.101754787 seconds)
    (159/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.097238003 seconds)
    (160/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.123934322 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10535123 seconds)
    (162/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.129922419 seconds)
    (163/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.102380719 seconds)
    (164/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.205759675 seconds)
    (165/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.103597285 seconds)
    (166/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.141642311 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111932778 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.141545432 seconds)
    (169/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.097138343 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.15794304 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.098776363 seconds)
    (172/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.123262691 seconds)
    (173/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.24307193 seconds)
    (174/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.097198663 seconds)
    (175/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.096684936 seconds)
    (176/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.134987843 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.098173124 seconds)
    (178/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.139220843 seconds)
    (179/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.177750321 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.158383538 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107287513 seconds)
    (182/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.124866117 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.114838115 seconds)
    (184/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.12349324 seconds)
    (185/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.09646156 seconds)
    (186/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.138799112 seconds)
    (187/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105548697 seconds)
    (188/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.124955477 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.097898207 seconds)
    (190/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.138359803 seconds)
    (191/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.096844615 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.140752395 seconds)
  done (took 31.436762234 seconds)
done (took 32.440811606 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.254617051 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12124234 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.143051018 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.142997941 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.21057539 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116448578 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15200343 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118126493 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.147712492 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13982298 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104580049 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.14849283 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.114525207 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205747411 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.146223636 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.136162003 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.107778852 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148197914 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.123857663 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.153012326 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.209230286 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107775065 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.150101526 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.13580531 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.209262884 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107431443 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.143595271 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115113955 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.150085707 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112426419 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.142266317 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.135668303 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124460451 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151388539 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105839402 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.139786577 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106383184 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.132640485 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114127121 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.140574102 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122044987 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.141220298 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.144650735 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10820446 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.141839365 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112766717 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134456915 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11946846 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.132930633 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.142864791 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109622954 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.153149536 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11195566 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.133775216 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10606459 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.136119456 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121070046 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133553206 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123274922 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134985854 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.13600934 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106503828 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.143102682 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107125056 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140281466 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.108860567 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.140091892 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115873108 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.140868726 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109463787 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133945724 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112921192 seconds)
done (took 10.778049594 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.117578836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.199187154 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.212122125 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214722514 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.166848011 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.154765496 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.156788471 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13852867 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.15243057 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.160895666 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.143629879 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.164377143 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.223009843 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.149182204 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.154761765 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115520773 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.151250083 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118412316 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.216922791 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.16085805 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.17195978 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.14906254 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143917415 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.155420961 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.144372169 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.148442217 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.144376955 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.144187468 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115407192 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.149582076 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.160718307 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116529726 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.144537703 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129787491 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.153459956 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.148268864 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.127376953 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.144315123 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.114877402 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.142358827 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.155855814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125642403 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.141485997 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.172176737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116916388 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.152309323 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122655164 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.150692861 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.146077769 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117522011 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.146059229 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.170764477 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121543047 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.154504932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121702211 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.14829261 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.1506577 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.121660826 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.144562237 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12164947 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.142053911 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.115613005 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.146585183 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.16874306 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.143386666 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122844607 seconds)
  done (took 10.812764175 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.134679493 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.178153187 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.152949376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125459494 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.149490908 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.132392895 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.105633985 seconds)
  done (took 2.047771047 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107056978 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214738962 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212115111 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213977091 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.23989943 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.227337881 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156736875 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.107124225 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.170384692 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11915635 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.242577065 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.246365922 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112822358 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.15252804 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.217410003 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.134299626 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.219296714 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.107325696 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147784105 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.216338033 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150570365 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135856335 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.152106873 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.136382762 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210340629 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.108425915 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.301650713 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123908362 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141273477 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117206477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148539641 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.219888767 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211442719 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.15205622 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110659144 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.242826529 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209641886 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119934303 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.22379973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.139924585 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.210004399 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.146183208 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12054737 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.149294125 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.137694503 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196899792 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.153119329 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.148952106 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117728296 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.217015107 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.148274088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211118101 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143640838 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11981841 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.148484477 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121561185 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.154020107 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.388670557 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.218602799 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122781391 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.211538641 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.241576927 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.209525798 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214996276 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129512108 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.240632171 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.208587418 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117726091 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144682886 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119585178 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213514371 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.147701505 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.149847101 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199788863 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121451909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212210331 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.21233077 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144720138 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.150143116 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.111773895 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.145533838 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.107776365 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.200426034 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146690997 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116245461 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157315403 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150499977 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119369897 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.141110707 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.161393013 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120117606 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.14946055 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.151879573 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118451431 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153283274 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21881051 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.148840718 seconds)
  done (took 17.378611487 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.115890931 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.137322399 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116748639 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13751206 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109786204 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.137551755 seconds)
  done (took 1.836387497 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141852573 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.14871754 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.158336543 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121941065 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.206296225 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218371682 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.22023089 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146352795 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167695097 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131489724 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.219240994 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.25205388 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21934141 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124370818 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.250006559 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124869604 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.220968126 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.147558771 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13016582 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146497445 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.156885365 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123974392 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145882905 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.210453662 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.151345695 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.123425498 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148787611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.157767255 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129749963 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.145662944 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124526517 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.150855885 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.143468399 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117631472 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.222558184 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.144317533 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144878421 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.127682478 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.15231011 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123592163 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.251299375 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119227929 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.157713723 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.154268543 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.118855725 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.143170732 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126706393 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.149135635 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221823997 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.155451122 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.126901888 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.152394388 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.153472457 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127555751 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.14299653 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14691958 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.127805367 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.223613883 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.156639316 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.144701652 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123217329 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.152824289 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1181762 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.154982303 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.152579102 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126539454 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.143485382 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150536268 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119283104 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.150435862 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.127439147 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.150516396 seconds)
  done (took 12.30023353 seconds)
done (took 45.435036318 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.161165722 seconds)
  done (took 2.251792838 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.971080108 seconds)
  done (took 2.063083934 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.823501498 seconds)
  done (took 19.952025157 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.592397414 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.672904516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.152565623 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18623708 seconds)
  done (took 3.697741031 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.028168081 seconds)
  done (took 2.149480554 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.365354579 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.273369346 seconds)
  done (took 1.734692698 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.79591931 seconds)
  done (took 1.908181009 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.632804498 seconds)
  done (took 2.732902277 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.398685145 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.217238461 seconds)
  done (took 1.728813477 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.727534548 seconds)
  done (took 1.83755051 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.693766714 seconds)
  done (took 18.801294137 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231535573 seconds)
  done (took 1.352467571 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.333517983 seconds)
  done (took 1.451941081 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.850370804 seconds)
  done (took 4.960790745 seconds)
done (took 67.724079717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124960127 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.152522606 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124375214 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.151612232 seconds)
  done (took 1.662175397 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125975673 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.149811848 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12599839 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.148169268 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126269124 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.149578727 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.148896657 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.124297629 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.149664695 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.122089713 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.150160874 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120326884 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.153375656 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.148120965 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117544994 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.152610058 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124566745 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.149751493 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122968388 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.150135592 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.149448724 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.123141104 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.153672352 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122966952 seconds)
  done (took 4.425876676 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121812109 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.141849469 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117199707 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.142248876 seconds)
  done (took 1.648069693 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133262604 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.163898498 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.133200998 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.157958163 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.163788986 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133238212 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.147312146 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118055143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.149699286 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.158742524 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.139883298 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.16344745 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.163139478 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125276326 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.161528483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115560308 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.153062559 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134757068 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.157917045 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.160040284 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121983051 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.158389657 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12714762 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.159215534 seconds)
  done (took 4.616434141 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.227837663 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.134584811 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173212705 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.197785671 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.180943144 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119672668 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.176179863 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126810274 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.157855093 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.153036208 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123987897 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.199835566 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.155161326 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121938939 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.151018842 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154940565 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134955225 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.156396035 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.197672826 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.15535447 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128336381 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.163694491 seconds)
  done (took 4.615438301 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129895913 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.143813938 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.11121756 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.143013323 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128320575 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.147579731 seconds)
  done (took 1.929181502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.121151622 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.136817736 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114209951 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13953113 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114758817 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.136437015 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.108307663 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.138349531 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.1099374 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108220858 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.139564315 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107643659 seconds)
  done (took 2.602378732 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.341084203 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113693684 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.145780565 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115487264 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.150427206 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.141709918 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.132222758 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.142144277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.258386963 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.139061704 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.13117448 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.221190583 seconds)
  done (took 3.165555354 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245363745 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121919025 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348113958 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.433220236 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190874846 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200485046 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.315996826 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201246715 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223771328 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172769663 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232273579 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187941978 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18744706 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216211018 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140623071 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.214088054 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211011355 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236817225 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181978626 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270748515 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19740692 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20218491 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21548868 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156448266 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167929 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185750445 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.152186875 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128648783 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207358789 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203163542 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236633025 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151281287 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173067947 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237153232 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252843471 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213548608 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.351951272 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160247744 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.229764651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.21930871 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286787714 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172944164 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259571943 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159268053 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160117971 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219504272 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190215916 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.218619729 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.163680972 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142085789 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250086299 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210284599 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.22142035 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166475983 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344766364 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179441847 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.182367939 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216755634 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22406719 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227614563 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204643628 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.154130966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223017877 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218296893 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215382282 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.180249351 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.205237069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158140683 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209968285 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234638496 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220568638 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200122198 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.221307332 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161195544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19669944 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204390844 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188100652 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215685838 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198376961 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121306334 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18512561 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168386358 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128438038 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.22625337 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151858206 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244249974 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167062842 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.410484822 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24710823 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192975114 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196908922 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199825721 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202851963 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15015232 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.154613547 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180047579 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.193988198 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190880554 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138874206 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191560786 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174456872 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.166248071 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184828983 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124142242 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197750852 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.183952449 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201762997 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197151901 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132956215 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202126457 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183559076 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190587999 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207715433 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223637167 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162704532 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133036643 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224995046 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193192633 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.168134181 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211640591 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2264757 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.200468144 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168655593 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199381258 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229112588 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144933979 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258219549 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139013968 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166189024 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.191226822 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198153646 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191796756 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156805837 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160936034 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187087639 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233703193 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.159133952 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140017367 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208610671 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169176157 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159999932 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142165039 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168459341 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.175598835 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.181315477 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140340643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19186257 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196710124 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19124568 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192594522 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168472628 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20898015 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133483374 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197913908 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182266611 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.152036806 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219613782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221977832 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129612396 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269330629 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.206622352 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238686898 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196447383 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165439931 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215200373 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128093705 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.155273754 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197524386 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196730908 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197894754 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.224031087 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235662324 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.206644046 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191237837 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184102498 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204201383 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.212045396 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191440778 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.179368165 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19548219 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206281795 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123045451 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.158913625 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.160627306 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144887274 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162314656 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133711209 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250153697 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200974956 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228526354 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195037713 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174214233 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22173284 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133566929 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200619979 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.211214641 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174677409 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224213592 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216731632 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205536606 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175686058 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198528411 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.153375752 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129444163 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.169470328 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204855149 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134275528 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168582495 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177195931 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222061487 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211480017 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184263353 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274077005 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204325526 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233204908 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12313249 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.200696071 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207770191 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194245912 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.219993466 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143400904 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.197184971 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21522298 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171876377 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228365376 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195734438 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202770772 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237424513 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194740998 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163620766 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184900696 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200757592 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141957759 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200752153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180572526 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162676649 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157175025 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.17268472 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160924287 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220291538 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17785879 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217477973 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.192394323 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210730762 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157345927 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147194818 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200061441 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180092155 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.121304783 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206313026 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256524094 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149196297 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195571167 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210522317 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1639583 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.379886713 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224994448 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250703472 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136820979 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177938841 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200750648 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194830564 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201179612 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216923456 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177458698 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21744064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166361413 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.179261884 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164009445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18262734 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154572737 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.191029803 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.168776841 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1971594 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145938009 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254199377 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143857317 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199243639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19945024 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.182951733 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.191967067 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143724407 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267216109 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163780088 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24603906 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163708756 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205055076 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269687064 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126747283 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163794041 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136921227 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216322754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166219961 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199160916 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.222969778 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270448851 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201247544 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202670603 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14048942 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.161834318 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195416837 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152105534 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272265646 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171534733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142500402 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261133944 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157139861 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164545127 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20381847 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332928259 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180995466 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212674343 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133225169 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.34793669 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132389308 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16567311 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19497588 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209207807 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13823382 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.223365185 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199555537 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178049163 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194649976 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140693995 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.262404414 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251805757 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202959589 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214838187 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.178141086 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194747091 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199558575 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215450233 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146290802 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.182286498 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199017728 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220956871 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2233408 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.170493626 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198249616 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196789298 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163323665 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242344627 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136507776 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269653353 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132837842 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197582727 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173724659 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129045359 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1960823 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.253095753 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13609029 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212665137 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198387371 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168440551 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130403872 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181619972 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195857447 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172411106 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131084476 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251067701 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131525243 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20066922 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221705634 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162500092 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162546191 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180314237 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167623262 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176582371 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147703338 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165943358 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.205744388 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222876714 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136164646 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21476499 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199657124 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202328988 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195639434 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180162543 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.702533731 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131182872 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222395588 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185000338 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224195982 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186255986 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202111458 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197548714 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185699018 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200531258 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154531031 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.265233874 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197645542 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.200181615 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165541266 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179398442 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145625651 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.169563512 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188574179 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197557526 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145326199 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.17612674 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.198099331 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178356881 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148143797 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174749343 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223043722 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184598518 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223249652 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21954252 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171469454 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201323007 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211395586 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166983959 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168842381 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24123092 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146103957 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182649334 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.168817376 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141745021 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220363679 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.158493397 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199517047 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198695212 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165233172 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198418214 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.173284156 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202910459 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178051634 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166421268 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165050425 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.192945646 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196180273 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134582904 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.163310058 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195746274 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19758402 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192793674 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132581718 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.210291117 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223355327 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125408386 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169916644 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330696088 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196315442 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229977302 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.194265267 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169601297 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146747343 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195472769 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.197978278 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199249364 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.165821309 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133543207 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.16974209 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.222778039 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.193708302 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165896633 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223385076 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197649837 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272813189 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.148992123 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.309050021 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175388901 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196637839 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.138318066 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.168120073 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17795392 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138632316 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173619237 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234273803 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217701649 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.19258611 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.180172015 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133064801 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.16119476 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134517152 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200171107 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191747804 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198956676 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183068692 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.123523604 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180655935 seconds)
  done (took 94.132680497 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180032176 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.17011412 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.18234092 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.233057641 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20251548 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296220016 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.241363713 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26266603 seconds)
  done (took 3.003320621 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12929215 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.168887455 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.173104908 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.156893055 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.155761102 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.457232003 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.168237524 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.125953174 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.215168115 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.168834014 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.153178836 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.680277934 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.123709284 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.155245873 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.150367762 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.155863747 seconds)
  done (took 4.565971858 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.703353982 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.618904985 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.451624074 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295079768 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.273201929 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.190419434 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.840433521 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.224774388 seconds)
  done (took 13.828180024 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.156056254 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.177418529 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.367584645 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.265013044 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.195282359 seconds)
  done (took 2.405009454 seconds)
done (took 143.709756348 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129188545 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.160864789 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.129750775 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.164313228 seconds)
  done (took 1.814681957 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.188050994 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.146358446 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.115436633 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.142557407 seconds)
  done (took 1.835544686 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.538923919 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.146342999 seconds)
  done (took 1.955284638 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.157614378 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.176950086 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.181558203 seconds)
  done (took 1.769300782 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141104458 seconds)
  done (took 1.384993425 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.134477954 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.165777646 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.233413502 seconds)
  done (took 1.783977795 seconds)
done (took 11.788983339 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13102298 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.476999353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.445936657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14316117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.759125637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404888063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.116874761 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.19215144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.24206655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.147840658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140296007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.729300265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.039251094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.397722065 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.054720095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370720728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.730919215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11742785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.158432012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118371151 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.093975547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115868657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.151584033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146911336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69998457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.475389764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117097909 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419406278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116150994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.156614711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.404532832 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.149172663 seconds)
  done (took 18.188968135 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125811358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.221695192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12837415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153609004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.157760915 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119039489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.16309762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.133819764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.230826503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.150240181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.174467842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117916744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155330897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118235806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.176282574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116841152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.15109395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118264914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.160620659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.150702676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141979193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.148773302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118865011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.150358914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117953413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.18295822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117079728 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.166329938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.150355363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127550271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.152667406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119092433 seconds)
  done (took 5.971943473 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.169695909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.231467518 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.163542628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154459393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.209592376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.153550954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.243317844 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.192351125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.23184718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118528385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.175697288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.148341161 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16620398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.151209702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144201446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.151206205 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11871174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.151586595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.159840562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120881922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.173181269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117666648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.152119506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118741774 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.150337058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.184499897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118612265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.165726121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118087221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.158114973 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121559254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.150900452 seconds)
  done (took 6.346734717 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129293539 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.161902549 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.144421432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.176319869 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.124375066 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.161858395 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.130885382 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.158025737 seconds)
  done (took 2.442975649 seconds)
done (took 34.193783887 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.144698871 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.169485261 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138135943 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.163554228 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.224364435 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120638919 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.168725108 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120742225 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.164393154 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140517612 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.151001315 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.123239413 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.171146455 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.127548135 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.223678815 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.165036087 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.230573885 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.225452832 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.156576757 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.130809796 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.157950693 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.23112104 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.129337989 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.157689255 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.236342953 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121210954 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.218984607 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.160901028 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.126860907 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.158637956 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225663152 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.128426775 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.157861725 seconds)
  done (took 6.719550448 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.234901011 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.126235484 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.157068084 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12415933 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.159301416 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.122986141 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.237073936 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155425843 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122801262 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.156586918 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.123537626 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.231986661 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.16312314 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.119525519 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.160818674 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.125948128 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.237789481 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.158834732 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.119054387 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.146778251 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.119429243 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.155466606 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.246062461 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.118882106 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.155664435 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12366568 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.160237219 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12873864 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.157589434 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.125960577 seconds)
  done (took 5.933248881 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131067637 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.174677517 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.147735955 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.227604604 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.188923023 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.134989436 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.184828154 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.173371437 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.150357083 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.153902216 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.13619754 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18801345 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.171494811 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132099238 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.157084243 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13808639 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.17577419 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120868407 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.162093034 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138026556 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.17574384 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.169071922 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.151408205 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.162780389 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11905774 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162714555 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.131192656 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.16948851 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.165736723 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.145300428 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.160305873 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12469758 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.157365453 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.194928995 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127915297 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.163661776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144001407 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.166701398 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.134961405 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.183498065 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.15904367 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.132851984 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.183603 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.212841594 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123520264 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.164912507 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.134702465 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.171275668 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121111863 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.173026639 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.208380591 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121687554 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.173277195 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12345794 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.154450131 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132785476 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.15612929 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124444744 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.174047118 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124739633 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.177072992 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.160677098 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134924287 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.156100089 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132287523 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.154366973 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121359588 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.158988031 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150111168 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.165499787 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159070606 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.155900271 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.163562922 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135426418 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.17058144 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13465685 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.153329458 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132394295 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.165682237 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127591856 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.170922056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12496857 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.158544303 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138500728 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.173880423 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.163647896 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.173263408 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.165994813 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.157196984 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.124636137 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172204929 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122845503 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.160857 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141334909 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.155763895 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125259315 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.166315384 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12971796 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.153936955 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146919043 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.161214286 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.153128603 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.147763174 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.167449931 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127927337 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.164569041 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.207224613 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121420705 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.1644666 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.133425077 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.156412584 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.128824207 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.159218791 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120288898 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.172234295 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.137480586 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.163290468 seconds)
  done (took 19.266356137 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.330028282 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.355549082 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238929662 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.35695471 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138130396 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.284056557 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.317646351 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.352740238 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128025002 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.202649793 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.220914084 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.323528064 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122547592 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.186561233 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.355760208 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.420696098 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.187944597 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.202650242 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.20115541 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139355118 seconds)
  done (took 6.348985565 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.145103919 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.196477119 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.182935395 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154992389 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.164746764 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.167862742 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.123464919 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.181594583 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.129826971 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.167483939 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.125460526 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.169102154 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.162943928 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13742419 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.175293661 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.170460154 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.166729969 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.16148823 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148788773 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.162354435 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133371945 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.188024756 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.168002191 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.181570306 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.138221812 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.166535144 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.121195594 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.162259567 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125905871 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.160560976 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.128417599 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.176589145 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.160849325 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.129480085 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.165050985 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.134978265 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.158200118 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.125804095 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.160857524 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127954916 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.172229124 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.131375659 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.160757076 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121204037 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.172288606 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.126108485 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.167101904 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.132217462 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.169408665 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136627335 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.165876184 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.134397492 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.162246889 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.175115912 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.126481578 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.17262158 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.135784231 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.16912313 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.129543044 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.156122327 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12089721 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.161323762 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.127494847 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.169616715 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.166501348 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146012181 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.171339184 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121823606 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.16232464 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.161076503 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127978503 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.172680159 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.147544287 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.161597087 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.126034281 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.17131684 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.126304254 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.151634221 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.134245599 seconds)
  done (took 13.357451768 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.152508465 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.162221752 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143201122 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.195260199 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132706524 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.164391805 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128023586 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.178958229 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.169325847 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136009073 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.169739874 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138712972 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.182181939 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.167690045 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12970274 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.176259354 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133011034 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.199233911 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.176296476 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.154913445 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.170250279 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129593831 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.17161756 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.135593354 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.190953827 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.169651103 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.155330781 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.168535768 seconds)
  done (took 5.793015867 seconds)
done (took 58.677330135 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.410809471 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.61883107 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.3672063 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.365799531 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.368859692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.400597601 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.388073169 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.36849851 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.432482316 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.355957426 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.367316291 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.366167942 seconds)
done (took 30.109535234 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.406236622 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.924042001 seconds)
    (2/2) benchmarking "String"...
    done (took 1.623715857 seconds)
  done (took 4.835402447 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.360071862 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.36198332 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.586557099 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.364352289 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.381105431 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.365100685 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.378007007 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.376893977 seconds)
  done (took 17.099982935 seconds)
done (took 27.994873973 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.457894844 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.572681097 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.624079297 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.38415586 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.388267095 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.36639134 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.38976421 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.398403474 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.373995194 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.382467073 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.802815987 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.635274757 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.397416909 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.754389242 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.376839568 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.372598077 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.382250524 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.605733443 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.370264877 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.410986604 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.356178464 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.357859599 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.376226161 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.382255261 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.376731707 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.378470371 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.434965641 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.370666594 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.561641092 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.404538379 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.413740193 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.368321114 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.435512163 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.366814664 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.383229674 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.366924829 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.562787497 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.380437352 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.358570558 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.379633868 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.565148295 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.373978312 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.364741284 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.375972734 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.372734839 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.471576533 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.36327915 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.48405569 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.40161688 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.377355186 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.397874465 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.75325886 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.384562655 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.373793591 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.373804225 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.605502675 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.394319468 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.441762704 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.392670112 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.382305815 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.367848809 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.374654817 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.410392938 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.383649146 seconds)
  done (took 154.94008692 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.370806134 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.368064109 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.367768778 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.369343709 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.371358872 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.369003034 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.367011312 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.367202597 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.368023558 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.395144138 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.374146134 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.368777369 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.370556627 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.317985124 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.373796245 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.38691353 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.36984978 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.385890358 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.375596541 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366927372 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.370027295 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.371639786 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.388202182 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.368183689 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.375524194 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.454704882 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.434831357 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.384772193 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.378633966 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.367827325 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.374371621 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.375760959 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.037188002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.240467774 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.374172692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.40585959 seconds)
  done (took 86.400019634 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.368162633 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.368154183 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.369190013 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.405557053 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.367754159 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.989009341 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.994191436 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.092718455 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.038622368 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.374742401 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.368 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.88844986 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.702403912 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.372615969 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.46592562 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.381004113 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.369473169 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.385920406 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.397407423 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.370873796 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.369676644 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.991974145 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.388960772 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.496773067 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.555403668 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.38757298 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405792088 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.777803425 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.370828763 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406947978 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.713707082 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.425598034 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.371929671 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.80281433 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.646276671 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.490360967 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.371858124 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406359778 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.370502112 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.661024535 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.371790266 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.371500789 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.375948702 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.372751457 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.10663779 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.376135293 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.992924896 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.372092857 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.393999362 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.375871458 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.370449696 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.794321862 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.169880157 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.393911512 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.36880379 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.374572297 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.371727705 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.370476973 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.407205162 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.688130089 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.492043782 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.372794133 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.37396706 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407503916 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.372008714 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.610897716 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.371269582 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.878744579 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.44578964 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.603186739 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.995067458 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.37250843 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.471027674 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.495545726 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.373892773 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.371366923 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.373261793 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.373335332 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.486752701 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.372940551 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.832921225 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.559091869 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.389371465 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.897948512 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.475680282 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.373732633 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.791157892 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.376127455 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.372767122 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.20651569 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.477047119 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.374981231 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.373346707 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.372938877 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.833442303 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.001080608 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.671621356 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.379223208 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.83013692 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.377882959 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.838851403 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.986645931 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.100821113 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.380718548 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.490655406 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.560112903 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.391637053 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.375568789 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.377422267 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.900862718 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.377881051 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.434486276 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.373207838 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.780338978 seconds)
  done (took 388.144010074 seconds)
done (took 630.77582799 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.276011889 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.227016138 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.368928964 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.259112625 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.221830255 seconds)
  done (took 12.652185034 seconds)
done (took 13.95488597 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580744491 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.582974865 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.441582694 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.582551494 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.412577586 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599420832 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.568985337 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.401394658 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.499518416 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.464356313 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.496697278 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.435882681 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.410219753 seconds)
  done (took 20.777261754 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.66644428 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.381637475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.444661034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.63472921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.420970623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.646581458 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.684833995 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.382229129 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.533892202 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.395041374 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.394444545 seconds)
  done (took 19.887489223 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.69229102 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.382800564 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.472018222 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.659259257 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.424414722 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.672438439 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.70412305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.383707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.538178626 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.396076373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.394949822 seconds)
  done (took 20.021482759 seconds)
done (took 61.989263311 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.421368136 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.554951329 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.413710086 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.394984018 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.390422102 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.389428282 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.396312193 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.392593323 seconds)
  done (took 12.655677558 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.388805832 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.390205732 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.388811219 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.389928067 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.389449585 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.389081034 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.38933064 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.388360796 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.389720452 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.389506202 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.387847909 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.391515462 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.390007774 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.388801714 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.391111754 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.391928069 seconds)
  done (took 23.535912948 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.39349638 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.389182807 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.391427227 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.389731628 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.390608179 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.390586817 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.391401791 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.390475537 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.392126418 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.391221533 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.391158291 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.390786395 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.390560616 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.392270439 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.390865159 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.392720469 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.392389977 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.390926445 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.396046195 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.389747877 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.391025016 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.392126344 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.391754004 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.388944489 seconds)
  done (took 34.696421066 seconds)
done (took 72.191700297 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.379290574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.391805879 seconds)
  done (took 6.075108167 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.451273498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.45169194 seconds)
  done (took 4.208525279 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.392682909 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.391680083 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.392591047 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.391376488 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.390892787 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.39164995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.392429257 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.391129139 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.392148316 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.393431114 seconds)
  done (took 15.224666157 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.391106102 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.391840808 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.391664409 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.392643534 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.39163541 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.391137217 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.392375984 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.391814559 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.391348452 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.391736306 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.390075296 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.393334574 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.391085715 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.393040863 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.392416829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.391643388 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.393520078 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.392942933 seconds)
  done (took 26.359785312 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.406772397 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.415554199 seconds)
  done (took 4.126928137 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.532344813 seconds)
    (2/7) benchmarking "second"...
    done (took 1.434546733 seconds)
    (3/7) benchmarking "month"...
    done (took 1.509102969 seconds)
    (4/7) benchmarking "year"...
    done (took 1.500242945 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.43409229 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.41428195 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.435891609 seconds)
  done (took 11.566525201 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.395471229 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.596054624 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.713206446 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.971735243 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.395942399 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.397673897 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.203031337 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.397261148 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.400347626 seconds)
  done (took 15.778691007 seconds)
done (took 84.647325084 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.380125866 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.441636385 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.418503428 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.406152253 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.728005119 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.425503879 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.385110216 seconds)
done (took 17.494934936 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.37444081 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.389647596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.378388449 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.399406125 seconds)
  done (took 10.849085767 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.383259418 seconds)
    (2/2) benchmarking "read"...
    done (took 1.692120914 seconds)
  done (took 5.381792112 seconds)
done (took 17.541717306 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.39481913 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.396900861 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.396269739 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.393000979 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.395581835 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.396099476 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.395895122 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.395374139 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.395271302 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.394778582 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.394089395 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396638483 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.394856089 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395297587 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396436202 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.396530089 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395742784 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.393494831 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394887045 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.396260436 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397265016 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.39586575 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.395589629 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.395323496 seconds)
  done (took 34.799705121 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.396614005 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.394804906 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.396249554 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.396927732 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.39562721 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.395917344 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.396692059 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.395949617 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.394850333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.396242696 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.397840083 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.396231748 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.396562238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.396559725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3969202 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.396884732 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.398105961 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396180942 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395957944 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.398191687 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.397202039 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396603963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.398631712 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397475404 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.396443721 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.398189109 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.39774344 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.396649425 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398054235 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.398211656 seconds)
  done (took 43.214227665 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.400111256 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.398979095 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.397288995 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.396703798 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.397881646 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.397576124 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.396748715 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.397769506 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.397599866 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.397014023 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.397935968 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.399039435 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.397630583 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.397300211 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.397916883 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.397623857 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.398730472 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.398251517 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.397949623 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.3982587 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.396477281 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.398847818 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.400689816 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.399894107 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.398435251 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.397983173 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.398107188 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.400220889 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.39857348 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.396534384 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.399974318 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.397410611 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.397710448 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.398686593 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.399382517 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.397825434 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.403250479 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.401435267 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.397743579 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.400886222 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.399210714 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.398594888 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.399247828 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.398932454 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.398744996 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.401840857 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.399253236 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.398663623 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.401192058 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.400412142 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.399828602 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.399815715 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.400364679 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.401175321 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.400505502 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.401679929 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.399386619 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.400477265 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.401177825 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.40007106 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.401140252 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.40143773 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.401454962 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.400138664 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.400490951 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.401361832 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.40104557 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.401747853 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.401456051 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.400129708 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.402963421 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.400991455 seconds)
  done (took 102.066670205 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.401557999 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.400525178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400969417 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.400123278 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.401074662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.402022748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.400964663 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40271905 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399509475 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.402013647 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400782546 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.402213978 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40196465 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.401721425 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.401626833 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.402897723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.402416185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.402157782 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.400761049 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.401985744 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.402638041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.40166289 seconds)
  done (took 32.147768817 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.401472513 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.404402269 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.402866105 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.402346306 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.404564018 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.404945378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.400041132 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.404837993 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.402619288 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.40298476 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.402228544 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.402695087 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.405512518 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.402544181 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.403202462 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.405980115 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.403330686 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.405780575 seconds)
  done (took 26.576320166 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.403635837 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.40398535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.404552587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.404053214 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.404011687 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.405868758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.404851055 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.403344298 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.405871154 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.404503318 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.404504946 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.405196541 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.403611654 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.403661333 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.403437385 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.404250619 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.405544179 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40455336 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.404275809 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.404299368 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.404361675 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.403489393 seconds)
  done (took 32.21160269 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.404225577 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.403434959 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.404947329 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.405232576 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.405422931 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.405101748 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.404660408 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.405639999 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.406517244 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.404919809 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.40560593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.404957583 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.406999424 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.405335363 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.404821745 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.405628729 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.404718773 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.406217977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.40644804 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.405726907 seconds)
  done (took 29.422796348 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405780344 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405483267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.404975676 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.407050557 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406538637 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.406986591 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.405708347 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.407279461 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.403920522 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.407858964 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406034231 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.406250807 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.405605822 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.40849956 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406668891 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407283648 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407186113 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.407630182 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.407337503 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407499902 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.407447639 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.407504234 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.407563217 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.408338757 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407946908 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.40797469 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406319693 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.407490873 seconds)
  done (took 40.709322866 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.407728079 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.404582131 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.40675487 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.408895519 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.407826153 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.409355518 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.407071381 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.410134558 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.410123508 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.409526323 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.408587914 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.408875482 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.407984876 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.406038064 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.408974874 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.40918363 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.408751425 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.411472089 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.40844972 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.409560627 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.408519257 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.408679818 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.408208848 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.410389773 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408546599 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.409746949 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.409880222 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40862557 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.409336252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.409107429 seconds)
  done (took 43.580477866 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.451363329 seconds)
    (2/2) benchmarking "in"...
    done (took 1.450854686 seconds)
  done (took 4.219068363 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.410559073 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.409854361 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.410075053 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.410363802 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.409247431 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.408630841 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.411257861 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.409542687 seconds)
  done (took 12.60066926 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.407193349 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.411810706 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.408822011 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.409457122 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.410190892 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.405457696 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.416450103 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.415406228 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.407107704 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.406904375 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.407884876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.407200353 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.409354823 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.40935455 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.409386935 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.410492431 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.410102419 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.412759967 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.410812058 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.410197472 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.408859671 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.410918898 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.412081138 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.412911409 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.406950849 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.416092157 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.415266451 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.414893994 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.40675677 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.412473274 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.409996411 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.414205522 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.411425944 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.410819523 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.412270419 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.411481301 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.418473463 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.432630764 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.417646525 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.416327546 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.413008254 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.411981481 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.40914891 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.41217858 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.410903195 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.414714192 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.412725317 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.410785891 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.409965766 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.409128439 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.413571327 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.409745237 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.414777988 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.412722448 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.409864177 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.418007333 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.418789615 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.406455816 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.409285963 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.418760896 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.422843833 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.416307975 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.412683019 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.415996863 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.411262671 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.413910131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.419482349 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.419208873 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.415801906 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.414240811 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.417237291 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.424238005 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.418458439 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.41657343 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.414117466 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.415098572 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.411333521 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.412225931 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.418267932 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.418404606 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.414228304 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.414681037 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.410413912 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.412653424 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.407629874 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.414957062 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.412069735 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.414976399 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.410171068 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.421234533 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.42019523 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.415215687 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.409496009 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.412391993 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.412861834 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.412484451 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.409736618 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.412494694 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.41708992 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.418601476 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.415278577 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.412739329 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.415940727 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.418081372 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.413523528 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.419407182 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.420061557 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.40777698 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.421206572 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.420297197 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.415906442 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.411647708 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.41430064 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.418082074 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.411910995 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.416538954 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.417400881 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.412342876 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.417032623 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.417277246 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.414629522 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.420155391 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.418680165 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.416701337 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.41306976 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.419421758 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.414463459 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.416286657 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.42096332 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.415565097 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.416250226 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.415838099 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.418629929 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.412528229 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.415971465 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.413658777 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.417366811 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.414194111 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.416490939 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.414959437 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.41717228 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.414522838 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.417128371 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.415701828 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.419047837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.4150622 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.42367765 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.417023327 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.415040239 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.417763333 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.419788154 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.420195833 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.414340889 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.418254294 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.414420358 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.418616251 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.414880583 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.416396959 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.41966266 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.419172533 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.418964285 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.413190944 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.416963275 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.41884804 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.419163975 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.41671171 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.417178042 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.417956097 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.414378406 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.416196645 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.420765712 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.414956482 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.415175156 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.42311359 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.415934312 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.418693489 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.41677433 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.419920587 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.419647974 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.419324513 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.414426048 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.420142458 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.417020069 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.423566173 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.415742617 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.419549785 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.420146213 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.41686857 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.418681718 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.422233314 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.413837507 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.428323921 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.425935567 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.426879668 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.418068595 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.424223842 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.414612703 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.422758284 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.420732783 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.424926446 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.422109762 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.423941141 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.419694701 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.42084954 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.415254121 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.422047123 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.416272256 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.420978376 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.418691874 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.421831416 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.420010278 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.417591429 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.421474279 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.426276435 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.421378465 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.420908612 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.417355621 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.421050453 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.415354871 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.414557928 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.420530254 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.421931831 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.424615556 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.423910171 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.419411545 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.423072432 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.421076852 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.418661967 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.423435913 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.421955376 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.421429349 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.427995348 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.423417601 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.420617817 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.427931444 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.424133327 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.419779269 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.423443943 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.425380504 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.422943014 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.419273337 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.42630372 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.422288617 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.421397972 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.420556493 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.415176309 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.427039281 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.426523572 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.426522522 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.419415818 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.423719118 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.422355752 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.423595813 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.420766714 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.422698829 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.42217822 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.424317414 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.426419181 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.423471126 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.420841128 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.424460895 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.422197053 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.423619994 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.422277547 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.424207724 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.425678064 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.423593985 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.423348012 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.422014518 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.425726514 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.421123459 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.426270461 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.420818643 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.431021473 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.433309077 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.428761676 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.425267049 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.424710405 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.425618344 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.424261407 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.420920535 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.42231406 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.422939611 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.421393247 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.422003564 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.423657596 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.421011287 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.427286784 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.425702599 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.42534425 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.427862392 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.42697167 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.421661579 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.425622694 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.424999213 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.426890156 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.421182075 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.428053082 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.422526005 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.427665157 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.423554546 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.425577954 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.431427092 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.428517493 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.425180118 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.424277096 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.423847681 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.422716141 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.426121382 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.428000659 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.424099403 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.428419912 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.423849618 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.428510752 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.425345404 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.431905275 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.431526364 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.424058398 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.42613293 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.429029606 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.42212134 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.424208965 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.428306597 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.432871053 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.432947245 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.425150546 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.426649333 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.427934691 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.428633136 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.426146513 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.428121462 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.429236751 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.429588095 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.43598626 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.447275772 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.428530066 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.431302906 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.430898809 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.429255422 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.424340822 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.422633161 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.429055566 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.430275399 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.424659145 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.427981097 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.426465864 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.430458294 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.427722336 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.429728465 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.430182393 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.427843279 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.434560129 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.431846489 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.430185491 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.427302638 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.434952342 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.434306635 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.434814181 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.435113157 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.424819975 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.432164713 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.42841833 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.426797142 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.426550605 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.426293996 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.433074817 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.42485344 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.435138706 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.429744538 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.424494099 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.432541501 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.43144501 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.421864489 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.432889731 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.433103896 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.42642413 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.432533531 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.429601119 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.427487923 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.430169204 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.431002494 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.423955199 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.428639909 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.432092087 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.433556634 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.425843979 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.434026341 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.426418916 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.434129193 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.430530856 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.430648157 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.430929205 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.433121106 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.421068055 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.433433644 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.428869854 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.43684904 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.428617818 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.431269553 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.429731099 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.437320085 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.437231797 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.425775132 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.435466174 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.433608095 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.425131567 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.432221178 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.433712579 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.423157508 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.435617455 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.42580638 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.433929455 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.429649614 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.430252832 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.426854137 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.434903967 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.425371899 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.427311221 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.432831685 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.432203015 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.433897777 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.430402997 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.432665747 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.424599292 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.424782092 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.432665964 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.426908515 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.436395267 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.427934708 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.428688855 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.429348862 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.432729081 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.431192739 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.431627492 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.426381519 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.429162315 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.436178262 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.432417217 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.429402493 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.430319239 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.434855278 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.427649301 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.430469007 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.430826021 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.42683232 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.429195468 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.433958973 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.429141923 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.428729597 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.430442269 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.432833532 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.434329045 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.430976592 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.428795243 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.439650824 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.456734845 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.435184238 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.429285397 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.430502665 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.43066691 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.43403651 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.432986178 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.429428045 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.438556942 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.434772243 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.433860356 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.431078889 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.430196902 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.428965046 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.435418269 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.432937614 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.430672978 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.436219233 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.431388908 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.435272693 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.432948992 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.433721191 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.427687623 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.427602271 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.428993551 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.428725026 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.433622703 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.431748463 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.430880341 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.429923549 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.434611104 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.432252961 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.433173537 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.432763006 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.428330297 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.435966294 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.430507231 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.431658966 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.430554576 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.429771542 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.433871506 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.433272652 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.428112676 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.430160643 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.434526517 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.430923217 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.427784791 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.430185516 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.432059429 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.433399086 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.431292291 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.427319831 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.429489008 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.43265121 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.432280062 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.432878462 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.428383252 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.441225878 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.457991328 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.428308938 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.430715478 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.433653378 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.434035628 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.433076459 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.431429579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.428927228 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.432074932 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.434076433 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.431148147 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.435639595 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.433780681 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.429525798 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.434210221 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.428451717 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.42940185 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.433493737 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.43467068 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.432357051 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.428661735 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.436316188 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.437142314 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.432285412 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.442279289 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.436265028 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.431693212 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.43523555 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.429655216 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.435109427 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.432931539 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.435038559 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.432416059 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.434268379 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.434187296 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.430043168 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.434450485 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.434839699 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.436811798 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.43444323 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.43158021 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.430114366 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.435594792 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.43381291 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.434124383 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.43415515 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.433635657 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.433810463 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.430645321 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.441762553 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.441190997 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.437301723 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.434611101 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.435163327 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.434188995 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.433042405 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.433760944 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.437450977 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.436394514 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.434280006 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.43342429 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.436772242 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.436224648 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.430787683 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.431616479 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.43190676 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.436013531 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.442378563 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.442526456 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.435815987 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.43374388 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.436139989 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.435729554 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.433059776 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.43637498 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.43463128 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.432475055 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.434687536 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.437530999 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.437787382 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.435320807 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.433277633 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.439337983 seconds)
  done (took 850.442739551 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.437549667 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.437772971 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.436288312 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.437246942 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.436579673 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.437808163 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.436595362 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.437559635 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.435630205 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.438720293 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.436832663 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.437825105 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.436856153 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.437871672 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.437076998 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.438205025 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.43764234 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.438032134 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.437318097 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.436284108 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.437679712 seconds)
  done (took 31.526698447 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.437283226 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.43713065 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.438544127 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.438500476 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.437983044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.437430856 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.438286894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.438647305 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.439154174 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.438253826 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.438858934 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438607235 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.438181382 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.439528582 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.43961929 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.4396757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.437251616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.439214597 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.438682579 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.438664228 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.43962656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.438940211 seconds)
  done (took 32.9928004 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.436539659 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.438158788 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.434179737 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.440951729 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.439532247 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.439420466 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.437431018 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.437734028 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.440705848 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.435321282 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.43424776 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.436131279 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.438027802 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.443602603 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.439171383 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.442686613 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.43839586 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.439367022 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.438645369 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.439949567 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.443200059 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.443921453 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.441867733 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.434574404 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.439671159 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.437804191 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.441610659 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.439679522 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.434800451 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.441569603 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.44026668 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.436863377 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.44022534 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.437844471 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.436289348 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.443254147 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.44019791 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.441371882 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.440841783 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.439519824 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.44216845 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.440732954 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.443907936 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.444042582 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.441239144 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.437483869 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.442664792 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.441097295 seconds)
  done (took 70.446056172 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.440307086 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.441618509 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.440124508 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.440026898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.442677752 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.439758572 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.440673175 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.44081081 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.443335905 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.439392534 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.440770038 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.440696855 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.439910077 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.440188814 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.440407586 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.439615219 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.440351446 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.440488674 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.439578931 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.439098952 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.439971281 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.43924651 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.440294036 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.440413097 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.441191535 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.44077401 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.439848023 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.44237193 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.441768692 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.441330998 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.440350062 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.440849397 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.442363958 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.439566351 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.439617496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.44082487 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.440972504 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.439761847 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.440475141 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.440527291 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.442116506 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.442702864 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.441249207 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.443044604 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.443475264 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.441232415 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.442433306 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.440317253 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.441482745 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.441088598 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.441975843 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.442112662 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.442437127 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.442437764 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.441810463 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.442762541 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.442038356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.443281334 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.441599216 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.441605884 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.441789176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.441407694 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.442331359 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.442787344 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.442334258 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.441514552 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.44283048 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.441525581 seconds)
  done (took 99.349013748 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.442001611 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.442226601 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.441033899 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.439995448 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.441471616 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.440127756 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.441500852 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.440645375 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.441548308 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.441012722 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.440079868 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.441803637 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.441904699 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.441433408 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.442639468 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.440127819 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.440340165 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.440777855 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.440546003 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.441210781 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.441187027 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.440343999 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.439697043 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.440789928 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.442252805 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.442306686 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.441434087 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.440693805 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.440940574 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.440931784 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.442636619 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.443097245 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.443932792 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.443462456 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.443576041 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.442551811 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.442232852 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.442638763 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.442648434 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.440693299 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.44192875 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.442724718 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.442554966 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.442621086 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.442442956 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.443089345 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.443356583 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.44321176 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.443724536 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.443202171 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.44292741 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.443431206 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.44239225 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.442875572 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.44349318 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.44179549 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.444790922 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.443889659 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.443964071 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.443925002 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.443064973 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.444568037 seconds)
  done (took 90.760834978 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.444360396 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.442360399 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.443709159 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.444737913 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.443890128 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.444008707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.443264718 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.443183293 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.445679628 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.445124468 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.446946868 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.444869178 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.445941419 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.444537939 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.444232273 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.444918543 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.443738763 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.444894923 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.445606616 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.444403306 seconds)
  done (took 30.240487381 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.445144797 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.443397463 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.445734443 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.446045203 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.444042726 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.444426464 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.443125338 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.446283138 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.444521196 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.444156139 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.44483292 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.444757635 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.445924138 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.445915084 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.44444324 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.446314594 seconds)
  done (took 24.469716634 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.44620812 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.445582789 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.445315281 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.445298791 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.444890172 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.446975084 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.445518144 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.447223998 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.445794369 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.445864711 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.446336037 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.446502675 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.445710645 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.445645779 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.447224182 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.44770462 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.448028299 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.446322256 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.445946088 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.446167071 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.446599423 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.448494807 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.448104775 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.447233364 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.447546879 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.447004266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.446619003 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.448898937 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.447443974 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.447768673 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.447430619 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.447447541 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.447475941 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.447297835 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.446212204 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.448426398 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.447988964 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.448898716 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.448746633 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.447975801 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.448278704 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.448411136 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.449101931 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.44735558 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.447751526 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.448556565 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.447695877 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.448336825 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.450086893 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.447882665 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.447673536 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.448217001 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.446329016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.450869128 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.449066592 seconds)
  done (took 80.956437765 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.449594802 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.448734742 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.450585471 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.449408977 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.449775706 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.448607019 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.449865188 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.451810805 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.448508089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.448298372 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.449907369 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.452552106 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.448938355 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.448657148 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.449989162 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.449866508 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.450342671 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.449256603 seconds)
  done (took 27.448734202 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.451573009 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.451107647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.451481585 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.450416395 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.449910655 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.45147825 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.450258332 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.449523338 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.450857035 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.44971591 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.449512084 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.450203268 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.451738321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.451805807 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.450873616 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.451673394 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.451264389 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.450911828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.451697891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.451658003 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.451549142 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.450326562 seconds)
  done (took 33.274970797 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.444873241 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.446811561 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.446071129 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.45850995 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.449838251 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.445170235 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.447302786 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.446238364 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.460970049 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.464557898 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.463329731 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.453430389 seconds)
  done (took 18.782615769 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451621281 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452089751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.450940099 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452141731 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452919958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452586382 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452367462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451926103 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452516131 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453563206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452206113 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45111096 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453101652 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45396782 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453717294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453161897 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452801302 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453921374 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452193832 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452927692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453320675 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45258123 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.451428217 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452089303 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45158304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452487506 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452984385 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454428387 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453069412 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.45284446 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45252105 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452009391 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453486723 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453625941 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452748269 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45245307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45356831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.451167791 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.453772013 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453960145 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.453342679 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453441936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453464314 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453830063 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453228629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453560938 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454545321 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45528249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455149175 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455007287 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.454821294 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455100694 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455994323 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.455956366 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454142232 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457093573 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.45613391 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455971217 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455868946 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456222188 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455559869 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.455207402 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455087177 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456360496 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45622195 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454952781 seconds)
  done (took 97.297493475 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457016055 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.455283752 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4543933 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456133462 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45587807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456688075 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453799921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456039237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455720101 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.455627103 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455898438 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455397846 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455987262 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455766771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456854037 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455513831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457086551 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456167325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45609302 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456519731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456534466 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456330373 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457613062 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456444745 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456749504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456800491 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457202744 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457988498 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458139052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.455906949 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456077747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458539164 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457745232 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.456258459 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457022828 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.45915394 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457232549 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456783098 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459249899 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458040831 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457305199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457300974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457130473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457794235 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458237202 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457675484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457819446 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457335211 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458424124 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459304823 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458999077 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459513319 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45908033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458912947 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458202221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458108992 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458225702 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.458603761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4567562 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457416901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459377543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458180188 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46056623 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459176092 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460381305 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460031225 seconds)
  done (took 97.54619809 seconds)
done (took 1988.39465885 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.620981677 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.575327933 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.45499303 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.465759038 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.454316281 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.477550432 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.463657078 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.453347654 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.454288807 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.454984271 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.453462598 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.646740944 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.447914271 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.454638698 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.453722105 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.550676143 seconds)
  done (took 29.246246058 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.485448069 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.463995332 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.584253896 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.482042498 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.48479237 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.662486536 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.522479254 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.459078015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.646671261 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.484050489 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.450946221 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.506611994 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.45810712 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.449444222 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.484272899 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.662025628 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.732142612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.465102912 seconds)
  done (took 31.847738509 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.950622135 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.470947853 seconds)
  done (took 5.786936822 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.481301529 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.459529698 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.460707697 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.459090826 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.449405116 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.469646318 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.458818536 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.450914583 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.476785693 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.600926591 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.465641117 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.472343205 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.47893344 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.460519881 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.46375387 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.505175038 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.616518142 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.464659641 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.464150672 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.46743189 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.460828349 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.553546899 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.509158821 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.469774744 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.59736606 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.471151295 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.466764583 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.466674289 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.58853527 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.465945711 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.459621264 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.459978189 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.462374837 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.454146305 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.963494206 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.473211916 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.470137422 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.48817976 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.464761138 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.620053778 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.462469051 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.467703183 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.465084359 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.96731838 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.585862174 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.600263673 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.492157779 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.463143479 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.463908295 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.530344997 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.465456922 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.464468445 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.524339099 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.327361888 seconds)
  done (took 92.648618137 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.457298872 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.455257854 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.63924846 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.476473615 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.455047747 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.454913898 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.456277754 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.77061254 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.47634722 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.456799692 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.775221407 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.062691575 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.476944457 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.509594687 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.320765808 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.524703032 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.456387005 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.455170385 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.458373965 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.461711119 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.032831485 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.460437013 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.455895591 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.574026698 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.497851024 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.002268364 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.455614381 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.456402579 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.475166528 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.456607652 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.013115042 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.478582124 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.528755061 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.458336236 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.746659332 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.867759018 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.829789976 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.460765482 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.508891508 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.467460428 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.457564506 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987877093 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.846691765 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.456543081 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.476204777 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.994360483 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.458685244 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.470663127 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.457348763 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.712808761 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.457023776 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.458488786 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.45679282 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.460131135 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.458466071 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.5606492 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.539160032 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005893623 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.458125347 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.459534381 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.498039747 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.45980888 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.463256881 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.46344373 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.477874205 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.852715674 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.65353479 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.466499739 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.849535793 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.009478397 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.490337739 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080879718 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.476439768 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.470430263 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.652602145 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.458716606 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.459372497 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015849319 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.476546098 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.458951646 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834031255 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.463952529 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.772626891 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.477197 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.460900465 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.06255876 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.474700949 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.468625724 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.472387605 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.459331022 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.459246597 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.459858235 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.754920187 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.500716036 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.460534676 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.459911321 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.495411921 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.459141331 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.478678153 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.462768907 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08367251 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.484763862 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.459497114 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.462898323 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.475491192 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.460602486 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.46087573 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.462369865 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.734641813 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.475273986 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.466879255 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.461881625 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.469792333 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.469190029 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.554380825 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.464642915 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.800267499 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.465566149 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.460695849 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.465812919 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.465327602 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.511955203 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.462544795 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.468874326 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.344263186 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.725493051 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.480737552 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.461440444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.463088416 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.460613157 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.480432111 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.479320016 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.502956614 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.466128633 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.28624631 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.507889793 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.488009334 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.462322747 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.468639208 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.477821022 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.472717712 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.464463377 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764258342 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.752491978 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.650711009 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.46384272 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.46219548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.255573658 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.506550187 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.645255737 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.484982111 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.463775266 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.714261074 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.690658512 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.464996724 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.46370408 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.464447308 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.730609923 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.462648475 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798895294 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.048647803 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.481631772 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.473709071 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.293905283 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.214390727 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.464704652 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.463585481 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.76626971 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.481341396 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.464775992 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.464678146 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.46504561 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.483335307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.483521275 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.47279055 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.465296399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.46532063 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.759842617 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.658753651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.483561512 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.469972568 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006528375 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.485767562 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.465652166 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.492186169 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.465701757 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.465823795 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.531599402 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.468037671 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.494774549 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.468051213 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.470401524 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.025336337 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.466407193 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.466280117 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.659642202 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.205619307 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.484413785 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.467609183 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.465844046 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.376457985 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033178601 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.505446475 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.809533809 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.471185672 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.508016533 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.46628253 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.480379286 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034515702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.467023688 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.466873917 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.164358341 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.485657312 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.910022787 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.466173432 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.466763968 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.101787551 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.485887388 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.470160322 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.468239763 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.484809433 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.795561208 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.468071948 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.52002454 seconds)
  done (took 529.079658158 seconds)
done (took 689.97556573 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.467338586 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.471708208 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.463199604 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.47307326 seconds)
  done (took 11.257176462 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.481100274 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.475783854 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.478382885 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.474960061 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.483252924 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.475644078 seconds)
  done (took 10.250425988 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.468297997 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.474322525 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.474894177 seconds)
  done (took 8.799134022 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.707334915 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.491253985 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.860645915 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.499516675 seconds)
  done (took 9.942301389 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.480437361 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.479646797 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.481480452 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.485393686 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.483210695 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.485077127 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.485330417 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.484183672 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.483543631 seconds)
  done (took 14.730580144 seconds)
done (took 56.366031924 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.588842543 seconds)
    (2/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.507880719 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.606571907 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.532931537 seconds)
    (5/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.460867983 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.471701542 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.508677932 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.622895003 seconds)
    (9/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.527802166 seconds)
    (10/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.596619966 seconds)
    (11/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.602768741 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.567087629 seconds)
    (13/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.46235322 seconds)
    (14/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.662340317 seconds)
    (15/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.53370612 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.567077242 seconds)
    (17/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.563844323 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.474288835 seconds)
    (19/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.463332369 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.271515988 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.722178566 seconds)
    (22/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.529110798 seconds)
    (23/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.179971677 seconds)
    (24/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.770586453 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.553861074 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.588402227 seconds)
    (27/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.190429025 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.650596148 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.510173159 seconds)
    (30/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.458830654 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.474452072 seconds)
    (32/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.510705208 seconds)
    (33/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.274852892 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.413170651 seconds)
    (35/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.530988352 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.624541335 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.462742518 seconds)
    (38/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.463732633 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.6028592 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.577974097 seconds)
    (41/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.236113444 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.585132118 seconds)
    (43/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.241040619 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.667019358 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.464933094 seconds)
    (46/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.728994998 seconds)
    (47/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.121678945 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.560129052 seconds)
    (49/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.630047081 seconds)
    (50/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.609798423 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.311015371 seconds)
    (52/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.135008206 seconds)
    (53/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.168212235 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.500082578 seconds)
    (55/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.591177318 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.627132913 seconds)
    (57/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.657243195 seconds)
    (58/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.513060712 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.535442682 seconds)
    (60/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.643299833 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.276076348 seconds)
    (62/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.526755879 seconds)
    (63/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.47640264 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.466319593 seconds)
    (65/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.544820323 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.482357493 seconds)
    (67/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.508215897 seconds)
    (68/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.505113635 seconds)
    (69/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.507770012 seconds)
    (70/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.46482822 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.565793335 seconds)
    (72/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.538680986 seconds)
    (73/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.469692061 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.463475671 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.645990733 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.571348901 seconds)
    (77/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.512034405 seconds)
    (78/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.511128228 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.621985323 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.551295915 seconds)
    (81/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.5655218 seconds)
    (82/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.467697829 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.587146316 seconds)
    (84/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.615516297 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.555907862 seconds)
    (86/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.467362716 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.701132716 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.467477161 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.250871607 seconds)
    (90/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.470533086 seconds)
    (91/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.468051565 seconds)
    (92/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.491392005 seconds)
    (93/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.694792573 seconds)
    (94/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.278997188 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.615519605 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.505359453 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.384314781 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.579758306 seconds)
    (99/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.503845327 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.479222307 seconds)
    (101/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.31276725 seconds)
    (102/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.668772205 seconds)
    (103/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.467093831 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.546245348 seconds)
    (105/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.550269425 seconds)
    (106/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.516448692 seconds)
    (107/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.491655956 seconds)
    (108/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.576669667 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.724840372 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.470771858 seconds)
    (111/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.470735848 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.505029605 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.632569605 seconds)
    (114/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.542058272 seconds)
    (115/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.476409211 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.561417733 seconds)
    (117/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.467328527 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.520321327 seconds)
    (119/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.467975862 seconds)
    (120/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.471325738 seconds)
    (121/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.606927425 seconds)
    (122/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.603474515 seconds)
    (123/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.233495279 seconds)
    (124/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.233124276 seconds)
    (125/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.481046283 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.519586978 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.191279413 seconds)
    (128/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.470675759 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.752154638 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.492165976 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.578292078 seconds)
    (132/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.169378305 seconds)
    (133/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.581603121 seconds)
    (134/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.469260662 seconds)
    (135/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.517348661 seconds)
    (136/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.436460274 seconds)
    (137/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.564355014 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.612953034 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.55928508 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.472389851 seconds)
    (141/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.470138569 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.555577989 seconds)
    (143/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.511975032 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.489625659 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.513761698 seconds)
    (146/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.522333845 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.579940527 seconds)
    (148/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.469980846 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.629553579 seconds)
    (150/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.49819013 seconds)
    (151/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.51292294 seconds)
    (152/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.635472073 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.506013803 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.13002853 seconds)
    (155/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.488110206 seconds)
    (156/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.532902031 seconds)
    (157/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.517820372 seconds)
    (158/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.543252027 seconds)
    (159/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.666707266 seconds)
    (160/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.258784185 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.557419067 seconds)
    (162/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.650655137 seconds)
    (163/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.599761004 seconds)
    (164/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.655217145 seconds)
    (165/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.675217544 seconds)
    (166/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.526914947 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.516610286 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.576900909 seconds)
    (169/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.647461643 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.605955606 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.17000694 seconds)
    (172/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.518688641 seconds)
    (173/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.127657851 seconds)
    (174/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.642466174 seconds)
    (175/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.570826946 seconds)
    (176/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.471856939 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.441263152 seconds)
    (178/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.545735833 seconds)
    (179/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.65107467 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.729825159 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.660117156 seconds)
    (182/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.472812089 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.487713929 seconds)
    (184/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.65525951 seconds)
    (185/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.572691164 seconds)
    (186/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.531084232 seconds)
    (187/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.589071476 seconds)
    (188/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.620153641 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.69606045 seconds)
    (190/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.538009994 seconds)
    (191/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.638678093 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.658015351 seconds)
  done (took 365.986602348 seconds)
done (took 367.37397688 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.506728529 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.5448817 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.489075531 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.48842275 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.490905411 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.493195089 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.50375078 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.491071241 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.499426478 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.500161181 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.495207199 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.492899725 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.502648088 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.497265728 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.52605699 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.491281666 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.489984264 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.495553386 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.502068586 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.502366479 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.493447527 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.492906251 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.508540659 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.490594737 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.499107148 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.499812355 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.499584895 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.492229419 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.493508505 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.501094932 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.482189869 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.498425691 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.503433393 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.49899103 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.494425788 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.495994444 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.492797234 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.54701135 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.506822703 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.497647608 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.495755101 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.502838321 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.498355976 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.49704453 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.498725697 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.510519697 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.500972741 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.507764738 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.482421419 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.50742004 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.509525715 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.499802191 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.497021953 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.487536337 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.495468102 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.508423184 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.498140766 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.509620583 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.494572015 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.493776309 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.527228781 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.510016418 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.500462115 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.500572904 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.497164972 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.506031784 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.497903433 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.505215696 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.49685061 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.497155663 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.496327543 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.49620462 seconds)
done (took 117.41720689 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.623537968 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.492818404 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.633761444 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.497978816 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.657197907 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.645080606 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.498060453 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.499861391 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.498562071 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.345391832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.496604926 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.498850943 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.494643901 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.499614582 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.625318013 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.498960125 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.497594789 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.238134158 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.499558124 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.63955231 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.490943959 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.49753763 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.49908891 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.358209311 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.495171792 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.48995296 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.641574206 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.499110319 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.250396299 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.489178198 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.491490608 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.250743205 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.644182831 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.520004562 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.509302238 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.509382199 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.661124631 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.519033171 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.627228971 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.625786772 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.638173407 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.537280045 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.489038408 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.49349403 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.501879427 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.500488396 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.500070758 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.529756262 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.49688735 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.499674505 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.24248586 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.509097413 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.510715945 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.501356087 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.501517495 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.521478644 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.502139114 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.502214607 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.645241612 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.501946302 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.626558409 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.359773309 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.349342275 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.501127561 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.49542988 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.501767995 seconds)
  done (took 119.809134857 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.566024674 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.577699313 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.613927876 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.497796566 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.550681821 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.615290792 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.49681957 seconds)
  done (took 12.319096828 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.503914513 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.501886345 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.548486302 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.548331231 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.502080213 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.653661314 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.502974345 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.509140458 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.501814539 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.551431267 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505581014 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501917124 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.511277466 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.497775225 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.546943523 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.510269656 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.614093124 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.498665708 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501499108 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.652384372 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.504365912 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.513007015 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.550626037 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.510892337 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506714529 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.506325739 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.273079327 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.502703974 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.502490139 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.505791286 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.504349542 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.554711066 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.502989756 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.497475158 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.504221057 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.614551829 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.503915638 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.504436817 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.505535535 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.501672721 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.505022692 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.503837044 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.504845829 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.504776316 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.50388891 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.523645573 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.504508096 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.504943526 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.504911174 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.504272786 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.55153018 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.505449769 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.503602451 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.503869858 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.55680341 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.514523014 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.505239568 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.505522142 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.506671676 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.506252623 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.655847392 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.548226062 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.506720867 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.548578565 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504278853 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.506842823 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.505637644 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.505374327 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.59283709 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.506185602 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.551813408 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.506634221 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.683540522 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.52601225 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.507409713 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.504107723 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.50452236 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.504911082 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.498085323 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.508190862 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.505570961 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.503110846 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.509056974 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.508053402 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.505287307 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.662377323 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.613352913 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.505308218 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.516932931 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.510598877 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.508440601 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.555843227 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.507505224 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.509442094 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.556896885 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.619253854 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.557717885 seconds)
  done (took 154.192599972 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.515613097 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.517209939 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.507468521 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.530764137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.509459897 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.509486059 seconds)
  done (took 10.495001729 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.508984993 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.512493259 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.507940073 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.508117267 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.508239315 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.511140182 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.509720494 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.505887166 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.510850813 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.507827385 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.511005312 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.514609148 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.511031436 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.508575099 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.509639432 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.509791584 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.508307583 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.509317606 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.508797894 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.507806709 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.50462594 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.50850468 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.508912026 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.507987346 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.514284487 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.510083255 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.527728186 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.509722099 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.510182507 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.513123119 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.531108909 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.511928344 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.508347635 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.509470865 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.514351902 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.507480609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.513062926 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.515390223 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.51036251 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.513830905 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.514687682 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.510543009 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.511216922 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.515525195 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.50784735 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.510336067 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.517619729 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.527636143 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.51092234 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.515580276 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.515183538 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.511685482 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.512626892 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.51506502 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.511016031 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.529828837 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.517684543 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.51199183 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.510206957 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.510473335 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.514443261 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.515277635 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.509688188 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.515160282 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.512224112 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.514894133 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.509335132 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.515711112 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.513555462 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.512669095 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.516550838 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.513440762 seconds)
  done (took 111.306477614 seconds)
done (took 409.521705284 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.54918215 seconds)
  done (took 3.959238023 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.609933688 seconds)
  done (took 4.023036584 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.869099827 seconds)
  done (took 25.287639826 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.59305273 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.593762591 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.543316384 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.504258881 seconds)
  done (took 11.645896842 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.91122014 seconds)
  done (took 4.324281227 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.521049229 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.517798891 seconds)
  done (took 6.455157126 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.854844522 seconds)
  done (took 4.266240809 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.826418246 seconds)
  done (took 4.247379477 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.515552389 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.517546744 seconds)
  done (took 6.454054833 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.492992179 seconds)
  done (took 3.904418563 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.200397313 seconds)
  done (took 19.611943428 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.520659365 seconds)
  done (took 3.935001007 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.530014222 seconds)
  done (took 3.943473424 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.485429179 seconds)
  done (took 6.896518684 seconds)
done (took 110.367618536 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.503171695 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.505597621 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.506339984 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.504288191 seconds)
  done (took 11.434260538 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.569746129 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.570690528 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.57283733 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.56661513 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.56768844 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.566386431 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.54225305 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.541033231 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.568116714 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.569045027 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.573968771 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.567887379 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.568657488 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.546955001 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.568403512 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.573730885 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.570064173 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.574109689 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.542846346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.56776688 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.516189661 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.568353541 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.568853359 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.517636101 seconds)
  done (took 38.872968139 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.029959621 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.584637144 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.664446684 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.563978279 seconds)
  done (took 8.255822452 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.633817336 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.646475784 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.646143076 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.690801618 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.727514047 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.646012546 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.542985665 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.539701302 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.524600066 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.646689083 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.649537118 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.586542922 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.737366958 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.516586267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.794446727 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.517766854 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.518650604 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.647123517 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.69412345 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.706057296 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.517761609 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.634669294 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.648212469 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.587216892 seconds)
  done (took 40.416803189 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.526531438 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.537089277 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.519474252 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.532915178 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.518540111 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.521218176 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.52195746 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.525345152 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.519391625 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.519211467 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.521455415 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.534044692 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.520369494 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.518930868 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.526370315 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.519997514 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.521995145 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.527116364 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.528921642 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.520279589 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.520686346 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.527169503 seconds)
  done (took 34.946515279 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.506769853 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.50691739 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.860382101 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.763998608 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.506115092 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.512626169 seconds)
  done (took 15.072781545 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.593433414 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.745821117 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.514323763 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.9154704 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.000608301 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.51649547 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.51609077 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.786295516 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.152430464 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.146499123 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.581741362 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.591984106 seconds)
  done (took 22.478377293 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.516643108 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.513350372 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.517413431 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.532324527 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.578781646 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.522277628 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.523965878 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.50722796 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.581053464 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.585748897 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.520773272 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.577372823 seconds)
  done (took 23.894392315 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604317304 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.514451157 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.513661166 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512408461 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514515843 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361830351 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.583018649 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26047204 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.540174762 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790130131 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528929718 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610016005 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.770720963 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515691209 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.519111159 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.499801584 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.74988686 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067672523 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52112243 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521182296 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553889692 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.514932411 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524049811 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752422098 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366095812 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516663915 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.785997621 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515159392 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831586674 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53336982 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526647944 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516366578 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791830048 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216658292 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635121945 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747610321 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518179793 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517680144 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.502939393 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.516351972 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.542760183 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.522895645 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52701454 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517718997 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517419862 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533382107 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271180823 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.544465626 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.516291645 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516962857 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809135716 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619273327 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.525169017 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516871649 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5186394 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516192673 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.522852494 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650127671 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099887526 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52376818 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524093673 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.543889604 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.514311638 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55165734 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1850524 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.526988428 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.525467573 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5233777 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51884679 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530761632 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55142215 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518952519 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.542696872 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519594383 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312693688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520160883 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543507227 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141754287 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531310736 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.524964111 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751110575 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518797472 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518146023 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.518515276 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.518793734 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313862737 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531463929 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.504346876 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562969919 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290505996 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.773397935 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543647527 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550463981 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.742246998 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.505996976 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521658442 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.535231858 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526637874 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542956796 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269002152 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540612306 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.527206358 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779427178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.732959201 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529562007 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.510318848 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059263876 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549307252 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.548541095 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526944472 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.757297905 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.165232983 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542955822 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521661878 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557852597 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519957046 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366453951 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532074097 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.531586518 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.521121686 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819423737 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.404835393 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52374922 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589212984 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528770895 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521092931 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533391363 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528454727 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.521260963 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.746640753 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.552991286 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537463079 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.522517681 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522704278 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.526998887 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522813239 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.528529441 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.744273656 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53428786 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803882579 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520859964 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522743547 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523036699 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.745749978 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.52283931 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.550748036 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.78662305 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527931315 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.536656951 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539340936 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557358808 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633503421 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55385009 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.529236037 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.782092679 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.53093921 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.530913582 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535615142 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.530590302 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524679306 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.534005978 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52704028 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164826377 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508380352 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.528356382 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526764801 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.541505979 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594476738 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532912254 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.757991589 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.536484399 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522929419 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.534214766 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.534002438 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749706934 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53654596 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.525399936 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608485499 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.035773939 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188285239 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545916986 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.52557129 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.526316273 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.52378627 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527125849 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526260395 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.526520103 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758311257 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54531573 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.540054828 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171678272 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533249389 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.535446016 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.537679207 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537977441 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.533717896 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527611419 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.537916888 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52616035 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544304306 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.537015729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663422751 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.543907578 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.527805598 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.045543207 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535954604 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.527408946 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526723865 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560299965 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.537126765 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376394968 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793342836 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521077123 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823006249 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.537322648 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.550913271 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.525581918 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52685216 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565469048 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.537900876 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537237253 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.538768829 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.542621517 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536245107 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08428999 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362634371 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129916989 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531341238 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.542097007 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529173076 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283246124 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550243539 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527840867 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789301316 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278541373 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549625806 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04512824 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.549109263 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.385079103 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828991276 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763328243 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.545495304 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.534883827 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851753283 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743114224 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563052246 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.542291786 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529465533 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.515290211 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121062225 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.552998738 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615268762 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284240308 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551293482 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.536996167 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.546001307 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.529749136 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97975442 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.556439446 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530941159 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.548006914 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.532552213 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380007428 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534079613 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531073005 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1956421 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.551256603 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.043042886 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551529712 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.766283578 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548274783 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.534050369 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.538805677 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.532422088 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.789627409 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826843147 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533141862 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.550306015 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128231813 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.402756455 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.541055135 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532154697 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385595026 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545322786 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852671032 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.547818197 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.548304726 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544028684 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.533162658 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53353514 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.531966182 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53730606 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509446751 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084442216 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.531387322 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548647227 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.569069949 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534049419 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.788259648 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.547796523 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182224459 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767533588 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540921528 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565794082 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.539468156 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533191914 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.525605594 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532079451 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.534454524 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606365993 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.756634272 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.542159579 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.520679187 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544149524 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.747162929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.53492866 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.53285044 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803676709 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.538828712 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.554014052 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32360054 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567566959 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.534044426 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540584658 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.531552487 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598403266 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604082156 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769318102 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.551893786 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.545612037 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98321267 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560695713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.542942338 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.551974322 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632875747 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535623538 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.562268299 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.333619305 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18431848 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355822895 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191038336 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840339149 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.539085885 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540757332 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53602839 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674778328 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536115386 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811406613 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537367923 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.533609533 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560247604 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538231804 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559976081 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7488546 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813469886 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534293505 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53580984 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543155856 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.537208768 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547684714 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.748998122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091225115 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154963814 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540169105 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.538545397 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314918458 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8349366 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537956606 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537849392 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539069763 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.558381884 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.538755624 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.547914231 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544162246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679049114 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832793208 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245229807 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57343901 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.577212642 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.057566806 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538026928 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.798851548 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537005254 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.775527142 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193353357 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316901899 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807048212 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608400019 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774990543 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.544526971 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676269243 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.543424165 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544955568 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539884861 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53992362 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.540049008 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552000688 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198960279 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810409682 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.547419838 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.543965736 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575223285 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.549027704 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.762982194 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.350017297 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.76412447 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550494475 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.546903312 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.540694692 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195331257 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84183219 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542064083 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.546044012 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80467803 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546675321 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568699045 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.315936296 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.540871309 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165948689 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.434029822 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563908353 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541194503 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319156298 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195891912 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.543647936 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10295001 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544837818 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541202186 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83843388 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.550795484 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.541340176 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823092302 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.54783352 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.54305963 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780934502 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.196601473 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.408179419 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.56815359 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561794548 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.550609098 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543590399 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57355115 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544188499 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550178598 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.005969417 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.569046841 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543104781 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557314235 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.551134944 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549465016 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.543066422 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544100969 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.551469285 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.546230792 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.531484113 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.551612268 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676144847 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141295123 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57545946 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.224973857 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.868915766 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.798252963 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546456615 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.531075302 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.552194501 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54711039 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54559838 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546959094 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.548234256 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161444806 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.552156238 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.557548197 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553099787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.759950621 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757261093 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.553139125 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78707914 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551081653 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568762141 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.531772417 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544103604 seconds)
  done (took 1055.148241913 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.566565328 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.556673193 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.584281585 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.6300363 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.585138511 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.551464612 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.548099835 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.606226333 seconds)
  done (took 22.073545097 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.543264038 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.549892794 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.55077491 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.554729429 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.540545811 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.079375164 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.577149579 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.551122015 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.563218864 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.545367572 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.544981597 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.316242868 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.574688539 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.55963298 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.542809423 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.555850079 seconds)
  done (took 35.602553146 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.941402052 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.856026605 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.113220067 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.542980624 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.589886574 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.550737793 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.94938042 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.566155786 seconds)
  done (took 29.556478376 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.556468773 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.559051716 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.556501369 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.557292834 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.557206193 seconds)
  done (took 9.232742497 seconds)
done (took 1348.402290147 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.554487638 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.553913454 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.553511575 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.553529756 seconds)
  done (took 7.663329109 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.534367527 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.534714031 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.535540941 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.549913708 seconds)
  done (took 10.601509216 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.371107169 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.259398281 seconds)
  done (took 6.078289668 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.089142216 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.104503811 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.097038761 seconds)
  done (took 7.738764939 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.857082939 seconds)
  done (took 3.306577158 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.542962698 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.549384154 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.282779552 seconds)
  done (took 8.824089742 seconds)
done (took 45.662073736 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.555436877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.792273338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.700215846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.553590981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.70471424 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.698913784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.35096823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.545547041 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.554484222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.550274728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.554056116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.705790565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.266588681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.793347974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.269935087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.793163488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.719694306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.546083756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.560048946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.545537401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.350824475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.553111432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.545553617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.557298461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.708180135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.68990917 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.551236625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.793842804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.545099093 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.576193745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.691242943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.545911746 seconds)
  done (took 88.31961061 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.544735573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.547271839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.545600284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.574059869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.556906547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.546197085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.565341167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.544572565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.545617119 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.577601592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.555555355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.546748713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.546480802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.545409723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.56784979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.545686521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.571836768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.546814673 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.546476774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.565283514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.549630682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.546544815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.548403484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.547276936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.546906538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.547805729 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.577796506 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.548337422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.546424927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.557953739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.548759632 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.567139587 seconds)
  done (took 83.171405265 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.547077934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.586075909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.561044183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.548965854 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.546809886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.559600531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.550648763 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.548334823 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.552499196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.550068225 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.549188785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.548791978 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.549923227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.547451457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.548502616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.547870199 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.570640117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.549629911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.548947185 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.548642168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.54935504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.553184238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.549261748 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.553418734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.549210972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.559996757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.55078477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.549741552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.548879058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.561192524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.567749727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.556805907 seconds)
  done (took 83.162024654 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.786584518 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.561309806 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.562659014 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.555351671 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.565079658 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.560071525 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.556735673 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.792278576 seconds)
  done (took 16.394153565 seconds)
done (took 272.499533728 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.552001095 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.137546289 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.603622476 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.563659656 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.577263268 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.580992262 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.798447209 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.599883091 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.799831052 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.575297802 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.574763564 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.554457064 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.467852985 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.72170829 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.483280618 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.561444816 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.547859009 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.551636718 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.199066792 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.859594604 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.581415458 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.552031123 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.470898622 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.578044453 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.541973356 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.646571007 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.667668156 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.797189999 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.725846337 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.646036134 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.137312016 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.559121601 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.585872207 seconds)
  done (took 71.254326265 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.559167824 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.563207402 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.563284971 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.562931847 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.562863759 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.561535224 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.557532917 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.561284771 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.564499648 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.563498702 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.56177493 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.562904186 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.563449653 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.563097466 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.561672794 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.55382293 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.558288787 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.563454376 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.556809824 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.553255612 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.562392173 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.564137227 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.564592883 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.56368004 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.564566271 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.565186935 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.563186961 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.563640358 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.563926917 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.563198473 seconds)
  done (took 48.312122262 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.564221959 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.192985554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.369365336 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.572118895 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.561050754 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.565173779 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.892264873 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.564970764 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.564575104 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.563154569 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.107623155 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.573224154 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.595816093 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.393354792 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.571252309 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.566294225 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.564387214 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.561145748 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.204866132 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.575257019 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.911974853 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.566607947 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.892400971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.570709933 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.586944095 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.564001883 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.567416877 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.421374297 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.587365276 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.110562976 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.492025581 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.893129124 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.361095619 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.424611178 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.485618223 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.572587414 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.567125374 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.110290503 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.565202025 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.562743905 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.891171254 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.566004249 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.373242566 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.262866415 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.590716599 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.56811066 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.450446213 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.132319835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.850216006 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.569495534 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.407314728 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.566771427 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.568569501 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.565382 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.843352999 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.566766156 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.564696032 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.47938925 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.592014095 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.893078841 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.568195029 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.564062646 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.201764458 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.569390358 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.198714613 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.569449168 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.573784024 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.585747378 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.378336589 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.567501246 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.279602886 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.590885113 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.569236982 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.106855161 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.203931328 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.519879855 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.566999426 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.205256517 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.39433941 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.915198027 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.569210278 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.407337426 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.916731725 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.574800413 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.571328203 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.570856602 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.571133828 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.638064557 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.896239838 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.21471342 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.28243686 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.505014181 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.926647165 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.580472477 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.567647207 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.48119268 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.593790214 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.569756151 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.378008379 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.287401506 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.593737865 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.575593836 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.293656531 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.597445588 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.899781197 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.57592053 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.419688934 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.568851377 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.643332522 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.570886947 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.575052495 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.592855427 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.899573464 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.572532939 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.57177892 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.269462062 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.155090168 seconds)
  done (took 218.307691956 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.561559987 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.562508064 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.561610471 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.563441532 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.561375169 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.569899035 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.560987717 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.560915885 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.565899896 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.56100711 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.561439652 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.571531402 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.56861156 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.56279891 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.582024108 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.562620104 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.562641712 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.588005394 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.584892486 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.562905997 seconds)
  done (took 48.801367986 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.572690559 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.206401274 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.182120424 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.579315217 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.574878023 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.569357476 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.63447193 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.578913474 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.573482208 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.910575697 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.767572559 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.57937643 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.573571612 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.574847003 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.18380233 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.57090887 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.909813252 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.218855471 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.579213369 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.208531932 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.563963442 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.573906649 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.570538867 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.210611661 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.919112999 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.89993052 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.637443407 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.216750517 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.575656744 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.574987686 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.209235303 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.576577084 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.57221395 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.211997448 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.596652811 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.589888457 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.575876321 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.638270982 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.643503456 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.919740531 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.216788481 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.908040846 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.59335079 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.758108556 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.576798224 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.564742639 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.220625369 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.597053676 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.56543343 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.577717843 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.582346453 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.195551966 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.598497379 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.195318306 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.601294615 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.577422595 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.216665716 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.200532227 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.213983119 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.777983133 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.577937175 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.903838246 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.583070453 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.222453878 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.598144176 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.576748168 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.577445119 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.774038578 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.229894984 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.91086814 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.925722117 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.922903909 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.5806545 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.646101974 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.603565467 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.919859282 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.649258284 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.005801675 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.922391342 seconds)
  done (took 143.1622615 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.862584066 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.697992207 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.017951158 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.220649469 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.119772009 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.719952168 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.702209254 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.859061487 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.585906031 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.663621079 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.297308745 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.702057512 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.344043938 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.674083589 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.689734301 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.733290489 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.012348422 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.569012148 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.294650171 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.268942054 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.573137949 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.711276906 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.126866161 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.780174397 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.569079849 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.14678055 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.595910068 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.137348603 seconds)
  done (took 59.145394694 seconds)
done (took 590.439465518 seconds)
SAVING RESULT...
DONE!
