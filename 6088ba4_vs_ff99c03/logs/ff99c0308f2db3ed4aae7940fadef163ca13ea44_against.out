cset: moving following pidspec: 24164
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.508148124 seconds)
loading group "string"... done (took 0.525195357 seconds)
loading group "linalg"... done (took 8.99284835 seconds)
loading group "parallel"... done (took 0.17460113 seconds)
loading group "find"... done (took 1.288665347 seconds)
loading group "tuple"... done (took 2.021547366 seconds)
loading group "dates"... done (took 1.490169582 seconds)
loading group "micro"... done (took 0.203522944 seconds)
loading group "io"... done (took 0.545822148 seconds)
loading group "scalar"... done (took 50.425918842 seconds)
loading group "sparse"... done (took 13.722391632 seconds)
loading group "broadcast"... done (took 1.290502627 seconds)
loading group "union"... done (took 10.216516978 seconds)
loading group "simd"... done (took 3.045953704 seconds)
loading group "random"... done (took 11.536945591 seconds)
loading group "problem"... done (took 2.233056699 seconds)
loading group "array"... done (took 24.242153342 seconds)
loading group "misc"... done (took 1.147499398 seconds)
loading group "sort"... done (took 3.776039255 seconds)
loading group "collection"... done (took 19.333930114 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.617566299 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.184099006 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203045148 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.289419103 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237011814 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153248138 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138902093 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.260116136 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.55320898 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209600809 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128774303 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510506273 seconds)
done (took 6.225312967 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252428215 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.178757704 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168640585 seconds)
  done (took 1.029487057 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073479877 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153361379 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.104452416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09125433 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090250463 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106626997 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091006428 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105802768 seconds)
  done (took 1.428184122 seconds)
done (took 3.470369814 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.502654963 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868486815 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.529865447 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162935156 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.299936997 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.293775897 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.329672578 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203180578 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088670459 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088563574 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172687686 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.393511088 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.436077196 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.955186548 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092120677 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111539528 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.117028395 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.764570079 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076719337 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111872451 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509184934 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.191288539 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096203996 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.1237871 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183354172 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130747028 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160605652 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101967796 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.663405441 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.128815092 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185671523 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096110053 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159508009 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.192791926 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203822586 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090957521 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688105427 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.197976137 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090920317 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095367235 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661959912 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.115771501 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185162618 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099883803 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088595254 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18043419 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093960792 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075203278 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.113279792 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083682393 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161455534 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.457234194 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102140506 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169375774 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090460113 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685354723 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096872471 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273668607 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.120593289 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090381977 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088245058 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086998662 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157492556 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093623186 seconds)
  done (took 19.981033684 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148609735 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164145035 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076830314 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15352537 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120722246 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078959608 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099191461 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077410433 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106656482 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240968181 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136226885 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153383902 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089324007 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086263762 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125353607 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246097407 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103709384 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118690467 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085532633 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088815738 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137324852 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094901301 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088894412 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108500043 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167769388 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200394471 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107285633 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120497376 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.084658119 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095081338 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13970228 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144457414 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.088562132 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084689731 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171460027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11962009 seconds)
  done (took 5.163807663 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199383083 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120871767 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212986221 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161195583 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145345026 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166305613 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145096781 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.282832561 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.213991228 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.178578034 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158143711 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124550434 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.092532791 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076701116 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076183901 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092843259 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.481322013 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.178244485 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129321842 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153459697 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086389642 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097616554 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372326088 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096672441 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078316142 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099048192 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067740958 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198273763 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084510617 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.198973519 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.08209118 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081487482 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103823674 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08058709 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126177562 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112427672 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117472616 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101476638 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077799254 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078164651 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214114097 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107940278 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077138464 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105967546 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130288053 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120158196 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099336535 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107001928 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219395385 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083395808 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100642275 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.068841098 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192584991 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123712272 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076775217 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284497803 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115269527 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084653435 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080093121 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.252921018 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113316154 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078681504 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094154929 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084130574 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076208896 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431324599 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106817262 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.905047491 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080976811 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155207536 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082353874 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101412405 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084226452 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082414572 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115826906 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07937659 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078089203 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092759898 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079615563 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076488518 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080970558 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111703808 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08261271 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0943464 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144048544 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096357191 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113735065 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106485445 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098615836 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078341776 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124159201 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080475374 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081252941 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169557706 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084718774 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108901465 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08436277 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14201136 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079754255 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.205540034 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079366742 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10484281 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098876315 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123964053 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098964661 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078690722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097622734 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077656196 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077864922 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156553369 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078652822 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079879248 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080910327 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109006748 seconds)
  done (took 22.709526492 seconds)
done (took 48.535154575 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.444782401 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086366825 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085623504 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104179632 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086530338 seconds)
  done (took 1.572946041 seconds)
done (took 2.314558392 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.321011447 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19774645 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097868617 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193016903 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083790125 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200982215 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186479767 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093811335 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212385883 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08289206 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192770053 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082304408 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10245703 seconds)
  done (took 2.812471032 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099853492 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10515902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115489076 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098771158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079657607 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097811248 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114181548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108088525 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096495686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106677402 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081222858 seconds)
  done (took 1.843832001 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096863043 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103233367 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08643513 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111669105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081682871 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095201841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110654006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104560688 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094570355 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107559379 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081325651 seconds)
  done (took 1.81892923 seconds)
done (took 7.214140529 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.231607244 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.57924481 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.168415993 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.286023675 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345224717 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.251642784 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.652388252 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.156311034 seconds)
  done (took 32.567664772 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.159688541 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104430165 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091540805 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08970857 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086520717 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102765201 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086559811 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085965729 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104685666 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091974234 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090188329 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10444579 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087779107 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088737094 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090879393 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106567165 seconds)
  done (took 2.380009141 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138810528 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11188301 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109364373 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093928826 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087743245 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10929877 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095086673 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089616613 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10491242 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088444612 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095834011 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107942141 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090831934 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086786055 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107084705 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118395239 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087873628 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107528019 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11700397 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091668031 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109142949 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090571855 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090496553 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109220333 seconds)
  done (took 3.266261323 seconds)
done (took 38.959002812 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151272053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098372805 seconds)
  done (took 0.998917825 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138949946 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154878122 seconds)
  done (took 1.047796179 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1083187 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083812219 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131252242 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098916038 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085227975 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099892635 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.111958396 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100392458 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085422446 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085682973 seconds)
  done (took 1.748940492 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088948668 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089455672 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.116668707 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137109022 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.092935589 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.105599799 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090336724 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087170256 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107082752 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085999621 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093738664 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120052611 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089510615 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120027771 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090246965 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09206655 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109528341 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.089171406 seconds)
  done (took 2.562522133 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084803011 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.086100102 seconds)
  done (took 0.928658705 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087789695 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08355176 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085674521 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102185741 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084279368 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084854026 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100555357 seconds)
  done (took 1.387184965 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492642269 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261542815 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.36762514 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102224722 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140516393 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336599074 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.140781139 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.097921158 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097815796 seconds)
  done (took 2.82913914 seconds)
done (took 12.257381209 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09125497 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.214920634 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.627292058 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.227383789 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084659844 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159158828 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.286758546 seconds)
done (took 2.457725894 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347507551 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149202601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084029841 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085700633 seconds)
  done (took 1.426790704 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078640146 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092646765 seconds)
  done (took 0.938526454 seconds)
done (took 3.132949575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083532158 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.084273883 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081597909 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098654574 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.083079698 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082973414 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.124644107 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084088274 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083543052 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.082199836 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.102275759 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083735805 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081974131 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098861456 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083276004 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083002614 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083112825 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.100182977 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083319437 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081959934 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081629541 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099192703 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082223239 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081586287 seconds)
  done (took 2.914274302 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107385984 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085113047 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102371984 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089129076 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087031943 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104837302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088672045 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083806652 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086871118 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102604445 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087687263 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086511644 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10180853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088017328 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084695869 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103352839 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088260088 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084167832 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100744632 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089578783 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.088321802 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100737123 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088461422 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086928521 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102872461 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088667071 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084599407 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100549192 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088741564 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087135407 seconds)
  done (took 3.538609933 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094757674 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083418043 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085628343 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111180325 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084495893 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08595275 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.098773218 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084952019 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08778942 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08518456 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105162868 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087308755 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084156479 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.103037851 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089025565 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090657454 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093759088 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.100720675 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084323868 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087604613 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.105500015 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084495061 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085359092 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086174705 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.102546809 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.083882803 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086914119 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.085805604 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.104446411 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087555039 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089298196 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106016549 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087781714 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097317252 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106075551 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088052225 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092558726 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082599076 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.105376405 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083853582 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083958765 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.102480481 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084827438 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093442849 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087334264 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.104703413 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085286809 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088736241 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10314125 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091968822 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084373713 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083533094 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.106191983 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090024762 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089248506 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098054426 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088330779 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.082718722 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087561817 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.102738272 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084360849 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083983041 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10784838 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088686703 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101318973 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10894209 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085826817 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089463841 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.086621255 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.106865918 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089829252 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097256603 seconds)
  done (took 7.422455404 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098199171 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093146057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083685476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100924615 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083784888 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084065271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104634043 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085554527 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083893321 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106442828 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086270627 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084800049 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084787585 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10267965 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085935799 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08457779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106592332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08429419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08491344 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101321203 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08613426 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089388283 seconds)
  done (took 2.781163192 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227539389 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091762857 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136432252 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114061557 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103536878 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113405574 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089823977 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09062275 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103726604 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094714944 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09318118 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105206122 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103436692 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091919794 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109523748 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095150841 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088432858 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110658256 seconds)
  done (took 2.738813719 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102068596 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.0853484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124866953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087514853 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086289724 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087296689 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107911756 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107292241 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086875443 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103515669 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094623531 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087326468 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104462812 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086638218 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087177277 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104391743 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.089136805 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086042586 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109504042 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092364771 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091120079 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109455676 seconds)
  done (took 2.897166485 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101006993 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086952797 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120261088 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090402991 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084452313 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084780487 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108561651 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085252644 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091930672 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10323174 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087193541 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085572439 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.118017096 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086148646 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091208769 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101594934 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087272809 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085806862 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103216464 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086074357 seconds)
  done (took 2.666074399 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171383521 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122421645 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105709932 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112363733 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12308529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105034512 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11211026 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123215125 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105008707 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131248922 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105076997 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105477353 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129985392 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110143757 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103567724 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129904811 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113866317 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128924361 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10479142 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104596535 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133282658 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105319216 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128951133 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106675957 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104537547 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121857451 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105933081 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10911968 seconds)
  done (took 4.046229812 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086980026 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084961916 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083549051 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100790892 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085851322 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084580539 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083163746 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101301798 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086850374 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082967246 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.101522666 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086693857 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086294331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085513524 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102573682 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08723988 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086739841 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084085129 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101650269 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085221501 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084281999 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101351463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085478145 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083773332 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083844614 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102965568 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084627125 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084810747 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101203509 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085522702 seconds)
  done (took 3.471128792 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097976894 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094214744 seconds)
  done (took 0.977753194 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093503987 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101141953 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0843663 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102413743 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092880546 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086424407 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110749491 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091822944 seconds)
  done (took 1.549548997 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.142244517 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158457328 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090898833 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097751045 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159541117 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15242862 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133500001 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09076421 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105813537 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082455348 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.15554399 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081928959 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090177026 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102383341 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090941642 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094308484 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085613262 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113546731 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092505726 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087661417 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109114975 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096681526 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090441287 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.113273497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084594115 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090104417 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11010494 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10216311 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085270748 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109272766 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089188729 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085902518 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106964176 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091854011 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087402247 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160123596 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098368548 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103045432 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091172445 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092118938 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119152274 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.104089765 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09150382 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086689359 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111399787 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.091589434 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091498931 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.102949074 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083198922 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085274629 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.103367827 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087229948 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084580642 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107394432 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090556252 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097145615 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.105786978 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086681267 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085821542 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08465881 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106395978 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085820464 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090380594 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.107665815 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092373571 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090179337 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106028883 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086357568 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087582083 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.104313075 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089449652 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104640416 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108375799 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092774032 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091578388 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.10371916 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088009855 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092898817 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088431466 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109472412 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091582866 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11382985 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110509223 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085186955 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084590505 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112278391 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.089164169 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090494416 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09999 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100211018 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089578597 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.105670661 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0840315 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088547075 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101994416 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092220991 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083317354 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089347883 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.103406138 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.092585281 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09215653 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105628331 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092562571 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093237588 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110196268 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089892669 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.132448007 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106191205 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085092324 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.089133779 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111439734 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084428273 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089399543 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.103616287 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088158102 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084854685 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.109679228 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091088953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090586789 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09113973 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110257516 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091100842 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088429792 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.105349397 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086987279 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089893335 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113201796 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093719172 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088952007 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.105124198 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087713855 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089481817 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09116756 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105957253 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093803536 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085322483 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.104209468 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.089170468 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.092011561 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108805169 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086602278 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087809847 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109423521 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090497649 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090474429 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108838822 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087550428 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082024637 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108821975 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087258828 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.086558776 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095985252 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104640196 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090027876 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086328754 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113847771 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087681625 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091157758 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108753496 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094675604 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092173979 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100442566 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088397837 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09009712 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091840775 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105390035 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088221892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085825704 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113296579 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083709543 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09123062 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099700178 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08765022 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09228641 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.088281461 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.110127171 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085972255 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126611103 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118862247 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093129532 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089635404 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109667188 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.092790787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088585529 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.109384073 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094246077 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091959491 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.1085648 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090012325 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093210709 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103535733 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089828911 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088620303 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090889563 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10212291 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088338646 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082380039 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.110883601 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092974424 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092555673 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111102269 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090788556 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089267943 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113392428 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08830274 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.092618043 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081388052 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.111270998 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097693073 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093024522 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111059421 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092530365 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088763206 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.107387337 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098977968 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089728144 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107857638 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.089047132 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08368739 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082621622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.112910949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092219879 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085121719 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.104883148 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094206662 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092607108 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106517155 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085089405 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092098198 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112014904 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087298167 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090111772 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086484837 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108374923 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099214148 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082305285 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106141602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094063839 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092349407 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.105907419 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091722576 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089506907 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.114025156 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.092480473 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090818705 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088609428 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115676485 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088783626 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.085860114 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106538186 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.092128989 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084077207 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.106463342 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093269908 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087293881 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104813622 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097528929 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093752381 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.111612595 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091599842 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092144456 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092911335 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112936736 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089927432 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092891447 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104653584 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085240537 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086325346 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100911968 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091189564 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086872005 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.092582597 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107784232 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09068703 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091715769 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112792949 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088780636 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092961084 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121914605 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084996435 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083545737 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107833824 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100629388 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087910292 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106721667 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08901259 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092786503 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.110423256 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09628919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087173595 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10573478 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.095090676 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097403824 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094834389 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.113733257 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095360465 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085635542 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.112057025 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08903633 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09556695 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103038555 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091718366 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08997337 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108716122 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089874639 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089985704 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10537595 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086285065 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087435813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.095146784 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109078064 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093643728 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089094358 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108255917 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089121525 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086061379 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.113530902 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090576643 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.09520583 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.105998083 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086576874 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084462619 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.093410708 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110416919 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.094804769 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087491426 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.111403246 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095878398 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.093616164 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10628757 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099552225 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097584333 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.093907049 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116674191 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08510463 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087750528 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116243289 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088513485 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.091408231 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.109570119 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086388828 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094063834 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.113531563 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094061695 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090546746 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103144035 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089956116 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096056433 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.092456598 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110432168 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09289064 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092202505 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105378174 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093495374 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094012959 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111071358 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096138524 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091132569 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.092149789 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107361843 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.094941125 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.087697206 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104741346 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0857476 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088942119 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.11378761 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086842771 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095748355 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.093149169 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107523028 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09049295 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09317095 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106670589 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096704286 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094084568 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108112133 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100338551 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08906881 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10781449 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0953699 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.094257691 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084176582 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110653267 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091372436 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095282881 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109212368 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095639196 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091116437 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113780667 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093137062 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.094121742 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.093402833 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.114277911 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086117558 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.094890227 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115507951 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092523474 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089039914 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108851148 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087594752 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089569301 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.113299887 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089939088 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098243484 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.094587453 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109651146 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089487202 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094492285 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110159788 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096289358 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087512254 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113907159 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086263935 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094587199 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109619538 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.096884167 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088800572 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104331217 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096649877 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.094007404 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092241293 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114693647 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097076649 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084245 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105920571 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09414016 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087764139 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11903259 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096857012 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089880929 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109040075 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.092102268 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.090118947 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094772136 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105999618 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089467374 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091686892 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11309095 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091051521 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086853516 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.11378805 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093004313 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093319495 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109015108 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088005237 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09106434 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.115443054 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092349587 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088078276 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088833039 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116808175 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092461911 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087779395 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105886979 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09974281 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09373336 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116581206 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089905882 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092694613 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109041645 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.092016394 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095827108 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109573025 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094680962 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089845156 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095193847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118049971 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086000243 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088838909 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119054315 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095693284 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095539569 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.109699673 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092907377 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096473674 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115085841 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092034764 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086176363 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.086701965 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111218234 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086671623 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.090928012 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118183556 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091914885 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08890201 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113797924 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095401965 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090175079 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.090601585 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106699439 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097646388 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088727329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11604573 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086462599 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.0847066 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.110513102 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096655491 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091104752 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111675 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.091294755 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.091114802 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085741208 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10947503 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097194022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093539101 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.114765881 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093116213 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090486974 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.111278577 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101248759 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.090650573 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110316448 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102342855 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.095547034 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111764919 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093676559 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096624919 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.095852401 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.111434177 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.098218339 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089032447 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112367803 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.097547894 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097065497 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121644932 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091918231 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085897263 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.113899894 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092769815 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086963612 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115460921 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098011802 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.097354906 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092716587 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110967716 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10075094 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096904632 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113936222 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090273842 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088888581 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.115656422 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090467148 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09330949 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.108387793 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099367793 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.096786069 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096616491 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119955984 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087562372 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098033737 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115691622 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100952292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090337075 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10733792 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08847637 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.091779113 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.116706984 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100214476 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.093354402 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.093337361 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114716154 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09423123 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09208074 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109995092 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.09898031 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.096298273 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.109727243 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096545725 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091785003 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112745604 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093755328 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.096223742 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.097515501 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114366399 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100858286 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.094928788 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111912025 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091728313 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094276583 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.111125561 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095971329 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095654607 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089095087 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108621317 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097707117 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097354154 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113161008 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09942321 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097913618 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111354306 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098175446 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097807784 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.113721061 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.093074371 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093632196 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094324944 seconds)
  done (took 59.136225368 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143555113 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099440874 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110978774 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092369922 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110859264 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113432246 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092316628 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092984412 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112522246 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103668149 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091724213 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110991748 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108778894 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113923367 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130445526 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102670288 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110126592 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094927675 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092451859 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092665455 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128269641 seconds)
  done (took 3.086889707 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112292082 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10610132 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123733191 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107728725 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098332885 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123816979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102984009 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124112862 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109122091 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099978204 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128088946 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103947392 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119681559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.101857069 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099819601 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12241273 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107973463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098633614 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125888979 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104074534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121133587 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106151874 seconds)
  done (took 3.283885261 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103835474 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.096107454 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097333144 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.112035098 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096902231 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.090465615 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118597353 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.093925901 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.100874424 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112337556 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090529372 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094057696 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097627683 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.112667291 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.089137861 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09256948 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121039542 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.097461094 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09752752 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11167974 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108710135 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092346142 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.112060743 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.09017249 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104543443 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096994527 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113936312 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098010401 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087500044 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116052016 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094907135 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093183158 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114195046 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091289583 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088538421 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095617846 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.116456607 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09394264 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093082214 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114858644 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095291363 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.096507639 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117234217 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.093846564 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.093622104 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09458438 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.117808515 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093106072 seconds)
  done (took 5.686063965 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123062922 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151801588 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096895905 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124074797 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1297521 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103418553 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095548581 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127370122 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094656383 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.116731033 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.109831742 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106610571 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11871753 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.101005417 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098483236 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119410334 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099125867 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095307237 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120881815 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09635444 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100704521 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12057829 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107440599 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126202514 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102552503 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096011484 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116047712 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.102574772 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.105866072 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122285152 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102518218 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101515545 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.377102234 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099986652 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096348003 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119966791 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109232393 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.096560241 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.119735912 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095501604 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.096680807 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121826029 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.099573371 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109097661 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120211094 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.098708716 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.095236228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114725646 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.106616934 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097337564 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126104916 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107704267 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120732113 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099429139 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099681015 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128241703 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.097838825 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094998137 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119288699 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.106802708 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093792346 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119612923 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107721281 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097234077 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123160523 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107458548 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.117994634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101553464 seconds)
  done (took 8.658310134 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133285151 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100662626 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128986757 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10968718 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099949784 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123324572 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102554851 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.099761788 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123480795 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107459352 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120757447 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200359013 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119074817 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108292238 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100132147 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122131952 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.101783421 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099920149 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122747143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102379346 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101244695 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130829424 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102621112 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130330148 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114069553 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097149971 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122457636 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101970581 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108917825 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12320522 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113747005 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10131558 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123210452 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109340816 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133146219 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102718836 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095472498 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12295885 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103331093 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100457671 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118765816 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111459211 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100444349 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.120204678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102564741 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100803435 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131144958 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112907979 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128298373 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108317237 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100767587 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132275642 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102640999 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101515838 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131447847 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.115944918 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131383597 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11046888 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100702488 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132598931 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110243614 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137895998 seconds)
  done (took 7.96404003 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097196181 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09418152 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092821816 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.113999529 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095218388 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093901622 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093735291 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116340942 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096179121 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094047804 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114167419 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095616784 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09369059 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094483657 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114379025 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095367609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0932383 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092997146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116028637 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093946983 seconds)
  done (took 2.847503015 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106420522 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112131765 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116444061 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103161232 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.096763127 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123079439 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09893406 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09638424 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095590407 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120007754 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105540172 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105296556 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117671096 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101912795 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125753654 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103967981 seconds)
  done (took 2.590544742 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117876381 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114152336 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.188728057 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100367501 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.117203558 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10504732 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.096883963 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097864904 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118414907 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103611305 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.100698021 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122677023 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098964063 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097316642 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.117873063 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102618385 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095564418 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.119999459 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.09928316 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.165060388 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123230142 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.098362906 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097635373 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.123394737 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099225675 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.100088977 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12587013 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.096940655 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097643834 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.119919734 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099256799 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103674056 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11724057 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102118074 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098883792 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.119512977 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099358133 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098716913 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.100692812 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.119583376 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101021453 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.097878951 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120073489 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101307466 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095274313 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.118388121 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096958537 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10206286 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.097678652 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.121711374 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09880752 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105953288 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.124002008 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106612538 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104429455 seconds)
  done (took 6.876842602 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111446368 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098918552 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129924246 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096328785 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098082294 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098040625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120541336 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098710114 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097497184 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118386059 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099949301 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098936698 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118532376 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10114937 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097609565 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098584954 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117080834 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.098869996 seconds)
  done (took 2.766023925 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103699728 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096276606 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102009071 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11874972 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097675492 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097364698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116991054 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.097648332 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095404725 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096462638 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119105991 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098544743 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096072877 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12039485 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097782495 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096358388 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119706412 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098676153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097715309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094523222 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120023783 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097537611 seconds)
  done (took 3.146664692 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111755786 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185213014 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107317141 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19226372 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097054444 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095101357 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127937555 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098118692 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112517281 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117836922 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096977589 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095099065 seconds)
  done (took 2.306503218 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127598018 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136021426 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119511499 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099700313 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106950189 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12394739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103170612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100918112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1323114 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114027842 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12248547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111556544 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110293167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130384581 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107580168 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106067753 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124976004 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101627793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097376469 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141010786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102020152 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131422261 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102848415 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101770646 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122923451 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111040109 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109619569 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136769973 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101198035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13199404 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107711698 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101323856 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134004922 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114352418 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119678641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111842952 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101102849 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140392855 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108348258 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130273378 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101218287 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106457757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132469546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109004641 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110491013 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123713514 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107517742 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101539576 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124572383 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124814895 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131471346 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111793068 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105709789 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133513719 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110093483 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14631368 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113310988 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132369995 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108374176 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114093874 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133754925 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106993554 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132592761 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114865058 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107569391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133247246 seconds)
  done (took 8.588227842 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140971789 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098800108 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12371777 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114421418 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109874359 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126930118 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101921473 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123405219 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104050541 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098136139 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169784553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103708706 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113813464 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133406797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102081908 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123684712 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104258569 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110698584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121134202 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12622811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101895677 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132271985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111386863 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133051358 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11469905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128687016 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103989572 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102098305 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123434072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104806385 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107994203 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124368178 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112990021 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098702509 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132641256 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102290057 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102714445 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130808671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104159787 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107690222 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133815771 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118444481 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124213253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1034844 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113744402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125187643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102999929 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098792492 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124258454 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100424659 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135484467 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11513873 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114194728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133575146 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102660875 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123868934 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105085771 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102968591 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124247372 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109742543 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110518696 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124833986 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126442995 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124773759 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104378718 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11141108 seconds)
  done (took 8.523046919 seconds)
done (took 161.230172827 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148431001 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189109977 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145140593 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177779804 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092630739 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125138481 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146750345 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14759947 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092023195 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115540437 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092891978 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094267017 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179045775 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093009555 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092271246 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094306655 seconds)
  done (took 2.896639363 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190452338 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308795412 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108833765 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119198368 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102182037 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098958215 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118873144 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099690453 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097395742 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127699714 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101367769 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09440912 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127208742 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096273531 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097473119 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12089238 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106505177 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099307409 seconds)
  done (took 3.099539253 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119130023 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146922519 seconds)
  done (took 1.149755902 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129099442 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197340872 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275489512 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171242711 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120948637 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138052845 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152082012 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131497229 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.180095548 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132935714 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111534923 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.0979459 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14600425 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105046693 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110088798 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121528013 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126155839 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.10900441 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.131629088 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099739584 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119110307 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.12532279 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103677678 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.130643306 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17060481 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131777591 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103629012 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103173419 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120972187 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109580423 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105104437 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137329486 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110757056 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175916295 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102903916 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169745943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10835107 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119882256 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.1096706 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097238289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124006819 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103216461 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115146641 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120132724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102785879 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10715048 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125719829 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102738879 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129137876 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111366298 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106484676 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128919169 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.145965793 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131848548 seconds)
  done (took 7.777027257 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.853065516 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141697781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099198476 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.992061075 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149037435 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113624384 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850852191 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143220565 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230287291 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.880050882 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114897762 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111253969 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.26095786 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250894599 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.176818374 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369041849 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.686887501 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134743303 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128106152 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164286504 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107522675 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145540712 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1211389 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428790414 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10084101 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097671261 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128595208 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111730099 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177113155 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099137397 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100326881 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198310506 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287058592 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207008459 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098827939 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12060181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098661609 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18536641 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273926977 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218579407 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160973167 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11876196 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098175936 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10524468 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141664542 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095061455 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180435258 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189993385 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189251223 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103632225 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11125856 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131761639 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106568805 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179533545 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096142366 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35443971 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376110733 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099022232 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106809385 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134634677 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270241757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098371297 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234161257 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146875595 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214306249 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098884468 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812937694 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185603951 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098290059 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104597363 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128220651 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104576091 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126250674 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159609931 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402814275 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111446437 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124187285 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099070208 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227817851 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098839163 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096890637 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180629107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098435454 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130903954 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113216709 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132440614 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16633124 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270672435 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132437242 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108915755 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10321329 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134593795 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099787175 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233058244 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231079827 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174848843 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231744155 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108283482 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181979456 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161637891 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127878518 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18701856 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106833992 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113494684 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129264533 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225777836 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154271196 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100284093 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102954114 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127985165 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142552967 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100668651 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130645367 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185458199 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.443931392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184999599 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094134963 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126369381 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107397783 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179568136 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105102128 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264949623 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129823234 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161356172 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129834733 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096287377 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105840486 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182095218 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130721429 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109517541 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10620252 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133421159 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.269689186 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220886628 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113317179 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240864037 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188036672 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106769548 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192461709 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106938548 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187493319 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10848457 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128973364 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101234038 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797303468 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112047994 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129688916 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10431928 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20618885 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099659667 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10039771 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.121201752 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096819241 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824967244 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101009928 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.117922267 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101730442 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105356716 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129321659 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107806941 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103516078 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180191111 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243714626 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134605943 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10584123 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.097316798 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179230463 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.121045208 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100502929 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099266857 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.098612541 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13105091 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10368758 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100769208 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1920155 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177904304 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231164337 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.531337681 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097971036 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122564428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240857256 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098175965 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.318222763 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130971495 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237193581 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185805429 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097482578 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350717957 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186828946 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201422276 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104505176 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188687186 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09769113 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107095443 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179870878 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098725003 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12926876 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154368249 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137696044 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111454175 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.188407965 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122436273 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247686864 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097885286 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186604505 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102170999 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106151286 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322539717 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123259337 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115932746 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18025304 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104191887 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.121524648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6922923 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123923675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111117091 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128646814 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237576914 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160716269 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13269242 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10856332 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134605817 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156724772 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234318634 seconds)
  done (took 45.767913485 seconds)
done (took 61.571146876 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288606963 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256221321 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.306195173 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213342173 seconds)
  done (took 2.040317998 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.287245319 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163832324 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235334054 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097477074 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248847395 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09754398 seconds)
  done (took 2.038622294 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498405609 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38728594 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346200809 seconds)
  done (took 2.14496539 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248489122 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235310005 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348786001 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415180344 seconds)
  done (took 2.266291149 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.298175104 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134655073 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126722735 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.215430342 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.28065179 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.259463711 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152198731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204519976 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152432747 seconds)
  done (took 2.780968939 seconds)
done (took 12.179155032 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.299413543 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13413444 seconds)
    (3/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.33964758 seconds)
    (4/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.354190385 seconds)
    (5/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.303026829 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.224616193 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.165535689 seconds)
    (8/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.148663805 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109512199 seconds)
    (10/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.339567173 seconds)
    (11/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.297368558 seconds)
    (12/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.289072357 seconds)
    (13/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133209113 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.225070017 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.260468545 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.286138207 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.137455036 seconds)
    (18/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.112057229 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.129517516 seconds)
    (20/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.159994973 seconds)
    (21/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.105288095 seconds)
    (22/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.268795236 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1242886 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.159218961 seconds)
    (25/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.17284278 seconds)
    (26/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.186519925 seconds)
    (27/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.127508617 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104489526 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097759061 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.231383253 seconds)
    (31/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178335077 seconds)
    (32/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.211284271 seconds)
    (33/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.174434391 seconds)
    (34/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.21507313 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124373602 seconds)
    (36/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198418544 seconds)
    (37/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106699652 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082150519 seconds)
    (39/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.272427104 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.213831349 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.131925937 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.197931919 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126476064 seconds)
    (44/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116590869 seconds)
    (45/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.148442363 seconds)
    (46/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.148580427 seconds)
    (47/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.175411534 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193542532 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106310878 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.216805723 seconds)
    (51/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092518234 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.104102929 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.163709179 seconds)
    (54/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.158010737 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.156112498 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084890116 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.231691559 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192472266 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103187004 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.205854342 seconds)
    (61/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.226861848 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.229961806 seconds)
    (63/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.150889551 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098407238 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.223584912 seconds)
    (66/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08284175 seconds)
    (67/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.104357958 seconds)
    (68/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108625964 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10677894 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123429323 seconds)
    (71/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204302394 seconds)
    (72/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105262495 seconds)
    (73/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175919158 seconds)
    (74/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.106917946 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107104945 seconds)
    (76/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138522588 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.210855641 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082693893 seconds)
    (79/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.087202145 seconds)
    (80/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082364544 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.166798539 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107358754 seconds)
    (83/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.201307784 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106102913 seconds)
    (85/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082225709 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148665146 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.159995934 seconds)
    (88/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083050829 seconds)
    (89/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.191030386 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08491876 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.107334374 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.200846827 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099304901 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.105443805 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.12269415 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107429639 seconds)
    (97/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124328936 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081261565 seconds)
    (99/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108738263 seconds)
    (100/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116157508 seconds)
    (101/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105802923 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.146336033 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.162073252 seconds)
    (104/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.173784423 seconds)
    (105/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.117645489 seconds)
    (106/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082452243 seconds)
    (107/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106256202 seconds)
    (108/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.2003638 seconds)
    (109/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110461 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08450418 seconds)
    (111/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080921828 seconds)
    (112/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.129162064 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106560309 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105576051 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12935276 seconds)
    (116/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181267814 seconds)
    (117/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083385243 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.170650261 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106909436 seconds)
    (120/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.147327116 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097495291 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.107733546 seconds)
    (123/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083978106 seconds)
    (124/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083895762 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100522031 seconds)
    (126/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.201770265 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102190949 seconds)
    (128/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092761134 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.129529208 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187876195 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123623636 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150398487 seconds)
    (133/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085151623 seconds)
    (134/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10940789 seconds)
    (135/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.108160625 seconds)
    (136/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.146717441 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.107736655 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097527884 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.108156695 seconds)
    (140/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090179093 seconds)
    (141/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082715815 seconds)
    (142/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083775536 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083236414 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130703811 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083568832 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.104422311 seconds)
    (147/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082494702 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.140325784 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107016429 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10541311 seconds)
    (151/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108849249 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107496515 seconds)
    (153/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.085561837 seconds)
    (154/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.207036511 seconds)
    (155/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.084529712 seconds)
    (156/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084362217 seconds)
    (157/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083180129 seconds)
    (158/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.082848887 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124455504 seconds)
    (160/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.083714665 seconds)
    (161/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.088618802 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084035489 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.13052847 seconds)
    (164/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0954802 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127253744 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08310579 seconds)
    (167/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.107598782 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.084773135 seconds)
    (169/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089560507 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083450227 seconds)
    (171/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.105012891 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.108635549 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108065669 seconds)
    (174/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084774744 seconds)
    (175/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083030304 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.130488145 seconds)
    (177/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.08423124 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100235297 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104715447 seconds)
    (180/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.108253393 seconds)
    (181/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08429344 seconds)
    (182/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.157846304 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145662167 seconds)
    (184/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.084242182 seconds)
    (185/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084954876 seconds)
    (186/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112188128 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084584672 seconds)
    (188/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.107387004 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106695204 seconds)
    (190/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084007457 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106877171 seconds)
    (192/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.109648477 seconds)
  done (took 27.415466992 seconds)
done (took 28.338417211 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.214887432 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127523735 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108282569 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10732623 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204991433 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115139596 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.141719138 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112506536 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113577393 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10572959 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.124063876 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.115480422 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106330122 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201814937 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110870437 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127004915 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101090775 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113956864 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142501073 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.118692618 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204011036 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103175168 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113319225 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123152211 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180304654 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125642102 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108550017 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107986568 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.114200002 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.133487356 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107484481 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099228656 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.143478666 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119127601 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099637787 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13191042 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100598403 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090091122 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106176687 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.134087794 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116081849 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106173844 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13429651 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102639708 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.106881935 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.13254852 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101506748 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112576292 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.123081752 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10906434 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102229308 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.142187082 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106518429 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099936494 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122147015 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103281128 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114885063 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1000309 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.142420761 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101684176 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1012543 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124473549 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11034261 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100232617 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13108741 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102733574 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107666922 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.107839098 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.131988964 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104446 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099483678 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132532101 seconds)
done (took 9.649005937 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107866664 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.156091526 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.20336232 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.210650847 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13087617 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14119456 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12214893 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129432237 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144097682 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12664259 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159276721 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130298053 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.212014034 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.112769938 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116638728 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.136073008 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114908976 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113307946 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.21506245 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123423134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156407388 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112116971 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158764307 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12411864 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10689212 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164905648 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108016217 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110370998 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.134945073 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115874319 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.148413451 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109000789 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107166589 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.153597002 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120651732 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11450379 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142513339 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110303488 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106344481 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132103977 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115743279 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125004399 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133014532 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118317237 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111492909 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.142438993 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117415651 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.137570663 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112078906 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11124941 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10922211 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159815604 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115580764 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.140190715 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116021634 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11465483 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.139792871 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11605971 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10762204 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140394814 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108506127 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109010516 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135527156 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131708014 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106506332 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.141357167 seconds)
  done (took 9.612970553 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126386907 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135380313 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140161357 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115784573 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110360547 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123414785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09939893 seconds)
  done (took 1.815818721 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101289971 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186679378 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208898724 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210240589 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179387779 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.218850188 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146358323 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101367765 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131983856 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136028099 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186545888 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239993717 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106146919 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141276526 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18591714 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126065299 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189469026 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12647858 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113391365 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212772909 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113588166 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128059354 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138751599 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100569585 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209556034 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10121478 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263994823 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115693679 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131667175 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118857141 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111417484 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.2068168 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207706501 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115448534 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105215098 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210193258 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.20385013 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112206232 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222900712 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106022209 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.209148093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112972602 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116511044 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.138902025 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116291159 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193994539 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120575548 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113426078 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.137024441 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.193759825 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135902403 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18525912 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13256864 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113492343 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11091001 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138628288 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123277948 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113033387 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.221542543 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114291224 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209052501 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207469486 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185674757 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209235822 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12237027 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211439463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203502555 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112396394 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108659321 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.138334842 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186849262 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.135145157 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113913307 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.19673842 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118066548 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.209162411 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186461239 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136084463 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114384913 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105147564 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.109636893 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128137936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174512574 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138114261 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109999943 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119039444 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139684842 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113522597 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105800724 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150492976 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112098732 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137156208 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119319387 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.111804545 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14083575 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189592087 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.137331165 seconds)
  done (took 15.535935671 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106663228 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102179522 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107338418 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128845357 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102650623 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102682656 seconds)
  done (took 1.633051441 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141377123 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113268207 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147695265 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115247713 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164774109 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219863978 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.225360613 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110410464 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156141246 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127034061 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.219635389 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199747618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.228289031 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116046846 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224936597 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118490323 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.228140487 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110598621 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150440232 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111933886 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115721477 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145054213 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112261831 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211367204 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118315072 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116377727 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136942541 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124930894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146988286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111515134 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116398842 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142662327 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110350232 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110230435 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.227035927 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108777857 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136540156 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124758786 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114545924 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143522059 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.199290027 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13822429 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123439039 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121869164 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138416135 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109194824 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122139954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137889282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222619086 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12367649 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123729739 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141843677 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121922367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122977753 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.134750382 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112962068 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122222786 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.227246367 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.116871222 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135000695 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.115275671 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118267197 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13876459 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122523619 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.114595114 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149173302 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110372511 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115034849 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138404797 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116032484 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122688095 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.14126421 seconds)
  done (took 11.191645339 seconds)
done (took 40.746772772 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.525373151 seconds)
  done (took 2.509059043 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.914568691 seconds)
  done (took 1.898948798 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.434551301 seconds)
  done (took 19.451673397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.536258442 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.607204219 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.057826265 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151674425 seconds)
  done (took 3.339993187 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.994808649 seconds)
  done (took 1.999635388 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297160263 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265498716 seconds)
  done (took 1.554694405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729675455 seconds)
  done (took 1.735740434 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.529257068 seconds)
  done (took 2.522629883 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362758433 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173860149 seconds)
  done (took 1.54403212 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.619844095 seconds)
  done (took 1.627432723 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.478548142 seconds)
  done (took 21.487680829 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247103763 seconds)
  done (took 1.260345257 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286484064 seconds)
  done (took 1.300831879 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.63603617 seconds)
  done (took 4.647787169 seconds)
done (took 67.873778976 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113842731 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115481156 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115194078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138809061 seconds)
  done (took 1.48585532 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122690722 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117243821 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120836446 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142389423 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12284505 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115968546 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143019453 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119626801 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11573909 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145948802 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117165744 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114268642 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144637001 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115651299 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114038605 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144844011 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120883677 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116199097 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142751266 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118745443 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116724772 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117755496 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.146228022 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120244194 seconds)
  done (took 4.027979827 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112839147 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106230149 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107910252 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131390041 seconds)
  done (took 1.472362188 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12623616 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128846538 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152935338 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12586158 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129170311 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153201524 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116486394 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114390289 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141210804 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125220954 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133549085 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156630002 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128040702 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117794138 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154153872 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111217419 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117511702 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154817897 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123161633 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125269932 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143103182 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123661388 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122572945 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151472517 seconds)
  done (took 4.188418961 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189736812 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.124823015 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.16662296 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157384044 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167666503 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.111312215 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.13577096 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147128438 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119573367 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114187937 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143277876 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159111288 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144651915 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11541393 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112550412 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143308205 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126390273 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.117880565 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.181866162 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117461135 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.144523271 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127156408 seconds)
  done (took 4.084194297 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119718446 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10764804 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10173397 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137246508 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118982523 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108855672 seconds)
  done (took 1.718922346 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106557173 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100986349 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101815753 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126651251 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107313762 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100310553 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098897096 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12815641 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101910657 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101919129 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126337797 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101113144 seconds)
  done (took 2.326521045 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.34442297 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107147197 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134795993 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107939655 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113046137 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105103957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148401482 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106053021 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.269443512 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106176397 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146088413 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197077783 seconds)
  done (took 2.910483569 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205621224 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141494106 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295799036 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365212194 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161587414 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18354575 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268930045 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188344548 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200756759 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132749509 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239007736 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151247989 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173196367 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170314769 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159578579 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161060952 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190142636 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186394285 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169908656 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194889369 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179889796 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160845977 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20168952 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172644561 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132024633 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157173167 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.142944157 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123682995 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190775115 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160655821 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193850507 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141135113 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164416234 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216188474 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229357047 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196079071 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285197061 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155759994 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.179997839 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.204580434 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252327557 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135273946 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2123666 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148003293 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15060239 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173676873 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176628216 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.195008415 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.127425603 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137925941 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204183865 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196067764 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174147511 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158010677 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286964704 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186688217 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.137643537 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197619014 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205067308 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184273587 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187868133 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118761148 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204986957 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204404258 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175679153 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160475629 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163120919 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144801048 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163965086 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217166439 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174129883 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181393383 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222883041 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125472184 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180192624 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167827778 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202301436 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170987524 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181065182 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.114496493 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171811781 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131429782 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121912045 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.223532476 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116937526 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221371229 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12660724 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342693577 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212321749 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152097723 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182991227 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153089193 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182657256 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140239127 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.136220518 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142413463 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184237665 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152695278 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127828838 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178292756 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132218395 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151742947 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14618623 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.143364144 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152990817 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130770272 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187357139 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153528 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.154883525 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159001495 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171301498 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14945569 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192208817 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204029306 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128288514 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126268148 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211253295 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150494589 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.154243039 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170731433 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205951015 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14605126 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15996587 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158884938 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210767759 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135473504 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210938974 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158910533 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131073474 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144184912 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18466373 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15182793 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.177259427 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123701375 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173783809 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19282163 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.150504832 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132856511 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191760012 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128699339 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120577991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161205367 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129760449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.163549821 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144040868 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154746672 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149631444 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17827577 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15270007 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177959529 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131149414 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198477041 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129021553 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153097996 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168680664 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11323092 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198449356 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179931165 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152564744 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195670432 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187333334 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215356695 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153682046 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154517678 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172274141 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151024135 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11419074 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184686119 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150479411 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186074196 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.175758593 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21182431 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188958767 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.145840546 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170663774 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162961249 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.198823522 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147822451 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.166689032 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151921412 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188376348 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115847711 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116350117 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.151920058 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132771373 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152050397 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130736549 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200059305 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161299486 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209312648 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179800578 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134238904 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205174245 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122667159 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183283816 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.161328785 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134214906 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203645427 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203816483 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162906846 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163242033 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157369504 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.114467896 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149407242 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.127670356 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189569013 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129684624 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15657869 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13818923 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205995162 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170395388 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170780943 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220817273 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162207323 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218356541 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.114706525 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189580756 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166892426 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181632063 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179392846 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132889904 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.179944753 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20183113 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138635269 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212404635 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151496087 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183262873 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184324805 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.17942241 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125392597 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170878938 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155088387 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159138084 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160618166 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139919349 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153391507 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147493734 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.162334045 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120612274 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208907611 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137319522 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195239005 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153739098 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192259891 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120302638 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165974049 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154292129 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168349957 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114024536 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16269151 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207440666 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167913929 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152317738 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199353633 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125073446 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.342790784 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183543064 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202745339 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128969092 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165268759 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156665152 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186805486 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158022328 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203437101 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136130685 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201379278 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153372455 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167932022 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124089843 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171948787 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147579176 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.172691619 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128567111 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150466885 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.164475636 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207034654 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13556796 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153780608 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183749821 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143513888 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174756567 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13359916 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218883562 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150578227 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198569521 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149892941 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191071845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215210001 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119892517 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123091736 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154865185 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176032843 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151871786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158499618 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202009173 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215236401 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158636885 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184870959 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133860559 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.150076368 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153499079 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141472076 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217065283 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158075584 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132692065 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216778848 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134335212 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154242081 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155574342 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30436027 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139627386 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197062229 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.117892489 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.297180332 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124260344 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153508328 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159483481 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193896374 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.128601266 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179096459 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181134825 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136624692 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187706183 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132425682 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211584163 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216793237 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162515626 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196631074 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138631863 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185996829 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15630022 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200851036 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137094503 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.169065319 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157673164 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207211941 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204572093 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127766954 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153290406 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182169061 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150589496 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195784228 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131259876 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216485893 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123034137 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188722273 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132441329 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147216144 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154253416 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.203988179 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126635942 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202540422 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182606596 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128741031 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121946145 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170390785 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152431176 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162595108 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126662627 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207407343 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124178647 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157388302 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202994363 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125099091 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18137251 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14077865 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152063772 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13867168 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136331575 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15576784 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16627223 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206488376 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.125543228 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203243545 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158630134 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191090867 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150539497 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167559364 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.659679397 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.149507565 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178094941 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173194458 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183665513 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173917932 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157329709 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18356392 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145210226 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190488081 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144011572 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.264879784 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158583885 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181867705 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127469214 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136052203 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164317247 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128113429 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17735018 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152561114 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164374985 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130722008 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150731336 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167469313 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142599768 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164026477 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179803505 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172888594 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179058487 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207390848 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13140269 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187205689 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196954522 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126781825 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.187042305 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169756443 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163221265 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144123884 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127574709 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.160967769 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176993966 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.118775926 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184574299 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155845182 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184720343 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153256488 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159531693 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156261416 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165592004 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154685369 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14960682 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148025533 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182989869 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130418932 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.121099513 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182115258 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153327882 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.180337058 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120707342 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167694179 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206245546 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.118648173 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155503427 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274504088 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185479551 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186482383 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174197502 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129781622 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168510455 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150836016 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177970456 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156778694 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.123889942 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154198573 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.124362775 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194362133 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151309251 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183245671 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173383077 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185061067 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18924212 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160289994 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285921174 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164631608 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153326132 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124169317 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.152904891 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137600485 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157423738 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137085086 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210847617 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177034071 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.178677376 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.140419088 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159077295 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122249765 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12616886 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190776747 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145550749 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184890892 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139241594 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111663421 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168266311 seconds)
  done (took 82.28135235 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17671383 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151556917 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16701613 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221951778 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195790992 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288902508 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229049455 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253290566 seconds)
  done (took 2.791853262 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11830005 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15695566 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140353391 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14279383 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117823774 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448318585 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158599921 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118169767 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165385007 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159402442 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140044286 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.616185221 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114131537 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144370695 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127701019 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116521626 seconds)
  done (took 4.088025384 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.436182978 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.589176827 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.229034625 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277908125 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234286386 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179628022 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.802044767 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191961794 seconds)
  done (took 13.054767477 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.147320389 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133037714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.841437618 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.260183195 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149489314 seconds)
  done (took 2.64861006 seconds)
done (took 128.082201003 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120055595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.118611836 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.11959039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151468531 seconds)
  done (took 1.613725255 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.18396132 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095248269 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097413202 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122395977 seconds)
  done (took 1.611703765 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440145139 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094552991 seconds)
  done (took 1.672405583 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151080289 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142700335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162916272 seconds)
  done (took 1.583992875 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140899631 seconds)
  done (took 1.258109565 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127311315 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118827398 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240084754 seconds)
  done (took 1.607070246 seconds)
done (took 10.468989271 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120411007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419376699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432125035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132180802 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709561812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426641233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031284682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17410533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173604382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136753955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131427061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687545739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043162784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.37069914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00124506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.38701799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693329445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110955635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144702743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111807274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007570639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135074745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111634777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110929852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718447028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.436195233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108239856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3969965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10863288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112517551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42588526 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110816263 seconds)
  done (took 17.334742847 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117482422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172209577 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145149906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11033385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111353166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137910378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12177115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121354039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204677592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10878708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157722016 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109089032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113879675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135977188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135069677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109112629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11135847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142022889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117527235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110817787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159309787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108780151 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110830995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1399142 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109362293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131071539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137191432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121887037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108757689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141468069 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114273053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110632517 seconds)
  done (took 5.212288203 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158114766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180679502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146553425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146443189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185729298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11103883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22139308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149085115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203047313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110847552 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130953745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136169204 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151147076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110484345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16334926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109505656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113265256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140450892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118366908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111808282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15975088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109511604 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111261498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13963619 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111171045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132527735 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137277655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122080909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109365485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142193474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115717771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109724332 seconds)
  done (took 5.529109383 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125646587 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125167727 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133817281 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163599215 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119708218 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124181011 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153680806 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121344535 seconds)
  done (took 2.197852744 seconds)
done (took 31.401030431 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134737918 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128542243 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129508641 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152074962 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.192396974 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146539558 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127037475 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114835848 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151972694 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130991664 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108896681 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115631464 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158076577 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119021839 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225913835 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124311406 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.228997479 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.194475549 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14649528 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122860325 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116054511 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.228349578 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12047077 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145314781 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.203132182 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112596786 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.214843491 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118677079 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.14935283 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111925386 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224453025 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120542495 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115224086 seconds)
  done (took 6.052476507 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.209350795 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116124785 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148232911 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118590898 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.115904389 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147716714 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.215209163 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148584805 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118647878 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117910035 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117045184 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224626395 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123123861 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140754563 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.118894928 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114892897 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.243562118 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117032249 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108496981 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.125116085 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.1119616 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116802632 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.254375778 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110690274 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117999095 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147332631 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.118493849 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.11978415 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.144395522 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118682173 seconds)
  done (took 5.389032749 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124271477 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132112875 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134954855 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214931307 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145665451 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160819861 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141529961 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133186358 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17205513 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112439813 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126968347 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177566993 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128588992 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122438228 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145564009 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132601704 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134669504 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14168324 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120117915 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130191778 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160181163 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130564797 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139644298 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149680547 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111747949 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119885789 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150118906 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127484667 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12055459 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124941252 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.143644459 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116867045 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113831847 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177206258 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114552348 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124989437 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167610154 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124544906 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126030102 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.174395833 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116653555 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114852197 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169345798 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16871462 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.113341457 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155730684 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123824498 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124726959 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140454946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131305293 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153759011 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141987227 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134414259 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11301668 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140238035 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12059144 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112459236 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.142072596 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128037458 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114521052 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16414655 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120413063 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121610962 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113215085 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152986455 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111349525 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110353277 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146113067 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140186736 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118761493 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178844209 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112934803 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124419472 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152978615 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124714857 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123649502 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111034117 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153179083 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123608811 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117806629 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.154038337 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116975066 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115635146 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.157689962 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134286351 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.1261069 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153867277 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126890194 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114937505 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.142290605 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131426757 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113066746 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116886823 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.154834872 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113695558 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115422901 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154894053 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124831175 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110049521 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166768669 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117027171 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11161968 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.165982953 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120570739 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119170711 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1220335 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186368525 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112882259 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124154848 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.155684471 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114051661 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119053654 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145769563 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110885793 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130623379 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157429761 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120897647 seconds)
  done (took 16.857299255 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.324308681 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.3118981 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182445148 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311828265 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157469822 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209173826 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.309775587 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.310222968 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111739402 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181952585 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164655058 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.278810934 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145270655 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141644847 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.311163416 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.36491897 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175686244 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150313866 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180491608 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126584399 seconds)
  done (took 5.602403872 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134133115 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149775728 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166690325 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142847593 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119788164 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157412278 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11259885 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130889811 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150366014 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123779743 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115239915 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15783236 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122736826 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.125461124 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157744629 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15293681 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120828618 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146779484 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135685038 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117295871 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135336397 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140465307 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121069421 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16730416 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129849545 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124067537 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140197357 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119556725 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116913693 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118366874 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.14850621 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131730939 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.119033279 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.139118713 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125878893 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12868314 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.144892942 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116185671 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117479293 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116492199 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.157746523 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123417471 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120056212 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132460832 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131595927 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116155659 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123260132 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157165557 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112661303 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128276476 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155194919 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125745245 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119188319 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.159878005 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119177542 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130374366 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153498908 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126194831 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118257294 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.110262452 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.141601669 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11735007 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118196182 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154408551 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125826195 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133961067 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.15955708 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113937368 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117297355 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146301962 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118437337 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128197552 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164239847 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119554346 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117340076 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154308385 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119675275 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099774949 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123163976 seconds)
  done (took 11.6023324 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141173159 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120760996 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131770865 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180469633 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125277886 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118936175 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151714281 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135023731 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125682895 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159628204 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126183924 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127296852 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166108446 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123294561 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12025153 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160019669 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125087971 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151232072 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162355569 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141933306 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125745168 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149974758 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127330927 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12606829 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173316272 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124776846 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140174847 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155643408 seconds)
  done (took 5.086616278 seconds)
done (took 51.721601332 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.30608851 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.475249491 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.251576937 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.249639082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.279620356 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.280207543 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.249317763 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.25207062 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.763038075 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.232331122 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.251549868 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.250268053 seconds)
done (took 28.999924264 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.306011646 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.771973629 seconds)
    (2/2) benchmarking "String"...
    done (took 1.530009593 seconds)
  done (took 4.448903401 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.243675014 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.243893892 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464512366 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.242832732 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.247479703 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.244882891 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.252766536 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254529844 seconds)
  done (took 16.097775065 seconds)
done (took 26.246176931 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.335957842 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.435581063 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.486377145 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.245786015 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.247166104 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.27188754 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.245880916 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.267539798 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.259729604 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.251271909 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.661077619 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.506781002 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.256353331 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.620764493 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.246973363 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.252130272 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.267838676 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.486795981 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.247938212 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.280734225 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.227335837 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.242869448 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.258828999 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.251699845 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.253859119 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.252834644 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.317096592 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.246497109 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.43196614 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.284852314 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.284081665 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.247480438 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.306701228 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.251659045 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.260318998 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.260300263 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.432502829 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.255924573 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.234154344 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.253875542 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.437082408 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.254150663 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.248263258 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.251392923 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.25308377 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.298180406 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.235970441 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.366675126 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.268124969 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.251345913 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.27579978 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.618209644 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.257480534 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.25376395 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.253255016 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.469865631 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.267259101 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.312336916 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.272623397 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.253830826 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.248927655 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.252724688 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.263804175 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.264077974 seconds)
  done (took 146.707626358 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.248868885 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.250057922 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.250882578 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.254527767 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.249754832 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.251116304 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.2497488 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.249341815 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.251446986 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.276572604 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.25088284 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.250911466 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.254855688 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19858918 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.257711185 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.268398724 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.250384996 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.269460291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.273140142 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.250207884 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.274362904 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.251114301 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.249694876 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.251251057 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.291165843 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.328010621 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.256515031 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.280348887 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.257416911 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.250586772 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.296222765 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.251568179 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.886692877 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.119495875 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.261563357 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.271285114 seconds)
  done (took 81.986352398 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.251250239 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.252382374 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251455262 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.285543989 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.251463051 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.84848378 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853832936 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.975577879 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.770049753 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.258100302 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.63400322 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514866648 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.251638655 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346080269 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.267535572 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.254481225 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.270128634 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.27968928 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256828933 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25465699 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851197594 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.271672022 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.273145113 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.437890592 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.270730099 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28822516 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.64857143 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.255042702 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287504072 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.352738191 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.589188042 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.304894844 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.25384623 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.255184233 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620321557 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368808166 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255862152 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288957626 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.253339898 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.254487025 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.538308054 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25384337 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.254771751 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.257739915 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922717187 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.255071694 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.851347631 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257130351 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.210592068 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.253854302 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.254194477 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.758034624 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.916082131 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.255235089 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.254836262 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.258171671 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.256479931 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.254041227 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.289573777 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.792835484 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.353862147 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.257485536 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.260002256 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289176983 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.25525699 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.47931689 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.255956875 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.135815463 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.312406371 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.384030323 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852967126 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.261990265 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353772938 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.377337993 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.256581601 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.257082127 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.25571666 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.257229438 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.257526631 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.37085009 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.255818088 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.671511874 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.435355759 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.274559683 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.640537826 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.35347545 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.256441214 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.644058304 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.254892553 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.255486578 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995484184 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352774792 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.254583045 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.254540269 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254856885 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.677193631 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.84394628 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.512329782 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.258759192 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.066084916 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.253158735 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.682769602 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.818968996 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.916573081 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.253759135 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364974041 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.430631505 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.270128823 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.254686697 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.610493287 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.253911472 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.309170826 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.258069977 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.655967136 seconds)
  done (took 373.543606911 seconds)
done (took 603.387256872 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.13497399 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.074791553 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.229330649 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.087888385 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.066389472 seconds)
  done (took 11.746967325 seconds)
done (took 12.901812256 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444420252 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.446039073 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.313080056 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.443438449 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.284892489 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.460229337 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428418544 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.274021553 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.364400771 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.335304731 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.365714423 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305561313 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284349556 seconds)
  done (took 18.904498177 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519775196 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.259003774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320095036 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513539292 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.297061311 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526496806 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.554693091 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.259523146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412505664 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271395719 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.270107963 seconds)
  done (took 18.358331739 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55977535 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.260332221 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.3136579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513220308 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293483289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532054028 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.567021436 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.260674745 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417436299 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271537228 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26781667 seconds)
  done (took 18.410766837 seconds)
done (took 56.828548642 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.200818493 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.449408423 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.288624069 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.349886677 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.268659027 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.282029996 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.352965887 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.273002384 seconds)
  done (took 28.620022795 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.267033571 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.267413478 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.265722047 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.266754515 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.267909434 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.266383284 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.266918674 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.266358059 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.266162845 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.26889927 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.268547319 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.267750585 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.26635932 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.266008047 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.267863172 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.269465587 seconds)
  done (took 21.430455531 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.270033499 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.266438532 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.265809255 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.268823427 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267447592 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.267080652 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.268229802 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.267155138 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.268210209 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.266697798 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.268478948 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.265775366 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.266953769 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.267043553 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.267373718 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.267019084 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.267289204 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.268565845 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.272271074 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.267686499 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.268724401 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.268827752 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.267809036 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.268835861 seconds)
  done (took 31.584675775 seconds)
done (took 82.790943688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.25728225 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.262327571 seconds)
  done (took 5.676898675 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.329506036 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.328394521 seconds)
  done (took 3.815673628 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.270015877 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.2684238 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.270094623 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.268532048 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.268778277 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.269596869 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.270003838 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.269860597 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.268504575 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.268884095 seconds)
  done (took 13.84967766 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.270233433 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.270732982 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.268900189 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.274796679 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.270118983 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.270510926 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.269270704 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.270033845 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.271148504 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.269885932 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.273243399 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.26964418 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.270521186 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.271054108 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.269801662 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.271780626 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.269842777 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.271962697 seconds)
  done (took 24.032325763 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.284963749 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.291273548 seconds)
  done (took 3.734959111 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.419648429 seconds)
    (2/7) benchmarking "second"...
    done (took 1.31167926 seconds)
    (3/7) benchmarking "month"...
    done (took 1.386268161 seconds)
    (4/7) benchmarking "year"...
    done (took 1.376416318 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.312237038 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.291738817 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.312959783 seconds)
  done (took 10.569814827 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.274092436 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.482197862 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.610392333 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.831880412 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.272897384 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.275351687 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090521231 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.276459304 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.277627149 seconds)
  done (took 14.549625203 seconds)
done (took 77.386872247 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.260903726 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.335053835 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.271993392 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.282906501 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.610542855 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.274304556 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.261994224 seconds)
done (took 16.458303406 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.243365283 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.257314714 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.256194909 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.279780435 seconds)
  done (took 10.197199047 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.272675809 seconds)
    (2/2) benchmarking "read"...
    done (took 1.551385275 seconds)
  done (took 4.984474918 seconds)
done (took 16.343421923 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274729966 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.273141351 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.273722053 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.27453656 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.272249529 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.273969468 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.274186222 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.274232587 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.274750067 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.27301398 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.276591171 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272736571 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.271712509 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272986039 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272984621 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.272639978 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273548871 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.273597108 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272976659 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.271210501 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272887113 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273020071 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.27267172 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.272291172 seconds)
  done (took 31.721451299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.276007939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.272039946 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.273555649 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.273223366 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.272401884 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.273147789 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.273941331 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.27193916 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.275977177 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.272540074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273559731 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.272362565 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.27452915 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.272104225 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274438536 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.271275999 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.275050799 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272843842 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275062709 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.272449697 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.27477968 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272403093 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.273722399 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273055923 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.272380978 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270983712 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.274212929 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.272354798 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273881883 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.272892745 seconds)
  done (took 39.360363227 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.27991893 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.282443033 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.275687895 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.276515584 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.276085375 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.27679443 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.276185584 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.275832444 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.276115402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.277781964 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.276886647 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.275945647 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.27612485 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.276036653 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.275998412 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.275395247 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.277935257 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.276768308 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.275800829 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.275391624 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.276542908 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.276598361 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.278042919 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.276256728 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.277424253 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.278709561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.277245477 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.277860728 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.278895249 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.278008168 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.278376687 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.279629427 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.279480023 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.276829162 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.275390051 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.276456214 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.281892879 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.28280683 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.278604419 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.277033873 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.28035149 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.276762189 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.279586014 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.278431829 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.278171826 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.277035919 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.27830212 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.277131879 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.277893656 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.2773751 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.279133883 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.27782917 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.27623676 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.278318094 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.276697574 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.277365478 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.278058779 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.276762309 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.278683236 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.27920522 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.27744769 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.277493174 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.278086061 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.280263025 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.277519265 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.276334207 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.278577654 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.278045563 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.279150017 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.277401255 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.277501844 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.279711887 seconds)
  done (took 93.157646468 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.275655152 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275428489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273680481 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.273502578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274005437 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27526179 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276170602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27494071 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273876801 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276055992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276108621 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273908702 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275958685 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276767486 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276403643 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275206172 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275602125 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273852494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.277206606 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276135881 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276897204 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274808826 seconds)
  done (took 29.21909971 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276089449 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277157789 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.274657216 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277728401 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276667309 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278715076 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276831425 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276793958 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276741846 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275065788 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275753703 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277149334 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.27844781 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274875123 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276027543 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277723131 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277059751 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277807933 seconds)
  done (took 24.14380757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.27527051 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.276299208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.277374691 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.276838229 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.276650767 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.278020493 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276395621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277518194 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.278144633 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.276442893 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.278089726 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276994419 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.278244197 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276139899 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279918772 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.27722862 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.276632738 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276727884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27885156 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277135458 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.277548912 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278033919 seconds)
  done (took 29.26284669 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279788645 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278766425 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.277585953 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.277530716 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277651791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279531087 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.279087603 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.277354465 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.27923834 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.278316026 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278325131 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.278590721 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.279820602 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277224397 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.277751963 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278714959 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278540966 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278383314 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279545143 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277877083 seconds)
  done (took 26.733468811 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285400918 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281981256 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281685493 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282274092 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280790051 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282492906 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281780203 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283695362 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280580197 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283288296 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28179247 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281813372 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281216835 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283127154 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282044987 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281729486 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282342402 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283315852 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281627235 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281174115 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281369181 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282961298 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282312527 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283522849 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281317802 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284429989 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283045414 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284160737 seconds)
  done (took 37.07337279 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2809977 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281393764 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.280553036 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.28021159 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.280501076 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.279782359 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.282197061 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.28215872 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284136624 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27981162 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.28166248 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.281924922 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280080719 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.281380356 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283183956 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.281122488 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281274192 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.280388502 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281368853 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279866151 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.281553159 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281616518 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.282514414 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281736451 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28032177 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.283306266 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281006471 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283051244 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282422438 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281633468 seconds)
  done (took 39.608745054 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.30172004 seconds)
    (2/2) benchmarking "in"...
    done (took 1.301493583 seconds)
  done (took 3.770343626 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.282435524 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28186032 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.282652903 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.280983139 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283109767 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.282695806 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.283466755 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281713031 seconds)
  done (took 11.427129857 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.279156599 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.285045164 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.284231681 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.28358017 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.285729711 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.277403213 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.288580385 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.28770546 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.28075782 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.280497721 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.283198167 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.284111022 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.281461344 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281012868 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.281632621 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282998245 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.287494663 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.285148148 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.286493888 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.284605955 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285153664 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281840268 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285465227 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.286207884 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.280114845 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.28791245 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.28701866 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.290027491 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281297196 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.283898787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.282447244 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.285775628 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.285958345 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.285152526 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.285483743 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.286635739 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288392072 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286151784 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.287023528 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290300339 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287461289 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.286380105 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.282631076 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.282774648 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284140568 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.289292302 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.287622765 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.285311059 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.281812033 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.284359915 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.291205267 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280592469 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.286605488 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.286261185 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.286307824 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289508307 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.292079011 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.284604638 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.28724448 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.290951382 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.297696836 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.293379673 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286703676 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.290651022 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292960517 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.298803331 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290302163 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.293206771 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.289688144 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.287741526 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.28961885 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298673326 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.295879795 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.288999295 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288228161 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.288134695 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283406003 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289635694 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.290169791 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.289222623 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.290950174 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289018647 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292212851 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298327535 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.284085811 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.290373488 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.290475413 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.288880994 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.284434403 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293430769 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.294718788 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.289276991 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.283324487 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.285354349 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.286034335 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.291149655 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.282788323 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285883937 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.289071693 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.289857216 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.289787628 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286507761 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.290939522 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291359131 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291540107 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.29075401 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.291677686 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284651489 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.291846694 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.291705759 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291164197 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.287125545 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.287687981 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.289373511 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287804349 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.288937581 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.293305105 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.285509966 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.291614264 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.292216649 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295469758 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.303924703 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.293088739 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.292372052 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.288059507 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.298866472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29232599 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.290307147 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.293150562 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.288616606 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.290461409 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.289007307 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.293625127 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.287144886 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293802545 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.287845326 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.292815786 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.292693403 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.29269345 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.287382049 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.290419661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.28886172 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.290653573 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.291309137 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.295165917 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.289951302 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.29597134 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.291459748 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.291429352 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.291965328 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.295252658 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.293666008 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.289514905 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.29608744 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.289227293 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294765615 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.289992431 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.295106313 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295034423 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.294061206 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29344335 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.288377472 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29253829 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.295857539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.292656327 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.290638943 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.292762095 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.293315497 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.293080808 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.287693304 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.293489412 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.286964705 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.291943197 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.298401266 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.294020223 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.293603492 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.292796334 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295543371 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295151904 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.294166418 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.292040825 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.294359803 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.295816471 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.295174967 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.298776302 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295084776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.293829202 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.288780429 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.290891219 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296200209 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.29131332 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.29944158 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300869344 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302175879 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.291767653 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.297012461 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.290503824 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.298384012 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.29456704 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.296840117 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.295497349 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296222595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290090183 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296918177 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.2929656 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.296464994 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.291495648 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.296908847 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.297169379 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.295732285 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294993811 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.291265707 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292248708 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.295816692 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297367789 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297834606 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.291653966 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.296627536 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.290715503 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.29197597 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.297421765 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.297172535 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.299533363 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.298062158 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292190176 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296432254 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.295365671 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.292130461 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.298628858 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.295029654 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.294018678 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301487061 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.298457739 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.294915211 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302244134 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.297931376 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.295115747 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.296898054 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.30199115 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.297565873 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.295343512 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.30282311 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.302032022 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.299508027 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.29942355 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293790369 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.298777377 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.300247145 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.301815573 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.294308233 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.300213599 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.29567932 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.300331783 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.295647478 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.297345465 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.296299743 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298665816 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304384379 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.299987721 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296044241 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.301910037 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.30040063 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.300532563 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.296504731 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.305051071 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.300044965 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.297765694 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.298933677 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.296976696 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.303123467 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.296176289 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.301256774 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.295496751 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307396379 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.311433669 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302155072 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.300415311 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.301371425 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301892971 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.298886701 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.297307103 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296337948 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297325797 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.296021494 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.2968052 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.300067573 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296857047 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.302918051 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299055707 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.300022857 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.304169366 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.302670982 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.297102159 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.303470584 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.302069846 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.303060421 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.296440412 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.301643526 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.299767229 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29919855 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.299514496 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.298353364 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306035327 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301671054 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.301892794 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.300280147 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.299820869 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.298724696 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.300125563 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.306931823 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.300603975 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.309417814 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.301615002 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.304274045 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.300193775 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307705662 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.308207326 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.30126912 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.3080427 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.302646951 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.297227263 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.298905403 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.303939287 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.305493404 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.307996649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.298926643 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.306406104 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302210557 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.304917855 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.304411426 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.303100933 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30313218 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.304837881 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30565806 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.304298152 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.300643344 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.303309634 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.30753321 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.306137605 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.306282743 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.298515394 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.30256394 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.307570725 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.301112044 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.301120405 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.301000364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.304728176 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.30539503 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.306061988 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.305432888 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.305472109 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306740511 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.306344837 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30833954 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.30637709 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.307295458 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308498415 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309176592 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.310552715 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.301553336 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.30763842 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.305062281 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.301425225 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.302345174 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.302665861 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.308840178 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.301401775 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.313200467 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.306417078 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.302823603 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.302874791 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.308965866 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.30212887 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311099709 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.321626241 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.303969938 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.310567109 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.306151515 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.303444546 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.310688672 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.307783919 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.301956017 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.304927818 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30852281 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.311243817 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.303192154 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.308118678 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302728842 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309507651 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.306893683 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.307208226 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.309653566 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.308332985 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.303020307 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.310140856 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.306791935 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.310285274 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.304494285 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306207368 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.30448009 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.31400106 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.314698611 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.306397134 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.31058793 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.309859463 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.305079481 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.306374737 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.311617913 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304778263 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.310419196 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.30371294 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.308186703 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.306699542 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.306142416 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.307259588 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.310161375 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.30460584 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.304568845 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31067384 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.310721385 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.311705771 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.306104899 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.310995221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.304703104 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.30563429 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.310457429 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.306207732 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.31132618 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307708485 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.310125265 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.307196037 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.310206269 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.310829119 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.310618878 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.304586078 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.305777731 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.313616522 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311052009 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.311640492 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.310521897 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.314530811 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.307471137 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.309221699 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.3119627 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.305484319 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.307431751 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.313088506 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.309754058 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.307431544 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.30817223 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314053197 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.314907936 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.310242361 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.307773986 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31660125 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.313120689 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313408053 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.308355092 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.309125845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.309673533 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.311653378 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.314776287 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.307406376 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.316416856 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.313794376 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314834872 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310841808 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.310424702 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.311376423 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315236501 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313400766 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.308702215 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.314155169 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.310303315 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.315016741 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312563705 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.311402531 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.307643499 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.308131555 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.311288475 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.311741704 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.313098368 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310565161 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.310402511 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.309865226 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316371935 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.314906278 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.313031116 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.313030574 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.308497847 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.31442112 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.309849225 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.312818139 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.311587377 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.309400223 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.314991859 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.315042499 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.311680007 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.315977106 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.318120309 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.314910668 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.30939019 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.31220541 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.314376768 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318143896 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.316593032 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310995874 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.312817665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.316905822 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315878458 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.316407871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.313082936 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323287214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.321874202 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31175248 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.310262719 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315751562 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.319599052 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.314951698 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.317055546 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.31420118 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.314717841 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.321446773 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.316341471 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.319041331 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317022416 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.313528172 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.319178778 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.31492295 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.316510393 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.314727212 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.319873581 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.318946942 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.316004993 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.323718645 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320733378 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322046309 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334629724 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.319132528 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.315554797 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.320499705 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311782101 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.32004834 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.316008579 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.321203639 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.317599178 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.318677843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.318318285 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.312784063 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317562215 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.317999703 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.324725951 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.31777286 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.313436013 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.313423815 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.318496749 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.319044463 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.322301485 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.318005321 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.31868981 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.317874944 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.315229516 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.3240098 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.326790153 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.321174775 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.319940984 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.318067712 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.316080956 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.318069024 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32074283 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.323787461 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.31884036 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.320313647 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.316890421 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323035098 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.319850737 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.316073064 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.314880791 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315201477 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.319930649 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.326626062 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331315062 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.320735618 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.316112558 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.322063034 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.322058103 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315486523 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.322898892 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320947816 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.316125375 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.318192795 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323060844 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.319976862 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.320323894 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.317708895 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.325591476 seconds)
  done (took 777.092256181 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.320670622 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320149196 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31844184 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.319246123 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32025585 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320657409 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32086616 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321655512 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.320468945 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.320941365 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.321773295 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321050312 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.320521534 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.320515338 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322080855 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320860435 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321290472 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320992414 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.321001624 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321694651 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.320897806 seconds)
  done (took 28.935801226 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.322944471 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.321373376 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.32214428 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.323219302 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321011227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.323734983 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.322723717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323567291 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.322991009 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322052308 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.323878374 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323330005 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.323065049 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.322236401 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322661335 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324992531 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.32494864 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321883391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.324454614 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322739845 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325473714 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.3231095 seconds)
  done (took 30.309108915 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.323448826 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.324991721 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.319810534 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.32364669 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.324553981 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.323265599 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.323763638 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.325070227 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.32341939 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.320668361 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.318614581 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.321690522 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.323932955 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.327992878 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.321595601 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.32566195 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.323665502 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.324396498 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.32385031 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.324389365 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.32665037 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.327877889 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.325027132 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.318912688 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.327451803 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.325881112 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.324044267 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.325065937 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.322197572 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.328954811 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.325825917 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.320821672 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.324605672 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.32342069 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.322769058 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.329565266 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.32788081 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.327595357 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.32585371 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.329236872 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.340086914 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.327928447 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.328636503 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.329981629 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.328137256 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.323933026 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.331248909 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.325801866 seconds)
  done (took 64.817863879 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.328908873 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.328195971 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.327179103 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.327237851 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.327826051 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.327791949 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.327598825 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.327482187 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.326496544 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.326618724 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.326751951 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.326357917 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.326857812 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.327370811 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.327629751 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.326809263 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.327056627 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.327410938 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.325759534 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326885629 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.326641869 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.328086495 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.328772027 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.326989452 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.328481659 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.325776071 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.327414145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.329461159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.32787157 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.328024611 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.330427269 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.329081926 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.329088628 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.33009907 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.33083004 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.331817479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.328545081 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.327923723 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.329611564 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.328258309 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.328683618 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.330399431 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.330246853 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.330260205 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.328012669 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.3273961 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.328433326 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.328595572 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.328960729 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.330518761 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.330088477 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.328837111 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.331459947 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.329961598 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.330936595 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.330740156 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.329561395 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.329650846 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.330900521 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.329673115 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.329579075 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.331549102 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.331533132 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.330583028 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.331232047 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.329626545 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.32845717 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.331089292 seconds)
  done (took 91.5626912 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.331862324 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.333042702 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332273292 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.33231168 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333147905 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.332905717 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.331432365 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.332825889 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.333197063 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332873562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334057734 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.332974139 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.330788487 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.332604236 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.332364914 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.332449997 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.331767376 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332759689 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.332261154 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332258919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.333775953 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.332899978 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.333637641 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.33453112 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.335999013 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.334834962 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33458074 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.333397667 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333330478 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.334700554 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333593036 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.334406428 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.334579804 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.334134028 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.334819444 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.33482618 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.331740238 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333548745 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.333889244 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.334031779 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.334263571 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335322218 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.334707588 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.335034416 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.334570796 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.334590639 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.336111525 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.334531098 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.334399582 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.335677131 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.3361285 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335187177 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335694471 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336180327 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.336005234 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.334744114 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336125491 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.335409071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337147982 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.337595675 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.335767788 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.336191199 seconds)
  done (took 83.924480126 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335354277 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335886082 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.334790358 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.335349087 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335914565 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335558475 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.33570121 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.336309455 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.337556949 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.338015643 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337801726 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334313187 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337363985 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337791844 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.335760936 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338337349 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336428804 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.335679649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337155765 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.336199803 seconds)
  done (took 27.939687436 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.336328763 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.338016422 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.337353081 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336523664 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.338598775 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.336132161 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.337144964 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338209548 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33773407 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338357036 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.339170564 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.338279881 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336887022 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337920484 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.338154288 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.336886832 seconds)
  done (took 22.615637683 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.338295492 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.337674619 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.340229109 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.338166668 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.337914403 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.336437006 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.339721438 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.336865627 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.339269068 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.339803072 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.338653007 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.339245427 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.337783483 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.338223099 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.338939211 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.340358338 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.33902759 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.338117925 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.339908998 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.3406114 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.339250828 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.338656984 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.34054545 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.34023383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.339539935 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.339944441 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.338902619 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.340961557 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.339907928 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.341363052 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.339230481 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.339490533 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.339997181 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.338747901 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.341363579 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.338987849 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.340484566 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.34221135 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.341275981 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.340515343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.34138593 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.340828543 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.340474718 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.340925325 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.339853462 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.341270291 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.339483722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.340574078 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.339917515 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.341663943 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.341833766 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.341924661 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.343544465 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.342430054 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.341420807 seconds)
  done (took 74.909848457 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342126733 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.342812833 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342354821 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.342762552 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.343244848 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.341441184 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.341976982 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.344672984 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341904704 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.342671284 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.341267782 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.343387469 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340929613 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.342236246 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.340800422 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343569924 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.34162849 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.341727068 seconds)
  done (took 25.379873006 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.341707586 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.341830446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.343822245 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.342226016 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.341816772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.345121316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34267604 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.34436786 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344200713 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.34275349 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344138888 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.344483375 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343914925 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.345101046 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.344273078 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343417831 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.344591714 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344046538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.342725598 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.34211279 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346090431 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344210553 seconds)
  done (took 30.777199104 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.338347294 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.339293375 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.338163276 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.353826886 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.350586016 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.337967546 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.3400972 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.339407577 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.359561792 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.378825252 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.374205167 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.350607794 seconds)
  done (took 17.419469377 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344272966 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345362751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.345705055 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34511343 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345927507 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344853487 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345385013 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344740146 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346680056 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34444416 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345308396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345984591 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347099833 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345944291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345953084 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34817676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346070683 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345906255 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346181933 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349240997 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345645359 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346999057 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345868512 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344988312 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344848796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346388153 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348377323 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346681699 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345559296 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347400678 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347174201 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345596677 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348922754 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346103253 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348212615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347634774 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346887673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347569468 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348260606 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346659467 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348187458 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348750971 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349084429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347649426 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348523866 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347863258 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346913172 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347526813 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346145402 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351260382 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348952201 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346994759 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348453353 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349418117 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349853758 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350580263 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349172514 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346587047 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349356447 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348870682 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347897825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348652262 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348724003 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348549959 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349385202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347836501 seconds)
  done (took 90.137820096 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349287225 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348428771 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348007328 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349123634 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347781689 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348222802 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348744558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348010943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348564606 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348899823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350380956 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348891836 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348852098 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348998735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349675971 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350553531 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349889343 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350987334 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350220076 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351081283 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350039696 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349841401 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350704899 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34985834 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351448491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352240403 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351000651 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352279792 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352221728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352174367 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352421549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35163281 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351762322 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350691622 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351358664 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351046939 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350802628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35054867 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351708528 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35143553 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351549366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353129757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349768985 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351335813 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353043594 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351298704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351526667 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351005565 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352371178 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351726857 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351179395 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351230473 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352574009 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35246383 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351529625 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352316904 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352320158 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351673506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351026544 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353324137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352135491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35294338 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355035302 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354188979 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352259494 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354190013 seconds)
  done (took 90.393980228 seconds)
done (took 1822.856362666 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.512834579 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.469189367 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.347895331 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.357514672 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.349550811 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.343926115 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.362832956 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.34893764 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.347773117 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.34883598 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.348010887 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.538591236 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.343108702 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.348774619 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.348825652 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.446682057 seconds)
  done (took 27.391141278 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.379379362 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.357429573 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.46843156 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.354178492 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.379804993 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.546973259 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.411332325 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.354564599 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.5264812 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.372370395 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.345482701 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.377342449 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.35404904 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.345528764 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.374042772 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.547252371 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.604863969 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.3461663 seconds)
  done (took 29.674590163 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.80822436 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.351772548 seconds)
  done (took 5.388796649 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.374849595 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.355027826 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.35377118 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.353304324 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.345627432 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.346687843 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.354357362 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.347929806 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.355137177 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.482095054 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.356581119 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.367628687 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.354030196 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.35468494 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.358287778 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.399042263 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.511506967 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.358492015 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.357334409 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.359546958 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.354925341 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.45697237 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.398020162 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.360632547 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.483432643 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.350448699 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.36247063 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.363062651 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.494616829 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.360550616 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.355363086 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.356547369 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.356568587 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.348540443 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.851040399 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.349163951 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.365125202 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.382443252 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.358582228 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.507346596 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.357841847 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.360844886 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.349810084 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.82875304 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.479883038 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.482628241 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.352013314 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.357144646 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.358860964 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.4225309 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.360439791 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.35981465 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.416833868 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.189789756 seconds)
  done (took 86.57931737 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.408201147 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.350336975 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.531429993 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.373939032 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.350451002 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.350550154 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.351716662 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.641543888 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.393987936 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352100518 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.659555775 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.937070975 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.362878326 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.425611432 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.33829445 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.4425441 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.353585707 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.350943161 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.353459957 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.356719346 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908411867 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353977841 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.351631748 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.44178194 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.389589032 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.87245868 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.356802298 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.352680642 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.370677879 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.350856907 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884072185 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.3592012 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.448290664 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.35471625 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.627721307 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.735489805 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.697673744 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.354940452 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.40851709 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.35549304 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.36261639 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855871871 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.714762655 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.353595651 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.354285864 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.863238356 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.352894964 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.355467206 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.366460455 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.609659383 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.352942477 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.353202449 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.362816135 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.35283192 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.353430767 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.390658863 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.4560059 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.874881516 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354071445 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.366336285 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.393551682 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.355909184 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.362392028 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.35631678 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.3712557 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.720400503 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.548160236 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.363139474 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.71840593 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879426374 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.354567432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.950193328 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.360305698 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.360146773 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.353992859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.353983009 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.355649913 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.866423971 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.362405168 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.354835594 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700718212 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.35834989 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.644782946 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.372066944 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.355223666 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.940105145 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.356147284 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.373760625 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.357126339 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.357084365 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.372711999 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.35736471 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.635237746 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.389252615 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.356022301 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.356437767 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.387087649 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.355463474 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.371774831 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.365468136 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951671382 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.361757396 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.35696376 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.360497272 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.356481525 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.372584757 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.358611123 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.356519602 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.630224795 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.356922659 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.381405932 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.356466634 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.356603712 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.359133701 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.444639155 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.365727896 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.669092086 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.360893566 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35601801 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.359475084 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.356904616 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.379925049 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35663164 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.36396067 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.240620713 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.628393182 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.37421483 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.358042564 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.358939382 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.357278591 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.378445613 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.358649846 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.418241564 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.360411752 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166175357 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.366690544 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.382544899 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.358724915 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.370295218 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.360032908 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.365810393 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.358431864 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.656176353 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.635232645 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.535545635 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.361037089 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.372962756 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.136828117 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.379359064 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.539268491 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.381983536 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.361927999 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.611535913 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.590289972 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.361508515 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.360014029 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.360259725 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.626220085 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.360081487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.677062034 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.919038604 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.360424702 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.359776229 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.167141004 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.069471694 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.360464867 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.361773648 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.646897803 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.379085149 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.360142892 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.360586659 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.360382711 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.360663629 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.36264505 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.366209625 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.362340249 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.362643109 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.662491194 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.553369154 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.379538638 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.370084983 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.875903791 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.396995627 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.361576691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.386699933 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.366855406 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.360806508 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473073485 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.364203452 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.365600923 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.363972589 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.362474399 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888941172 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.370767472 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.362806756 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.552926612 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081542701 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.362533076 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.363330592 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.362737372 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.294146513 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.902841533 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.433842448 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.675909166 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.372972514 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.401093961 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.363379624 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.453899674 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901670639 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.365437752 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.363845134 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.03916737 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.364338977 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.877299228 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.362591432 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.366689232 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967686967 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.362366982 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.364106826 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.370719449 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.363240692 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.688159733 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.365438719 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.3679196 seconds)
  done (took 504.510121537 seconds)
done (took 654.770834866 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.363567123 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.364123226 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.350523312 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.370279992 seconds)
  done (took 10.69397714 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.40471788 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.370397145 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.380443787 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.368933515 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.382699772 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.371430052 seconds)
  done (took 9.524141952 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.36533792 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.365330886 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.370693155 seconds)
  done (took 8.346163719 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.590423505 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.390169217 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.73587575 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.383014792 seconds)
  done (took 9.344949097 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.380006885 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.379904094 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.379014019 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.384320383 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.405673821 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.408259567 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.384254699 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.386565713 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.408225734 seconds)
  done (took 13.759668554 seconds)
done (took 52.914440086 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.48724303 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.396578386 seconds)
    (3/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.365288241 seconds)
    (4/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.348555886 seconds)
    (5/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.408392727 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.373537048 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.438183363 seconds)
    (8/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.425051084 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.400380223 seconds)
    (10/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.08730017 seconds)
    (11/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.402211898 seconds)
    (12/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.59217318 seconds)
    (13/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.40796787 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.526465769 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.356483876 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.358616865 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.476402913 seconds)
    (18/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.498755468 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.527757848 seconds)
    (20/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.635042351 seconds)
    (21/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.438751139 seconds)
    (22/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.3489557 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.453452419 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.476614259 seconds)
    (25/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.450677942 seconds)
    (26/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.353416376 seconds)
    (27/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.474363408 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.485203901 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.491143029 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.555402684 seconds)
    (31/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.193781137 seconds)
    (32/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.205696926 seconds)
    (33/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.566034277 seconds)
    (34/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.435558357 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.455149233 seconds)
    (36/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.555411869 seconds)
    (37/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.402423878 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.271266851 seconds)
    (39/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.355930822 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.570987491 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.432830568 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.12359133 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.482376262 seconds)
    (44/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.375152306 seconds)
    (45/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.504712017 seconds)
    (46/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.603804448 seconds)
    (47/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.499144635 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.352440771 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.356083755 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.151922968 seconds)
    (51/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.355396049 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.410365713 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.631245742 seconds)
    (54/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.550875676 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.458115871 seconds)
    (56/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.352295831 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.064918875 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.66269473 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.446249662 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.644333377 seconds)
    (61/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.356258622 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.353125652 seconds)
    (63/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.558917 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.554861427 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.17923605 seconds)
    (66/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.359063134 seconds)
    (67/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.409229951 seconds)
    (68/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.352409838 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.399402226 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.456911682 seconds)
    (71/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.352727042 seconds)
    (72/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.490444362 seconds)
    (73/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.195377363 seconds)
    (74/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.475547264 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.469362102 seconds)
    (76/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.373165299 seconds)
    (77/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.35333165 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.538880632 seconds)
    (79/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.600089544 seconds)
    (80/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.357964634 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.471961795 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.412525936 seconds)
    (83/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.143475974 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.491706715 seconds)
    (85/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.515538735 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.451767035 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.594399111 seconds)
    (88/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.358116724 seconds)
    (89/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.520416736 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.50448192 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.38772182 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.355318087 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.503145733 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.408396884 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.435450133 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.501655004 seconds)
    (97/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.443101076 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.454374358 seconds)
    (99/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.359981735 seconds)
    (100/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.40941261 seconds)
    (101/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.403218034 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.468850245 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.635244706 seconds)
    (104/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.285676733 seconds)
    (105/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.352237751 seconds)
    (106/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.449345414 seconds)
    (107/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.400628362 seconds)
    (108/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.091709867 seconds)
    (109/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.438286621 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.354396507 seconds)
    (111/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.484270764 seconds)
    (112/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.406482049 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.481431234 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.482418888 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.64896674 seconds)
    (116/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.604255656 seconds)
    (117/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.360965912 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.381772187 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.414878452 seconds)
    (120/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.420819192 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.511647439 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.539568079 seconds)
    (123/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.534644528 seconds)
    (124/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.380866627 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.430156506 seconds)
    (126/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.544531098 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.400186476 seconds)
    (128/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.35783268 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.477144816 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.037710833 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.506645075 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.46423822 seconds)
    (133/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.357811171 seconds)
    (134/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.467031411 seconds)
    (135/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.357332985 seconds)
    (136/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.457230128 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.441643531 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.489932987 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.512095506 seconds)
    (140/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.390391047 seconds)
    (141/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.462650306 seconds)
    (142/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.241382437 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.361762967 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.505177789 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.565835594 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.41833629 seconds)
    (147/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.338450678 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.563198842 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.38069437 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.532437534 seconds)
    (151/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.362121313 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.477179061 seconds)
    (153/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.476100386 seconds)
    (154/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.0362708 seconds)
    (155/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.535226277 seconds)
    (156/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.377111711 seconds)
    (157/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.488468976 seconds)
    (158/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.46627089 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.445559592 seconds)
    (160/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.412405613 seconds)
    (161/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.5103571 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.370468639 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.412051646 seconds)
    (164/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.357916029 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.508015137 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.132302048 seconds)
    (167/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.360405571 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.359971834 seconds)
    (169/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.605440783 seconds)
    (170/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.206611129 seconds)
    (171/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.434552663 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.197236823 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404972017 seconds)
    (174/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.361049931 seconds)
    (175/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.486260029 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.392119909 seconds)
    (177/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.52194178 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.4721512 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.534286108 seconds)
    (180/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.23504983 seconds)
    (181/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.245015653 seconds)
    (182/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.73516421 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.585573786 seconds)
    (184/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.532716936 seconds)
    (185/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.236609928 seconds)
    (186/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.472436581 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.072228529 seconds)
    (188/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.411656396 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.544878437 seconds)
    (190/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.36633694 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.658403376 seconds)
    (192/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.362833417 seconds)
  done (took 348.438297446 seconds)
done (took 349.687309457 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406919492 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.477100266 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.387960847 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.388152338 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390519315 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.394445308 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.406965573 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.388531848 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.398866184 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.398755358 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.395689175 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.395347406 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.401088148 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.397165662 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.422978659 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.391026978 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.388174598 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.395915413 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.399953163 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.401304884 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390626078 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389699803 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.407464728 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.387222014 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39771395 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396284369 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.395207985 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.384339623 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.393461278 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.40005248 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.392032454 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.395330805 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.402233043 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.398651727 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392254534 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.396643242 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390130854 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.478067295 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.406490387 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.398221015 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.394563742 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.403007119 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.394746287 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.395526719 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.399027528 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.409953993 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400047678 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.406187504 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.393982338 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.392809538 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411949416 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.401161525 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.394300736 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.388869657 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.39253945 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.405218006 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.398413829 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409260452 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.396712754 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392416883 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.425048631 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407053977 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.400751262 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400619787 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.395709636 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.403238088 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.399554861 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.404907134 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.396137767 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394799217 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393674614 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.39756696 seconds)
done (took 110.086171244 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.514696361 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.389324415 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.530826102 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.396799555 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.552221004 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.521914138 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.395673741 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.39642186 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.396136463 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.189690624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.397295098 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.397086794 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.390588522 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.395633471 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.518951585 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.398574534 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.396847771 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.089161095 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.400482472 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.53284527 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.389722814 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.398020464 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.398529924 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.190112196 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.390791876 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.387643094 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.53285366 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.399068779 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.096999658 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.387658273 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.389614078 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.088783256 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.533934434 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.416268027 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.408704061 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.407291679 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.554161702 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.402761735 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.514929866 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.515993372 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.532800372 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.439297121 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.389297272 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.393815063 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.401169534 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.401550587 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.397251445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.42646304 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.392804061 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.399805249 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.091798961 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.410918506 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.399605572 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.399474858 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.397644938 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.430323755 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.401468822 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.402235419 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.536880805 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.402428328 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.518871762 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.192609516 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.19441901 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.400878544 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.392977783 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.400447284 seconds)
  done (took 112.416075673 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.46254123 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.470152149 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.509377708 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.400771976 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.447255497 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.507568902 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.401271034 seconds)
  done (took 11.465167643 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.403448501 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403563108 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.449096667 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.447422735 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.402495946 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.570664778 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.403048018 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.40804681 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.401023599 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.457471498 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.406427062 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.403958497 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.409938957 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.396202615 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.447220295 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.407431988 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.511040218 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.398595479 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.403976566 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.549760785 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402181597 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.410576951 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.449150896 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.409594789 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404835524 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.40284406 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.18164689 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403726842 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401447964 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.406867387 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.40122568 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.45253354 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405352862 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.395729579 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.403028633 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.513587895 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.403631784 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402025585 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.405763132 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.399401797 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.407986738 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.406024231 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.408220174 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.403583701 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.407681734 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.423305412 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.407755756 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.404671116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.406002133 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408788564 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.456199724 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405570599 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.403206197 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.404389705 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.464614438 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.412050012 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.405206918 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.404102143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40745526 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.403532064 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.553523961 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.450150743 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.406918372 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.448213649 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406969316 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407097082 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.407671588 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.40607261 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49301051 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.404488612 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.45108843 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.405300459 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.597977911 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.424550653 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.409302651 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.402313923 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.40281677 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4057483 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.397332064 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.407003142 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.40579133 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.402993898 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.407904764 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.40569881 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.405970099 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.558180432 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.510901663 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.404431131 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.413388584 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.409102962 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.404730226 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.461177978 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.408238708 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.406218147 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.461569012 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.51507656 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.455229274 seconds)
  done (took 144.381702245 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.414966972 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.413254901 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.405522584 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.429693633 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.403677756 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.402082851 seconds)
  done (took 9.741440024 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.406359632 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.410154746 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.408578553 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.407510134 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.408857516 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.413569922 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.414519571 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405578293 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.41104784 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.41037888 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.413092718 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.416464019 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.420192527 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.409060608 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.413748883 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.412295672 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.414757333 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.408600038 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.409800274 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408613244 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.405734517 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.409598298 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.408191707 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.406548797 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.415957563 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.413266827 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.424527157 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.412847247 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.409941095 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.413231083 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.413342245 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.415204997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.407407699 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.409577832 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.419115311 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.406741037 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413032616 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.416655013 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.410265231 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.415906547 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.419433934 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.412320658 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.413682789 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.417239809 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.40768203 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.410972971 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.420399061 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.424907086 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.415354535 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.418227883 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.417899441 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.412019524 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.417252043 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.418358801 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.408634618 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.409606606 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.421356523 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.417531329 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.413213996 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.407647202 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.414368681 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.416566975 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.408596649 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.420553329 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.412140576 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.419269562 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.408680698 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.415963312 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413978111 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.413395677 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.420510557 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.412884247 seconds)
  done (took 104.025767828 seconds)
done (took 383.29336189 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.704867693 seconds)
  done (took 3.981089683 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.497976317 seconds)
  done (took 3.775141698 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.045692914 seconds)
  done (took 24.331081185 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.492124681 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.423184056 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.40709587 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.40736931 seconds)
  done (took 11.005027687 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.713177935 seconds)
  done (took 3.989437128 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.416111026 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.411939541 seconds)
  done (took 6.105589131 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.650748058 seconds)
  done (took 3.927565446 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.742168955 seconds)
  done (took 4.028156792 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.423152429 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.42268698 seconds)
  done (took 6.130823517 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.388235879 seconds)
  done (took 3.664092543 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.006158684 seconds)
  done (took 21.283465403 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.416677708 seconds)
  done (took 3.696416518 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.444630785 seconds)
  done (took 3.719783639 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.171190403 seconds)
  done (took 6.448124225 seconds)
done (took 107.36367231 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.402888521 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.403206352 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.405168605 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.403890631 seconds)
  done (took 10.891964019 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.469673402 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.469615682 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.474752416 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.468854323 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.467920959 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.470201042 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.441160217 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.443655197 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.470619973 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.468600686 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.47632816 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.468450938 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.470191482 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.443089971 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.470081614 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.474928823 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.469383003 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.474920812 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.444681407 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.468920425 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.421659691 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.469960447 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.470406194 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.419348551 seconds)
  done (took 36.367394902 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.926850172 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.481218516 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.563314163 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.462391083 seconds)
  done (took 7.712851404 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.496293043 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.502424755 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.522866739 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.554350962 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.583272051 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.516756067 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.441968901 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.441902012 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.428063896 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.499657381 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.551204408 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.491778752 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.587721042 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.419786052 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.70476542 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.420863814 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.41965931 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.500805601 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.551816142 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.5701377 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.420503377 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.501296343 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.5055208 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.491048859 seconds)
  done (took 37.404929944 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.42685246 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.437046494 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.419406139 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.433884519 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.419392341 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.419755828 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.418521455 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.425899307 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.417595311 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.417419835 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.420250816 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.43303776 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.419384561 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.419259812 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.425706839 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.421146157 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.421033767 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.425963586 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.428131322 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.420087457 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.419507529 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.428112364 seconds)
  done (took 32.597539865 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.407196961 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.409025791 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.759701449 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.664253866 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.410241813 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.408883527 seconds)
  done (took 14.341293626 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.486900796 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.634058432 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.415382799 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.78188233 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.865643746 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.417543246 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.415660565 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.668440715 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.987716776 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.992234924 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.474496711 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.486966663 seconds)
  done (took 20.90937263 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.41795783 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.416689973 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.41799597 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.431772009 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.471311138 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.419935322 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.422545318 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.409001161 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.47820259 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.477114671 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.420236677 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.473400491 seconds)
  done (took 22.53967853 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526204615 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417378975 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423395019 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467873021 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416559381 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260774638 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449126397 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128744537 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.42126067 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692940919 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422553731 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510882568 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.671883417 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41878701 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423996852 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.394694128 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646575315 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917756176 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41955761 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418761709 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449016514 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433994785 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.439272255 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633683345 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269233425 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419838251 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.681769689 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418734898 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716908441 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691319235 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693155847 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426786316 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693924433 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07995841 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516957947 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633054757 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423166548 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438411316 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.399395066 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.42662008 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432938832 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421235857 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682775275 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42895581 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420917564 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435825494 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141758509 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.427146911 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.419605561 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422190612 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685854642 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523794212 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.424870937 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421038079 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416779282 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420991185 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.42443028 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553121549 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991715592 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42276016 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433462141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.426480697 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416861706 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440866408 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038431163 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.428315767 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.42545284 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42603383 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420621731 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421298974 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443722488 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420905604 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.442779914 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420709448 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141525207 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432237428 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424069003 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981062275 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422966906 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.428109992 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653893617 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423361335 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422173378 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.419775904 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424385577 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131083467 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430142424 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.397074598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487989838 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135442038 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637112617 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44808819 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453085082 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644677348 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.399562541 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425463779 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.432832885 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427519997 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446110868 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14117017 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423346284 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.428308256 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680012786 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.635037137 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430558648 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.403897993 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905843882 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425068526 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.468627051 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426794409 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644923441 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.027115682 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695885554 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434908378 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455840929 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42422537 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188625439 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425733216 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.435596985 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434731464 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706730157 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.229127863 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427074194 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493898554 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432418409 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427229773 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427330606 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428939337 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42648976 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.635413534 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441734922 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696233879 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.434421363 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425341962 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.430107121 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429187024 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.433503961 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648763551 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44298226 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708548226 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427356803 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427370739 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427854096 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.65000915 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.425666246 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.451056779 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689171987 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427631102 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434811486 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69967756 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46548268 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536506923 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457197856 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.428248772 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.689001901 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.432641515 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.433795205 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427640272 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430698451 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437049692 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.436111302 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428019155 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030490498 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407009763 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431695605 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429664135 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.444229807 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497336917 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436327996 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643234749 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.43476594 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454149925 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.435736388 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.434725974 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653261867 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694173293 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.438400971 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504683843 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.912881465 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028859076 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446143394 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.43065958 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.427975431 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.428844605 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42937183 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429859023 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431209926 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646579975 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707513749 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430503382 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034197439 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432659055 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43584628 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.436900581 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696429821 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.445412905 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430448364 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.433495973 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43706876 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447681592 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.702184138 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572250772 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.445854551 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431392673 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.991839645 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439575357 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431920144 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433024274 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462505842 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440687571 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286711093 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692336616 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434192686 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718212981 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43890087 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.449300978 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.430347346 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435539231 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442950217 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.441728118 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441789061 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.652536524 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442420325 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43415781 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989756977 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176550267 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985101497 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445343482 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.442857438 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439511552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157555263 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435203451 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435375279 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676547269 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15964472 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432865678 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918224881 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.432125146 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224944162 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700329963 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671797882 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439135579 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.43412171 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70493843 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651377062 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467020458 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434629587 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457755024 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.41082811 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996275403 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438205737 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513029057 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15855329 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434843134 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.436241901 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.457840735 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.442594299 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851535144 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434682829 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435765048 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436683878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440674815 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294637003 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438403535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435863113 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056631076 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452565091 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.928006277 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43552539 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651098527 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.710626374 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.706355409 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.442254482 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.451919758 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.688006089 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703990599 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443810127 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.453599142 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994824119 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.313531066 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.442561366 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437143188 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2013024 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443427984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738080435 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.453994519 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.442964183 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442390296 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439069007 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437106442 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.436476214 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.443956059 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428292908 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937915878 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.454165 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448510369 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453018173 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443138404 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.690159744 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.452607954 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.043723508 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667221037 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435502574 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469694285 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.442741988 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451004966 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.414814849 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440138242 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439468943 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513378602 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.660847817 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446771608 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.421125793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495684251 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648739367 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.438841714 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.454534814 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671177908 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.443411427 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.450383823 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179155209 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472166331 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455090818 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442618779 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.443132868 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482632596 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507929407 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658242798 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.716852669 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.716885556 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859347028 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439348423 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459901269 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.456792209 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537215715 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44202349 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.442356356 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.214645221 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050420666 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199945726 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049816764 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714628769 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449371305 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455550926 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441968424 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578479369 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441522384 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715987022 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442796684 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.449376917 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464342454 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444399843 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467459237 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657572933 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718119224 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443225712 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449662607 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448450781 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.443251976 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716484335 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.660375852 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944658347 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007802217 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445041191 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.45031304 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172772131 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717061818 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442955113 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444523187 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443313361 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.45194527 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.450206233 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.455428438 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443136357 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579555932 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712368804 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11972895 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.712701884 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.486160013 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.961045408 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452093157 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.698117132 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210489445 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.662571345 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05964374 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177859767 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709722239 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51452818 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664283559 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.449421201 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58221438 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.450457711 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.446781419 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444472975 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445546389 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.444101673 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.715760269 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065208463 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710544358 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.449908104 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.45289457 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476979046 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.663886415 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.673179978 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171796218 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670270385 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721304994 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45889022 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.446021367 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057934609 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720042974 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453595257 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.452292811 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675490534 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452974433 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472464522 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.965674219 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.44529709 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006904784 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.336439699 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469038324 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458501149 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182642441 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063119807 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.454100413 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951426426 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449775095 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456375082 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72837149 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.454098645 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458520386 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736634694 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.452034114 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459449431 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672982907 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.061069404 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249135161 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.460401722 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463395789 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.450795677 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450569271 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513654712 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44797433 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456545388 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.886666681 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44908493 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450799539 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463025784 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.459898756 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457963429 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.453855652 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449144234 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.456183519 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.445061667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.425799839 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466849114 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585114649 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014472864 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459141263 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.127727627 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.771628352 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.704495123 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462026702 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.431689346 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.454679421 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450643025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451514078 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451225147 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450763846 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012605314 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.45330256 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.744396911 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463512587 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.662120856 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661601926 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.449434117 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672750397 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471484582 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478264565 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.426362564 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451097838 seconds)
  done (took 1010.150684317 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.485818145 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.465462459 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.478240679 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.502495143 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.508721868 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.559926589 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.531145798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.47200915 seconds)
  done (took 21.318477499 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.459639796 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.454041976 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.457084452 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.457263829 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.450418695 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.952893025 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.460234433 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.456250589 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.46817982 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.448455895 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.454850624 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.160529835 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.475866555 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.459727759 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.451451424 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.456822371 seconds)
  done (took 33.844799504 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.679552616 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.697376175 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.684877515 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.472823573 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.482077766 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.449991179 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.762597275 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.482701764 seconds)
  done (took 28.027337687 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.461309261 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.462179858 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.462458715 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.4619774 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.462019638 seconds)
  done (took 8.625217625 seconds)
done (took 1286.009191616 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.457475028 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.458561502 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.460331233 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.459187747 seconds)
  done (took 7.150540607 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.429829492 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.430558643 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.430636677 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.442347883 seconds)
  done (took 10.048984884 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.193391284 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.131464373 seconds)
  done (took 5.640369763 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.971247072 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.966864555 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.967082391 seconds)
  done (took 7.224126342 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.750430508 seconds)
  done (took 3.070064056 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.390638743 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.451986163 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.15041554 seconds)
  done (took 8.310192839 seconds)
done (took 42.759905746 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.462816911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.696909449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.607043386 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.465156582 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.612000054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.606432796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.188882702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.46186001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.463929962 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.461705215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.464186248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.61315504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.169528827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.696245379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.171131718 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.697234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.612422158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.451479534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.456916312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.451084233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.191268274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.458439763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.451271845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.478256798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.614921427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.597634173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.450933114 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.698857427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.464316475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.45159254 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.695012522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.455896701 seconds)
  done (took 85.136470345 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.450990399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.451009364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.468745652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.450874209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.453741139 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.466053336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.451539542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.467136836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.45785935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.453709075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.45246851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.455321225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.455647611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.452276977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.453190315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.451229767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.452565314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.452339879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.453196116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.467629563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.452184616 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.452201905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.453007506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.472171816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.452249472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.469805772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.469837478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.470993881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.47932728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.453284439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.472149711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.470187954 seconds)
  done (took 80.005340508 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.455477486 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.454376751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.453679845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.461824241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.459048762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.455395735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.453335672 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.452297735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.454059826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.45485369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.466862866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.456567531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.456480781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.454956981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.456839185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.454677852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.458081925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.462541704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.454230252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.458496991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.455371534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.46136907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.454076399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.463777202 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.459986831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.456276197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.456096148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.470315208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.454559719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.458316408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.454753515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.456895732 seconds)
  done (took 79.958038081 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.692657532 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.470081272 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.4732425 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.464989703 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.47374701 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.470777697 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.467928938 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.702109179 seconds)
  done (took 15.537744784 seconds)
done (took 261.956134781 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.460175591 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.978355997 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.488370395 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.460470274 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.500449757 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.488546271 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.688772361 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.487738267 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.693464349 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.491608747 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.480897268 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.463186252 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.30560333 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.614951837 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.354482143 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.463786112 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.392915696 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.458259791 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.051779983 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.750532749 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.48603052 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.458252469 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.344856064 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.395619257 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.440681539 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.565908247 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.565756484 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.69230375 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.629328607 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.546161634 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.000383047 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.463725429 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.4634798 seconds)
  done (took 67.450586494 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.464664681 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.469716562 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.473605465 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.473084021 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.469384739 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.47378994 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.464608299 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.474381852 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.473526539 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.474462379 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.473377964 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.473241093 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.47161492 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.470171068 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.469899387 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.450927903 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.463781211 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.471970438 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.467566493 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.453410745 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.471241921 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.474354739 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.474540192 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.472587133 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.474639427 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.475265594 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.473143139 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.472574712 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.471139445 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.472197047 seconds)
  done (took 45.434049661 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.475597495 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.069682638 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.224563869 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.475393129 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.4678725 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.473011591 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.773118948 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.478376886 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.471236967 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.471601028 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.973630222 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.479148919 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.50304246 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.232557986 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.471114025 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.476840199 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.47690045 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.468983684 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.086472942 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.478437814 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.771722501 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.477855968 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.773211652 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.478197413 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.47274434 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.471317535 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.474826831 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.303525465 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.490547084 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.972417291 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.307622102 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.773687449 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.241276877 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.281265189 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.307887316 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.485160704 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.478526096 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.984172554 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.473724308 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.471199027 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.772551371 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.472006607 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.238823465 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.142434882 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.492067065 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.480848917 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.318607705 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.002200392 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.727669519 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.477115245 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.278191114 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.47383124 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.480420633 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.472643098 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.727758591 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.478929491 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.472359639 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.349661679 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.495008582 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.774951855 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.481925766 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.472412571 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.07817163 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.473880584 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.078076133 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.474545001 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.480743272 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.474640623 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.237934818 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.476308871 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.160491513 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.49279764 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.481267403 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.975893178 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.080741531 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.382144435 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.474623672 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.080304711 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.265714496 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.7966035 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.483857841 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.301038127 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.80192883 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.483469073 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.4842148 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.484843899 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.482879557 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.569103574 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.775657678 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.093266224 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.171418432 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.352425486 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.799598666 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.486953779 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.474644034 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.360250293 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.499524756 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.482960937 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.239888835 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.161779591 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.494380147 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.484136048 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.170677154 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.498640454 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.782073877 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.481795754 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.288131342 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.476923261 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.548925458 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.48437925 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.483485181 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.481700426 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.77797309 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.482081111 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.48536494 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.152574114 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.011946275 seconds)
  done (took 205.471206353 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.473163794 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.472114105 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.477530636 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.470637053 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.470260317 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.479585541 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.471395454 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.471105629 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.475093438 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.471107303 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.471296402 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.478648199 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.477913378 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.472112379 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.4730621 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.471199947 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.471317012 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.496721157 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.472789105 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.472244518 seconds)
  done (took 46.823434943 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.48556803 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.064549565 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.040670479 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.486817054 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.483385115 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.478954259 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.53582538 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.485237879 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.48368572 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.7925441 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.661426671 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.493091896 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.483504771 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.482809413 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.044920279 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.468545548 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.79310011 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.066906394 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.488158378 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.067191721 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.464903826 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.487054324 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.477043168 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.065834195 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.802618038 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.78702127 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.544913114 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.069898692 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.485237433 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.485122963 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.069028073 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.488714002 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.480213885 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.070927799 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.495880176 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.504673424 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.484422488 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.541365236 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.547922207 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.80775401 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.095886324 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.795024836 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.506378772 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.671363123 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.488241827 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.461918615 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.075895309 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492479815 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.464953382 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.48651682 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.492117794 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.056507471 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.487555516 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.055971305 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.490918476 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.491351302 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.0725986 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.057903559 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.057199423 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.669834705 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.487385121 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.788038961 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.491370159 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089159544 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.494537764 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.489217177 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.489637329 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.66579341 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.082692441 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.792919619 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.804355903 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.798346648 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.491293567 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.548643947 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.490512288 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.806159316 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.553688161 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.930396605 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.80226018 seconds)
  done (took 134.452670962 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.755142383 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.604072172 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.86957669 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.099722586 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.007988526 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.632701364 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.607173586 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.737317949 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.492152431 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.574555778 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.160940895 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.592098506 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.243342086 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.579513986 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.595395798 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.620711728 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.899449144 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.482656074 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.150303428 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.14004886 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.488716638 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.598493151 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.011455864 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.686177316 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.486168675 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.097414141 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.460633231 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.022170884 seconds)
  done (took 56.036278861 seconds)
done (took 556.992177873 seconds)
SAVING RESULT...
DONE!
