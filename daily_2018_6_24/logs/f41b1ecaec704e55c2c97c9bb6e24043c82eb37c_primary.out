cset: moving following pidspec: 6258
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.005765503 seconds)
loading group "string"... done (took 0.570455667 seconds)
loading group "linalg"... done (took 8.956881788 seconds)
loading group "parallel"... done (took 0.172589849 seconds)
loading group "find"... done (took 1.453379663 seconds)
loading group "tuple"... done (took 2.120013931 seconds)
loading group "dates"... done (took 1.397544753 seconds)
loading group "micro"... done (took 0.221871062 seconds)
loading group "io"... done (took 0.629599842 seconds)
loading group "scalar"... done (took 44.531147133 seconds)
loading group "sparse"... done (took 13.641373468 seconds)
loading group "broadcast"... done (took 1.096191916 seconds)
loading group "union"... done (took 12.845118257 seconds)
loading group "simd"... done (took 2.665574812 seconds)
loading group "random"... done (took 10.425715692 seconds)
loading group "problem"... done (took 1832.950804432 seconds)
loading group "array"... done (took 24.721167361 seconds)
loading group "misc"... done (took 1.086576613 seconds)
loading group "sort"... done (took 3.617768377 seconds)
loading group "collection"... done (took 18.118442356 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.610863863 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.116754571 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.16388863 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.338622366 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204241492 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14330962 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159760647 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.552019142 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.933524006 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205149594 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14109811 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.53216976 seconds)
done (took 5.789654089 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252395275 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.424705837 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112453813 seconds)
  done (took 1.157410415 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092611607 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172686832 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09217568 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106931178 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108323103 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107121704 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093895977 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11048394 seconds)
  done (took 1.415051943 seconds)
done (took 3.549861133 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.476224815 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.831888373 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.543278502 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.139443068 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157256732 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148385476 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.298359363 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.157045872 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.121690289 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085630226 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168006266 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.381821122 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.46381799 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.954823888 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.084380528 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12770088 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083177121 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.704225752 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081875761 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.135962661 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513076652 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11734651 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116017228 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.138459908 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18904219 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12735579 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159809209 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093590884 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.660381655 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101072608 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182178068 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096825331 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158323085 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.243096354 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09333143 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.095566034 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662147841 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.176113116 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.109594116 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098173339 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663318912 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079650835 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186930843 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.099499535 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106772753 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182336979 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113443901 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079180824 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101939339 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.091439373 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157720539 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.472687968 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10444692 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.143305028 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106072915 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.679324431 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098177175 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155549404 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137597113 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096185272 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095899088 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104204339 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151309753 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.108178327 seconds)
  done (took 19.314226842 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11536365 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13704626 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091179225 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14018949 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136192633 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094492289 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082470622 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093658688 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109156956 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184109979 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133198708 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139956452 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08975004 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082634986 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11630423 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247776985 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105365095 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120845964 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080933644 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105562631 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140243196 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096735148 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107886844 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108062296 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168754215 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204444734 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109605514 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123362591 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093002279 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09861868 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141661035 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160395065 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075318101 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094970184 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18305823 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119423373 seconds)
  done (took 5.071344211 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194997533 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.112875968 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.186448523 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.176090063 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143022677 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162860689 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116079608 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.266599535 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.172388407 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176310164 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112145844 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109406815 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07756174 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095146315 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077493328 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.622669269 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179531743 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151083411 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125630942 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102580709 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083258606 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375114196 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099843314 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082067839 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101890424 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072886004 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175005329 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102723679 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.260625718 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115783233 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086190513 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131903501 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205451028 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115954463 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129981084 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138693362 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10003515 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081233307 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.209151364 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106831211 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.091312093 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108181138 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131637256 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131359016 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096612907 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093612413 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.23564717 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080951301 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117549005 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.035537583 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196072587 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094037492 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097318341 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.346216065 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116969776 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084648799 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098082883 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128897237 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273664895 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130027715 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082480126 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0773722 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102970234 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093136847 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399016257 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091408343 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.866068703 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095999517 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155955894 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0988995 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105111349 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085600254 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101969182 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101874971 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09640784 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078594877 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0966039 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078748048 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100694995 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112783352 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085502076 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09550698 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081855323 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158859388 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083370747 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115422822 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100272462 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126017523 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097921099 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079241924 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128430691 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094013396 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08199022 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.142717338 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102456096 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100059755 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101425545 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142854416 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093133248 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.158114971 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094864549 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122411025 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08497715 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128733643 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120903077 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096544891 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085071526 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093680937 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079842533 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15930514 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07893461 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080166791 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100008949 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10967161 seconds)
  done (took 23.218605833 seconds)
done (took 48.227658588 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.457529919 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094973166 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111242076 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10868368 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106712427 seconds)
  done (took 1.576343093 seconds)
done (took 2.246491944 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32616376 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184762738 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100384703 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189770965 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085659438 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1980038 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160675771 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114756999 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.191248394 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097416869 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.171957366 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096158085 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086250045 seconds)
  done (took 2.701397157 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092627275 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117366706 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081242198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109473177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074911639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107795717 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09179167 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.133176337 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091566955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101054092 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07525371 seconds)
  done (took 1.746212163 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089532039 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11243913 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081018783 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105407937 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075414629 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088674551 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106328266 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114583785 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090541518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101600363 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075734313 seconds)
  done (took 1.712930143 seconds)
done (took 6.823953658 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.992096572 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.000412857 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118640749 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.163007739 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32950002 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.202090743 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.478487442 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12802798 seconds)
  done (took 10.2634693 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112779455 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093719127 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094849337 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098077205 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07926626 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096801324 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080555472 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09384325 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080267891 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096420057 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078436191 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09417584 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079209351 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09792134 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079589845 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099478163 seconds)
  done (took 2.186245982 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114781685 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115129804 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100406793 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104667344 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.082923895 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098959452 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085284052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099265542 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083433896 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100494743 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105541563 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089458298 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103714846 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083394202 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102346143 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090399633 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10072144 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101425732 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087836423 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103248978 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090430785 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101036557 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104220248 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089630284 seconds)
  done (took 3.115145671 seconds)
done (took 16.237874738 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165220568 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082854759 seconds)
  done (took 0.922988813 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099872316 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118622576 seconds)
  done (took 0.900154399 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104312772 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093986147 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131168875 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11292506 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082231623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09643579 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113145535 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098639025 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081637033 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098756239 seconds)
  done (took 1.695747618 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083242406 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098934178 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088801895 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118039014 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108645599 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083894497 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102363857 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085553777 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103653373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081109814 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105252324 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116627655 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088864887 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118516676 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.08734972 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104330307 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107495769 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085766556 seconds)
  done (took 2.449724264 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079907775 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081097746 seconds)
  done (took 0.845670943 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082460738 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093597956 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082729824 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098917163 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080248478 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095125459 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079750566 seconds)
  done (took 1.298421051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.496353751 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.25201397 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327160193 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.097781884 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150784255 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.364730434 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.131509148 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109477799 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109712825 seconds)
  done (took 2.768084663 seconds)
done (took 11.563194338 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090383815 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.185778058 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.535153248 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116040046 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078371756 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15655463 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.260825373 seconds)
done (took 2.107945149 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347546313 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120610597 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088931194 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080403509 seconds)
  done (took 1.31916948 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078526444 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099421351 seconds)
  done (took 0.868237419 seconds)
done (took 2.880787064 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077579821 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.126468736 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077072346 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091933281 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077689143 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.091753875 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075192588 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07691769 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091189658 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077151612 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.092048832 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.077562964 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092842997 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078121346 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089228013 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074898177 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076752681 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09056378 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07792926 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093307489 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076423546 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094950837 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076774559 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076238737 seconds)
  done (took 2.753904623 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.210126714 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09413618 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083240687 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099008391 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080904155 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100337979 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099950484 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079383499 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101581497 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081439552 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099587803 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083149473 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097657067 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083222858 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098710936 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098998131 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085885325 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09563028 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081880662 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099386935 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08541233 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096135525 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083546189 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10154247 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098888928 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083664372 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097521547 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08039731 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100879561 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083295234 seconds)
  done (took 3.557128667 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085948367 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073796599 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091015904 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086556517 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09096474 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078574724 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090771152 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076285626 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094507924 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076447987 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095322584 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077050486 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093364544 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078585655 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07818792 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09966137 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112588526 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077245415 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076800627 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093826734 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082654623 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093699329 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079722736 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093877515 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077269935 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093308418 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07819968 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07747324 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095451819 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077390308 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099532098 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085032954 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093908849 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090906855 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100610337 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076839066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102920301 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076139734 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092172898 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.075813505 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.091313335 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075839721 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.074770764 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102569518 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07834067 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09243043 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.075813143 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093017142 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075935986 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096988748 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078068464 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093807725 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079610473 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094975402 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08359885 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0770294 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096311041 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076523027 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095363236 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077072604 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09333569 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077399285 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099820897 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078043962 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118104403 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088794193 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093648903 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07995253 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098039102 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086220506 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095709947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096366736 seconds)
  done (took 6.982143191 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080700696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101475639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079769206 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095800935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075943672 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077590911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101634436 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093735115 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079806235 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113716537 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078903631 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095608126 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0802674 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09812106 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078835638 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096344612 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08837737 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09283719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078540933 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09808026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07962508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101205519 seconds)
  done (took 2.665818776 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217146095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101889407 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139316594 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110082299 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094974177 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109601834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100533645 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086491406 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101419082 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088121214 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105298621 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084814334 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114703244 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104593923 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087637283 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106874506 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101125948 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090362757 seconds)
  done (took 2.642610908 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091988695 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095465708 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105661396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097840483 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081222082 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099946858 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087312675 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113482686 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099056511 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080799072 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107273887 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083143761 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100189793 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081216447 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099513448 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081444589 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100126346 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081365241 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108114866 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103594081 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088277341 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108461644 seconds)
  done (took 2.796854793 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095757725 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096843182 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10854112 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098269698 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075473717 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097291874 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087706485 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098555115 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106289255 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082954357 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097732367 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079355318 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104398774 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081258581 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104133447 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081416453 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09945361 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082053211 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099239677 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076966321 seconds)
  done (took 2.554839834 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121422843 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112130838 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09626933 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12253769 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111362304 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095489531 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12329507 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111679362 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095947297 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12491249 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095239546 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112120471 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12216717 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103028075 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11186426 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124658376 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109166959 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125716716 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113871927 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098829563 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128828229 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11465523 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109805685 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114988669 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098344271 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118637949 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116022143 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104934337 seconds)
  done (took 3.843180035 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07911668 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07829963 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093793725 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078152719 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095992053 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078844393 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095535465 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078622416 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080622517 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095865392 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080650542 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097832407 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081242176 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097809975 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08153988 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096688203 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081321909 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078531754 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095774371 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079052646 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097987074 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081499772 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0977207 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079609456 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079145772 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098785801 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079517736 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096014483 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080979282 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095760346 seconds)
  done (took 3.318327442 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087119655 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102152148 seconds)
  done (took 0.894652616 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07733087 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112284462 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077430893 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10061322 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087329604 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097042295 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090047256 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101221815 seconds)
  done (took 1.449396425 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104179194 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116142133 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087584503 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109808747 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102373397 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118729754 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16840565 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088580678 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107226778 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08348459 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120693364 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081539042 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111603635 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10578281 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092748481 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114792454 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080750427 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110348614 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090536278 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101988322 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088244404 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116446536 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093143817 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108617012 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084739527 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111732217 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113612745 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.09455932 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105023006 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09545121 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107104302 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075599905 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102285609 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085756315 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094030956 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098242697 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11524285 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084669924 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.105761397 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084462483 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1065977 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091217667 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091126001 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102754413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094847824 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101256157 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085554608 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091342827 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080212534 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100666569 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076164475 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10050208 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074857849 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105930412 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089572705 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114887185 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082119199 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101399399 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083872959 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099788119 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086474541 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101077793 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106609148 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084195132 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106388022 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088872769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10461621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075455046 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090298117 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078272379 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105429113 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104722229 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108100583 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085667962 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102718036 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078309632 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102635171 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086700522 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104288541 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107515824 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084714839 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104736937 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090901846 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10049711 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084205586 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102763403 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082447498 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098896539 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080611428 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116837672 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082117725 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094943285 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081005085 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10703921 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085318324 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100332846 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080916965 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105878639 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075178405 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102096154 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086134103 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102943698 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092061352 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102933073 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101565167 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.08861024 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10879364 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085172792 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100385659 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077897666 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102955535 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.082729816 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105547641 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075003381 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101632456 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085917125 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102280333 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091078153 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099430223 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086007637 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108315583 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091164666 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100250772 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077071758 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101847011 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084829026 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106292445 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091414972 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099875174 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075751679 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092335079 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089395169 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10064398 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087148614 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102114913 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085420612 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091675424 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079050188 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10264408 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09004546 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100845564 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102792807 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090544802 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103908878 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083877971 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106692066 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083688352 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097245299 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089876754 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101185254 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075847258 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106048736 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084192188 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099634966 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084886009 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1059978 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084501472 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102482948 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08240323 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102048258 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085773573 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097474288 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085918152 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099248742 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100614253 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10183073 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075861343 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095425811 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086989561 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09903695 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08415349 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097670568 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085235951 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10358425 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078264662 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10040104 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083908706 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114627328 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092891981 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103495943 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104540759 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092066376 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101580898 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086894776 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101017624 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086513787 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102595863 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089748153 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104301358 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08615053 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.1015244 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076931618 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10405421 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091580198 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09737513 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078745743 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09703166 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085287066 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108557781 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08565937 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103013163 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082513039 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103771411 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089420567 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101393927 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084190634 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097885217 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085685325 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106815685 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086903507 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103476073 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.0921585 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103700502 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076224713 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107041153 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082970146 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10666121 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07681421 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098598866 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081451094 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104465656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084320301 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101330697 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074759743 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107305879 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091536145 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102995397 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08125479 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101687149 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09416825 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10131846 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105124146 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085908624 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105296484 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099684227 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098040171 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085593772 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110520195 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086292359 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092754071 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089444898 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100497998 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080596513 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101175068 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082871874 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103303013 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087719398 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103782597 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074654866 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.101572687 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083604159 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098940324 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077066144 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108069612 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086024371 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102324747 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094663272 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104071647 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085688866 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104765783 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084868185 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104495347 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086269184 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103357216 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105339223 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083900124 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081459023 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10360753 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081584706 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096624006 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.083676644 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102639193 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085771783 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105643997 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084180444 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108530548 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102981687 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08728225 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120373002 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099693994 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082157346 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103899865 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088432066 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102575943 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085442844 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093458472 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09176074 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102213857 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091931497 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101920143 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078524237 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102679089 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08559773 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103459135 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08737799 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10369265 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084181305 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101343259 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085657026 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112170573 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082110186 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109690574 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087445894 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104846572 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085392643 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103539956 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083300238 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098394288 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085763291 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103465549 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086481403 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103154523 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087305705 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103263096 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101568285 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084282086 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104358592 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087487263 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10502737 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076426159 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081134741 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09942537 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084944489 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107700022 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10427474 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084683154 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08395945 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105839552 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083825488 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095787995 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090262692 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105901961 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086961138 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112252876 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098455809 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086301724 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113170137 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075974231 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099816264 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080351764 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099127653 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091974184 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103821183 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09193895 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104066783 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081418997 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095233999 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08823605 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09980622 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076518697 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096537419 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089244952 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101169104 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084742681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086272664 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106416481 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104640752 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089758571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101502555 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086029527 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104224075 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078469081 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099787978 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082222428 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102845315 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087409466 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099480568 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078891312 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084826236 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103744749 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103733058 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085335146 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084293985 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108935993 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102582777 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086640485 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107852931 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077025649 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103519317 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085779143 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102638721 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082327948 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104157958 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088276895 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104677485 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090853493 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103208784 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088782882 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102587775 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080193026 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103144762 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086763798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103347572 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082504655 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104195879 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093160953 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096804252 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086719007 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103784618 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083765481 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104709592 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087460929 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104407045 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090305166 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104561521 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086515173 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107318094 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085295937 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104853551 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0867732 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102855664 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090721366 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100314947 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109432559 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087980141 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104383729 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085906931 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099305124 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086218891 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084486417 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102627595 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109593199 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087606887 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099004162 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082250874 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079422184 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104560948 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107838879 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093049513 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103963711 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08806702 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095013564 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079225162 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104874898 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083766569 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102195332 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089027201 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108158843 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087740448 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101460535 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085635001 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109398125 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091472184 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107315119 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082771498 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106052612 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087257435 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104372222 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084272304 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103242795 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086516857 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.105870173 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084579413 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101384374 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111909484 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092327453 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105912815 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085884555 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105900404 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086433978 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094539707 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088109954 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103293506 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089250506 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104345192 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085900801 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114260504 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081450842 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103876802 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090422866 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103084399 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091148972 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094911092 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086727067 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106857974 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105063923 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078003475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082088762 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101944858 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086996467 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100463322 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0774359 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114304311 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108499183 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086999679 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102282739 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085563569 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.094260128 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078669516 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08219236 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107388652 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084624857 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112799935 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099527964 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083436981 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07725473 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104084276 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086668033 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107142766 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079060039 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096655965 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082501415 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104708049 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110796249 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085079487 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085255008 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106650904 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103875952 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081163033 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108719969 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079324059 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105666225 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098338708 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104855669 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089312875 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106876809 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093018719 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105408888 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078126184 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105446657 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087270028 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105665081 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086967152 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107290247 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120763184 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087904056 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100264414 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086092063 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104161225 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083526863 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112733178 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089087626 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105954042 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089987704 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103099281 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089742992 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11188384 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088946316 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.1061633 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086724814 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10429312 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086473133 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102664238 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085306918 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107364853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088019413 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104878013 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088996941 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101125908 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114800296 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094254713 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106593448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079676458 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.099993341 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083743628 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078271508 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.1068638 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080931343 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103686999 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084346369 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102643925 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088784283 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107388464 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086149255 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107184212 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085912128 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094005032 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090512511 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105272069 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088112485 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098167519 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087464554 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108239961 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090596648 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109704013 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101998449 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087744581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103756567 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089997937 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095348831 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090111976 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102849165 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085593567 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100612865 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087318598 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105631543 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089330266 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106287103 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089168303 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10505403 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092272339 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108132053 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080423066 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097390632 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090361616 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097930923 seconds)
  done (took 57.436313163 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146786062 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08568067 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09625722 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079001493 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121303437 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07921677 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096112504 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079693881 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096747099 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09164648 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097337646 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077545187 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118213773 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123190071 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121003568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110025758 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078335767 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09663366 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078870958 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096582222 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099066378 seconds)
  done (took 2.821783208 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102815562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114790426 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112407997 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099140269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107838151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11327462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093875012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11463854 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.117164951 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107535301 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099760671 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113735838 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.108774196 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.091417507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108720498 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110639781 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100353989 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107518648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113843854 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094693197 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111180694 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11259748 seconds)
  done (took 3.112608838 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091389981 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085344475 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110007157 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080320933 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10449473 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080722533 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109234424 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083330122 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108767735 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087084377 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.102404085 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087160491 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110325566 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080486033 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.103028618 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083146852 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108601408 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086591424 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10594948 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081902614 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.12442612 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098394954 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083111713 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.08357528 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114453505 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086689051 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.105513137 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085664394 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101831372 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086761566 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100719587 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088242849 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108378278 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084155268 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103187181 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08589205 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104247368 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.081345786 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101911902 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09015909 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09997678 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087818047 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111888945 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.083744621 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101568877 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08858366 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10474912 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.080965328 seconds)
  done (took 5.3233634 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120350576 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154273314 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091308138 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.151543415 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124074636 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115045689 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091186753 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144786635 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103365468 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086631873 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121853635 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118913442 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088420103 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113730938 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090428118 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106308713 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107871999 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091084216 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114898273 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086802217 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113563294 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108545915 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101370652 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117340246 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109699875 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086240126 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105398527 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.095662194 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117133868 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111554286 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091807013 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114722497 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124710684 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110962921 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09068503 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107619709 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103571867 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106276267 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107211678 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085546812 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107147768 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096724925 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109285656 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121863094 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088040908 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107283989 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090219717 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106384202 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120662337 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093141829 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114357233 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118160116 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092396375 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106136042 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09290511 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123148722 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106319964 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085995556 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10947745 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115859622 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087800949 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114153505 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103809164 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110561812 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113395178 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117447089 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.090251673 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109030748 seconds)
  done (took 8.184690201 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09467657 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.129485782 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121692008 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102509176 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111199886 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110216226 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093576095 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110273852 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092642815 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118091524 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111187242 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158884459 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086444848 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115655421 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092312621 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11088719 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109414299 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093180311 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109923196 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091537281 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110677009 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121505563 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091954278 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121458292 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122463707 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103181909 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093093989 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111043877 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101785748 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110778456 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123489409 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109968984 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092892008 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120633576 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123617 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092133666 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101091989 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09251666 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112032455 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110394246 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08714428 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121875023 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092257521 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105422752 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109773187 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093763773 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121502564 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123365435 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115882097 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100573417 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111494779 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121047587 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092990761 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110640267 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121499313 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129484406 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103458952 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121678539 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111359516 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102429141 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122172548 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129902237 seconds)
  done (took 7.546380918 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084610566 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082818042 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100332055 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081089148 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102088157 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081636044 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10239114 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084631146 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082190893 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102971557 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084130378 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099640946 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081815788 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101404663 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082661515 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098832586 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081907705 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080850754 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102570459 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081212227 seconds)
  done (took 2.566754258 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092746033 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122615752 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084940706 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109927731 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086666493 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111047994 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103711103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087877511 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103708081 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0879029 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114441649 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096694745 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10493 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109655955 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096943748 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109675886 seconds)
  done (took 2.395130502 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106477772 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115595952 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128068595 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089696186 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.100790632 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092187393 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102872858 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.08093529 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099393069 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092854516 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109065627 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095269084 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103217875 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083130736 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10344148 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09059451 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098734672 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08878339 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102964204 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10929576 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109252356 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104864228 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08652316 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10403629 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088006039 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.107974226 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091966567 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103313987 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083593988 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10315682 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087398224 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111895998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080647286 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108923466 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.082132087 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.101076824 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.083327525 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104176764 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089725355 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103881258 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08222958 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106500567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083677601 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10547556 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079679776 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104616316 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079725968 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111006056 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085231102 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107092566 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101655858 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09314947 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109914964 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096118708 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112399899 seconds)
  done (took 6.159039558 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098963026 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107333001 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090070223 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100855869 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088239336 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.11257427 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089239507 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105916337 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087022136 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10124652 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087892578 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107416541 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086599049 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107442198 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086919919 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108438029 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079598696 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105126882 seconds)
  done (took 2.525727092 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090949868 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102388462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092801361 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.103626268 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084964565 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085804403 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100176334 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08195047 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101943053 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08414796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10351952 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0857587 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101519781 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08708684 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103930117 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083811626 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105274539 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08328212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103298943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080439833 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105422251 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082817746 seconds)
  done (took 2.830911573 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103069376 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136108802 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098964672 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146353618 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.108963917 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088556144 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118228215 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088883215 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.126836246 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107002765 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.088558848 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.106217027 seconds)
  done (took 2.097859651 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111169811 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141968906 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08261769 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107015145 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115645439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090426225 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108260038 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089603086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1212447 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120892544 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089257427 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120953186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120435794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118970631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096906907 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116821821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107717576 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089814657 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104521268 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129126649 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090771464 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120700317 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107422374 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091083174 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108303269 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118981847 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101900959 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121555127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108211635 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101864673 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117589077 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108759073 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101176203 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12295306 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107007208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1201718 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090374164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129759524 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115531804 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100208288 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107351955 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116096717 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101325338 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115928475 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120118795 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089697668 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116078783 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109461777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09014139 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135818276 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117382756 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119633193 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097415415 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122663658 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120193448 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135045721 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122707462 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119987037 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098125757 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121571506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119834188 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116339853 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101653549 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12218612 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116341691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120155258 seconds)
  done (took 8.118802103 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125436849 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10390319 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089648782 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123732149 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120627801 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108930613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090178666 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109475723 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090190689 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105749235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15489082 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10895699 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101603549 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119808393 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10859992 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090729526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109211675 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119841101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08755817 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13665504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108938374 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119557896 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101256425 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120282309 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122308033 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116150588 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09057721 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108710677 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09029696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109138384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114939103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090426764 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119802983 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101560582 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100915986 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109628712 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089414298 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117876585 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109645986 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097244738 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121072034 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130917046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108438334 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090772038 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122719295 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109124452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090983625 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105730534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090075121 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106694205 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122707818 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122076718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102791225 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120400462 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110130589 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090502334 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110363376 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109920727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091443735 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11673104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120164195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091334562 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136393047 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109599942 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089550204 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12075564 seconds)
  done (took 7.968999417 seconds)
done (took 153.234343732 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103220217 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139902223 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100772749 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168128394 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084424515 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14033828 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118371213 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119926408 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08532201 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105047998 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085545017 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107544533 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151756033 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104448836 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085831505 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107523146 seconds)
  done (took 2.587410217 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.178860178 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.279677113 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103944225 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109222909 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091471322 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107755209 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089058925 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111663531 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086337267 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.118186739 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105943107 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088943452 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.117146422 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088468825 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.105337021 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087740685 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117163085 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087129968 seconds)
  done (took 2.861854415 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109986883 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155198001 seconds)
  done (took 1.056201887 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122281966 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182788919 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297233983 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15920855 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.113903298 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127140507 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160050402 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12344134 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190799938 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125416396 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105913188 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112335323 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134044981 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097052865 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115130711 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091399445 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137415838 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11248276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095179314 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111553095 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.113635127 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113414824 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115894354 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094366289 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180205091 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125174875 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091869373 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113790476 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11213334 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094763886 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117156591 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124151033 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.105935689 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185489651 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098092086 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180974024 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100095029 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112011303 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093324781 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111780395 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114935181 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097012892 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126988452 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091667114 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11474353 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119322818 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093910307 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113730368 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099286189 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122247136 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119914737 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097098349 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.180796047 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100775661 seconds)
  done (took 7.477674469 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.830665674 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1563342 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11151584 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.92570912 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142781741 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125814807 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.82139957 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112750665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.266787101 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.05225606 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130438789 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124955842 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226734857 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255079395 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148846631 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334577867 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.704144157 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125417551 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119713117 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153541372 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118257905 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138786662 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110504226 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439115275 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112655615 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089864086 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11676156 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122944925 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163349499 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089622711 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116150285 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182100195 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288075435 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178864608 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112613137 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088709763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111651175 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169769792 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270410382 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215313194 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176188166 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087825674 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109262541 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102181145 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131141077 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086103721 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185274605 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175010583 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173826041 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115390112 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124007647 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099202806 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12152069 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163003219 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108686845 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.331974777 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336801087 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090076169 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118756309 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108398601 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267602926 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110588995 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200816895 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13739964 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210723229 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08891202 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836079148 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167665421 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110241408 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118101256 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098493656 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116219938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101353802 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170166862 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384410641 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125239473 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113701825 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089738754 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244913667 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090811958 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109653272 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166358464 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090576611 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119762137 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126220757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122019501 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173276711 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251824957 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125636368 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097192259 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116942167 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122050643 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091593683 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21922839 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215228652 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178237335 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220731861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122440473 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.167235391 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167888422 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122060267 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173845369 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118010815 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107957965 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123785787 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211878032 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143299971 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090355404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115668784 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116283407 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146099164 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094335436 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116811962 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172360912 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462458324 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187337167 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087280683 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114397018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09896164 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163624004 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117829208 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264608419 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09829104 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190445401 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096635025 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107890956 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098812114 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.186436861 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104581163 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119016186 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123273802 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098732721 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272395195 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.201567412 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126333652 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234449684 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180583033 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100026861 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195853957 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098705681 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193170492 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101000441 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12295721 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090844844 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831006691 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125080157 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118002538 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097199279 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198288155 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110765707 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093486842 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08901731 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109479051 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843215117 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093544805 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108255321 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093284411 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120821891 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098376508 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117924974 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094340773 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184597813 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231195132 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102798811 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118743603 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.089963298 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183289726 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092583386 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.111234133 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091250861 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11282941 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099254439 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115254841 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092555931 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196509909 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161779436 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218317409 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.526721916 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111170185 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090655173 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226991109 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109412027 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282411504 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118252493 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22251311 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169788546 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.107532087 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333497822 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172907203 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.199052124 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094140581 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193053713 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088719513 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116660161 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164423612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089389519 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119048454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159614554 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127584895 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124517215 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.132939323 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111681648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236217206 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108803682 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172593851 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112703405 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103555787 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308760004 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110723821 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112570509 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184687337 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095609346 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111063432 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.624858687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111195477 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102131488 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121226849 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221219698 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16819792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11933298 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098068466 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125095293 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164394953 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.237713248 seconds)
  done (took 44.618887545 seconds)
done (took 59.38844434 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301924644 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264991581 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302371446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196514809 seconds)
  done (took 1.955957663 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180220637 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154451178 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127346493 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111229042 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156623944 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088604484 seconds)
  done (took 1.635901471 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.477799239 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37096229 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.339422724 seconds)
  done (took 2.007258158 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.26292519 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283208521 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358121826 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.443237808 seconds)
  done (took 2.269613492 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206310524 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125962918 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102373937 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.140639544 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.172434216 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.178324896 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144217655 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152477708 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130612691 seconds)
  done (took 2.218538465 seconds)
done (took 10.906736323 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.16060883 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.231130386 seconds)
    (3/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.291179331 seconds)
    (4/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.223012912 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.160695419 seconds)
    (6/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.236201942 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.251863118 seconds)
    (8/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.266222275 seconds)
    (9/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.212092106 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.167123397 seconds)
    (11/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.14589971 seconds)
    (12/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.270873155 seconds)
    (13/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.181253052 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092323374 seconds)
    (15/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115348666 seconds)
    (16/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.204357901 seconds)
    (17/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.086924059 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.152412947 seconds)
    (19/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.126442867 seconds)
    (20/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109679412 seconds)
    (21/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117114676 seconds)
    (22/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.260800481 seconds)
    (23/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203703124 seconds)
    (24/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092691025 seconds)
    (25/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.24168252 seconds)
    (26/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125777456 seconds)
    (27/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.218642083 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.15947281 seconds)
    (29/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.191007993 seconds)
    (30/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.141936568 seconds)
    (31/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.156387549 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093991448 seconds)
    (33/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.242710533 seconds)
    (34/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198054769 seconds)
    (35/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.166294818 seconds)
    (36/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.217038075 seconds)
    (37/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114227589 seconds)
    (38/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.143884361 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.119594606 seconds)
    (40/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.234637811 seconds)
    (41/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.162079139 seconds)
    (42/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180361159 seconds)
    (43/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.19787735 seconds)
    (44/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076207407 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113517924 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.125084507 seconds)
    (47/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.178200302 seconds)
    (48/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.098789903 seconds)
    (49/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.199501734 seconds)
    (50/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.221202497 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.128843152 seconds)
    (52/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.192074687 seconds)
    (53/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.124655752 seconds)
    (54/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.137004896 seconds)
    (55/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123873633 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.143665213 seconds)
    (57/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.141228437 seconds)
    (58/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.211247512 seconds)
    (59/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.193648304 seconds)
    (60/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12818938 seconds)
    (61/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.077330504 seconds)
    (62/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.112781778 seconds)
    (63/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103049751 seconds)
    (64/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.188884113 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.142071714 seconds)
    (66/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095516235 seconds)
    (67/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110930622 seconds)
    (68/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.143587364 seconds)
    (69/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.107054836 seconds)
    (70/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.154249187 seconds)
    (71/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190756305 seconds)
    (72/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.191031736 seconds)
    (73/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094248001 seconds)
    (74/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077012386 seconds)
    (75/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132659464 seconds)
    (76/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117385571 seconds)
    (77/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107657494 seconds)
    (78/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.165404125 seconds)
    (79/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092145233 seconds)
    (80/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098516341 seconds)
    (81/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077142275 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117799915 seconds)
    (83/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077569663 seconds)
    (84/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.097609185 seconds)
    (85/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.148415864 seconds)
    (86/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117536836 seconds)
    (87/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077438915 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124002152 seconds)
    (89/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076992722 seconds)
    (90/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136446736 seconds)
    (91/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.187896725 seconds)
    (92/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077698426 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11674498 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095227372 seconds)
    (95/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21471103 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.118104269 seconds)
    (97/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093763083 seconds)
    (98/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.098531297 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102427802 seconds)
    (100/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118223803 seconds)
    (101/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.076331006 seconds)
    (102/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129576883 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094359642 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124518601 seconds)
    (105/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144352029 seconds)
    (106/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106553248 seconds)
    (107/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112299618 seconds)
    (108/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10721369 seconds)
    (109/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108011245 seconds)
    (110/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.155953757 seconds)
    (111/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168935807 seconds)
    (112/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11459247 seconds)
    (113/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077597456 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117790802 seconds)
    (115/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.154922462 seconds)
    (116/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.077197767 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089414793 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.118449108 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092531503 seconds)
    (120/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.099919105 seconds)
    (121/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076441042 seconds)
    (122/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.128338279 seconds)
    (123/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.124686751 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104735502 seconds)
    (125/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125843494 seconds)
    (126/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.192892048 seconds)
    (127/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.118942253 seconds)
    (128/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.098358406 seconds)
    (129/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.113961986 seconds)
    (130/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.146353309 seconds)
    (131/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108277361 seconds)
    (132/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.203911396 seconds)
    (133/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.098368857 seconds)
    (134/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096543221 seconds)
    (135/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.107524664 seconds)
    (136/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140499283 seconds)
    (137/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11835631 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095381306 seconds)
    (139/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116580013 seconds)
    (140/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076162439 seconds)
    (141/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.099173125 seconds)
    (142/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095234131 seconds)
    (143/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.098802447 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09397466 seconds)
    (145/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.162938838 seconds)
    (146/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077636996 seconds)
    (147/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.1880208 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131113665 seconds)
    (149/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078264311 seconds)
    (150/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.077186226 seconds)
    (151/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114192599 seconds)
    (152/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.085610789 seconds)
    (153/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.097682402 seconds)
    (154/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095437213 seconds)
    (155/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.131374714 seconds)
    (156/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.190219555 seconds)
    (157/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.077814392 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127096339 seconds)
    (159/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.077450517 seconds)
    (160/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.127585338 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.104127873 seconds)
    (162/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.117992951 seconds)
    (163/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.122104655 seconds)
    (164/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.115994404 seconds)
    (165/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.07766968 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113335398 seconds)
    (167/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094080481 seconds)
    (168/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113717786 seconds)
    (169/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078545609 seconds)
    (170/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121455087 seconds)
    (171/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093422059 seconds)
    (172/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.099570998 seconds)
    (173/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092819522 seconds)
    (174/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.098137192 seconds)
    (175/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.20053803 seconds)
    (176/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077930631 seconds)
    (177/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076705185 seconds)
    (178/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.106846944 seconds)
    (179/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090415048 seconds)
    (180/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.098429313 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096664413 seconds)
    (182/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.098855139 seconds)
    (183/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.104237422 seconds)
    (184/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117448888 seconds)
    (185/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090266648 seconds)
    (186/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.09777163 seconds)
    (187/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.078948653 seconds)
    (188/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116358577 seconds)
    (189/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093251441 seconds)
    (190/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117541188 seconds)
    (191/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078504167 seconds)
    (192/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135876267 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.096687695 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126257621 seconds)
    (195/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.079174266 seconds)
    (196/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114823006 seconds)
    (197/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092904351 seconds)
    (198/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121067649 seconds)
    (199/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.078302227 seconds)
    (200/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.098731445 seconds)
    (201/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.077950296 seconds)
    (202/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.130339695 seconds)
    (203/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.11748615 seconds)
    (204/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11745577 seconds)
    (205/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09107023 seconds)
    (206/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126073205 seconds)
    (207/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077886839 seconds)
    (208/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.106827259 seconds)
    (209/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101460796 seconds)
    (210/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115158305 seconds)
    (211/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.087121412 seconds)
    (212/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077512939 seconds)
    (213/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138037112 seconds)
    (214/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132963637 seconds)
    (215/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.077498109 seconds)
    (216/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085621293 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118616797 seconds)
    (218/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077851235 seconds)
    (219/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100376123 seconds)
    (220/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.077083336 seconds)
    (221/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.140465361 seconds)
    (222/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092204348 seconds)
    (223/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112721309 seconds)
    (224/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077678884 seconds)
  done (took 29.66266021 seconds)
done (took 30.486257478 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.391731468 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128770277 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123118868 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10040325 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141867437 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103326166 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123771868 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.103276675 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122647802 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090960734 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.113933615 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122973365 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101577523 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.140221878 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102208644 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115178946 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093209758 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123757568 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10055676 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125240691 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142662279 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094073822 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121072233 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092547118 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142448928 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09390926 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122879125 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100884248 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121923165 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091633789 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124194945 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114096947 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10368336 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125626047 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09261588 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11563022 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091905886 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.104916914 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092865594 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117153791 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100064311 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115419727 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103002096 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11620988 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095458127 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11420707 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091230756 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125726924 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090697771 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124682406 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093376492 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128312999 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112302947 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091552156 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113308288 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.093922906 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124645033 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092420646 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123694154 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092207279 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115002997 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092393356 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117443139 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092044453 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115818176 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094229107 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115528735 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094829346 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112815428 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094754192 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112870516 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094378642 seconds)
done (took 9.032673941 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098474418 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169183165 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144122035 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.123119585 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.142536254 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128892017 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104969773 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.138834066 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.123327531 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.115963146 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141620311 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135351603 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129027029 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121483385 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.128437804 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096275639 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121031472 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104580527 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149044011 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137805987 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144904682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.099747642 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143298017 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135350091 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100028949 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140331566 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.100471916 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118975072 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099093794 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138469373 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.138267405 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.099296429 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.120577081 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111187319 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128120674 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119930429 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.107148561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118785537 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.096993801 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.119036308 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130387711 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.111596383 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118290295 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.10700908 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118437597 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.101532525 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122281468 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120207351 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10173473 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115439458 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10102531 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141707542 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.136605652 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.100606739 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119902178 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100906276 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120735182 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.100343942 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.123889989 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121269233 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.098035996 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.119745729 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100836541 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.138091257 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.121171853 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099604485 seconds)
  done (took 8.783305774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115667376 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152605296 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129755109 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107849403 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.124968619 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089741406 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111447279 seconds)
  done (took 1.704373093 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091998184 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142373451 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123704665 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14678754 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13538387 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127065556 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131621295 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090866889 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137691202 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.122996148 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119741922 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167685695 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114437367 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103368111 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148690834 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.112841391 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126331843 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.113331283 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099223122 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145712588 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118748643 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114325585 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.127672306 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092126144 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135687633 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09275082 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.181365074 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126235332 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091188149 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120358281 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096739728 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205751638 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114118826 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124216002 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090038038 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141883373 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.112398289 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120229333 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139589845 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096214309 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136094291 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09798384 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121460347 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119072654 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099002201 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12893472 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.103390118 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.122592584 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097283443 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142711473 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.125252072 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11409358 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114778478 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096224799 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124428349 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098488836 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128586825 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09667842 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143295146 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121805244 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117918726 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141205714 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134934602 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11854096 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1313217 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.113581763 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.136504079 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119973628 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099658656 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121573677 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118462886 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118478861 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.124152143 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107565946 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122763656 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119848385 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142041633 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096274221 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127945 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095186565 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116966666 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091679533 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.132933442 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095155913 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117291193 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131016352 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103751683 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119443567 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095929437 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.135738605 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118158635 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.104280305 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124687901 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096212221 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129720886 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14173018 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.102513706 seconds)
  done (took 12.511945128 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09425135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093327084 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12174403 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115679128 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093871366 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093800957 seconds)
  done (took 1.496771897 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123853704 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121417755 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109403256 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124968595 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.175146232 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.14139452 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.121120226 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124467427 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138337855 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109646857 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.142457214 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.145134522 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.11916992 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125613205 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.121073415 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.125248307 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143929814 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097306888 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131633805 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097368969 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131773555 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126330663 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097990368 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138477651 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.103006569 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.125371135 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101419823 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13297812 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130518469 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103038777 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126163862 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.100933238 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12289725 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125094355 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.120889561 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.122917286 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118398167 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.104958085 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123304811 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.102446865 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143103275 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097582415 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131734149 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127885077 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102437121 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122903179 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126695813 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102433792 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143371089 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.103391911 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127896267 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12445947 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102686836 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127360939 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.099629524 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125134801 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.127791938 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121748274 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126904793 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123005565 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.099331908 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125050089 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.102885472 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128235602 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.09866152 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128266562 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122169534 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101539475 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120676443 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101333774 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128318234 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121466343 seconds)
  done (took 9.569539003 seconds)
done (took 34.934199502 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.073600744 seconds)
  done (took 1.950592383 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.87036529 seconds)
  done (took 1.749840584 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.336728106 seconds)
  done (took 17.257576719 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50435972 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.591988274 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.956013942 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164574516 seconds)
  done (took 3.099867274 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941846378 seconds)
  done (took 1.841800751 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.311677303 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260981366 seconds)
  done (took 1.46102644 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.802758444 seconds)
  done (took 1.697550038 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.497381189 seconds)
  done (took 2.39174537 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348519157 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.20021441 seconds)
  done (took 1.450801911 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.581172535 seconds)
  done (took 1.477793155 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.485649855 seconds)
  done (took 15.386375873 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232449219 seconds)
  done (took 1.142866378 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302705967 seconds)
  done (took 1.202077675 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.407890778 seconds)
  done (took 4.309716048 seconds)
done (took 57.303558373 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104135739 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128872557 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106964368 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126409435 seconds)
  done (took 1.360385805 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106861155 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122327595 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104052199 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124629627 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108822111 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.123946621 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099622002 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130848475 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100820993 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126568343 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122946957 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101518989 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124680248 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099257535 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122097056 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10185291 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127490802 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100236851 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123802763 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100691591 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123853182 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.124281766 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103077347 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12276622 seconds)
  done (took 3.647582323 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103422545 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097331359 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.122341583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096600246 seconds)
  done (took 1.324893598 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109542066 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138258672 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114269469 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131934959 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.137995742 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115196343 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121118008 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098423635 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.12235224 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107697432 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.121557193 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117052331 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138991636 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116857252 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.11057336 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113459533 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093730211 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137885483 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.107820037 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.132523144 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096529494 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13083632 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104130233 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134837238 seconds)
  done (took 3.763561349 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172439014 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.133547526 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.143981991 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168153815 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122259835 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.119306492 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121480544 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128108254 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.124177105 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.096675013 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.119607262 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.151031498 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126158932 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120945364 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096702678 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.125263283 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103711861 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125244818 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09819531 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.134430074 seconds)
  done (took 3.442645786 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104289575 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119116163 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093909102 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118980361 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104012069 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12272504 seconds)
  done (took 1.575060903 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093986443 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091295399 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116400927 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091393729 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121481962 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092176066 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.11345136 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092608879 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09239492 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117147214 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091709312 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114830054 seconds)
  done (took 2.136429979 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.21813632 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120251305 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120884865 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.098210692 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124475138 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09687781 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135467726 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095923924 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.174623776 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.120956443 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111034296 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.171864665 seconds)
  done (took 2.499646075 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211609064 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101454299 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273846303 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370581164 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160434781 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16948553 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272535332 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169965263 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.188561911 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139422545 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207916191 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159538673 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132392402 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182054672 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144055964 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.186817111 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176749201 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202486305 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150918527 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240034385 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167125364 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168136409 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192323898 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129675607 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141214226 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160031172 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120102723 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106799547 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174814842 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170956858 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174550409 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149855787 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140565221 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200795431 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238428699 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179361788 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301260326 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136100777 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191251138 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194838972 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277378158 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14407597 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197343999 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158086265 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108894114 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206183983 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134125816 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205827698 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111259324 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144260144 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185470487 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178653828 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.183732224 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141417887 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298147026 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148288142 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148519718 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183561354 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191187096 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201406667 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169797788 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126217042 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188625631 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192619 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183248613 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.149565255 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168824853 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128639817 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179399254 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206240052 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179204287 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16882361 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.2099184 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110859011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165946227 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205381776 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131582992 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182205029 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163453684 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123848867 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127590386 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140513018 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131042699 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187697598 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101635774 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2141476 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138593183 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.290293872 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232730361 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135241542 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164865945 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165991311 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16918053 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149941634 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.120991449 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148918732 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148412241 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161355721 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13472009 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159989544 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148582361 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104320597 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155336017 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126188727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161489941 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112146045 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169759268 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167588008 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131518393 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167116266 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127058271 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159403811 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171852398 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19934066 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136468106 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136069991 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20588572 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160908752 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.113700509 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213127987 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197380742 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174767912 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115364346 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194358754 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198258347 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119352338 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224785681 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118897048 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136373394 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.153884311 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161530016 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158755216 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.132517471 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133109107 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154246458 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204092671 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.131179147 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113921928 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176351533 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130485328 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130214196 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120845186 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138691043 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144828545 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152572864 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.116260114 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157126112 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162522934 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156187713 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160306411 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145946537 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194791416 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135542743 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.137867752 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152189846 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121222148 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.182902705 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196996579 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13193015 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190556097 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171130175 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19896399 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165938855 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134587932 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184156221 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106828771 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.123184287 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168606603 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163149751 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165415888 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193878742 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195882403 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168928446 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155142353 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151953052 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169694333 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186883872 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159309027 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.148845412 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164601068 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169303005 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099586474 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127042156 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.103331711 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14319678 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134442598 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10974082 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207906309 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166088953 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190035471 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164224836 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142194855 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193049092 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103245584 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16708299 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.173757584 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142609392 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195573523 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193455376 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170002291 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146563458 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173510241 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096575335 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129019515 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135548081 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169707773 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110351719 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13825478 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146794087 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195654774 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177603733 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153593008 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205134132 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170040866 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230375593 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099195065 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167738579 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182830123 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160749022 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161557789 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135732095 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164676327 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190624653 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147860812 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198012883 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16619356 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172336585 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202297373 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.160580186 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134339782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15194244 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171084951 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116731783 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1740869 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149996066 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13855404 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15643635 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.114049355 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12877244 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182617985 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147356741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181738888 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.169500729 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175511332 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130652123 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146649553 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139559687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147631532 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.121455479 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172915353 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198466872 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146857812 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161483571 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187256937 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107602591 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.337144099 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201845452 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187262667 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14075032 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145605451 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139145366 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172952796 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166954533 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185000813 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146978293 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184686564 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16282531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145769972 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112052534 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150900477 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15344859 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.154947879 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109166886 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155819929 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146321815 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185874945 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148670156 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162143287 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167020751 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125251727 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158201962 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144677835 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213293796 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161976605 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180633252 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160309441 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178660875 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191044365 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127968252 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10582566 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130678308 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186111535 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110157742 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163140909 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186976881 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22494248 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162188692 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172150929 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114785954 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127521989 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162469343 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150191847 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200851772 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145142784 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112495296 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228950657 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.153245515 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109044009 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168413069 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282668742 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147134247 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185171625 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.124144512 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275985378 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1052185 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135464681 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17293819 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173590375 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108204112 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186196738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169180453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148330692 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173202286 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115416688 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218000492 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211654281 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174243056 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178068437 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148064539 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161138307 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165611484 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18898955 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147053348 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121851258 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166950979 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196065053 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19619935 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.136108189 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166494406 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165709784 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162172307 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177489138 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13693614 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191184249 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108216907 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168374262 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143194085 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127607522 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160262148 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.185556904 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111715123 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211371901 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135310195 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135820801 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129700485 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127707066 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162369229 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147699566 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132884855 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183352862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104431763 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166110455 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184865451 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134463443 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156458754 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123019286 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134165323 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146404069 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120772585 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138402009 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170610578 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195864779 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107739152 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214322313 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175580254 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167506085 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161958567 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121261424 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665837856 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131631871 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194351686 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124170946 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215949824 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125621642 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169131836 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164860197 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153700194 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169949893 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152063321 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223663242 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168758484 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.159410105 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108628708 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147339018 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147880928 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.108243208 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154970392 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165755566 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142792048 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.11321023 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.160353008 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150448826 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148273054 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115604641 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198326822 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151190929 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184202805 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188255614 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143102678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169334741 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177485429 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134965165 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164237169 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174730596 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144727705 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127381299 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134964012 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138158404 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156370111 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129679171 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16497397 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16369489 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164770288 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165109493 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112295873 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163551941 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145624858 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16438671 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102457939 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158411002 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161373158 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1341945 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103664336 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159965805 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161703263 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162005024 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102367157 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173649984 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194842033 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127438617 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111098517 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283177873 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158645343 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195816427 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.156309816 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139897125 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145680993 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131335375 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.155857747 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162991153 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131769305 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109208921 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134747022 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183605998 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168294722 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159005921 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185154193 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162556901 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192907937 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112804693 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.267153039 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14247176 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156781055 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.107858865 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132295547 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142856306 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111891144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149019478 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193971493 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182642882 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156395381 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147316835 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104078014 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128645765 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109539636 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174352319 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156830929 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162134456 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145496728 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095383897 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148301242 seconds)
  done (took 78.573635741 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154849369 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152825165 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158853921 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.21053276 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177543219 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.278453447 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.221062384 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237652237 seconds)
  done (took 2.590335231 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105729895 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.13879884 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145348303 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.127335666 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.127995593 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.344791796 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13886625 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.103248796 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.186820932 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141356693 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.125689433 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.60737626 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098928433 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129110865 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.116558895 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126864649 seconds)
  done (took 3.76026609 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.129646735 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.51934681 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.740270601 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.243830243 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.226747706 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.156670978 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.70694397 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.186746956 seconds)
  done (took 11.907727888 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134433714 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146787015 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.257907547 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.178116352 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.164058133 seconds)
  done (took 1.886475727 seconds)
done (took 119.363005337 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100458689 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128721734 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102181221 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129425174 seconds)
  done (took 1.453311801 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114633506 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086098822 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118167752 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084757966 seconds)
  done (took 1.403213771 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.482760776 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.085562923 seconds)
  done (took 1.60774205 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.125981273 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140134556 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.123224783 seconds)
  done (took 1.400277428 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108786307 seconds)
  done (took 1.11651425 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111703557 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.107496009 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.146712866 seconds)
  done (took 1.374297573 seconds)
done (took 9.360766173 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13803205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.431161878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391961248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14325908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72336536 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385758942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045687579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157839985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167494525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097498241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141477344 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677873804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.067643402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345232808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.055813069 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.437997549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707696946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098694451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130576599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097373071 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.025846454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095882144 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124572112 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097934738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702546109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400878209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123959657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.477748053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096730283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126533324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387274544 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122343549 seconds)
  done (took 17.222319914 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140803135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183988896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130997994 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098710257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12729683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098466282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.132480155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.108893495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181994833 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12354128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116463943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123150865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1021198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123743317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118574437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123141197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099737098 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125151904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103839244 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125548647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115464411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123135458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098634601 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125552318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096066627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136856849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096507158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134988006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095782446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129918025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126918394 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098171005 seconds)
  done (took 4.874683694 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146847415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193178958 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132148127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131792238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172862075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12428406 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.209760193 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.132504731 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186560522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124121665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115495034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124018147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160828757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098538741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146035449 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097756848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126132218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0995307 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130357345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099279586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143757722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096230796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125082394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098613396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124228271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111070364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124227938 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133519951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097976518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127164316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104657261 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122614519 seconds)
  done (took 5.177529155 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104461918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130701674 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114733691 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141753903 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099693304 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129704742 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104621714 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126079257 seconds)
  done (took 1.963775596 seconds)
done (took 30.247339748 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.119864606 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.136779644 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.112521251 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.133229426 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133149223 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121676664 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.109484715 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095068674 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.13462732 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.112978308 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125627693 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.097850912 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139240342 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103283217 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.139627346 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.106259823 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.145284196 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.112259367 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.125999131 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107184348 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12530506 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.116779383 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.130821845 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097968125 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.149564076 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128588676 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.115084042 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128153448 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10267924 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098404517 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141186918 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.102798847 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12518364 seconds)
  done (took 4.980444347 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.125757558 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.169437969 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.094351177 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122324683 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.163932341 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.097598157 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.150540538 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.094838026 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121974849 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.095503102 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.094119731 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.149534446 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.15516872 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.127764919 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.171523933 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.158373595 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.123880856 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.161723529 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145653535 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.133758214 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.151562597 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.093766282 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.155955406 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.163472081 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.094559364 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12223459 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.138926629 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.154221368 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.166190739 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.156756584 seconds)
  done (took 5.078648474 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105992731 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140489008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123922047 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196555545 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16602745 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.112647864 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138495414 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.115748284 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.152994982 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.096767255 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.136350252 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155909492 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115630489 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136011398 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103759459 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139084087 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117600285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.12685366 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105226294 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144649393 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115870958 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13848797 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112338454 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135007304 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096727149 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134798377 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102804657 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139154613 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131589997 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107727966 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128112902 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102638942 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127974002 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108508486 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127825357 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106293836 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.147367393 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10738302 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.139130881 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.160920783 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10842918 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.129961907 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.12021092 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174304918 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099554973 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133347375 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108864952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136006911 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097119191 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145853064 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112631895 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126083163 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.139731521 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09826248 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124118706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106978922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099065437 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128705185 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133637267 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102520101 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.145099587 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107557044 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132996031 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.100604485 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133807307 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098407408 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12407251 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.10340979 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149503612 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104172335 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158488654 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099035538 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.131185238 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106704248 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132078354 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107682196 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125461526 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105553391 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133866274 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.103813738 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.134849913 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100634616 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130008133 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115939778 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141010133 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.133148521 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103794692 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13263952 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101452444 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128081503 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113178348 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.128331838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102157467 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.135637891 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.098959478 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128538617 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106428157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131179707 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097591308 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146199065 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10434479 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126010381 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.115483428 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.127265537 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102300025 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135317411 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.110632974 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.12625205 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102960133 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132313946 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097654643 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.131714571 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102149279 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125681407 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110535509 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.137873737 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103276193 seconds)
  done (took 15.35949404 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245954659 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225659495 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.197763062 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308954961 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.14922614 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.124531054 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.221081571 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178546731 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.127562369 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166386331 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.181629495 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188056821 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098554596 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.159616396 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227504478 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.314024488 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.159714793 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.168069698 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.137978995 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149452328 seconds)
  done (took 4.76909659 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115938232 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.166590495 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155665961 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124631863 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.129378125 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112839703 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.129251541 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.143104467 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100307614 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133304943 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098923316 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.136337325 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102100651 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131221666 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.116693659 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144981639 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1040081 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.135082406 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144617175 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.104827667 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.127081669 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14805658 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.107909294 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.15632553 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107167422 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142164675 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097715272 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.134971423 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095886197 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128248685 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.103759682 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144277612 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.13421813 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.099949664 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132335515 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099494155 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122881834 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101243362 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.129322402 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103637569 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143155779 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.102152978 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127016289 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100449154 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135775185 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09734187 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103150831 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.134161341 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13123468 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107981531 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.133979301 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.10376263 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.135651074 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.111933796 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12480283 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.109257487 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.139961217 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131067001 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.107055206 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126067257 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098405254 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102668395 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.127026915 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104273891 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132848671 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.14369314 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.108527552 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127783426 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.105355888 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131848403 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10290054 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145632459 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.146536843 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098723453 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.123292289 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.120967886 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09627494 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.115506177 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109038452 seconds)
  done (took 10.636653514 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127656919 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127773539 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118572578 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.162827625 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.11375658 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.137141953 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099594671 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.148722474 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.106026312 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136961495 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.105774049 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142826251 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155069203 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.112696331 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127972158 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114443325 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131593637 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.141052961 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147829804 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.158751225 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.11073153 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133061778 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.113670548 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.139004604 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131715562 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.141897079 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.160848841 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.105052418 seconds)
  done (took 4.703945553 seconds)
done (took 46.540991947 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.143812263 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.319080246 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.108545714 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.109006291 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.12537227 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.115021591 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.126855808 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.303026112 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.731857047 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.09971296 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.108694258 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.119596276 seconds)
done (took 26.448454244 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.21765329 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.685809067 seconds)
    (2/2) benchmarking "String"...
    done (took 1.464903713 seconds)
  done (took 4.198128673 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.109399236 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.109252121 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.35680225 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.108394264 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.127539504 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.124742525 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.108039569 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.115737414 seconds)
  done (took 15.084632318 seconds)
done (took 24.645340444 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.173300442 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.341687979 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.364085404 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.133695373 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.110519359 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.110794456 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.113389059 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.151141494 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.113410441 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.101367239 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.110877482 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.407639506 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.100247216 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.530949198 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.106331828 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.117767527 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.127977768 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.414074226 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.111598395 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.15137092 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.096453128 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.105038742 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.138824052 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.144060299 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.121527033 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.113550754 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.159844923 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.097542015 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.393811778 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.143632325 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.152219239 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.113154561 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.164101941 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.11250544 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.218176302 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.150066956 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.400249176 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.102438828 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.104281993 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.111045755 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.441936354 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.494209025 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.113223563 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.105184684 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.122063571 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.147422946 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.110484149 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.810786266 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.118291811 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.115840144 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.132709029 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.530891356 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.121621042 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.119065745 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.128356553 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.44012717 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.133319663 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.160018844 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.13993465 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.130288274 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.114531642 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.126098714 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.133785652 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.120740542 seconds)
  done (took 138.1836145 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.114210414 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.118476941 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.114093545 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.130177016 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.119490688 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.115364037 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.11584835 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.113926086 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.115391618 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.12113919 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.114970326 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.116908062 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.121927673 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.078166642 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.116401425 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.132117186 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.120560657 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.116461553 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.116753773 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.115982136 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.140682394 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.120379836 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.131500979 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.116118575 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.14898084 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.202895788 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.14828553 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.127685145 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.114407159 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.115465962 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.115260559 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.122061723 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.694494526 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.974393526 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.128663682 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.132241495 seconds)
  done (took 76.901959998 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.116457207 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.116475205 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.116990033 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.14597026 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.116708751 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.65059059 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.657007217 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.869957879 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.326695704 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.423950071 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.333301848 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.116687175 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208612742 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.129796285 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.118030104 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.133286478 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.144422093 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.118076609 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.116440287 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.654998102 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.135432053 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.608988044 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.288202034 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.133342601 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.147289956 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.514303349 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.117818269 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.147874725 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.445208789 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.165304419 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.118778491 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.431564895 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.206882436 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.117994586 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229797462 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.120438958 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.148586175 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.119537699 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.397396094 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.119372708 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.119492082 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.121880062 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.738277303 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.118846863 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.653698469 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.123725522 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.031281115 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.119453273 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.118774865 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.221126403 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.679191244 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.134173467 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.118922192 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.121511012 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.119121177 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.118409651 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.14968526 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.120242351 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.294520994 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.23512026 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.119841049 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.123286039 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.149756014 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.122398215 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.495032948 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.125567839 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.461065823 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.185826515 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.273564534 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.659448 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126647377 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21556148 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238665582 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.121035782 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.11998742 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.120944112 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.120849994 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.230084621 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.120351873 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.512352504 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289332943 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.138421178 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.121055052 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.332475439 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.120918511 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.215938316 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.122031329 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.496799429 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.126021013 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.121670516 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.828294838 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216052547 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.12152324 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.121731525 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.121447814 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.515070199 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.661335579 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.338042222 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.123325038 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.681383685 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.13081755 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.527736336 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.643678001 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.753293717 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.123356876 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233447974 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.292587497 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.14182635 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.122488734 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.334162285 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.123568191 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.182355843 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.124178226 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.519139111 seconds)
  done (took 355.540889297 seconds)
done (took 571.663410049 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.810015126 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.768714491 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.892245441 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.793708451 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.7587526 seconds)
  done (took 10.07072505 seconds)
done (took 11.118929456 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.30485414 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.305160405 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.181215549 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.307089209 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.156532318 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.324601993 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.29049466 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.149658933 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.229896228 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.202105842 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.224585351 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.176208018 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.160473677 seconds)
  done (took 17.06101583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391576546 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.124978703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.207909634 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.350735109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.165317815 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.376536035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410602489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.125053125 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.273167801 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.138421899 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.138456164 seconds)
  done (took 16.752994619 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391262658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.127255548 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.195858071 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.390127098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.169034763 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.381668126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42036831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.126331921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.278243395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.139655958 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13848206 seconds)
  done (took 16.808783968 seconds)
done (took 51.671587949 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.165885289 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.292025894 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.153257433 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.139182603 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.136558166 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.136700062 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.140980369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.135265556 seconds)
  done (took 10.350867163 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.132182899 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.132112193 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.133423832 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.133821346 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.131884491 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.1342702 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.136063571 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.131562479 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.134510309 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.136105515 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.132949984 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.13256468 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.132346207 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.135013352 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.132211842 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.134623297 seconds)
  done (took 19.187564249 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.135214003 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.132404275 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.132672939 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.13257243 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.132140753 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.133411086 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.134276086 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.132683394 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.132457149 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.132913914 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.13366232 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.133322504 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.133292027 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.133172532 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.132642153 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.134343838 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.133147307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.134314536 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.138252128 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.133726255 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.133734653 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.134812227 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.134147799 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.134512424 seconds)
  done (took 28.261615871 seconds)
done (took 58.850194319 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.142586558 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.130447641 seconds)
  done (took 5.32599093 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.197240975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.198662567 seconds)
  done (took 3.451586808 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.13754715 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.137856903 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.137863842 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.138555714 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.137287464 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.137070565 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.138049338 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.137409775 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.136095294 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.137687611 seconds)
  done (took 12.428737331 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.137958099 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.137481451 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.135955523 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.13819479 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.138896259 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.135183823 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.137913557 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.13777695 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.137377329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.135277057 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.138987916 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.135969547 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.138080105 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.135996369 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.137938864 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.135282908 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.135215587 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.135710224 seconds)
  done (took 21.519600419 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.152770598 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.15910612 seconds)
  done (took 3.36617866 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.27725143 seconds)
    (2/7) benchmarking "second"...
    done (took 1.177959085 seconds)
    (3/7) benchmarking "month"...
    done (took 1.25227326 seconds)
    (4/7) benchmarking "year"...
    done (took 1.243817163 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.177962684 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.157113113 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.177473664 seconds)
  done (took 9.518738753 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.140613318 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.327695745 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.429298734 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.707559953 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.140179278 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.142262378 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.001351466 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.142848144 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.143576743 seconds)
  done (took 13.230091171 seconds)
done (took 69.893670663 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.132244781 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.155175887 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.15776999 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.150947987 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.475552205 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.133915931 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.140865998 seconds)
done (took 15.402744091 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.130717108 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.125654835 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.126897996 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.137853007 seconds)
  done (took 9.576964874 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.132451478 seconds)
    (2/2) benchmarking "read"...
    done (took 1.504191573 seconds)
  done (took 4.694026762 seconds)
done (took 15.327689881 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.140954405 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.137959776 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.140404984 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.137933594 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.140396448 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.137925289 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.137542698 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.141043289 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.139087984 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.14020191 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.141083274 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.14109396 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140971159 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.142006872 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.138168535 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.138618267 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141407217 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.13876729 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.142307752 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137711346 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.138898845 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.141569221 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.139900106 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.139655447 seconds)
  done (took 28.412252478 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.142939265 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.139156898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.141882436 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.14182889 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.139829819 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.140963786 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.142897228 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.13973871 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.142885812 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.142063037 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140789744 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.140236428 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.144467607 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.141595837 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141850612 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.14025056 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.142974281 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141513429 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.143134209 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.142807559 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.143689549 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141522067 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.141972605 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145186191 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.143483803 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.141572622 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.145370969 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.141038776 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.145000143 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.142539757 seconds)
  done (took 35.323533856 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.150161144 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.152231706 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.146476851 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.144622325 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.14494047 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.145450611 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.145465991 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.145988616 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.146161226 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.144792021 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.145330255 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.145433825 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.144564671 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.14455006 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.145667696 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.145504761 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.145846196 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.145042035 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.144970325 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.14452137 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.144183099 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.143789695 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.143222248 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.145066772 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.145838139 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.145628526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.145494438 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.14439252 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.146432735 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.145246219 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.145264534 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.144191898 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.143952084 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.144629659 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.144274646 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.14550818 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.149448493 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.153901446 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.147003452 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.145482349 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.146892939 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.146229164 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.146492545 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.1464957 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.145129258 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.146896546 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.146269421 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.145842333 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.146143909 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.145988674 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.147982728 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.146777909 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.1479499 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.148205187 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.147683462 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.147307374 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.146984858 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.146728085 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.148284826 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.147463862 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.147616135 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.147869292 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.146942098 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.147686902 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.147013818 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.147194153 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.148612101 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.148550721 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.147945192 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.147230139 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.147903791 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.148098681 seconds)
  done (took 83.604343189 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.147792197 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.146310393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.146200313 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.145462751 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145482345 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.148240013 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.145991901 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.148251051 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145043435 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.148917153 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147868505 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.146572282 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147410701 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.148850977 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147979628 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.145657274 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.149576865 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.146200379 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.149150136 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.149201438 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.149874495 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.146924341 seconds)
  done (took 26.306799006 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.149234934 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.151375828 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.146509681 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.151790923 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.149205857 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.15058686 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.149659007 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.151021252 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150511715 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148075594 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147180249 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150059097 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.149829616 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147852345 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.147892352 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.149194925 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150250833 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.148954072 seconds)
  done (took 21.754829127 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.147595675 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.147580796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.149990966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.147772447 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.149173738 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.15152484 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.148344781 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.151646549 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.15077846 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.1492995 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.151689436 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151561183 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.15152005 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149631327 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152513913 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.148467983 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.152380395 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148173159 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.151971604 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.149608694 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.14991485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.152403362 seconds)
  done (took 26.369456394 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15332141 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.1513159 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.149038105 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.149476829 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.150333752 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.152662539 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.152505852 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.14954892 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.153296272 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.153390098 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150246558 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.152308685 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.151134154 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.15075525 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.150655852 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150656382 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.152004179 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.151382759 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.15285234 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.150782216 seconds)
  done (took 24.095483203 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.155302746 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.15601576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.155153975 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.155300921 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.155431344 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.155151796 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153921342 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.154329752 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.155231675 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.156284511 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.15558562 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.155498597 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.155488525 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.155612134 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.155114923 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.155951261 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.15551963 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.155403704 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.156515248 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.155871766 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.15641591 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156013884 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157010598 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.155022839 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.155971697 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.156184552 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157242671 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.156114381 seconds)
  done (took 33.428749682 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.156457739 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.155305552 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.152749289 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.153969843 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.153069814 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.152798529 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.153580228 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.153077745 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.155460413 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.15508928 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.155293224 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.156504804 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.157092213 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.156219958 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.156492009 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.155593493 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155720412 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.153540493 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154294812 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154842545 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.156709644 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156268009 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.157453588 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.154826415 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153815179 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.157034716 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153669484 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.153830134 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.157764578 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.155247843 seconds)
  done (took 35.724979411 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.197223093 seconds)
    (2/2) benchmarking "in"...
    done (took 1.2006249 seconds)
  done (took 3.470627002 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.154893615 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157250876 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.158487608 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.155530428 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.15557974 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.157263486 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.158039599 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155717559 seconds)
  done (took 10.324449075 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.159441649 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.158372094 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.158001194 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.158645245 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.159277212 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.158216721 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.165528242 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.178314263 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.15853288 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.160080724 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.166352627 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.16639363 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.161678478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.159577733 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.159669918 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.160548393 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.160836848 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.16118724 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.159593123 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.160089073 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.159082546 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.161631629 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.161185617 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.157414889 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.161332969 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.170502578 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.163855356 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.160531765 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.160256069 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.162073378 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.160426316 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.157050344 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.160250651 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.161595339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.16025283 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.160698872 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.167944496 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181304976 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.166750224 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.161258804 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161776229 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.158648794 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.162734469 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.161497039 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.161705297 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.161668001 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.161709942 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.159028376 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.160386057 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.165111711 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.167150915 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.162288318 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.159228361 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164010306 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.164690976 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17006393 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.183771584 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.169205955 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.175395038 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.17403861 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.174307424 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.187395925 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.163509222 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.162891092 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.173871314 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.185955593 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.169413305 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.179546621 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.160185374 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.162882561 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.169151701 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.175322447 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.186803429 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.163777929 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164057643 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.163607023 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163435213 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16388188 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.169672357 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.184723709 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.164488728 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164528378 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.175634428 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.186934852 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.16440794 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.164229071 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.165417975 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.164200934 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.165469805 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.174433358 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.183849032 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.164747408 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.163066634 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.164167545 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.164647199 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.165139342 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.164492808 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.165996262 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.162338595 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.165086153 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164682376 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.169802235 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.174125157 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.165481158 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.166518473 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.171341302 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.16518759 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.165556082 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.171398851 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.165849571 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.166717675 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.169128519 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.172794305 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.163537264 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.169418473 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.174360204 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.166388582 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.166876207 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.166718821 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.171558842 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.177106666 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.192562116 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.16730608 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.166534953 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.173058625 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.178462394 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.168550031 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.169242273 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.167343221 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.165024037 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.164646195 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.168221695 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.166941379 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.166801179 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.166955064 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.168169768 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.165421109 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.166896253 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.167878666 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.168446361 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.168438373 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.168151435 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.168338471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.169209753 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.168590738 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.170327696 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.173399339 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.168357198 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.169787304 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.169207318 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.165948561 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.169790185 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.170308428 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.168938515 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.168277645 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.169617428 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.168675723 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.168790312 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.169767512 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.168986798 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.169985719 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.170628191 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172867515 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.170123734 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.171685377 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.169415657 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.166871895 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.170299986 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.1722786 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.169801797 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.171643597 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.169275151 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.175634107 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.177978562 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.170333532 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.170671143 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.172249241 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.170713564 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.170784846 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.172736003 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.173455868 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.178836447 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.170625235 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.178105089 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.17047511 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171112022 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.172511017 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.170906031 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.170573142 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.171239718 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.176300371 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.17952732 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.184571293 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196902898 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.172629032 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.176013409 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.172338294 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.176814392 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.175344518 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.17122024 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.173125842 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171104682 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173231903 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171924971 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.174242198 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.172077969 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.172028644 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.172757959 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.175027329 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.173866425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172971505 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.173242665 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173258853 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.171509666 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174928095 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.173619515 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.175420805 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.172544231 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.172348661 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.173982149 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.172783504 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.173859115 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.179077352 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.171335847 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.175986077 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.174619068 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.173718398 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.172994509 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.174298192 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176224394 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.172953869 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.180309098 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.191928265 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.174615557 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.179382123 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.192969825 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.172762918 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.176604185 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.173948271 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.171968055 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.177210757 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.182586957 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.174726802 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.176094868 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.176535181 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.176059689 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.17560802 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.1804913 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.171897688 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.174344888 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.176258028 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.177081804 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.173905064 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.17654845 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.175229148 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.175609799 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176677646 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.176328307 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.176375344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.176815972 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.17556641 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.17711971 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.177173718 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17971039 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.183747709 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.18135078 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.176554014 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.178765756 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.178700518 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.180492732 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.176892386 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.177130367 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.178048197 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.188202459 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.201281608 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183199865 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.195742278 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.178362576 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.181748847 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.195977045 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.181469667 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177651441 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177984427 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.176070278 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.17770723 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.174119164 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.177538419 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.17833996 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.178604706 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.179571064 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.182446024 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.177785374 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.177135077 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.17775099 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.178733927 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.178911716 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.177706037 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.17900999 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.179845921 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.178670946 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.180656525 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.178447042 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.185785219 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.196891515 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.178944888 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.179406387 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.178741589 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.177383267 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.180145158 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.178338909 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.18361091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.187168779 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.182522684 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.189648969 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.180978706 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188011308 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.179859245 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.183576 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.187096946 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.17777193 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.179601759 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.179532739 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.18069243 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186530019 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.198595002 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.182630071 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.184083299 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.181414729 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.182168263 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.181338019 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.18058797 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181048521 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.180761793 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188229254 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.20272167 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.185227508 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.182173282 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.177837468 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.181697403 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.182032339 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.179706656 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183796931 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.181172897 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.182345171 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.181996788 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.181330271 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.182354398 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.181658758 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.182911215 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.180441248 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.1841665 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188092621 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.2026091 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187288391 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.183855625 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.189721421 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.182288784 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188916397 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.201229932 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.182768124 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.182016503 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.18303165 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.184495585 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.183399785 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.184037981 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.182804011 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.184776622 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.187963884 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.182829334 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.185823825 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.183519131 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.183353461 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.184211882 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.19381648 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.207605965 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.185836784 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188639208 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.181797107 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.184921333 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.188501934 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.183509892 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.183825983 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.187374598 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195950481 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.193459353 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.185105724 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.185426838 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186328678 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185599153 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.185518452 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.184974252 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.184994595 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.185966104 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.186071273 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.185796546 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188153297 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.680782559 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.185550379 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.185861697 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.187032906 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.195061524 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.184582395 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.186551198 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.186401545 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.187305257 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.185727509 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.186485441 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.18660411 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186821789 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185397058 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.186474377 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193290597 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.193121433 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.187939024 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.186139155 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.185638952 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.18616662 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.186609001 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.186411621 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.187312189 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.186632322 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.187807482 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.185920347 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.18713087 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.184697801 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.186715723 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.187057141 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.186980527 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190151247 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.195194809 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186490594 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.184714399 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.187213335 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187841883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.186971917 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.187242237 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.193101956 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191730511 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.198849787 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.196439207 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.192134335 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.188600132 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.192104016 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.196743871 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.186256826 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.187833882 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.187856713 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.190519216 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.188877524 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.19217518 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187941987 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.194677307 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.188154152 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.187783693 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195911027 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.209349325 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.188856675 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.190460841 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.193603855 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.188238424 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.186283868 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.189058419 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.18783606 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.195466215 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.208649803 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.190488222 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191128478 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.189369044 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.192735972 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193841007 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189773277 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.190639481 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.186712244 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.190847653 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190636467 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189834835 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.188376694 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.18895859 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.190610079 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.192913644 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.196774301 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.188816838 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191493068 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.189560474 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.188812655 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.190565281 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189820592 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.187337966 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.188192152 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.189981647 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190291001 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.191700863 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.193407195 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.190184795 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.192361344 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.192611013 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19136832 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194147993 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.202177642 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.19867881 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.189337146 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.191427843 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.191811585 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.193566915 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.191862774 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.191556805 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.192275287 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.194125943 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.192772302 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.191043797 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.19280275 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.194926608 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20866104 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.2135446 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192774195 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.193533424 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.196232953 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.192109883 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.190545094 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.19370534 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.194781026 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.196623253 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.202290077 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.19451129 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199580909 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211480217 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.194726995 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.197647139 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.197205847 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.202914722 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.196234189 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.193805481 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.195337959 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.199776664 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.210375749 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194180307 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204303443 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223539211 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.21380699 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.19402733 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.194596069 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194172414 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.196947965 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.196577613 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.194911269 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.19660124 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.195840452 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.195795695 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.196396193 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.201179895 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.195448653 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.196120143 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.194727296 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.193302486 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.194917721 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.191536232 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.193811053 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.194382165 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.195664158 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.196271906 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.1960779 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.196451495 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.207657787 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.220645041 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.196539699 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.196111765 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.194310938 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.199644766 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.199081857 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208323351 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.204115106 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.1961968 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.197170798 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.197271039 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.195893303 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.19631496 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.197040709 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.19612576 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.197100918 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.194934519 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.209713218 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22164979 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.2018442 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.197811539 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.19758629 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.196719357 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.197644172 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.19714762 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.197688884 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.199256733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.200584208 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202711863 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.198640458 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.198401686 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.201052509 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.207379628 seconds)
  done (took 705.51973724 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.196002075 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195381462 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.195579415 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19502202 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197287609 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197312074 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.1964421 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.196348305 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.196622286 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.197203739 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.196507572 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196345291 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197221988 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.197792544 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19743904 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196587937 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197585839 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.19609843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.19831236 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197719718 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197235747 seconds)
  done (took 26.241640586 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.200429752 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.197172655 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.19749217 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200661647 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197332587 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.200194623 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197850478 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199846621 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200196099 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198132798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.199901473 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200578662 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.197931712 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.19738173 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197918349 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200847202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.201169707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198273352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.200956612 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198884558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201208268 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198838838 seconds)
  done (took 27.493190969 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.201656624 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.201509781 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.201180598 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.198994618 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.20220516 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.198312507 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.202159495 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.201925504 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.201655342 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.201913003 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.199523532 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.202188231 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.210090606 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.208224603 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.203026054 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.202630878 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.20107675 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.202014163 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.203020871 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.200221937 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.206938313 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.219530711 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.200431962 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.201728077 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.203431618 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.203062883 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.203716441 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202325827 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.203501675 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.20786895 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.203793693 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.203546247 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.20516222 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.202747224 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.204535148 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.207757186 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.203254574 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.202273912 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.203708975 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.21414668 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.225672719 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.204712677 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.209955525 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.224223674 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.204936108 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.207923416 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.213482242 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.201995368 seconds)
  done (took 58.953270195 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.79129501 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.811700345 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.813332528 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.814841072 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.814706708 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811985638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.82071235 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.817634713 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.807540202 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.806873321 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.809844781 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.810285133 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813084861 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.813718414 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.813463023 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.808523358 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.808482953 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811323356 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.819412242 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819520535 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.809980218 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.814187765 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.814304628 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.815402641 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815240051 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817186703 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813657244 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.81667549 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.81340619 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.812484708 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815400879 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821287197 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.821448157 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.80836655 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811889067 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.817463328 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.816168553 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.809679889 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81642142 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.810635393 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.813630383 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812281157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.816764708 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.818972807 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823589214 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.812042968 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.809430975 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.815625674 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.816128789 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.816440468 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.818143109 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.814444337 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813255132 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.81481272 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.816614112 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821181313 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.821363377 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.823086794 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.815257769 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.816329758 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.81595518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.818561025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.817501203 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.818208021 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.817660992 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820692896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.819535005 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.820162608 seconds)
  done (took 124.525015143 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.210927819 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.208892331 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21027192 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209149151 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209076577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.210371405 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.210174567 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.211248879 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.210974515 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.210167493 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21122373 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.210773722 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.20953473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2106593 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.208818683 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.209837952 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.210178315 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210415974 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.210528967 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211916355 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.210788169 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.211185143 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.210571131 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.210417744 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.210775856 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.210882293 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211249469 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.211048815 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211028296 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.214841034 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.21120683 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.212086778 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.211713738 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.21268669 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.212145716 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.21233063 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211644775 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213210314 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.212138652 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213077044 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.2118042 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213881024 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.214434781 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.213306071 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211869107 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.212382816 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.213287329 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.213640878 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213239813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214008745 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.21370111 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212231039 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21264241 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21458513 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.213748338 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.214492785 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21325067 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214606522 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212743679 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.213770351 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.213522726 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.214337832 seconds)
  done (took 76.256761509 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214402699 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.214255564 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.210423622 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.21125625 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.213237059 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21176976 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214310056 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.214374023 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213969121 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.213743282 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215695874 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212487765 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213710901 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215721068 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212557262 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212737149 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211920874 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213224056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215671719 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211568457 seconds)
  done (took 25.389587883 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.212313819 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.215732346 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.211602517 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.214149841 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.215334753 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.213607771 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.214275693 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215497746 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212977582 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215092383 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215373011 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216572136 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212891018 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213579986 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216350021 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.214019196 seconds)
  done (took 20.553501191 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.21375541 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.217940156 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.214805978 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.215982974 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.213924966 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.21427585 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.216543497 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.21544826 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.214373357 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.21803945 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.216998782 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.217109057 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.216571604 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.217139625 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.214822963 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.216079409 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.214032343 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.21356304 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.217694308 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.217145941 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.215901901 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.214718995 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.217420165 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.218119828 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.216684102 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.21663725 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.216310787 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.216258027 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.216088876 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.218140493 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.215785722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.217004852 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.216376937 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.216789624 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.218556909 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.216734431 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.218538607 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.218929207 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.219590225 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.218830187 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.219387438 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.215607389 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.21952681 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.218577972 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.215826753 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.219911665 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.216860744 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.218137604 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.21745986 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.217410927 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.220002408 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.220888398 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.221677484 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.219354385 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.219406867 seconds)
  done (took 68.065999138 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220652123 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220427151 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217412524 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219960702 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.21989234 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.217859816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220619789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.218399745 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217802614 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221381204 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217840727 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.222937758 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218332994 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221160816 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218885554 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220617383 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218905066 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.218382358 seconds)
  done (took 23.078710666 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218983805 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218887594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.221644668 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218814258 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.218504569 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.221296887 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218381523 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.221747845 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222397751 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218599254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219249099 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.221306705 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221102214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.222595936 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220458997 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218950594 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.221737111 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221475555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219751859 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219312687 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223098557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223095056 seconds)
  done (took 27.980704192 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.220533682 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.219749363 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.221809047 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.237677037 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.244068885 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.222186695 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.221779379 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.221667131 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.244566174 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.277524852 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.273755155 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.244339456 seconds)
  done (took 15.979847003 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220982938 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224000519 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220209955 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222911253 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22278082 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221430336 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221411461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223264521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223617493 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221964913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222143834 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224612362 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224184086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22122694 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22430458 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224649856 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220904631 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222119057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221040273 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22410982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221729177 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224581001 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223450281 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222344244 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222947581 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222968554 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224414272 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222983531 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222112739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224959247 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225210355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2224595 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224450673 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222386489 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225090593 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226170066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224424842 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225336548 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226387497 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223168533 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225923317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227111731 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226189598 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222767077 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225852508 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224191089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223781215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223559337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222630281 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225736383 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226449429 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224461037 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226093135 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227107184 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228022826 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22464276 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224760353 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223078488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225528821 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224707546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223429115 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226375071 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224088124 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224367955 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225956372 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223903352 seconds)
  done (took 81.913231598 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22452388 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223093567 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223875073 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224524148 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223322641 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222867369 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224667973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225562345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22440751 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22485041 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226779182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225314222 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225530028 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225492171 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225665908 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224996233 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225628676 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226078015 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226359077 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228955272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226701114 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226618856 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227164661 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227493547 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225917185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229901084 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225721388 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226898563 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226846345 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225718987 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22631523 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227964396 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227316688 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.226118172 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227376197 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226401074 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228454423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227926328 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226819096 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229748777 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226826207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230055936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228652032 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227153239 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227727473 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227343519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22655062 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228685366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227326004 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228414492 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227377668 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226946684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227444749 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2280074 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227859699 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227931369 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227970855 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228313656 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228101098 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231799814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23020444 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228502615 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231692538 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228396351 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228525091 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229259195 seconds)
  done (took 82.120136163 seconds)
done (took 1693.943835499 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.395153385 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.348785438 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.23032244 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.241238971 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.230951313 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.253777551 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.241746525 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.230012577 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.232392924 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.232068667 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.230039353 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.420836859 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.224981503 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.230482022 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.230758856 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.329262342 seconds)
  done (took 25.442812221 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.260829596 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.238306227 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.349911933 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.258296117 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.259488429 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.422888591 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.294916316 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.237234355 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.412676468 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.260953171 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.228405375 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.264148784 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.238053277 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.22657215 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.273966642 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.422731369 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.49638781 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.239393371 seconds)
  done (took 27.525606997 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.701850286 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.272743126 seconds)
  done (took 5.115888064 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.255964104 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.237819326 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.239089909 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.234410744 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.227086879 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.232893013 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.235578739 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.230289432 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.253202833 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.370193015 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.24311784 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.246085713 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.25670541 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.237139222 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.234350267 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.276542726 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.393024371 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.235686526 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.234513132 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.243164328 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.239410089 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.357001192 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.28362427 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.240607284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.364877701 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.244255979 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.247001687 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.244968837 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.401602658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.236516682 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.2369389 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.239207362 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.239425526 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.140023023 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.766658688 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.249487223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.264918278 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.246609589 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.235993227 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.411976442 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.240358759 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.244843817 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.232414876 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.759127092 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.389000105 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.36756113 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.256061827 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.244793896 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.241193528 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.30633858 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.244840639 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.241981726 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.282476219 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.076627883 seconds)
  done (took 80.284449789 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.293662257 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.232578479 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.414324392 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.249678836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.231384141 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.237521806 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.237864379 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.533044461 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.277931255 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.233975301 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.577374084 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827735557 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.265635855 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.284989973 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.091393394 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.297788644 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.232461275 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.235100934 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.2365977 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.233197342 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794689252 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.238666048 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.254377928 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.409203375 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.27350527 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760929651 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.236198828 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.238798998 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.253902854 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.233927306 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778705913 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.25729638 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.297952997 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.237423453 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.512215656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625498193 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582611268 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.240768744 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.240305345 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.238043988 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.245587486 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.745894954 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.600858958 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.236555972 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.236093655 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765707555 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.237037249 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.237761086 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.240215782 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488646514 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.238214642 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.23699958 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.253537933 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.241431888 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.235947238 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.309894227 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.315308218 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766727974 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241176354 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.234685324 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.294672596 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.235416251 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.243897262 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.238911709 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.240556846 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614984374 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.492605185 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.241201547 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.602267683 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.77413356 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.258346404 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870892021 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.257403176 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.281066699 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.452515686 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.236160963 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.253844128 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772315096 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.268007094 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.237451954 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.58679855 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.23986363 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.567977442 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.259944417 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.24146381 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814222858 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.252083164 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.245401507 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.237146338 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.24893777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.237751387 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.241178996 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.522257388 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.283850727 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.239741402 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.238216267 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.249483227 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237734011 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.238284854 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.238191452 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855325869 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.267608406 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.237752565 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.240598746 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23939512 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.239075464 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.239992102 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.238704495 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50727422 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.254955019 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.244044712 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.239904667 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.239457877 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.24466318 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.412353755 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.248363144 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.554329964 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.241476916 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239844424 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.256927465 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23953348 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.292146045 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240760398 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.239961798 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.134714089 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.544028017 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.258950045 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.257322303 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.241773532 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246354136 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.241016446 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.241626061 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.300263572 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.246200455 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033321438 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.299992298 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.248559103 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.238954797 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.247746944 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.240470176 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.247009622 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.243026842 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.542801071 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.518096061 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.494154946 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.245744553 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.241857628 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02879277 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.282234153 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424339828 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.262549137 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.242028878 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492329419 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.539571361 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.244197446 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.242248327 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.24261946 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505433637 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.243616958 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574347299 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810036526 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.264395789 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.242799865 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.030893264 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.950986596 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.247638247 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.248765811 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.578493435 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.262319804 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.243683936 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.243193912 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.242145155 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.26005816 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.247612888 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250015769 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.24312965 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.243049999 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.288303548 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.435231452 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.261001282 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.246860143 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773311559 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.260958097 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.252278157 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.250030765 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.245853487 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.242630169 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.310000192 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.249353147 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.255225692 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.244929167 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.246086165 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828824865 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.249574006 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.268144249 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.43587595 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961148134 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.266393565 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.243125052 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.26193351 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.151255766 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800296495 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.30611218 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.576564212 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.259013256 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.283988605 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.244614823 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352761665 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802479478 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248653106 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.263544588 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923148826 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.266655096 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.748730478 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.245734539 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.247979466 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859928394 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.268410083 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.249585787 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.245456213 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.245297368 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544004941 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.248339951 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.250685677 seconds)
  done (took 478.930565102 seconds)
done (took 618.43757687 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.246074695 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.248987759 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.238426776 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.247453331 seconds)
  done (took 10.138424679 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.253623725 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.250701401 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.251743525 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.250320794 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.252405342 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.251379064 seconds)
  done (took 8.667090187 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.246061537 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.251747612 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.252602758 seconds)
  done (took 7.907105089 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.459986905 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.281174041 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.59332225 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280092683 seconds)
  done (took 8.773820599 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.252261133 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.251773089 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.25144069 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.254434342 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.256213318 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.25625207 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.254935049 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.254052494 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.255726338 seconds)
  done (took 12.442287505 seconds)
done (took 49.087071842 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.258537734 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.245778633 seconds)
    (3/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.252245482 seconds)
    (4/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.270583777 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.311088569 seconds)
    (6/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.255737486 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.128220702 seconds)
    (8/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.400094299 seconds)
    (9/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.273220968 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.301847132 seconds)
    (11/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.411418875 seconds)
    (12/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.397795953 seconds)
    (13/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.370245621 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.276666539 seconds)
    (15/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.259329114 seconds)
    (16/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.946041551 seconds)
    (17/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.363874674 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.26124795 seconds)
    (19/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.268513252 seconds)
    (20/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.2858581 seconds)
    (21/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.330211546 seconds)
    (22/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.590640385 seconds)
    (23/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.235698168 seconds)
    (24/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.285697331 seconds)
    (25/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.238412761 seconds)
    (26/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.261543572 seconds)
    (27/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.297048289 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.356298518 seconds)
    (29/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.298847365 seconds)
    (30/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.398995329 seconds)
    (31/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.344278834 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.348448703 seconds)
    (33/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.34462483 seconds)
    (34/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.252063651 seconds)
    (35/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.375822223 seconds)
    (36/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.393674183 seconds)
    (37/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.279862904 seconds)
    (38/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.271915168 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.273589752 seconds)
    (40/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.910611406 seconds)
    (41/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.333078566 seconds)
    (42/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.123927638 seconds)
    (43/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.012652421 seconds)
    (44/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.143301938 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.275808657 seconds)
    (46/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.299234388 seconds)
    (47/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.299339068 seconds)
    (48/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.240207524 seconds)
    (49/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.964865258 seconds)
    (50/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.002362572 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.298976073 seconds)
    (52/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.001117197 seconds)
    (53/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.47061863 seconds)
    (54/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.269635253 seconds)
    (55/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.33434126 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.36099142 seconds)
    (57/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.298422951 seconds)
    (58/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.906163649 seconds)
    (59/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.10840323 seconds)
    (60/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.272160839 seconds)
    (61/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.985254689 seconds)
    (62/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.336022234 seconds)
    (63/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.343838414 seconds)
    (64/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.329922951 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.326217652 seconds)
    (66/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.271257249 seconds)
    (67/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.29466283 seconds)
    (68/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.259784569 seconds)
    (69/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.260319305 seconds)
    (70/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.319869522 seconds)
    (71/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.280753226 seconds)
    (72/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.09479533 seconds)
    (73/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.265695631 seconds)
    (74/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.236476828 seconds)
    (75/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.577281734 seconds)
    (76/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.336515591 seconds)
    (77/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.389337237 seconds)
    (78/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.529799486 seconds)
    (79/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.270452645 seconds)
    (80/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.355501573 seconds)
    (81/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.384488366 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.442955698 seconds)
    (83/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.243724971 seconds)
    (84/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.295374948 seconds)
    (85/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.260881632 seconds)
    (86/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.315588262 seconds)
    (87/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.399973727 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.29222474 seconds)
    (89/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.599214365 seconds)
    (90/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.486385929 seconds)
    (91/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.906419946 seconds)
    (92/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.33808883 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.304927501 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.307316524 seconds)
    (95/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.903189763 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.355584119 seconds)
    (97/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.439613467 seconds)
    (98/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.352280346 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.283693587 seconds)
    (100/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.26530274 seconds)
    (101/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.328136566 seconds)
    (102/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.283829264 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.341565958 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.278820272 seconds)
    (105/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.268563017 seconds)
    (106/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.274301648 seconds)
    (107/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.337370121 seconds)
    (108/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.288311391 seconds)
    (109/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.443710978 seconds)
    (110/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.310961396 seconds)
    (111/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.36577956 seconds)
    (112/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.263394853 seconds)
    (113/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.388767819 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.304580009 seconds)
    (115/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.306749852 seconds)
    (116/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.272943322 seconds)
    (117/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.345520811 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.421551599 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.273909963 seconds)
    (120/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.36296291 seconds)
    (121/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.95011395 seconds)
    (122/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.266028916 seconds)
    (123/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.462666672 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.263119633 seconds)
    (125/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.26250785 seconds)
    (126/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.35110747 seconds)
    (127/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.47507578 seconds)
    (128/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.338360749 seconds)
    (129/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.652138291 seconds)
    (130/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.287894686 seconds)
    (131/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.460382656 seconds)
    (132/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.914136647 seconds)
    (133/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.070892089 seconds)
    (134/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.312822917 seconds)
    (135/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.407010142 seconds)
    (136/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.410901753 seconds)
    (137/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.256603761 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.366430329 seconds)
    (139/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.263872512 seconds)
    (140/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.339256703 seconds)
    (141/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.485565852 seconds)
    (142/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.439588102 seconds)
    (143/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.45279214 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.293514207 seconds)
    (145/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.407946956 seconds)
    (146/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.247477238 seconds)
    (147/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.011864936 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.479241113 seconds)
    (149/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.439253338 seconds)
    (150/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.028668109 seconds)
    (151/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.29086076 seconds)
    (152/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.303598264 seconds)
    (153/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.911552925 seconds)
    (154/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.268551658 seconds)
    (155/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.359294518 seconds)
    (156/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.384533865 seconds)
    (157/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.297488226 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.350345657 seconds)
    (159/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.382019791 seconds)
    (160/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.285631187 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.282454502 seconds)
    (162/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.287022557 seconds)
    (163/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.306530004 seconds)
    (164/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.340195341 seconds)
    (165/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.387309846 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.283364884 seconds)
    (167/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.27013922 seconds)
    (168/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.266702406 seconds)
    (169/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.2444073 seconds)
    (170/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.449461416 seconds)
    (171/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.268432833 seconds)
    (172/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.448565766 seconds)
    (173/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.27246218 seconds)
    (174/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.347427836 seconds)
    (175/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.015916642 seconds)
    (176/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.421571764 seconds)
    (177/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.263414167 seconds)
    (178/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.310104992 seconds)
    (179/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.337323743 seconds)
    (180/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.007175272 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.356034677 seconds)
    (182/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.007759284 seconds)
    (183/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.291685312 seconds)
    (184/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.348597976 seconds)
    (185/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.297932378 seconds)
    (186/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.250845004 seconds)
    (187/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.917852363 seconds)
    (188/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.269984543 seconds)
    (189/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.274508666 seconds)
    (190/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.275371314 seconds)
    (191/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.252729873 seconds)
    (192/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.47392994 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.364509308 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.299174961 seconds)
    (195/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.39112191 seconds)
    (196/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.278843471 seconds)
    (197/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.268340547 seconds)
    (198/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.341566774 seconds)
    (199/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.91009625 seconds)
    (200/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.344284809 seconds)
    (201/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.41331684 seconds)
    (202/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.415064812 seconds)
    (203/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.304412957 seconds)
    (204/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.408467054 seconds)
    (205/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.35175347 seconds)
    (206/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.443700474 seconds)
    (207/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.38849043 seconds)
    (208/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.363959844 seconds)
    (209/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.452140363 seconds)
    (210/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.268188129 seconds)
    (211/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.368765254 seconds)
    (212/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.261456496 seconds)
    (213/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.287395708 seconds)
    (214/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.313536788 seconds)
    (215/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.330506304 seconds)
    (216/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.417600662 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.333074166 seconds)
    (218/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.256059125 seconds)
    (219/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.248107347 seconds)
    (220/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.35305228 seconds)
    (221/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.296361196 seconds)
    (222/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.325058864 seconds)
    (223/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.410183188 seconds)
    (224/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.455217098 seconds)
  done (took 351.246870911 seconds)
done (took 352.40474769 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317834928 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.446563338 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.289058366 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.287843966 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313846671 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.274839972 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.314789404 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.277917952 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.273696041 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.272962537 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.272126366 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.28192789 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.292043109 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.306268418 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385581675 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.287544208 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.288495758 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.273118629 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.31135297 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.331405465 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316925624 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316005009 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.283623776 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.29076153 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319029715 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318961965 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.294169859 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.276721884 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.277167817 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.31380741 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.273166803 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.300807985 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.322539162 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.324231784 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317115981 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.274588226 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317579782 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.449991566 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.307748019 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.307242912 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.276311642 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.321744827 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.282770623 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.294086033 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.325054291 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.286290443 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320896048 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.398076477 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.276332108 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.277707587 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321631755 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.335852871 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.276163446 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.2751296 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.275176027 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402390779 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.275585032 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321713997 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.276727353 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318551121 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.387487593 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322218305 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.335296834 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321095763 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.277240066 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.298436478 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.276562331 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.334807449 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.274658521 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31931813 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319516425 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.281338248 seconds)
done (took 103.362500689 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.401446245 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.270170235 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.432905827 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.273289197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.439323184 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.421984823 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.270509608 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.271621148 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.271443953 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.101312185 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.271866623 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.270406406 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.272308867 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.270478953 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.40544879 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.275853034 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.273087615 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.991071236 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.275468158 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417925307 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.274738608 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.273599943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.275748115 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.101302033 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.272641266 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.268497753 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419904561 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.276209339 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.991969574 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.269028368 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.272936996 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.991978497 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.419309167 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.291680477 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.285498551 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.281752855 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.440851031 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.294697378 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.405242452 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.407256747 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.435986651 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.314170421 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.269553598 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.27417171 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.277742603 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.27834788 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.274708626 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.303023796 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.275931614 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.274207476 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.994010582 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.286601805 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.283841347 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.275594542 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.275080482 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.296557942 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.276202565 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.279186423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.421175916 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.278084381 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.405523123 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.105286017 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.106398316 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.279556513 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.27358443 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.276054362 seconds)
  done (took 104.66060631 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.344356221 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.353897988 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.391317268 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.295866648 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.331049056 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.395911474 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.296588499 seconds)
  done (took 10.588840036 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.284800229 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.279458048 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328631862 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.327571593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.277671885 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.490902741 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.279806821 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290975772 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.276694563 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.355265457 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.280176961 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.2801372 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.285952832 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.276176162 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32805797 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.292152394 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395634372 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.282188394 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.279648468 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.437080382 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276980226 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.286447466 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.3547294 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.293275403 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.283311773 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.287175252 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.224828337 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.280489788 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278218055 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.280301508 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27714542 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.389686601 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.28130743 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.277538045 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278906001 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439587306 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.280524714 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27872258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.281239837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.282408308 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.281518066 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.281097347 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.281486882 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.279501253 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.281570005 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.303923422 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.282578659 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.283103645 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.283255805 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.282288267 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.358328715 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.28469332 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.280770316 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.280714905 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.361185881 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291457827 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.283624967 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281699758 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.284220391 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278694395 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.435021525 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330166467 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.282607507 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.330760652 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.284892609 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.283914533 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.284103636 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.282311856 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375336389 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.282833162 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333293581 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.279645023 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.505102974 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.309050667 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.286060378 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.286949995 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.287082193 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.284188937 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.279752539 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.290311823 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.281656319 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.285750099 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.291326555 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281330567 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278870804 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466118919 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440238731 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.281265832 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.29935097 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.291167423 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.280855823 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.359392246 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.284723907 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.28026753 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335241796 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.400456604 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.361494692 seconds)
  done (took 133.064611372 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.296924362 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.298914533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.287398524 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.31129668 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.285017689 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.285056718 seconds)
  done (took 8.949876876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.285641127 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.286894417 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.28431626 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.286463349 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.285297668 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.287048424 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.286329427 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287211843 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.29006356 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.285344798 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.28653879 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.288819939 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.287643789 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.286143612 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.286131949 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28474488 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.287362276 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.283563147 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.287567954 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.287125411 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.284474357 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.285940056 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288309465 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.289865567 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.290902419 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.288191561 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.307334973 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.287069786 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.286143296 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.296292194 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.307998649 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.288767932 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.29017875 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.292343988 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.292682295 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.28984723 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292602296 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.288901399 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.285475451 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.288758535 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.289653638 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288105257 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.290159045 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.289801744 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.290017577 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.294194998 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.294625234 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310637787 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.289657918 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.291073893 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.290777633 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.289436041 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.290186052 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.291629351 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.291939124 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311079852 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.295097357 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.289623718 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.290200589 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.29298734 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.29203525 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.289907253 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.293979734 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.294150647 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.286650421 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.291181958 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.292386792 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292560866 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289732781 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.290767419 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.292521381 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.288428354 seconds)
  done (took 95.09571869 seconds)
done (took 353.535350669 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.394450503 seconds)
  done (took 3.58484177 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.398293809 seconds)
  done (took 3.590611773 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.943397096 seconds)
  done (took 24.142259887 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.31186599 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.392510402 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.296022362 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.290003991 seconds)
  done (took 10.483402988 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.582613 seconds)
  done (took 3.773979042 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.285838766 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.297913475 seconds)
  done (took 5.777401238 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.597795821 seconds)
  done (took 3.790320271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.693592453 seconds)
  done (took 3.895749099 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.307363322 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.301817245 seconds)
  done (took 5.811254132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.271205344 seconds)
  done (took 3.463554438 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.467991029 seconds)
  done (took 16.661549896 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.291097667 seconds)
  done (took 3.488859328 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.310691563 seconds)
  done (took 3.503862477 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.097587966 seconds)
  done (took 6.291336747 seconds)
done (took 99.449073221 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.284924794 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.292669009 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.290468936 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.290803137 seconds)
  done (took 10.352597163 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.347050835 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.345192788 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.345491402 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.344691473 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.345667846 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.347617366 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.319477534 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.319657021 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.343576922 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.347790889 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.345833988 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.345553532 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.344497345 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.318312615 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.346407865 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.34700591 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.345569686 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.345057222 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.319654173 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.345804238 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.295682919 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.346607396 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.345684142 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.296028021 seconds)
  done (took 33.289279936 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.793417788 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.36882872 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.44906727 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.347887716 seconds)
  done (took 7.154288771 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.37351125 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.372474236 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.389780945 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.427813561 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.43769257 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.385648056 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.321552238 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.317522408 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.303208865 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.37368573 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.424924137 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.364881517 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.453802417 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.295012426 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.503246036 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.295625895 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.296754333 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.372405751 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.425605046 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.435950745 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.298732074 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.374193795 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.377959007 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.36701791 seconds)
  done (took 34.185359134 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.305080458 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.310025416 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.296270621 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.311641587 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.294012022 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.296435127 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.300384944 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.302296305 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.296233044 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.296020365 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.296885241 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.312117244 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.300766313 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.297723153 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.303071248 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.298269887 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.303123925 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.301375542 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.297387738 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.302604388 seconds)
  done (took 27.219585255 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.290358559 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.290189335 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.641101444 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.550147233 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.291343442 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.295829517 seconds)
  done (took 13.555388476 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.372082724 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.543182269 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.303258629 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.671220041 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.752826379 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.300066891 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.298980236 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.561386786 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904283132 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879110992 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.3632409 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.373197646 seconds)
  done (took 19.521398837 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.296335982 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.296188119 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.312466233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.312627009 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.357998725 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.320737223 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.307895098 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.292984499 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.360965619 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377686979 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.320839441 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.357926695 seconds)
  done (took 21.114652447 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391506048 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29429536 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294158763 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349921352 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293465813 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138555265 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318603922 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010073146 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.317118438 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568148733 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303301973 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398480205 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.553326375 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298628363 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304823479 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.290247196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530311378 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805432711 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29621085 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295093179 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334966815 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304085958 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29930625 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.544971711 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300633919 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295152368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.557547874 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295821597 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60035263 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315893763 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30666708 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296599255 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5721371 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962386572 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414747575 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517584294 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301320428 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299442385 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.294910377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.322617685 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302573943 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322534995 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308043784 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297626047 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296924793 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298505791 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0269959 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.322725265 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.296103053 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296196394 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57541787 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400202599 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.301162977 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297671465 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368772363 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299352291 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.302545756 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392238416 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881766228 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298432878 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309665658 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.304230557 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303541509 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299990748 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962436537 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.309541043 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.302620999 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302726492 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29837696 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298720683 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323163935 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302157389 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.322403169 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298462771 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065455253 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307303056 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305846992 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87679428 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302105099 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.324139728 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53144531 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300341399 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298885565 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.299186087 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299525695 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054712797 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312374837 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.285754956 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342869591 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019793284 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.545315143 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32652711 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330397708 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523791552 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.286657606 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300092367 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.301287137 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325865021 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323245728 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023830967 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321294638 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.306974497 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561184257 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.512980476 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299712597 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.298260261 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790819146 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336553328 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.324018868 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30072093 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53367144 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.927382337 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323408225 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302039875 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324776063 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302357805 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101368702 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323995454 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.409471074 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303504233 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586531993 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.143343621 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308967657 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372867642 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307527396 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303487655 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301971673 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311493163 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304144569 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.522576514 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328828556 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.321272501 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.306729704 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304401887 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.308148249 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315161612 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.311710136 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526601583 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320508884 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583938356 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305411814 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304396538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304588359 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.527637937 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.30193024 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.641682488 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568976782 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305154975 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311318408 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323190818 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324160597 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409604699 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328939382 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.305695236 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.567665954 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.309879447 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.309683857 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306697915 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313208353 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312477156 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.313632527 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327680556 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930528755 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290790828 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313539701 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19635587 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.321554385 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374735298 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311587922 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533971628 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.309218253 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324958489 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.311218602 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.302322155 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549324601 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316831657 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.304936421 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386447416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.793686496 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.947242625 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325991136 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.30724583 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.304836879 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.304729749 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30818322 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307638223 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308579508 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534991332 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328884681 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310625837 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940746579 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314864668 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307941338 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.318180033 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321441484 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.314396148 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309106921 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.317867446 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314641605 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31570255 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.326046217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453437817 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.323308788 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311243357 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.828411099 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317086069 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311478215 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312390997 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345958714 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312993436 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135803613 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576706278 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31649713 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6149104 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318941557 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.333899528 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.312288485 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313753839 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320872724 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.330782362 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321995612 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.323586979 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313935738 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31999507 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894434919 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098561807 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895418099 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319269168 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.315520031 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318762306 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041742272 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33280473 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313349616 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562765915 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043910281 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334497294 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808094301 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.333579514 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130627634 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599996936 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553283909 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313323285 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.317919974 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603985735 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53425847 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351792965 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317170101 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320598909 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.302912928 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886985648 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334676404 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399244148 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04539531 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337287471 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321669894 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.383175162 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324283938 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734510476 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336171164 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315962435 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323254868 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333706721 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142835134 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32349409 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315139968 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983545019 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337038007 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.8116592 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336447112 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544584573 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.334280116 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.322755905 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.314705179 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.333195935 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.57718302 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598427052 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32312311 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330696745 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891176813 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.192443128 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.323901998 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317643629 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118024657 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324374107 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632735561 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.324695176 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.32125385 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326262548 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318667864 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317995396 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.315902105 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326701258 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293565407 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848050629 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.338550643 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328008985 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320989681 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32536385 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.574655444 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.333227976 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942708077 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554976936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325493332 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343230759 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.322572613 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326196778 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.312366742 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31968132 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319122289 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40030842 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544037817 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320628212 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.306301369 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359377023 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531445175 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320557189 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33126905 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578865804 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.31917439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.341391117 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081515804 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354638082 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32834591 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33050031 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329214943 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34235234 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390916272 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548729688 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.33391193 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.334717776 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742471654 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349052923 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329942139 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.33738219 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418485622 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335327506 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.331472439 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.102751122 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942650704 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099841204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945733509 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60687909 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327741904 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332628016 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325893645 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486021737 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323692826 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596867976 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323366372 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.326748796 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345770976 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332162127 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330062905 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540545258 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598305613 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323739476 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324635088 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333263857 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.323533152 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335954846 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.53430821 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842229575 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904423227 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326305976 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325115429 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063590791 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620151404 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324206732 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325967143 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323988691 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.349745607 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337501302 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.330760562 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341171317 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477057563 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604916083 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008534985 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.357144764 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.353840515 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.843111603 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331759736 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586420652 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331040276 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557968881 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945721904 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.065694267 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596296858 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396809868 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55120271 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.32630149 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490938855 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.331122191 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33243533 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327840337 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327036555 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.324899229 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.336014186 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967603584 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598981626 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.331077373 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.334008175 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363086562 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.337193254 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549739882 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102705422 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555225811 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338075286 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33025259 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327190453 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963815193 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615831306 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332546644 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.331606925 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57657833 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330513503 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351112287 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.848242207 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.327494577 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940476861 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.304791718 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350395874 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329287373 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.113026138 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969563047 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.341973508 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88248262 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336124182 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327641089 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608444835 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.334070803 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331225563 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611481052 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.333277758 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329952562 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56302004 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.960540478 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16219664 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.358229622 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336192794 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.336945495 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329987425 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404773589 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349265707 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331395658 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.762830374 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34889723 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330308405 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342084626 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.340931873 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335387386 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.33240884 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328906801 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.335615815 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.318285006 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.325895707 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337630553 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429621617 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908380133 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351169877 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.999478439 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.659536981 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58757074 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334730022 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.324545229 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.336455477 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332360441 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33080962 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332340211 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332937517 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957464579 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.339656441 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.34841507 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335928516 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.333349238 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546684605 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340524416 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572222298 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339460066 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354707411 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.318984322 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333232626 seconds)
  done (took 950.307649 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.33572972 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.34642046 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.362258456 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.42995629 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362467061 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.459709159 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.370935031 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.370001542 seconds)
  done (took 20.275707172 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.345799127 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.343602632 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.334338964 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.343426743 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.349721877 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.838481533 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.368997838 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.348991167 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.350116273 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.335095719 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.347160401 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.325465606 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.348976367 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.337917052 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.32472116 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.352446218 seconds)
  done (took 32.241873981 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.439531376 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.573597732 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.57940396 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.36903523 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.37503972 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.349769183 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.658292305 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.37442102 seconds)
  done (took 26.95817583 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.346797963 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.34800286 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.346027111 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.346036657 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.34899624 seconds)
  done (took 7.975593456 seconds)
done (took 1205.345928043 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.341413528 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.341215854 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.340574741 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.34206211 seconds)
  done (took 6.603876502 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.323136424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.323309417 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.324412591 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.339370983 seconds)
  done (took 9.549181153 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.09118722 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.004956908 seconds)
  done (took 5.336205389 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.826035641 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.830189183 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.831279356 seconds)
  done (took 6.726202029 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64913735 seconds)
  done (took 2.889221083 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.241057766 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.3422499 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.022936506 seconds)
  done (took 7.845838696 seconds)
done (took 40.189651672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.350563214 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.583475985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.494044586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.346189133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.499254821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.493827846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.109681607 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.337981974 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.351141481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.345093874 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.3370656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.499339151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.163740881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.584421174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.16327086 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.686390569 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.499181758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341948639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.336848524 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.340627561 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.114030823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339535176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.352370369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.337258748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.523319989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.488054937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.349935928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.686646181 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.34422254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.349820077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.500540718 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.342516464 seconds)
  done (took 81.833396188 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.349017644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.337417601 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.339887917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.354130563 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.339226383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.345625704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.359860343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.335643835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.357940419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.344457721 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.355223231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.341580595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.341797915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.362076979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.339478329 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.36809669 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.340734905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.359742061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.346780647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.341911246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.364363159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.343797149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.341116837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.340419516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.342614607 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.340115394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.35879357 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.358136993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.341138701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.360808678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.345348852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.359072956 seconds)
  done (took 76.399037068 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.341792292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.343936127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.342699327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.340448704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.341530471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.346428513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.340712983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.35426201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.341666483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36355661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.340700877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.359159633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.342783016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.342627083 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.359851102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.341654786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.358726356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.348873144 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.341211283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.343380175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.341421389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.341663422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.373248099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342338316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.361609323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.351534546 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.350885131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.342952424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.341331053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.363117719 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.367519805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.346318097 seconds)
  done (took 76.405519775 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.62287701 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.350848301 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.350713495 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.344127453 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.35143736 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.351006758 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.344992724 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.628080206 seconds)
  done (took 14.58965935 seconds)
done (took 250.467138525 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.358644546 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.887963089 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.396019215 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.343969517 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.390720855 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.373105093 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.582690108 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388163996 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.578563024 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.375205772 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.371055086 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.344715298 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.21416946 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.505863334 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.249835353 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.344213607 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.284818236 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.344877844 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.974199143 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.637405138 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.374899226 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.347286307 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.224594904 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.305013374 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.330638516 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.435254535 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.455849798 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.581836746 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.517230545 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.435917485 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.901594749 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.344797988 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.346242329 seconds)
  done (took 63.794469498 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.350405212 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.468110361 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.351468765 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.354003343 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.472101993 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.353367592 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.35408884 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.353524834 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.35384527 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.355125278 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.353544573 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.356840247 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.355408993 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.397957988 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.47691854 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.369432756 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.352905867 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.465700827 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.352620239 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.34561596 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.397160655 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.354997438 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.356491501 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.398319608 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.353637648 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.354340145 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.468490321 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.356565663 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.351934745 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.469079155 seconds)
  done (took 42.7035827 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.355801711 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.983827178 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.121465728 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.367613956 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.356898943 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.360042291 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.661969177 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.355871933 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.358587768 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.358991249 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.899397389 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.359922959 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392364468 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.155322905 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.360820028 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.355653637 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.35605651 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.356857229 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.997992558 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367185706 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.68349277 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.359668176 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.657328558 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.365647052 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.380953494 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.357792747 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.360310189 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.258539426 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.362641268 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.887749586 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.178900209 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.656477781 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.169650489 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.141169005 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.178833598 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.365598549 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.359805019 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.893997134 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.364822975 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.357882223 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.659580244 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.362350841 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.138207127 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.075854531 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.382240408 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.358484844 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.258145859 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.89780647 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.610706883 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.371386235 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.164261978 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.368055095 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.360978539 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.361934618 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.610564377 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.366777272 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.358354823 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.290946508 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.36972107 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.663064021 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.365832562 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.362411974 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993362831 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.361166256 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.987989055 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.365798627 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.369309403 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.382067218 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.143029689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.369197815 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.111710022 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.382949767 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.360158987 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.888376127 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.983706306 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.329331471 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.366409681 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.995809252 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.197132973 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.667315861 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.365772948 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.224096476 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.669956848 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.367550425 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.363678493 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.363121806 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.362032127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.441837502 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.657930264 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.031675897 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.110315733 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.315911836 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.667090727 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.3735612 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.363595147 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.292550959 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.365297185 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.363869298 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.135025576 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.100825608 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.385451059 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.370416318 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.133921797 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.387884853 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.664718425 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.373265483 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.155147222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.369110696 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.444635067 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.364055597 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.371136268 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.387940789 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.669237301 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.370929577 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.365929545 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.092854422 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.941771395 seconds)
  done (took 193.275224116 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.358630292 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.357504824 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.356527214 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.356571861 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.357720075 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.365038273 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.357513811 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.357797745 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.363118429 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.358434341 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.357772459 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.366467479 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.36439948 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.357806074 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.358224959 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.359019835 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.361941455 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.364763082 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.358337677 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.357904582 seconds)
  done (took 44.454715546 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.365405689 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.961553353 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.913021017 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.370034811 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.364244628 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.365853142 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.426263116 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.364460852 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.364143121 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.683148411 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.557024123 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.38594495 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.364379304 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.364311676 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.913035274 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.361468957 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.683324872 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.975327781 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.372161774 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.963538977 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.356953061 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.36602441 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.366145353 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.963272841 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.685270844 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.680409757 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.432771655 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.991962876 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.368255353 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.366224609 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.989245955 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.37252424 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.367257568 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.983917624 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.388141753 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.379738724 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.365656712 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.428467414 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.430245381 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.700187166 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.040854503 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.680555662 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.386267394 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.554916681 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.372436583 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.355811688 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.970325194 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.388130707 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358480027 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.367482133 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.37483058 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.951747888 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393420411 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.951137865 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.387569184 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.370144562 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983899889 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.957097499 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.975842024 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.56134162 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.3859578 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.684653477 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.373457896 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.997799435 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.392338926 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.369661402 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.370715874 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.557353672 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.013632942 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.691629628 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.709512484 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.711237762 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.376242767 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.431053046 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.385979841 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.768479003 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434005142 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.824462568 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.708789272 seconds)
  done (took 125.93263453 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.664107953 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.487995974 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.794989683 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.996437522 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.366085881 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.494949195 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.481926178 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.639522142 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.371046108 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.458236981 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.047587955 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.468436542 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.14639659 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.442928615 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.466094887 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.519481861 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.779258567 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.371901317 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.043659209 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.031174834 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.367402053 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.474385659 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.9538203 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.603627224 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.372366631 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.937040811 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.345277879 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.067363771 seconds)
  done (took 53.459247726 seconds)
done (took 524.86521493 seconds)
SAVING RESULT...
DONE!
