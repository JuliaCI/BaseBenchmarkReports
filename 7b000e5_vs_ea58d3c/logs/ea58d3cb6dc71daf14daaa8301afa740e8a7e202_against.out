cset: moving following pidspec: 10187
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.324865378 seconds)
loading group "string"... done (took 0.542787495 seconds)
loading group "linalg"... done (took 7.223346053 seconds)
loading group "parallel"... done (took 0.154632847 seconds)
loading group "find"... done (took 1.159087097 seconds)
loading group "tuple"... done (took 1.713893436 seconds)
loading group "dates"... done (took 1.214492796 seconds)
loading group "micro"... done (took 0.215039186 seconds)
loading group "io"... done (took 0.913786887 seconds)
loading group "scalar"... done (took 36.092476253 seconds)
loading group "sparse"... done (took 11.162725177 seconds)
loading group "broadcast"... done (took 0.911902976 seconds)
loading group "union"... done (took 11.732180544 seconds)
loading group "simd"... done (took 4.295626093 seconds)
loading group "random"... done (took 8.805357939 seconds)
loading group "problem"... done (took 1.8582866 seconds)
loading group "array"... done (took 20.313820881 seconds)
loading group "misc"... done (took 1.631162764 seconds)
loading group "sort"... done (took 3.360574601 seconds)
loading group "collection"... done (took 16.557752268 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481403686 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125246331 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113238303 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117637826 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138199587 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114339899 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121651496 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083112906 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.773841155 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14563931 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11837924 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410388188 seconds)
done (took 4.937806361 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174474208 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083925568 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081422247 seconds)
  done (took 1.314552306 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065158472 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122488865 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06581059 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066026719 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066631497 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065373674 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065046992 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065143818 seconds)
  done (took 1.665572995 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074541936 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067857984 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067821465 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067524195 seconds)
  done (took 1.429162775 seconds)
done (took 5.80848928 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.75958482 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199606407 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182213284 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39576224 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127376175 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152691579 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63542753 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315126655 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184537868 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080429083 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102316645 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316443158 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106659328 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636312497 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075841625 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089514452 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136672966 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427004028 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066944334 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081908886 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088544397 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127957382 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088016933 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074275881 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142896532 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067345119 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131472217 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080011028 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065389914 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207132892 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172346801 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675790104 seconds)
  done (took 10.184299546 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098176333 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096308129 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068151777 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136146269 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095474737 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069774272 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070442995 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066888569 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086707832 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126901233 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088339064 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100571267 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065097385 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068085766 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084233758 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204074274 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08151042 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081412192 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06955874 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074990556 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115313428 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07830175 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076964675 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076785569 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127480549 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179644576 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098973255 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098591914 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068803466 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080416699 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115126074 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1253836 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06527978 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066110989 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123219692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093757435 seconds)
  done (took 4.615287717 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.284103291 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139561287 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089835916 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130238327 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064624886 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106155296 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065215168 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080363607 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.1985431 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.295083963 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575445891 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110427796 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103072058 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066951375 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070404952 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066306014 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.320686525 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107523458 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102646349 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080735482 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069275433 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068098885 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341384374 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06712841 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063316335 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06734452 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057119329 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121899169 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067376695 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.917382721 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124590533 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066253272 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100218277 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160865075 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087556251 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107909646 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.265537168 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068453153 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06467184 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148349076 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069310831 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063976058 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06605387 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083121041 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102685642 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111657464 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065580943 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065846733 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162691172 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065285888 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077843559 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.987773974 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153610576 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076415903 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063981298 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248159993 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085948953 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068793305 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064544619 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183365853 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13634959 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06464562 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066848953 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065886794 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067557558 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068913235 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348697561 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065939281 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.710013087 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070026402 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07579288 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068461986 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068845607 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063721697 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07217023 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07174106 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08464503 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065572957 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074275577 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06563959 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065102771 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066344148 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083366189 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360161853 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066257673 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071884916 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063759966 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085905703 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09604952 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065769043 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064531613 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099636212 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067277087 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.168973998 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101860213 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066264663 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083562503 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069612823 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112691118 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066885829 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093596313 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066185939 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095813406 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070057558 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103552552 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079623312 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067735945 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399967728 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064754652 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065053016 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067844063 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06445222 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066599032 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065542845 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079047495 seconds)
  done (took 20.755884884 seconds)
done (took 37.988161243 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.265943324 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074663247 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074891654 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074772061 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074536373 seconds)
  done (took 1.805123899 seconds)
done (took 3.025976965 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118612374 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098890816 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064008268 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095179625 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063868941 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098988903 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09887198 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080560539 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099209212 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063959738 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095847918 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063704231 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064132473 seconds)
  done (took 2.350534549 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083465475 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082961378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069618009 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081493094 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063200089 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081386317 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079825906 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087727971 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080259336 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071278727 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063283178 seconds)
  done (took 2.062830351 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082298167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083313237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06881326 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08092723 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062996868 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080252492 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080044048 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084758677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080808128 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072939349 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063211012 seconds)
  done (took 2.051746547 seconds)
done (took 7.67647575 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077781564 seconds)
  done (took 1.280798974 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.586638886 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.085120954 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080870566 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111256122 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182499057 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11870954 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275663178 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085954188 seconds)
  done (took 8.912347871 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087615935 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068518756 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082601254 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068649122 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071461515 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070640442 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071603333 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071014108 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068506701 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070389288 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068799315 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068045982 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070760299 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067448877 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06895416 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071379335 seconds)
  done (took 2.424983513 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091196264 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089891187 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072660184 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074626517 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070963082 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07149447 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073770406 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072649089 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070387421 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071554604 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073781407 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072901171 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070941972 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064288317 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073477787 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074856578 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070321529 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073653314 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074296207 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074237714 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073843889 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063849423 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070793881 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073291629 seconds)
  done (took 3.078710695 seconds)
done (took 16.909539241 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111445765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071378693 seconds)
  done (took 1.39229209 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082258669 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082788713 seconds)
  done (took 1.382714278 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082611603 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065379093 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088854939 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076930437 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065821649 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065600788 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085957782 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065586377 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065773764 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065661083 seconds)
  done (took 1.945864046 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068825887 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077909872 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069236925 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080160788 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073188699 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064198213 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0718408 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067267468 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076852494 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062502435 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070578783 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081173804 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070189161 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083005387 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071664949 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067646314 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069701622 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066280752 seconds)
  done (took 2.51399823 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066448781 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066202349 seconds)
  done (took 1.356426336 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067430225 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063085901 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066691652 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066324209 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063478455 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062044742 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063100766 seconds)
  done (took 1.672223562 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.377096282 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109956426 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297715433 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070382158 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080848594 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249019214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065122281 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06999062 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070047994 seconds)
  done (took 2.652447558 seconds)
done (took 14.141587157 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079797196 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08435471 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095144965 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.358388942 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091040256 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065491961 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113132341 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187719556 seconds)
done (took 2.309551883 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210388622 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.593386509 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.379320743 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195501352 seconds)
  done (took 2.395622338 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325167954 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08617697 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059022222 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066595578 seconds)
  done (took 1.775162164 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066855143 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06849031 seconds)
  done (took 1.367180467 seconds)
done (took 6.982280358 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066538145 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082381807 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065211915 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063124024 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063012114 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065414775 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063010859 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063095378 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065156718 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065329407 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067946958 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065549188 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065134121 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063251422 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063085303 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065111881 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062999081 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063357801 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064916918 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062477442 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064885621 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063119712 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063217644 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065245217 seconds)
  done (took 2.82725977 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084101526 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066491869 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070598633 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070680899 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069341902 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070647046 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070327493 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065631806 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070442333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067451913 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068878279 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069349972 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067098717 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069559402 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067477895 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069694709 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070807594 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065581499 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067608447 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069321326 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0706145 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065739915 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069077247 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070205837 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068705144 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069082079 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067278099 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065623662 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070630043 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069034343 seconds)
  done (took 3.320690866 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070252163 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063396437 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064016787 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069594586 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063429678 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064480997 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062863962 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063117208 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0644688 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062858694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064087246 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062826631 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062733497 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064050578 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063727551 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066676151 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078281015 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063708113 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063021833 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063901272 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066238505 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063596425 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064318826 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063537034 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063435656 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062606544 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06355457 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.175652281 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063454399 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062595462 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065736553 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066237328 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062704469 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069604496 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066559136 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062875003 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067518844 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062372612 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063065776 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062401282 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062314599 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062754813 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063216791 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069213068 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062524851 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064175578 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063079185 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064335006 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063897213 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065217922 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062289081 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062810727 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064356585 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064142372 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066532136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062619742 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064243607 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062574121 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063802461 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06276336 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063077437 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062308547 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065428444 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063295911 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077561332 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069074112 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063293227 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0647098 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063779568 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064987986 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064214018 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075694555 seconds)
  done (took 6.017899632 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091367603 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086044612 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065330645 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064693135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061282514 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063617227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067772829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063451457 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065101764 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069088319 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064135655 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065100849 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064630519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076249425 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063927674 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06460988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069020797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061258379 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063208044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066698483 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063668744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066441791 seconds)
  done (took 2.742822128 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155791999 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070759637 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104823952 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072408696 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066879273 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072382928 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069061634 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069632354 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069321675 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067593797 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067253791 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069519527 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066945806 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067722843 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067474939 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067486678 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069652509 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067766307 seconds)
  done (took 2.610809228 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078074253 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066136711 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085642489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065374011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065330294 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067655604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070482915 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073546639 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067641778 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06528694 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073533211 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067454526 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067924931 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065305603 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06755582 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065046378 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067673313 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064996728 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07336842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070281873 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069957505 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0731896 seconds)
  done (took 2.780509462 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079836331 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067658943 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08235774 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068173952 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061957631 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063694498 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069235916 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065424338 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069332068 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067058195 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065452839 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063915967 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068953841 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065401304 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068800387 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06535438 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067162853 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065334288 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066836121 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061119493 seconds)
  done (took 2.604099084 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087130664 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06777876 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067551076 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076200075 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067465363 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06663322 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074442533 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067021082 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066886023 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08846269 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067294245 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066780752 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074506224 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071644879 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06713873 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0747107 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074298881 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074262316 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066785456 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066506041 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087191165 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067063885 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074667318 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066523356 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066821593 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06689421 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066912295 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071167523 seconds)
  done (took 3.252321619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067130131 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065091511 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063587472 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063026791 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062754982 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063427968 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062832487 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063155862 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065074353 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063186177 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065693002 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065287236 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065698214 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065655348 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065382251 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0655359 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065346348 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063156753 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062914134 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062917464 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065089952 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065367282 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065222601 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062928857 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062731273 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064806933 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063131053 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062811599 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06519066 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062975683 seconds)
  done (took 3.183564166 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075859187 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072600354 seconds)
  done (took 1.405335184 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064301413 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079130774 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062993231 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069514599 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069281957 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066278211 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072863114 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069778024 seconds)
  done (took 1.80640912 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081714806 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.0774922 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068054976 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08030521 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076172432 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082894406 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131575416 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066881779 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072374529 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064096866 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079426105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064739762 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071696644 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066008429 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071003906 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072027546 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06324834 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071854713 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068102222 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064711658 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066730077 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074058442 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068324007 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061532172 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067793569 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087440324 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076681227 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065778682 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068617512 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073302459 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071477214 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060123165 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065213357 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066105655 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063134509 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074734476 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080627483 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068417335 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074156353 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066520768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075833037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060458981 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069708466 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071830285 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075102734 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065854053 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065879537 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061030141 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063570459 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067575586 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060559305 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06553295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059973626 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075083224 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068890695 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075781998 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064383966 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067060888 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068409659 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068739679 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072454593 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067381501 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068694005 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065310345 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075011574 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070154794 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074520797 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061263078 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060409175 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064006996 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075622315 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087822525 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072126823 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066746642 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066805264 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063509665 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069207247 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066452439 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071212112 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072599027 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065578322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071118866 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073263662 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066962616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06789195 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07380909 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063815221 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068691844 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063733437 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081784739 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064497198 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063775546 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063474556 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075676624 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06906352 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065344608 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063841054 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072390333 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05989619 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066369509 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066319224 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066313498 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076253983 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070245954 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071039901 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073947636 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072315217 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065072822 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067337164 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061861987 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065462928 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063722636 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071539752 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058951555 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067600744 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065540427 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065040593 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072858712 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.188988454 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066263608 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074661694 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07226524 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066284406 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06356317 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069944219 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066146545 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069755801 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074920716 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065124778 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061215419 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061443482 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069552571 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06606236 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069930515 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071316132 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069210115 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062000529 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064708628 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072142206 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075630866 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066818244 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068228738 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071994151 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067488514 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065703414 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072933169 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068747927 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065938727 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072613352 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067045758 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06129445 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069279735 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06906429 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065169924 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069774228 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070699492 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068608766 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066288655 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065016594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073026243 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067209968 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065613201 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066690516 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065125714 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077152142 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067778248 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061514526 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063312703 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075265952 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06450987 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065957222 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065943423 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067763511 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067378088 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064160854 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065172246 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067773585 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075798883 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069702219 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067395086 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071239975 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077726412 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066032165 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068709255 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065721401 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066607624 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066969854 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074914438 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071147412 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070417492 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06835888 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062637581 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071391274 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073106376 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065129092 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064031967 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065352922 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070009463 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07166523 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070115313 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066821904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064519694 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067078686 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069299368 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068558707 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06587992 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065247678 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072751284 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064518208 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072851601 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066815998 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076361061 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069181854 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061579324 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069438389 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064408499 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072065609 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061909655 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064409297 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065448364 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067348738 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064819418 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068152193 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060060389 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072696441 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073630926 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066488282 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065098204 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06573574 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071688031 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066049127 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068192282 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068013062 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070136296 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074703081 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064399225 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067752934 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07436097 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063984132 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058698835 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.198855006 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065344042 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065877891 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066305233 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06459113 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069766535 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076374127 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072776153 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06070509 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069108361 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06488443 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066006938 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062445579 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070421808 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070343707 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067257416 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072601175 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067709605 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067060645 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070062952 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06530459 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067204661 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067843919 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069853812 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067052627 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067942972 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06571712 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069294749 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065185245 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06481926 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067832651 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066119334 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067153745 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071951171 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066543116 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06671351 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06837138 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067706313 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067320386 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0663041 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065565176 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070017822 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067136445 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06654508 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069474335 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061060064 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073186641 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065999759 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073789849 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067007009 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063421979 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073613766 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068750444 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07292079 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066808832 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066505609 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068375029 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066181773 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069401294 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07421032 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064662756 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077108001 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074069567 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067286936 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069473347 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067015622 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067466723 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065434536 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067473775 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06714208 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066152988 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065973425 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071080522 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068525704 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066567361 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067865411 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066138721 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066107392 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066453676 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060139222 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065236553 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065345009 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065724018 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075677153 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066202541 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065893744 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064586569 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066921265 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064876119 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062715876 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073914512 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075144494 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066425856 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073497431 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065655089 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067646153 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076446662 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060413228 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064585102 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064039053 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063553516 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072935749 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066112036 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074799839 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065504003 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064839235 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062874471 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066422094 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064248599 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060487261 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063767929 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069551755 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064427704 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064127613 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065394474 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067589553 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065367452 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073304892 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064116803 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064998485 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064745318 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061730098 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063952553 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063650037 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067092429 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.197193958 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065323624 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064533864 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06653839 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067930375 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067738914 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066065019 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068508254 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07599407 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066623028 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069419782 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069658206 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061223889 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069193972 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066286116 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066033661 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065454873 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070229855 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069716275 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067147499 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075051644 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066302963 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067426055 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066327309 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064271862 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066904953 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065585656 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066277405 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065706893 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067514986 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074862717 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064543979 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069608516 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066577426 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066583274 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072970675 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066943275 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069831294 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072409318 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066045166 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068174353 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074535007 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070595442 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069559726 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067037319 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068052703 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071716925 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066041083 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072969043 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066212007 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067435267 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068294378 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064845199 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066359066 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0663288 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065602835 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071883294 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066936283 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065473887 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066011359 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064310315 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067284519 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069714225 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07390324 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068801758 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068822244 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061929981 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063587744 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067667257 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064116378 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068102332 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068440735 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071798365 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067924959 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066033511 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064580347 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074383637 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071389041 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069305351 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063539369 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06908237 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066335721 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067923181 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067048681 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065980404 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067093917 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06980463 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067076275 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064981997 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072701614 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069391394 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066586662 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067376653 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066755609 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066404522 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061242792 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067073958 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068260759 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070988132 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06802625 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065995129 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07630817 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063748917 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066086876 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069096608 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064896986 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070658496 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061254236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067740954 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067145091 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066856538 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061132533 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065351141 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063466432 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067561437 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064620698 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060546519 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075581019 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072958658 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067439559 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063440238 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063225869 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05983552 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059648875 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063768368 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.19558212 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068794354 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076498949 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065684679 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065140826 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061474094 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066294685 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069887881 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069692773 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063979374 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061440269 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065223371 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069760673 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071008418 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064931697 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066003086 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069974756 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068525902 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064370026 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069497391 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06376289 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070333168 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079107151 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067544388 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067706403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073472174 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073954085 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0672822 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061492226 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067584002 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069557495 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066928127 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06760641 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06707345 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08115819 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069044557 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065409715 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0655182 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06915626 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065856524 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074880565 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067151462 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067776154 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070942284 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067915722 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075281215 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069191026 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073507323 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068966789 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069133001 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064927344 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066967644 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064365277 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065472789 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06744909 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067023291 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071081039 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074893865 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066019709 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077061416 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075126096 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067990057 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063184778 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06545942 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065822434 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061665607 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068043539 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064357653 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063858193 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06447747 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064688932 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067784243 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071256516 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066643076 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066898573 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065703765 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060164083 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068570819 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067959309 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066401959 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062340118 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066206053 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066324961 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069655055 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068896865 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063232508 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067301337 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067488745 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066630111 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060914095 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072056965 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064646607 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067722144 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065072703 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065605656 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066655803 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069599003 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070720477 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066794462 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068390938 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069652221 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068033001 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063524416 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063391828 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071102665 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064313406 seconds)
  done (took 42.336608937 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102345365 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062917403 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061454252 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062256403 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073067914 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062438806 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061427997 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062610211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062333717 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064832285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061457821 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061578848 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070115029 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077031325 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073170446 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066112841 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061251806 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062815387 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061436418 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062210403 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070040309 seconds)
  done (took 2.748905468 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075377956 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070068245 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073043023 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075237674 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066642046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070075337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071683232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070083936 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083828446 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066035912 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075458465 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069960981 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066726433 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066210317 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06604319 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070028574 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074967809 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066840976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069895255 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071968494 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069878023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071492956 seconds)
  done (took 2.884913561 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068012396 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065036911 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067385528 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060729189 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065395899 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060830126 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06878387 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063401163 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068741805 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064349688 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06427745 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064364108 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066844762 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06074174 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065457516 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063069916 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10735767 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068465084 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064913572 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065807653 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061415359 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067652682 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061342492 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061410758 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064479866 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068604079 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065597694 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063336587 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064831934 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064281388 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065096251 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063177894 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067085967 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065433263 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06404371 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064491794 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065195886 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064863492 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060815563 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063344714 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065930835 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060956505 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065963725 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066417346 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063211392 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063049128 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066275682 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064768496 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060442238 seconds)
  done (took 4.533434693 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08058295 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106646815 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066839366 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087906165 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079155634 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074622504 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068500336 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088946531 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062606519 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063872633 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080806896 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078755124 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065238304 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069610299 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071565791 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065549795 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066324699 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064188565 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069231024 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064577022 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069291634 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070969643 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078879992 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077768948 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068873683 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063661447 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064462372 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069099125 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077392225 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069465982 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069112298 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070113418 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.0804385 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066993978 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064561431 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067009293 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080484431 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065665696 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067763863 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062928828 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067353752 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069198163 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071526722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080613132 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065251842 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069889483 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064702494 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062350257 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077019776 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066822924 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072213204 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078716513 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068383819 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065181233 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06924989 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079701453 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064577212 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063026826 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067820839 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076973415 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063022162 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068818277 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077992966 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066676311 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071463799 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07818749 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069736423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068541871 seconds)
  done (took 6.310059998 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075044131 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.0717604 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080618266 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079144064 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071896027 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071825246 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072048725 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071337616 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071333353 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07629525 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071438743 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091944806 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066802734 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07379939 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071488743 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071576417 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071960894 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071605384 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071420721 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071638673 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071851963 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07918511 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071306456 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07943754 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097497155 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066905078 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071540822 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071545725 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079588089 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071451606 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07850638 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071500256 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071755158 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079666383 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078314854 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070954992 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064707917 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071195259 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071359601 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07137643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066582512 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07887444 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070842859 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066440581 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071165229 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071213051 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078717047 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078666807 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073886944 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075619229 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071349774 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078861654 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070752339 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071218801 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078950977 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10350527 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07885496 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078957463 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07129013 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078708496 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078939736 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085767548 seconds)
  done (took 5.995063672 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083621576 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074224753 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075316494 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061164898 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063392438 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069274134 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063378516 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063863693 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073581248 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073811757 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075786792 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068844812 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072148086 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076092185 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068940191 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071604473 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068988266 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069332928 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073195716 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069122379 seconds)
  done (took 2.767986535 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074699822 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082175903 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066517465 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071005911 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068316331 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071003088 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067703377 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068394171 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06615318 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068298197 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075094423 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075035624 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066442682 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071529145 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074850276 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070818757 seconds)
  done (took 2.481710945 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074647543 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071260313 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07931643 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065576357 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063751575 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062086651 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064992886 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06104634 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061798508 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077117462 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065327884 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067325425 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065537391 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06438834 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061914539 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06804032 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061613097 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062824711 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065016886 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077366954 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075673711 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064232899 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065775868 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065113633 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065503018 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070274758 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064703737 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063234261 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063205742 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065468198 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065795444 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068616923 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062631769 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063053344 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063833815 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062634516 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064710976 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065147991 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067574464 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064870694 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063131545 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064634877 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064766176 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065675078 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061290247 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065323229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061337961 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066961226 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062966945 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065100563 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064622155 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067279693 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065505152 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071879089 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06778556 seconds)
  done (took 4.97750897 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079273967 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069420366 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061233028 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063823443 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069086033 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067104995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068807002 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066957324 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067334089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063587039 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067516609 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067651303 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067345038 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068539507 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067086617 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068985146 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0617945 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066855808 seconds)
  done (took 2.569973885 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071109134 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065255419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071970461 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065518526 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065697521 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067442535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061502444 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063827776 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0636069 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065530387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065097525 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067677348 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064053867 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067318573 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065331051 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065103128 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067243014 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063922758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065297002 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061307457 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06734015 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063675895 seconds)
  done (took 2.794971719 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092609545 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080873628 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136957253 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078524715 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082568306 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071209712 seconds)
  done (took 1.895834229 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091002497 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079201914 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065847467 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087170879 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072424671 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066460343 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066552358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066813504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07549475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075189986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067103524 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074976256 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075348304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07444898 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072396354 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072502258 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066909925 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066754411 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065740404 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082818319 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066920134 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075285249 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066438692 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066545704 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066496524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074485397 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075460031 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07502657 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066855023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075044044 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072729634 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06659532 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075128241 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075184088 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068278108 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075655478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067505099 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083528506 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072651183 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07454424 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068601928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072882859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075459043 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071813368 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07538328 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067310949 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071598783 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066898637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06698991 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084990657 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07283228 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074516236 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072506713 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07517258 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075237975 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085264949 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075100261 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07419464 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0727058 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077754857 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074475648 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072392901 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074350989 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075492354 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072547809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074298909 seconds)
  done (took 6.180259634 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082912546 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084877322 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067721467 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075478935 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074725246 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066918946 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067270921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067081386 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06719313 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06648293 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106738966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067377556 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074856644 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074741934 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067174137 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066995316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066986828 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074294321 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066842223 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084911848 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067179564 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074603755 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074717263 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074467219 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075840249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072575332 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067069836 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06717741 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067292132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067106452 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07184274 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067238584 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074654706 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066645482 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074913096 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066784325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066980255 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071660493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066824639 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07222955 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07470458 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083351735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066869743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067028983 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075187011 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066951088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066996661 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066533767 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067058725 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066597202 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075624996 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075422136 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075329824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074355123 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067149756 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067210719 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066719186 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066888087 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067024474 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072456418 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074493379 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066524578 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08481387 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066618619 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066875436 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07472812 seconds)
  done (took 6.093880949 seconds)
done (took 128.351988556 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184944832 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169545172 seconds)
  done (took 1.69961085 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069150899 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094975332 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075881904 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128015379 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06623907 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098700589 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09827432 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077388038 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065864905 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066239696 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065568913 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067239056 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130172568 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066014905 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065342233 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067411927 seconds)
  done (took 2.661688366 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097844612 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155844507 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098349828 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064568458 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096667567 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07240865 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064418861 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074179628 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070472724 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065080758 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072368885 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069769904 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064402809 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.06991404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070436707 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072028733 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064579856 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071829252 seconds)
  done (took 2.779115792 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101398677 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090274614 seconds)
  done (took 1.556251077 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155708099 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103984531 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143287904 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341823053 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165750824 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228309891 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126138709 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126299967 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115471986 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123361941 seconds)
  done (took 2.991844259 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098445651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149976359 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254012505 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114558967 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071479086 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093517482 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115477504 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07684167 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080064299 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080455911 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079612181 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075844801 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098657064 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072997973 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073257168 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075239207 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101683159 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072326799 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072909247 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075752326 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098792654 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064877406 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073007039 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071461845 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076860864 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077000196 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065145153 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064524231 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076211815 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072858646 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076348407 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092048392 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076531862 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105276538 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069218006 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106151556 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07532698 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073400299 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073296548 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073549445 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07848118 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078349139 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072908066 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075242824 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064962986 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07618297 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064707938 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065267922 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077164789 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066136523 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077337687 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076051334 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105239159 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066075828 seconds)
  done (took 5.926473057 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100744529 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102793436 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071302496 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108509653 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096631182 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071028155 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099377636 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089902991 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101552238 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09181089 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087857314 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070369721 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080719289 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082122291 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108871839 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100358914 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094799152 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070234402 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100664202 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101295073 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068293841 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094348584 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090074704 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100063743 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067195747 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069934271 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067632576 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070293517 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075740506 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076971544 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069552595 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100429951 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083459402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077363139 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067008536 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067779009 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068122438 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078641838 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096361158 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077432564 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076718712 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066779867 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067299794 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068884075 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090065278 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066730229 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077632962 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07906163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0779712 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069200217 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069569843 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067627536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068989491 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079255616 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076535431 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079549883 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079148259 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068144856 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068028231 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071769108 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079879244 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077736904 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077925011 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091927447 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077696642 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067926604 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079024732 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083035321 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068388505 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06952474 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06822267 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069496495 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069631996 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077259851 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077460732 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069828647 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069029554 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068630308 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078913253 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077665181 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068037993 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076154301 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06679852 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068420717 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070033867 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070234435 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076873071 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079201486 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070512921 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067990993 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06917731 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067842149 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066470611 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075659445 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078834127 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076627495 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076290228 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067945767 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076595345 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075711624 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068388043 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076799971 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0666925 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197249025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070986596 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078437501 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077654346 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078223185 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069402562 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068181429 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078039486 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079699776 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068945848 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077552649 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080230836 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079282338 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067587455 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081014732 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068583789 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079794176 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069785928 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079298666 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068444331 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078712762 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068493796 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067771318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069060425 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078661341 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070641513 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068332842 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07042546 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069688271 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079344389 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081973723 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07021798 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080915362 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078166741 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070654552 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078597517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068742054 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079089021 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069730298 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070406444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067446648 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081846855 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068980524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068930486 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070562325 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079716221 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067912087 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078947 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077449649 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06689848 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080969498 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07979817 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076072228 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07926786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070946349 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067967696 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068420431 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06952007 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077125349 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078808954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070266007 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069127888 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077139671 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078445971 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06752737 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077114669 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07711577 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077530865 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06856837 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06922784 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079274464 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080389961 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077070719 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077168069 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077223458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068375916 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076488571 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077009962 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068084582 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083635859 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067769321 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081116267 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077974498 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075427267 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077936882 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079563632 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079198293 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078874318 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081728247 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067106877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06811253 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078446845 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067750284 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06878449 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076896457 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069902979 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069411254 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082142299 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068565408 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078068809 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065694792 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075989719 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065825913 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068330834 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080433016 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066910279 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068301394 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.207852144 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070251468 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077704285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080735514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078191259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068979078 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070314013 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080337811 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078280299 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068691579 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068727186 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071050974 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077348014 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077403984 seconds)
  done (took 18.638046126 seconds)
done (took 37.626114942 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21373073 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149645545 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178994992 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11855776 seconds)
  done (took 2.123186068 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12175048 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10007995 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093828166 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064539334 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100791236 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064437925 seconds)
  done (took 1.948288309 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312063784 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210348711 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181279143 seconds)
  done (took 2.100664705 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196322783 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186052505 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391904545 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250901837 seconds)
  done (took 2.53461191 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14185994 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088790845 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066920739 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082087429 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132991421 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159798642 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100791268 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124945961 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077585716 seconds)
  done (took 2.428473066 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146048155 seconds)
done (took 12.677457191 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110889767 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.164695987 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108475244 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144448114 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087936947 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.190044565 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.213688004 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.184997734 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074723879 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.175589759 seconds)
    (11/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.202409495 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108263863 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180729498 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081090345 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109131729 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07677632 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072822021 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.146865018 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.227118072 seconds)
    (20/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.159245417 seconds)
    (21/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109282301 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094580363 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073129137 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070968782 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.087267295 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051671904 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071060025 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149463275 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080252299 seconds)
    (30/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.072114285 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089971707 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.211094636 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070899593 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202219493 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070695387 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071800989 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093415341 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107399593 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075931853 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074127827 seconds)
    (41/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072555297 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077207381 seconds)
    (43/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.162640824 seconds)
    (44/309) benchmarking ("sort", Float32, false)...
    done (took 0.125998351 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10749755 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09058235 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071803702 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064593022 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071655748 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.170171473 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169104516 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064598977 seconds)
    (53/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148362505 seconds)
    (54/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.096797531 seconds)
    (55/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.103819319 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068325437 seconds)
    (57/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070694434 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165863726 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066451904 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092898365 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099541767 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05128295 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064441114 seconds)
    (64/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205411588 seconds)
    (65/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051228052 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088058324 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070922992 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086976152 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06600845 seconds)
    (70/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.19426409 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080815459 seconds)
    (72/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072104868 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051094543 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06597843 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06102924 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079107636 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.147478659 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090672821 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.194704951 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07179564 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.13197308 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089106363 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.065209802 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.17300305 seconds)
    (85/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070643629 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.213871794 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148984054 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076636434 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072456807 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137874724 seconds)
    (91/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067590929 seconds)
    (92/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101018098 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094291716 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072940834 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052031115 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072127625 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.063024926 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.104543928 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090124584 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074994717 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.165198149 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074712248 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120663721 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.371727731 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067319344 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065871852 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077424984 seconds)
    (108/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099078565 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085493146 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072224936 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.147720109 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072579566 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072291237 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065930237 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072361648 seconds)
    (116/309) benchmarking ("sort", Float64, false)...
    done (took 0.123883503 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073642395 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103057096 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.132501323 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10749819 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18474337 seconds)
    (122/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086931487 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086997479 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06450715 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076100511 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051002657 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.133110979 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073347769 seconds)
    (129/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079773981 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062196186 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071752764 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111729877 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185087815 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050921406 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070333001 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05123108 seconds)
    (137/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116529422 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07198874 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090444938 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063202803 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193610316 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.133123385 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066837442 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070864032 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088659701 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.153680893 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051095972 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133741991 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071460439 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157079884 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051033336 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.157184885 seconds)
    (153/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060415151 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06538893 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050971792 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052873375 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064541744 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064205973 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071561014 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094953518 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075105784 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119906009 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088915182 seconds)
    (164/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074989677 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065303605 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051884519 seconds)
    (167/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086562152 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.0506367 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07218863 seconds)
    (170/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172991709 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080415874 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051008178 seconds)
    (173/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147447128 seconds)
    (174/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068007829 seconds)
    (175/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101297047 seconds)
    (176/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059989026 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181595193 seconds)
    (178/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05218006 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052449224 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064556998 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05324215 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065137117 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062042357 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070544806 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.133777941 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051839015 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093430288 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077870393 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098076594 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13305857 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063817554 seconds)
    (192/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087368049 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070803644 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063929912 seconds)
    (195/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050863226 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.321260328 seconds)
    (197/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051574676 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05146219 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07420112 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074795529 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051126833 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064575493 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052830784 seconds)
    (204/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051726427 seconds)
    (205/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067209593 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128651925 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085893752 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063613021 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051200445 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087330079 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051371001 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07053048 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07373513 seconds)
    (214/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07428967 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074840023 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065039011 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074262882 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071841196 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134162052 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184382676 seconds)
    (221/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070639368 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068085933 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066787903 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06567824 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064830334 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098940222 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071726117 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.159814253 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071894712 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067387422 seconds)
    (231/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050845788 seconds)
    (232/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06143375 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070565235 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051063112 seconds)
    (235/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050559183 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162566375 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131123692 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063513916 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050879227 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081321738 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085816181 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.128455757 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067043145 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064831434 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05405349 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06538972 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087666298 seconds)
    (248/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106610929 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071416687 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064960873 seconds)
    (251/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061217821 seconds)
    (252/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050741412 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064399818 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110552908 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068163372 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088452315 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071148496 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052325602 seconds)
    (259/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061135814 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050607312 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.132856379 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07191754 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.161721386 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.168461382 seconds)
    (265/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076859604 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05203312 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065230766 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.14881549 seconds)
    (269/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066256263 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06738638 seconds)
    (271/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070458585 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065087681 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052709614 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072592013 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052033266 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064737974 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051806609 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.127779797 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051305511 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.10566628 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065440837 seconds)
    (282/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149089439 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071620055 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063395143 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050617821 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062957652 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064999995 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090787358 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071517664 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066831974 seconds)
    (291/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068633824 seconds)
    (292/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05139642 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072672592 seconds)
    (294/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066507383 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070370471 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052123142 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052254596 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051110208 seconds)
    (299/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050811898 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064549075 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051020729 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065923503 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051277986 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070029917 seconds)
    (305/309) benchmarking ("sort", Int8, false)...
    done (took 0.137502465 seconds)
    (306/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072260317 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052039913 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063627276 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09277865 seconds)
  done (took 30.197418555 seconds)
done (took 31.607792878 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08429783 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091103792 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073924165 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091432422 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079520618 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07524885 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071499005 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077130337 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078671185 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08015362 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077148444 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054395226 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073025833 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073347839 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073247197 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089711659 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07690883 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071818614 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071934128 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063870353 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07177604 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065034996 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066209486 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054344425 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076679425 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071263207 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071639142 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072975548 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065127983 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065062726 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0680882 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07254951 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064909282 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077016211 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07084409 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071737033 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073651234 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075341529 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06631658 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065179208 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073216861 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06523072 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071560694 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07261386 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070806449 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070390359 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072317368 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076987424 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089918284 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067028298 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073269616 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074541237 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075545169 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071252794 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068593681 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072254389 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069674703 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08978007 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072286221 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067170589 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073202885 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072949805 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070168983 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072059714 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071791335 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074176542 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074193687 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069884454 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073502419 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069886392 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064185957 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07176762 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067806551 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065112995 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074574773 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075589533 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063532241 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069735657 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071965834 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070614558 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063926472 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066637333 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065957008 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070224774 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066549306 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053850391 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067989636 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070532889 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063794881 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071921561 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070431026 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070854538 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065904179 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074208858 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063887685 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069415688 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064463972 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064148259 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065903875 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068139182 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064267156 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066478376 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072920049 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065891792 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070242175 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077509455 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064256693 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070806508 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063612525 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063878499 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078234763 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073498861 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064697802 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06680385 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063892991 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.0716627 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064313245 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064714615 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06474023 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064484757 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070709132 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064535475 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066445598 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071254046 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075966776 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06354764 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066605532 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065705308 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063439279 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068449323 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063379291 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063267971 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06484263 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.194146028 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067478091 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06567085 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072105512 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067230062 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072811612 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066838375 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07264753 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069591045 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070664201 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070263724 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06382756 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057925108 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067211283 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067477131 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066325705 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065255713 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066784393 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064654868 seconds)
done (took 12.294270233 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067610471 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1411266 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097598331 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093894301 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085267101 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065760285 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075304835 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100469268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066892216 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101074012 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086259326 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083944077 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111018367 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063731522 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065774665 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068903469 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066602536 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081084304 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099855435 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085326876 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107845031 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064793962 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093275389 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08906624 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086040853 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091165164 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06591475 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068799296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068407923 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099077599 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085182859 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068969375 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066096635 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099212665 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09143389 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08238905 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065642292 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081196183 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066328588 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065024554 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080132072 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09669769 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078643222 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079136639 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069160854 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068445065 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066316313 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082655021 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088253019 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077202552 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085211441 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101724926 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067485421 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064794229 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06392058 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084229274 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064350348 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068228724 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065489683 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067224349 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065830877 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068468397 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080041989 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085404122 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06892365 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079093935 seconds)
  done (took 6.741810616 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084510417 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089840002 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081853279 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082274537 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064842686 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065583916 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065778816 seconds)
  done (took 2.030273305 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068324823 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087413025 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088206728 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088084162 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083698761 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086485318 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074845644 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066281046 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.0794463 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066828383 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086368184 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101326613 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066622313 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072088545 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089713734 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06598377 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089426507 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06586954 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068500477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088954697 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067478027 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081190842 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069072083 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066628609 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079986422 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066183494 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112234869 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069659866 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066986438 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068867318 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063781182 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10568931 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079148445 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074823889 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066054654 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080124882 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079752072 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064033235 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081821687 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070897868 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079878924 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065941543 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066299343 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063589657 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070174541 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076455052 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066664123 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066184867 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06793541 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085364821 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066143723 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079147338 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06900515 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06820051 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067042092 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069794577 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075520448 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066548482 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084879078 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066670897 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08174247 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081292286 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079736503 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081937165 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06840921 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07908056 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079397563 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068853009 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067606525 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068892511 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08175942 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063908707 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066980393 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076200988 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067204736 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08847578 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088145132 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067009962 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075124198 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066341328 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065724446 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065801289 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088300529 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06844866 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065941555 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069831504 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06840585 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063975342 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064604606 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069297925 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063519678 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067537031 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06887707 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068438183 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0686193 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082020472 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068738099 seconds)
  done (took 8.680507908 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070300836 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067513734 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069217897 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066611714 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067676663 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06698308 seconds)
  done (took 1.92620134 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093744441 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068274016 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080289178 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071911329 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103514385 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086007441 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086005427 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077661375 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082610928 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078389076 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085451388 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087033308 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091944589 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071922407 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085019096 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071175156 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086348034 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074672697 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077484792 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072426309 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085859081 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071863278 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072594357 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080259185 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074671641 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071552392 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066574627 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077972246 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077307964 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078059461 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071623282 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074704735 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070284798 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077285813 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085868935 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070357631 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071158379 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076287662 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071374229 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074966754 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086843035 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07222873 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073587836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07621732 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07735649 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070038804 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076346626 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075327443 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085106422 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075903053 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076280165 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070745577 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074069731 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075912354 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06950233 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077325016 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075817414 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085162561 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07128187 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069467297 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068254462 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074585044 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076635706 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074454582 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078077496 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07585087 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069282177 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071686019 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072073668 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071059369 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076427433 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068234077 seconds)
  done (took 7.019662155 seconds)
done (took 27.882828323 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544002722 seconds)
  done (took 2.027556192 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594589206 seconds)
  done (took 2.106569301 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.53168752 seconds)
  done (took 8.038235025 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401506868 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480118611 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690413488 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130422432 seconds)
  done (took 3.249203089 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.677534624 seconds)
  done (took 2.193588283 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211175063 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196209807 seconds)
  done (took 1.930135263 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.390036619 seconds)
  done (took 1.895371795 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105038717 seconds)
  done (took 2.611579584 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262052595 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162526701 seconds)
  done (took 1.941221599 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461881746 seconds)
  done (took 1.975194421 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86055003 seconds)
  done (took 6.375364833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214506196 seconds)
  done (took 1.765608812 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241833018 seconds)
  done (took 1.753224479 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.666117512 seconds)
  done (took 3.182373889 seconds)
done (took 42.561606016 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080897088 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079851822 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080465263 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07754075 seconds)
  done (took 1.8203415 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076945301 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072470259 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075482498 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071591739 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076394301 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071435859 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073118618 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076080601 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071567888 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072131408 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071643302 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071550751 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074263998 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073302625 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070090623 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074099685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075156609 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071949331 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074745878 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071490792 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070244671 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073993823 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07397325 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071057608 seconds)
  done (took 3.273263372 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078837736 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071581053 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074011285 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071055385 seconds)
  done (took 1.821523536 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078157169 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091679236 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088277059 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076422258 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091228689 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085401297 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068672392 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068428856 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072414951 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075767833 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067266251 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094670748 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086552528 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075617388 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077873752 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065427502 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067141588 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085846937 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076637808 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076753855 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069233484 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076143416 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067424437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086931072 seconds)
  done (took 3.391607323 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078570843 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103335244 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076328359 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086978812 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088745725 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064687072 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073385394 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08842764 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122514685 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064468307 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069042965 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064962478 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07158784 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064613519 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075443798 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10375245 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106670472 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067593192 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094577498 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064427292 seconds)
  done (took 3.161932149 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074799011 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069178492 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064988784 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067573108 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076667642 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071842785 seconds)
  done (took 1.957610827 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068958793 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066946306 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06680692 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065850111 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071137549 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066603075 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065202794 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066839813 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066347212 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066135665 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066185751 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06529671 seconds)
  done (took 2.329637036 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.195331522 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067523079 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068149118 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065096672 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069675794 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066219008 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079305381 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067238883 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09017323 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065560873 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066145719 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067439986 seconds)
  done (took 2.497615316 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203490855 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075003822 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234092279 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135259358 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110004707 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113481848 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103259579 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11210653 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1418784 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100271075 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165957966 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163563155 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105322892 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135283711 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087936487 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096723263 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152866465 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160422939 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102394452 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163660792 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141663601 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12320365 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145109104 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10004334 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104081764 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119834764 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069938452 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078982154 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167863653 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129434839 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143494513 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10896938 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091816066 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173931385 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168690747 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140625573 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132913963 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083002111 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100513525 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130808056 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194775669 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086781464 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158409125 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242461048 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08049349 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131765648 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119269947 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123180303 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106004296 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087930404 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143286715 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181117272 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137241373 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086267225 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110418226 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113057405 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113288227 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102685288 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179378476 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159047197 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126090511 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070389644 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098127561 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151083033 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130060772 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108361693 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125050387 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091885524 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131796924 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151984392 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117146192 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141756409 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127504503 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087099794 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117590772 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138269774 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126472961 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167635981 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122784336 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07164534 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123046511 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102010698 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079888851 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14153155 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074306736 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173151588 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097736245 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104099128 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110914979 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10704864 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107155172 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158140759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140818163 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241257086 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065774803 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103272759 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119591662 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146082684 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086245761 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107730163 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114950818 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.0770443 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138746133 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074312983 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121936098 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075426669 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124221269 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131094954 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074737288 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119938316 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10051579 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098389731 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131725889 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158541864 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088783775 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081482012 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164702502 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121093874 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103563408 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142330385 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154266572 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09802645 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102870368 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148158856 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176917055 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088461667 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16093131 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106074833 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082594083 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086681176 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121587626 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110598787 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120502445 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080773663 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116931963 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166038524 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07435578 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093349454 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131831612 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077996866 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07987965 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101929722 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098720393 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093493176 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098441922 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101917141 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134842224 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120552062 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102993281 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265472072 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097370448 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16846436 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088305317 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098597547 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103012465 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068858325 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135331802 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156190682 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07856406 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162875637 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122054383 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103252059 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118051148 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082312313 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138557714 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077997442 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069567563 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143238516 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109715315 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109529584 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149498265 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104244491 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127029254 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117705996 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133192725 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131340423 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128259121 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103859296 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087010015 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11010909 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124985548 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072216482 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090004637 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078728098 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102398509 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094350722 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082089594 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140377641 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122728514 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098945117 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109776138 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095170218 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144869104 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075579663 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127310932 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117594266 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092680536 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150057179 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149612512 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129247001 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097461804 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142630747 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068888356 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072818586 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087504088 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264330825 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08248089 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083095306 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116373052 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144906912 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128777532 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136871869 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110908468 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119774712 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153304766 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069071388 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114619012 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145392725 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119915271 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103006811 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089451674 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097585935 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140114841 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107246081 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180300457 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112130813 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124383715 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150567538 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09782844 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079158828 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101865385 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133179794 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103218532 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142506673 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099042575 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08685456 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108594935 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073157414 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098154612 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125708393 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118618578 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133278125 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113067307 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131232887 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075956868 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114947355 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118944055 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120755237 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06340617 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118760547 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159429332 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092182574 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116166815 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150910868 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078105197 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121929644 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315409998 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145466304 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083665464 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109185871 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117173945 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125744916 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119295075 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139485643 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106241339 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13324065 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107846591 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084924878 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086509766 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097275498 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10391668 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093589441 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107030791 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113177493 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093548704 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12984286 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101666201 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107705699 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115042467 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09545276 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08846387 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095695496 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172049007 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11834614 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170214247 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097879532 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143895498 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16165009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073927443 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07813377 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077184882 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137698274 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082880796 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12895716 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096228046 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103998903 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123011089 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140083162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093602604 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06769685 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107518184 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132250606 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110775285 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097271068 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103256563 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161153998 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099145092 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078258754 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111210972 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102843353 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100869753 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16919744 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060643823 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095346607 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217458404 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081211208 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129652859 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150338421 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079244554 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102426354 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117867058 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109547049 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126483665 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10088973 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097682553 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113389743 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147961103 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127086442 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089027692 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111371473 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128317748 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155205618 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103720662 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09514352 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186485376 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149759939 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158208288 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08748982 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112944969 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112300075 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106384341 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137661202 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082975883 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161200353 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081064462 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134206475 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102412664 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08882264 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128535295 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097412267 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087246044 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146461175 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115941532 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081703596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076979262 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116325124 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119351963 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105355964 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075171533 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137567912 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072031977 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129827847 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165314949 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07945359 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102801075 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094284297 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078229039 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250509734 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101402224 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088645264 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098238796 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171943722 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087355282 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148496081 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140272534 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11208498 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135376892 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098083358 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634120312 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077662287 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151579369 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115184098 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171726915 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096254267 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116433392 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10805167 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122710912 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141988366 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103302613 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175383159 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130342538 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114915294 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078561295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101119404 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101285318 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086935002 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103994456 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112096285 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114179114 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092282008 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114242473 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121932228 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081091829 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094297571 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154057223 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115771454 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142682483 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138332804 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083824302 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116443322 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137046574 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07948836 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119640762 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149098099 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103763867 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096053218 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079020729 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099404492 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310865044 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072641005 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161287515 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118901464 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107645845 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112764071 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114334299 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129326125 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106393715 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119344422 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093293065 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110720344 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112361079 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080917776 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076191766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103611362 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111402039 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095825273 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097376746 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097235882 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149486674 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070791683 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094439551 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102257845 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14336281 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172764483 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08702017 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08174287 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118344717 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111406033 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.1119654 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118334416 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077805775 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080771184 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080673556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.0764256 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107433823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111219578 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102849156 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110071065 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161845133 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081487127 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224050172 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093722707 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103457471 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068871929 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077764016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094334685 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095829941 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106820658 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099296172 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168228801 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093425269 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088765292 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090628248 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071688863 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081108419 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124774526 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107245221 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261217638 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096928007 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062165968 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107836594 seconds)
  done (took 58.147522849 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109823877 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082091563 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096176346 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149189137 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121744715 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210508534 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156511384 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198612239 seconds)
  done (took 2.752316374 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069021054 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09366557 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098873477 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082531447 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065663632 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068281161 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223355688 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079912333 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065487424 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089061409 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078192195 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067952614 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414897147 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065243712 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067212854 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062370314 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066777946 seconds)
  done (took 3.378106057 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364429433 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.59847491 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369371804 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072699269 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.866092674 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088705396 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.077503387 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126551453 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073195865 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537847393 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704225733 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124271437 seconds)
  done (took 18.633767879 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077143106 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069980456 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082888001 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082523125 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071750723 seconds)
  done (took 2.011313726 seconds)
done (took 106.727563038 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081392712 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.369160927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053087831 seconds)
  done (took 2.077927835 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083645424 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0835119 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083474506 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082099572 seconds)
  done (took 1.964765529 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075363113 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075826599 seconds)
  done (took 1.782423597 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221916611 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137532783 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085649948 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083016163 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077446241 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077649044 seconds)
  done (took 1.872162684 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073339493 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074299665 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071926155 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074795637 seconds)
  done (took 1.922068944 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076842817 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05212887 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053915201 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054538645 seconds)
  done (took 1.865610534 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086205879 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077660439 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077690902 seconds)
  done (took 1.8703992 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106953302 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084354101 seconds)
  done (took 1.82191768 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08223203 seconds)
  done (took 1.714227539 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098717605 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11307851 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126397627 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107694909 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135282682 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110264068 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083925365 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08573293 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075987035 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086254159 seconds)
  done (took 2.654233891 seconds)
done (took 21.699657918 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079011801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366298269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360154546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089950861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668963098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355985921 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025398213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091188588 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112268853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066887002 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083142376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64737476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979895708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323407987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968767605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318411586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647902972 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067343927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067073272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067133197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012131759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066883585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066998756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067635991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648869719 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370181445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067499338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318472253 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067074568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068576265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354114776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067078809 seconds)
  done (took 16.174599445 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072649529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116862105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073105816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083121398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069399911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068834265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071712572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06850905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117838977 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067539684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083663458 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067045568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071126578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067619769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086621847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067549934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067997791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06825923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067667925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068014801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085630762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066768568 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067680485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067754311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067090656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078632985 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067244028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067137193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06738918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069466979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069831033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067846477 seconds)
  done (took 4.011569916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115400503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124945568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073897991 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102177926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110890561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069238957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141486511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092128473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125850364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067845139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08390666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068023718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099963548 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067981087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086713308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067743658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068914644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068035273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067849034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067733135 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086344557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067704679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068484734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067940543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067969421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080746616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067738718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068154957 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067775546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069138562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071344248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068333803 seconds)
  done (took 4.267315118 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074024386 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074542894 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081992361 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082760954 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068744592 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071837963 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072152172 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068985701 seconds)
  done (took 2.243440961 seconds)
done (took 28.329650561 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079646996 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068525493 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072246754 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080530603 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072281321 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077674373 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066502594 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07358247 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07113675 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072417253 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073616536 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067137388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070413183 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066473489 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072700899 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067131658 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078324981 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071030388 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078651563 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078565684 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06907195 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072208953 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073298399 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077946813 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078280891 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078361063 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076420229 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07195367 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0683188 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069891422 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075762224 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082734975 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068144922 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078097598 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067857224 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067124187 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070744018 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067482824 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078652952 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07587754 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069195273 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075502265 seconds)
  done (took 4.695999841 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088705779 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089774265 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08323245 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061702249 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066020579 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06448268 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087824861 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059082639 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058937702 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086783644 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055098868 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058687071 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061945836 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05381856 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058932925 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056364181 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061067737 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055357814 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058660733 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058957436 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057419967 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053763889 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0594337 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061889103 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05860528 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061559265 seconds)
  done (took 3.332203872 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076001807 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083454528 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087616892 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12551856 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114067584 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075989289 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076912836 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090898348 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084516984 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065919372 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070342478 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092476066 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087069843 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072647591 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066730741 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083138858 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080855999 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068339725 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072393335 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090051886 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083351965 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083142572 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091909756 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080045889 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066382883 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068962891 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070705432 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080370716 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071662154 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07547088 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070690924 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070189922 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068533146 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078035551 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070275892 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068138261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088794759 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075985385 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076609237 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066868417 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069984539 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067641861 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088745985 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121003771 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06672316 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07312299 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074157227 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075774461 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066790368 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085405189 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077592891 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066200834 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069362241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065831348 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066498375 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079403355 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068675311 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069015359 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075600295 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069395611 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084619859 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070681431 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082061035 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066833021 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074062978 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065928451 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067802981 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065933223 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091379311 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068294351 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106904673 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068001202 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067823156 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075171229 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074416858 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072743589 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067262858 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081304375 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076828609 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070397878 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074927497 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070315082 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069755298 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087410179 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068937227 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068385139 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068109974 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073027787 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069548723 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068451792 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080225866 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067089398 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069488953 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083146737 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066415508 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068257679 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072746801 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071500101 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06653457 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077638541 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071565313 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067638563 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075696401 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066645196 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069801806 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07710346 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072874754 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065669813 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071382543 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072521149 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068195525 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068503406 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06966594 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068848589 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075757714 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072965162 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07137486 seconds)
  done (took 10.470364412 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160030985 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153132133 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069710861 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142892771 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075688828 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078361103 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146336849 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093215915 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067251982 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067810513 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06768423 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108379372 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104879424 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113712097 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077655342 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066598951 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082055987 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112145515 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146980713 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141502251 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082247683 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076132987 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069316027 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068068018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069909536 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077702309 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084711112 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075899251 seconds)
  done (took 4.3689771 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081946377 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095868545 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07340378 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088547934 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089588094 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067086289 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069547205 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068574676 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079513651 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077956672 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066600262 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072522966 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073796168 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070247246 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067631458 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073856362 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073603036 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068331186 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070127161 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072123231 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076787142 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091085908 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071074153 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06701693 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073597819 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066763055 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063843622 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083580999 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067339972 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090832029 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065307356 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074928663 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080836781 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068184351 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06675328 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066901768 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066636993 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066739447 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069106715 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065664326 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0657812 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057244529 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066113358 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078659693 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073257126 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056237018 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071841718 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072014879 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072035929 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064692256 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069489187 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069680726 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070017355 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074249594 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071746597 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07195283 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068169786 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073180267 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074696179 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066985347 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064296398 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065725522 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0718969 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065426468 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075067867 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071732609 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065602037 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067038537 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06889821 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073165071 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066759307 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070021251 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064719471 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06896117 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071439954 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068810955 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068851088 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06553926 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066933057 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067367091 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055078413 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066798202 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052957531 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069601208 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064906181 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065266221 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066937182 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071543719 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078661588 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067728748 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072699419 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067484019 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06599965 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069744974 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059506956 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069714839 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082023299 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081636919 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066441694 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065091779 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080624588 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071382724 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066082639 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055512103 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074101401 seconds)
  done (took 9.083069006 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09079227 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069608289 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083018907 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089405119 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085376136 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07467006 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076160326 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068554572 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081145606 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072516994 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075671813 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067061603 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076451297 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076108544 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069157064 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075870586 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071565842 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081975048 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081159919 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067186014 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074951121 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078982373 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088326643 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079164174 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077922329 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079545074 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088150617 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071058382 seconds)
  done (took 3.861485462 seconds)
done (took 37.455039732 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.734672356 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.900118975 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.726314857 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.074741437 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.907253735 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.945904408 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.73380138 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.723297101 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.860282763 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.766792558 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.963421581 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.755138177 seconds)
done (took 64.753396253 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.737920469 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.866112516 seconds)
    (2/2) benchmarking "String"...
    done (took 1.993973962 seconds)
  done (took 5.525896986 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.023251293 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.262919564 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.967738526 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.7228452 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.725473595 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.02892948 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.520348689 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248009519 seconds)
  done (took 30.144295071 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.828736404 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.959210496 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.394363539 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.422379825 seconds)
  done (took 15.318400934 seconds)
done (took 62.498610406 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.733081189 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.744648724 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.729284014 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.707204183 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.780549775 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.727322164 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.069111843 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.724311014 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.721686287 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.709922113 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.722838598 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.155980033 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.726430078 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.098003971 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.723594344 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.728226182 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.722425782 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.235366039 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.879198413 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.726442603 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.732623662 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.769073673 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.723403895 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.865714051 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.748878451 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.721010499 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.176096859 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.733474408 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.336163087 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.72354355 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.753619187 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.222222954 seconds)
  done (took 202.530679408 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.723370871 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.803853227 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.877220782 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.757013735 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.19997829 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.902719776 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.843519725 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.254508436 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.725192507 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.734570361 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.836541421 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.721310678 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.858023464 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.668012503 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.754780748 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.836838523 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.96839101 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.885509903 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.752139871 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.87633512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.751123567 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.650812818 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.620001038 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.842119257 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.730388207 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.800600123 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.744330975 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.743982929 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.91819226 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.935301037 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.764390452 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.770127434 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.925740601 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.598662064 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.725469874 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.734159201 seconds)
  done (took 167.901739711 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.892711603 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.726886068 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.724916832 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.725381407 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.732102601 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.724968564 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.848382225 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848395595 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.18624903 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.186095621 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.776235277 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55686477 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.724994323 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796279065 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.737562011 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.728249639 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.742365902 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.75258198 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.726272204 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.726569599 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.856369916 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.741638544 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.929516718 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733774702 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.728096895 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.730211789 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.097408235 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.7224734 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732310587 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.970033997 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.725995446 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.725676617 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.642999274 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.450173173 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822647229 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727452308 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73028549 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732531384 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.728521778 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.950259034 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728215056 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.728193251 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.729329942 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.729822614 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913668236 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.725498307 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.85423205 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.726149642 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.243504057 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.729002522 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733111566 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.506729462 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.434902748 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.724836739 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.724171577 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.728245262 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.724557138 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.724143617 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.731726554 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.379650298 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.799265152 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.726837684 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.729347406 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.728389907 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.730479698 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.7261453 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.895879059 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730548196 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.818199941 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.783080222 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.849130718 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848952473 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.726401663 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.723842784 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796824465 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822581877 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.724173321 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.726455104 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.725980381 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.725652277 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.807448574 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.723981419 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.848702525 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.731833751 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.72722644 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.778637397 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.799292469 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.726801983 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619714998 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.727854573 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.729125386 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.073532169 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.794460443 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.727293229 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.727863728 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727312576 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.855316779 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.847263828 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505751776 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.726343298 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.385982304 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.728045024 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.861542377 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.726767633 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.919087915 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.727765687 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813623061 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.728651899 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.726631389 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.725881554 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.758044441 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.727543974 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.786715224 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.726020404 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.096222648 seconds)
  done (took 396.633244936 seconds)
done (took 770.680047519 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.412034748 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.564676242 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502656626 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.394586335 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.383932869 seconds)
  done (took 13.922154295 seconds)
done (took 15.587619747 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.823796438 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.818267332 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.75128294 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.820070592 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.748562189 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.817684653 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.798357263 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.752154523 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.787931736 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.751673509 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.786752082 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.751689465 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740646785 seconds)
  done (took 24.813206279 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.969153712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.969894016 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798977051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.961221207 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776680472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.975288284 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.895911101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880329498 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.885633258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.745594677 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.743149305 seconds)
  done (took 22.270141068 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.967537793 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.971324559 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803914028 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.972887491 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.78246237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.970514978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.893897352 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884190398 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898289842 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748266126 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.741447397 seconds)
  done (took 22.303501335 seconds)
done (took 71.052116118 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.736500624 seconds)
  done (took 3.402962796 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.76153063 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.897431133 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.743771343 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.7412156 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.737874576 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.738855044 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.740391109 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.737366097 seconds)
  done (took 15.76731493 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.736306082 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.734961303 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.738612816 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.73529891 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.737789699 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.737025561 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.7375117 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.7372544 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.735699322 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.738986962 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.735186625 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.735169754 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.738438923 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.735700188 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.737018815 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.737619961 seconds)
  done (took 29.457657403 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.738140081 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.735755014 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.735960466 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.738782609 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.735421667 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.736431159 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.737601244 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.73609806 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.73621822 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.739481741 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.737312743 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.736696437 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.737889376 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.737417973 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.73716298 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.738427085 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.735454903 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.738309792 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.7446401 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.737193944 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.741680667 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.737019783 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.738717035 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.738769371 seconds)
  done (took 43.378632562 seconds)
done (took 93.673934792 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.709041279 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.213558291 seconds)
  done (took 8.591951166 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.741676467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.740216442 seconds)
  done (took 5.198407838 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.740968929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.739763595 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.739643541 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.740923923 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.74033003 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.739515655 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.739883564 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.741022932 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.741454444 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.739466639 seconds)
  done (took 19.072829758 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.740466952 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.739001703 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.737623748 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.740623948 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.742055948 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.737362313 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.739520006 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.740147537 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.740043678 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.73927134 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.740925822 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.738037965 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.740393517 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.738725322 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.7410171 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.738475469 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.738638013 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.738840256 seconds)
  done (took 32.982723667 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.741860762 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.741679555 seconds)
  done (took 5.155631665 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.739093423 seconds)
    (2/7) benchmarking "second"...
    done (took 1.738777829 seconds)
    (3/7) benchmarking "month"...
    done (took 1.738887882 seconds)
    (4/7) benchmarking "year"...
    done (took 1.73904341 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.739351321 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.742737683 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.737436492 seconds)
  done (took 13.848030611 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.740986123 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.911533873 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.98585749 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.443685684 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.744188243 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.74507757 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.681826819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.746491266 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.749362831 seconds)
  done (took 19.420932441 seconds)
done (took 105.942447558 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.574436573 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.737394904 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.074905489 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.8046129 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.774412892 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.078452416 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.747989499 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.95258 seconds)
done (took 42.417658296 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.840151866 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.197323409 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.20972718 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.407976932 seconds)
  done (took 11.487706699 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.722274578 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.267215407 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.780141998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.334603564 seconds)
  done (took 19.790139085 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.107995232 seconds)
    (2/2) benchmarking "read"...
    done (took 2.105055703 seconds)
  done (took 5.89328072 seconds)
done (took 45.687305529 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742600385 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.741332709 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.743250886 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.740468442 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.741781594 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.74360527 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.740165206 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.74165839 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.744251581 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.744970081 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.74436904 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.743492362 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744276054 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741710712 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741421553 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744132852 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.740893591 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74147324 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.743418454 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741368687 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743080326 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.742009571 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.741977639 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.744376304 seconds)
  done (took 43.495943978 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.743756164 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.741781832 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.744354391 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.745908798 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.742334966 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.745002703 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.74531299 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.741869385 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.745246421 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.7445489 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740877438 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.744089249 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.745178995 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.743017725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745636474 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.744045877 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.745851684 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74246692 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745025489 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.742902399 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.745756315 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743277826 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.743656622 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747084197 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.745687787 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742722456 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.745932588 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.745241036 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74687159 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.743776048 seconds)
  done (took 54.005915865 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.750342484 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.757073726 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.744288453 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.746438886 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.746884044 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.746401876 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.746144634 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.746627601 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.746427466 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.745927037 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.747541895 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.746503298 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.747233798 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.74601052 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.745836441 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.747649696 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.746480751 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.746471177 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.747669357 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.747754264 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.74761139 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.745756879 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.747914033 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.746352956 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.746834714 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.746336098 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.746197766 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.747591315 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.749026414 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.747257712 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.747324911 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.747439854 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.747699503 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.747067373 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.748556632 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.746953846 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.752004041 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.755838977 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.746813376 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.748105722 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.748045818 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.748046337 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.747507516 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.747653349 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.748061726 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.749643846 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747393091 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.749585268 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.748575007 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.750185442 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.749531272 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.749066787 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.748593693 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.751258768 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.748855882 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.747598152 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.750964995 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.74975598 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.749305604 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.749579705 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.750456582 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.748867086 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.750564898 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.750010151 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.750116505 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.750644556 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.749417172 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.750085995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.750001561 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.750520565 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.749878042 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.750781805 seconds)
  done (took 127.56430121 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.74919798 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.747562115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.747095824 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.747342631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747535155 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.749364322 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.749150816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750874203 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747730387 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75012328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749911131 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.748243804 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748220841 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750891578 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749732377 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.748714452 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.750949231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749073274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.750981227 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749835407 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750172416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.748919209 seconds)
  done (took 40.1618471 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750809919 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752013272 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.748315875 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.751782118 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748279466 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.751449664 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.751162974 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751633496 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751613313 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748949143 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749601139 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7522906 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.747837023 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747772846 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748584237 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750069982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752027646 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.749308142 seconds)
  done (took 33.185797171 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.750143551 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.749568867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.751705802 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749521737 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.749767361 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.753498326 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749341124 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751198255 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.752610416 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.750305378 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.751635045 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752884073 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.753402628 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749779536 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752836162 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.749470998 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.755204477 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750331827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752499106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750144725 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749827994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752654418 seconds)
  done (took 40.212498812 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753442859 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.753506331 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.750520283 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.749826515 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.750949859 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.753299321 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.752913392 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.751423961 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.754252835 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.754054221 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751875541 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752468948 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.75184837 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.750876671 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.751592686 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751594284 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752616612 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.751979984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753351509 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.75057522 seconds)
  done (took 36.726794833 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.752967682 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75269317 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.753752115 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753304088 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753754295 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.753484341 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75402309 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.754821611 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755450319 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.756317162 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.75708455 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.753557636 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759790987 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.752405739 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.753208923 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752411204 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755503124 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754858074 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.7550284 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754191925 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.754554172 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.753641226 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.753820557 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755361164 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.754479203 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754205635 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754773194 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752842939 seconds)
  done (took 50.807244759 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754697107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754761662 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.752020909 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.751796641 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.751464149 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.750658321 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.752098026 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.751934851 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752854478 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.749381824 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.752981772 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.753517403 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753111096 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.753095017 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.753081356 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.752524684 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753442498 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.751007921 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751599318 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750311761 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.754232589 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753314128 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.753618013 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753536309 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749388759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.752761027 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751107295 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.74885145 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751282408 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767573474 seconds)
  done (took 54.267533865 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.772092794 seconds)
    (2/2) benchmarking "in"...
    done (took 1.772306782 seconds)
  done (took 5.22740303 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.751130138 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750729789 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.750543565 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.749681963 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.748199973 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.750710684 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.752872766 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746424258 seconds)
  done (took 15.683252883 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.74951219 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.749516981 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.749447729 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.751156969 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.750512808 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.748921375 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753955346 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.748390856 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.749686344 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.749093198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.755648406 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.756682455 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.749287499 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747375893 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.749778931 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749018482 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.748393439 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.746034881 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.747000776 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.746790588 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747637722 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.750666021 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749183692 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.745644992 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.750180033 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.757090252 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.751934989 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.749153818 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.750043003 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.75195264 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.747323174 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.74675225 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.747270939 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.747992975 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.748778202 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.746859708 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75481964 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747503449 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.754067875 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748196829 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.748035417 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.745862197 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.748910966 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.75108316 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749730578 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.748398002 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.749699751 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.746766565 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.74935349 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.75401433 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.755110685 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749471616 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.746383517 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752305597 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.752834709 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757786878 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.749550281 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.751695443 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.759575041 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.760141089 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.76591765 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.757973673 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751815236 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.748313139 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759623657 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.777677412 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757798153 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.745661773 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.747709997 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.75036663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.756636514 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761327767 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.761851753 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.750104664 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74961278 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.748893413 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749712985 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750826022 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.756201897 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.753450301 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.749712781 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.749396025 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760217785 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778522182 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.750573496 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.749839612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.751324136 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.750343028 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.755001992 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760676514 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.749951401 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.750852966 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.749507462 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.750867682 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.753809098 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.749857974 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.748639716 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751550341 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.747500787 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.751379172 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751207871 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.753064992 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.761063442 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.750406819 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750841673 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.756266866 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.758407878 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.750101082 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.755189761 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749342114 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749522395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.750925462 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.750686041 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.745377586 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.749256033 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.755282875 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.745551696 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.748799007 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.744565486 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.74346568 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.754103647 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.772902602 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.74496629 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.745724534 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.749452087 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.757922574 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.743392297 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.747598645 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.748949009 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.743618069 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.741532154 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.746546188 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.745072365 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.746956813 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747814279 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745627935 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.742028869 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.747174047 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.743615866 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.747420829 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.74814431 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.746785558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.746384583 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.745851978 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.744771567 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.745723099 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.750785253 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.745139727 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.74749694 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.747251732 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.743239729 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.745092932 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.745061356 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.743931686 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.743929147 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744575998 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.744122986 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.746050436 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.747245324 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.744721986 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746458425 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.746499717 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752937149 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.745798657 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.749022863 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.74639235 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.743751317 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.746460678 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.747978744 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.745219676 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.745677946 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.744519102 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.750119261 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.755271559 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.749170636 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.747672292 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.75002928 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744126835 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746833643 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748070698 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.750478841 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.756836988 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.745966281 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.75354508 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.745242447 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748017674 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.749277807 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.744589438 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.746696568 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747769708 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.749846084 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.760016364 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.759676471 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759248386 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.749382432 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.752340062 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.747381554 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.751291296 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.748549678 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.745645586 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.748866909 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745664305 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747685288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749038051 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.750652474 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.745153801 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.746403117 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.746817013 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.746494912 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.744207424 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748386142 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.747672615 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747878627 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.743603813 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.749942559 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.743658468 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.743828735 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.743057755 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.746096761 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.745586818 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.748829859 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.744914166 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.749886084 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.743011184 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747084816 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745388951 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.747255406 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.744779641 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.744316419 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746953878 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.743984743 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.755347017 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.746537082 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.744777432 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750176672 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.743087107 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.743845431 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.749326223 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.744514122 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.739506374 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.745146787 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.7520152 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.7442503 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.745132056 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.742414533 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742976716 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744542511 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.746076689 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.738867787 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.741906593 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.739004156 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.740051413 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.738867127 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.741162391 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.742140066 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.741067485 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742787659 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.740794303 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.742362648 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743596216 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.743431534 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.740658662 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.738948382 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743405996 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.749372238 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.74663039 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.743972361 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.742195936 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.741027138 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.745109844 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.740073728 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.739609475 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.739868022 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753475433 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.747475695 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746287681 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.742251637 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.741531221 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746179599 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.744535755 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.74421798 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741560425 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74155795 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.741829009 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.739622161 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.738957356 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.742405834 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.740295254 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741358586 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.742761617 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.746351195 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.740195746 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.741115688 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.739628697 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.740910807 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.741849338 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.74067292 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.739925423 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.743319615 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741808996 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.742408667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.739347547 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747766402 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741071442 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.741020691 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.740498602 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.742969997 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.740782357 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.74261605 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.740856652 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.742870957 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.748076892 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.744318428 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.748449814 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.741954535 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749273414 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.738551044 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.741404799 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.748983883 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.737222196 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.739243494 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.739463902 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.740666667 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.7473726 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.738996024 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.739309064 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.74395467 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.737763697 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.741091235 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.743778869 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.737320883 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.742119359 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.739401304 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746246331 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.741636593 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.744563031 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.740398561 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.737000183 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.737582677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.740823337 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.74082866 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742632202 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.737521759 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.740949103 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.738701046 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.739668656 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.741278025 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.73776226 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.74136751 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.736627692 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.738907329 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744146682 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.742629763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.741706275 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.738700818 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.746875179 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.73871865 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.744830307 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.742191166 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.739623032 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.738563736 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.738720184 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.742024338 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.739733335 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.741134262 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.739064644 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.741992665 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.743002831 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.739052695 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.743570508 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.738157773 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.739031504 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.740906452 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748315899 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762409259 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.744251011 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745322002 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.735835426 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.739931835 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.742784386 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.740558579 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.742657002 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.741256652 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.750713592 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.745874864 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.739153609 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.742003689 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740040462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.738818382 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.738145805 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.739413036 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.739791959 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.743037639 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.739331293 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.739353604 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743690869 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.739031135 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.740784096 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747019704 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.740444273 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.748152292 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.738279243 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.741105521 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740991577 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.744155563 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.740800935 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.740142954 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.739879351 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74113991 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744079324 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.7421196 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.745927954 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.746701659 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.740833759 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.738605752 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.742008249 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.739770985 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.741501585 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741014817 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.739465649 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740950857 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.73910375 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.740031098 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.739857821 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.738795308 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.739036363 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.74028124 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743373739 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742989991 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.746337143 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74050952 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.737346136 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.741428455 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741742012 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.740258918 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.742270438 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.746798579 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742821344 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.750938409 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.746178127 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743522983 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.740557458 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743786241 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.748360522 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.740324067 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.741594869 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.739965112 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.74064188 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.74018259 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.744055052 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.73950423 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.745466276 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.739223446 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.741962813 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747416862 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.742562592 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739871105 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.744101708 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.744261139 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.739057313 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.73744115 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.740552106 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.740779405 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746015709 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.743344003 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.740870606 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742242682 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.739655322 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.74085419 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743736507 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740260715 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.741238118 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.739283294 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.743241748 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.740053625 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.740067904 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.739891767 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.74126255 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.741898904 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.742406481 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.746887452 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.739939889 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742570614 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.742760425 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.742020218 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740722209 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.741395281 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.740318833 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.740988537 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.745545589 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741293462 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.741794788 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.745207525 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.7418584 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.743374237 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.742333214 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.742736846 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744482463 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.751404298 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.749718658 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.740391595 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.744389746 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.742790972 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.746068101 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745534735 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.742020653 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741069985 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.748637676 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.74266123 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.740958016 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.741421898 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.744891644 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.755881539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.7473313 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74404373 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.744965587 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745204079 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.741973249 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.744259085 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.743596662 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.746088398 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.746091683 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.748032363 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.743537473 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752938096 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745297289 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.744570237 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.747690082 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.744418496 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.749053422 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.748927728 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745268521 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.742873113 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.748028164 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.758821803 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744933789 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751706896 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771511347 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.745976006 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.746288724 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.743618653 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.744266998 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.744260252 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.746389393 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.74431354 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.746079568 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745293791 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.744277474 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.745279501 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749964653 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.747927727 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.74482656 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.744275339 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.746221674 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.747103537 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.742385401 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.744137693 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.74581858 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.744219114 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.744813891 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.743864534 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.746464622 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758045607 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.754881046 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.748599328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.74432823 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.744500199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.747301746 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.748812115 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.754003425 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.755324921 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.746414344 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.747288666 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.74733922 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747265645 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.746657289 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.748770677 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.747314759 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745675405 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.744453013 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.756742081 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754004328 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.751976619 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.747296112 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746924072 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.746752562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.748430864 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746691957 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745789146 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.748342152 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.74651329 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749471792 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.745938961 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.748646698 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.749470851 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.756018004 seconds)
  done (took 1042.265130146 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743829372 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744494792 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.744516406 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744211342 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745046449 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74571866 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744443564 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.745260143 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.743939556 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.74276183 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.742993047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745320453 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74573975 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.747777928 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745671835 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745004127 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745632631 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.745957638 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.746190458 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745650062 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74457016 seconds)
  done (took 38.321307049 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.749452272 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.746425556 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74611122 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747521187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746107819 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.745737231 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.746893117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749450731 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.749402641 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744714511 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.748544739 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749673621 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.745136846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.745880605 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747494873 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747832551 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.747390251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748174231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.749708965 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746532544 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75099179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.746031329 seconds)
  done (took 40.121767766 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.750400079 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.748607697 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.750207771 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.745053652 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.749201468 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.746114457 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.748350292 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.748873163 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.75082158 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.749425224 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.747114539 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.749136161 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.753343013 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.753707789 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.752710222 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.748041336 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.892984224 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.750903844 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.747923828 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.749481068 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.748951444 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.754090799 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.747144104 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.748505577 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.749732492 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.750433152 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.750119341 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.750223362 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.748815623 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.751559433 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.754194995 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.753383597 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.749960623 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.751813682 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.749206844 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.749878418 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.755523748 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.754922539 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.749349901 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.750680461 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.759090552 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.767546732 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.754646149 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.757813311 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.75106142 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.753154245 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.752502767 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.756899278 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.749751404 seconds)
  done (took 87.632513483 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.748115468 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.750914293 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.748098075 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.748031884 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.752799883 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.749576913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.7506569 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.750968853 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.746659027 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.747036251 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.750839374 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.747106726 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.748838246 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.750243371 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.74999807 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.749182633 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.746862692 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.746907458 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.7486118 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.747878287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.748860998 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.752527791 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.749875011 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.748708024 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.751555774 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.74777355 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.747886481 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.752294598 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.747160707 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.747537908 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.750286371 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.750296169 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.75222776 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.748767077 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.747057348 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.750372005 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.752485185 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.748240508 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.753428085 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.74811216 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.75143455 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.751310388 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.750381418 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.751465654 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.749758528 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.75129701 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.750849795 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.749092528 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.748433684 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.751896876 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.753880224 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.75028029 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.75263463 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.751503774 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.75344418 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.75364625 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.7495569 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.750904087 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.753260738 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.748865999 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.749454611 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.756110722 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.750001359 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.752449793 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.752853685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.749855407 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.749777204 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.756764094 seconds)
  done (took 120.697422618 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.752070169 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.753327396 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752558772 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756240739 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.753375336 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.753032094 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.752115521 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.752465257 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.752715091 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758577421 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750803111 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.753239288 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.753057568 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.752610617 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.752351961 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.753134181 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.752781713 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751709727 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.753754087 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753131512 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.752514247 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.753604374 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.751100906 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.752341559 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.754175984 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.754264749 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.754166872 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.753668089 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752751673 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.753837502 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.753429859 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.753191161 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.7582365 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.753059646 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.75556219 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.75496268 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.753939801 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754428512 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.759577043 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.753788354 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.755182995 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752789594 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.754496516 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.757539008 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754963635 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.754954463 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.7553231 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.754935658 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.754583071 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758513047 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.753309141 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754620038 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755838369 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754248707 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.753980725 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.757709821 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754895865 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755192916 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754767523 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.755729347 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758797725 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.754865456 seconds)
  done (took 110.447226319 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75626706 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755833223 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.752873651 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.75781431 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.755742485 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.752479157 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.754753426 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.755543502 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754110164 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.759831136 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756008247 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753315362 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75398514 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756777208 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.754643293 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755848223 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752854087 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754674002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757530058 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.754683891 seconds)
  done (took 36.792512743 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.754647403 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.758255096 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.756259218 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.753910867 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.756684996 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.756173169 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.756951604 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755898804 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756159226 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758487887 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.758489845 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.762245288 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755761365 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.754737048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.758137134 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.756224284 seconds)
  done (took 29.796461642 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.755078015 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.757424207 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.756617153 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.757662238 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.755136245 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.760721072 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.758430192 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.756107007 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.755606159 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.758916197 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.758072707 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.759588603 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.758158654 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.758738752 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.756370452 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.759375671 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.756858699 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.758029016 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.759087226 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.75738799 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.758039176 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.757081415 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.762865323 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.759332269 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.757732211 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.757643339 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.757040521 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.757342477 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.763073658 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.759442281 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.756535158 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.758498701 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.756421549 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.757394612 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.761334594 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.756565488 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.759641175 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.760266914 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.761025647 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.762151283 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.760197366 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.760250374 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.757951881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.760313825 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.758102543 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.763752973 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.758024581 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.75825326 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.757977637 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.758053801 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.760204974 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.765149445 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.760766918 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.761116284 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.761929835 seconds)
  done (took 98.4252905 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762999933 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761717638 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.758797671 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.761347332 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.761188938 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.757814231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.762575439 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.759510953 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758735827 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.760806267 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.759096829 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.760863446 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762610559 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.761059293 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.759265201 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760989454 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.758850514 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762559064 seconds)
  done (took 33.382850372 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.759536599 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75960348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.761433312 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.75796353 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.765288207 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.761828948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758846742 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.761638566 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762714466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.760532727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760761626 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.762390606 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761545485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.761908059 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760843941 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760742611 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.762846481 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761435139 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.758736761 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760094245 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.763063537 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766366381 seconds)
  done (took 40.441371671 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.761985414 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.762288886 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.776421924 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.779585158 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.785373688 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.791317776 seconds)
  done (took 12.349700532 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7615276 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764143557 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.762406037 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764721847 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762858423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761306893 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761843114 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761020731 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766021834 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761855198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760767501 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764701751 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764155574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760630225 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770641225 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764567165 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762019214 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761215504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763062385 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764024457 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763181305 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763836318 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760364494 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761402497 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760978626 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762065076 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764349867 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762982748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761812039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764030711 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765580811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764579683 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764411726 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762391867 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765135092 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764146729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762846592 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76460561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764020672 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761267845 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.764970203 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765966881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766053726 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762907655 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764960912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76286103 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76216346 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762911316 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765117662 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764213199 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765253739 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762592753 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765953722 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766261366 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76686732 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767374643 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763015206 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762517349 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766419253 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766030466 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765194186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766142599 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76475489 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76537582 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765758406 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764218976 seconds)
  done (took 118.110338666 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763801664 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763598333 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763763922 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765412838 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768379308 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76435783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763454137 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764686182 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765335654 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765618475 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766954714 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764919305 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765016825 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764132558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764116671 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7652031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763105735 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76463993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765216219 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767461705 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765871513 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76645333 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766049872 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765138323 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76516249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768499695 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765384501 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765506541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76518727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766461554 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765168106 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764514 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764634127 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.765710429 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765968503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765625972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766325673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767205577 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765289105 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767233368 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766092219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769565456 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765636391 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766706828 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766333692 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7665678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766867546 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766029122 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766133101 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766728239 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766338667 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767223626 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767991559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766546389 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766816346 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767700858 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765178367 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766423336 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76847769 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769368099 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767242339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767510209 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770483412 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768086729 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767185158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767733337 seconds)
  done (took 118.263255784 seconds)
done (took 2430.061126054 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.761402255 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.873567231 seconds)
  done (took 15.334018501 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.930868047 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.882924037 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.769113608 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.770973421 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.767641338 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.791113166 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.784283647 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.766747669 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.768987015 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.768569771 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.768577421 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.955333107 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.765557987 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.768143147 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.767463124 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.863115057 seconds)
  done (took 50.607443456 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.772361631 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.773376013 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.784579525 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.774122717 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.773368261 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.783462121 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.806923146 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.775558963 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.805359986 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.784442382 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.838768999 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.78193909 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.772514401 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.820840051 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.78449003 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.786410384 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.858573035 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.844265794 seconds)
  done (took 34.023470965 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.846824205 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.771491103 seconds)
  done (took 10.325291269 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.795608333 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.774927125 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.791865223 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.776205172 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.790278805 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.80337345 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.800883769 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.795314265 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.7939234 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.765719398 seconds)
  done (took 69.61629205 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.778889292 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.773895756 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.775142926 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.772486645 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.765302854 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.767882993 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.773617678 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.76924605 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.453057849 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.804918649 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.778490979 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.779768241 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.772207126 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.774525811 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.771868067 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.79599796 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.959723634 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.772259496 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.770971528 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.778330124 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.77399875 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.835798453 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.786183288 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.774610674 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.802557148 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.451117599 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.779466552 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.779313287 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.902239831 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.772469614 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.773980779 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.774433902 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.77650388 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.160902448 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.078943651 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.771223608 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.781357343 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.782150512 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.77328223 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.898673246 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.774810876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.78023089 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.761620999 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.058408199 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.871769388 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.815557136 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.171093404 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.777337994 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.778365079 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.804199186 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.777970091 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.775581192 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.787567028 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.289104076 seconds)
  done (took 127.54769069 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.771975361 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.344055566 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.933600156 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.770425559 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050627107 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011117809 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.710318421 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.822651685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.769897674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.02153379 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.002712143 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.890219623 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770963991 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.768831277 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.770704249 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.767990826 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.922147588 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.84052374 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.771825123 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.768639698 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805812054 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039450834 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.896662548 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.77177423 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.79221598 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998941217 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.898301514 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.887910801 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.083032934 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.769869777 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839103346 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.771439879 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.769965071 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.767749926 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.93787828 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.878785078 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.868363134 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.770110088 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.770119369 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.769448991 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.436401866 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993300402 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.880622911 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.909004846 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.024971557 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000458404 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.418140396 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.770182072 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.412572555 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968798623 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.980132059 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.027575012 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.898472046 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.772182381 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.118149851 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.76988694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.771267462 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.038312249 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004574365 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.884957626 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773600096 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.770428384 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.76903609 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086344803 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.773592401 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.881459724 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774012934 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.771239924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.885406134 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.888065219 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.002737837 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013914015 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.804506485 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.497391394 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.986069359 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.056973855 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.843829574 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037200444 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.77192082 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770456155 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.868914573 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.524240858 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.985483928 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089100634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038602606 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813222997 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.379199468 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.773109744 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.021247194 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021471912 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.99921714 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019152725 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.940058672 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.969591722 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.772995519 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.77267164 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.98260961 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.903648811 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.77658895 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.136291188 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021715153 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.508987753 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.805560679 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08019072 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910505562 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.778700047 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.401136735 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.773957421 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975552733 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.817954077 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.774529129 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.773640824 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.019901852 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.637001599 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.774916727 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.588302221 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.841428528 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776599011 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039819193 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.776405401 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016323807 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.77595205 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086588963 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.289485527 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818006774 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.970461304 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.023889682 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.563294348 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079493761 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.088720097 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.897831345 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036105375 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.679245973 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.775960678 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066621632 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.77577314 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.773568615 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.946409572 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.776781057 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.931754591 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.777580269 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.035871127 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802376708 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946319583 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778171232 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.053530048 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.819864537 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829076426 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.78071452 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.908525079 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77830539 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.798675038 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960778761 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779531869 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.776441613 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.372487803 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.774698816 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924203063 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077711 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80185425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848179714 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.305746451 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.777541046 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872866707 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805286703 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.387354445 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.776449905 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.004739747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.77741465 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.735011345 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.775718542 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.087996995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.004395871 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.777522391 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.776510481 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.574597626 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.484499043 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.77809136 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.955392369 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.095763935 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.42121452 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999442034 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778879252 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.911673312 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.78024807 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.850466866 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.13230762 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.776380226 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.777726887 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.778507023 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.780716224 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.776295528 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.00918235 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.80670554 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.461931324 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.916926346 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022925653 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.090546004 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.041410061 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830642996 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.781455643 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044538288 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.781473184 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.844804016 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.779381545 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803733657 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027404413 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779595781 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.009054189 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.074620136 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.824898589 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828407725 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.78090224 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778911585 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.777247701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.920388465 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877908071 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.778173141 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.779017931 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.898321135 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.903875946 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.968298884 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.371736891 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.962827724 seconds)
  done (took 882.456877677 seconds)
done (took 1191.612756819 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.78643798 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.780664128 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.765334771 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.780421972 seconds)
  done (took 28.8285638 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.788188579 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.785743454 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.786306017 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.786705498 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.787046872 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.78649606 seconds)
  done (took 12.437454608 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.823087734 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.781201497 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.780345215 seconds)
  done (took 21.100648992 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.853607546 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.190048768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.889982429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.224712273 seconds)
  done (took 9.8749532 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.786805206 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.786703912 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.786881905 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.78957177 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.789694374 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.792092851 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.788362305 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.78908594 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.792640339 seconds)
  done (took 17.820014287 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.092281556 seconds)
done (took 95.870804702 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.672623487 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.054984068 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.782903248 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.177795071 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.883099935 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.781287312 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.281763063 seconds)
    (8/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.953726067 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.281590707 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.992529773 seconds)
    (11/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.151545226 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.588287574 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.151650966 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.94492701 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.936752352 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.832013622 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.808318267 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.083469329 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.769056054 seconds)
    (20/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.288986924 seconds)
    (21/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.994808458 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.114950896 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.812202594 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.808511317 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.792231681 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.769962539 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.051088624 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.814982555 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.343073921 seconds)
    (30/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.924362529 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.565794915 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.089345369 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.924179426 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.773560606 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.785026264 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.270010474 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.167331489 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.45157497 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.783901992 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.175277412 seconds)
    (41/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.377282007 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.894673928 seconds)
    (43/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.77017271 seconds)
    (44/309) benchmarking ("sort", Float32, false)...
    done (took 5.549457992 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.928486026 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.471605466 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.909006551 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.160826432 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.048079127 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.405588066 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.876958513 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.118638217 seconds)
    (53/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.892306879 seconds)
    (54/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.94228016 seconds)
    (55/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.957746516 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.855264167 seconds)
    (57/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.188033555 seconds)
    (58/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.859689241 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.843693636 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.797061412 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.788685644 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.961519079 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.381647405 seconds)
    (64/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.772578058 seconds)
    (65/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.991484577 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.799481488 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.011187472 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.702995205 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.791395835 seconds)
    (70/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.360319376 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.290859761 seconds)
    (72/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.820426361 seconds)
    (73/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.790946397 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.787811006 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.622702685 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.910946724 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.892344485 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.47133467 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.680418693 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.813697268 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.050327601 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.162487296 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.489015114 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.168078758 seconds)
    (85/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.873947589 seconds)
    (86/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.19045132 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.093423226 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.873113164 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.872207938 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.896888166 seconds)
    (91/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.179580224 seconds)
    (92/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.935569285 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.08862998 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.819167454 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.774352928 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.1085313 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.312479687 seconds)
    (98/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.809319135 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.577694374 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.882760637 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.672108501 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.887417776 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.867979267 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.886804376 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.856184585 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.076139174 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.876835023 seconds)
    (108/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.934597985 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.686710646 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.879999566 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.775741909 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.811923338 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.076254266 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.892362458 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.002118327 seconds)
    (116/309) benchmarking ("sort", Float64, false)...
    done (took 5.576484524 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.81668524 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.007087642 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.793452747 seconds)
    (120/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.300402881 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.086389612 seconds)
    (122/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.881132046 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.795819532 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.036986468 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.79168805 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.955394924 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.244498883 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.81462365 seconds)
    (129/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.30192203 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.32013893 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.070449583 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.868467229 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.38395159 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.971470132 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011374428 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.052884527 seconds)
    (137/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.790466229 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.04815108 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.433518488 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.171616695 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.677109312 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.869034044 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.904062502 seconds)
    (144/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.807566193 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.703154113 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.388445918 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.135405025 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.791274939 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.895254731 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.9761906 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.979839097 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.997998517 seconds)
    (153/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.98659936 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.797438511 seconds)
    (155/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.156855983 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.782558429 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.134329123 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.01343894 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.819580069 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.841837535 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.79138339 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.858963839 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.840057623 seconds)
    (164/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.802670593 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.593001957 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.745137288 seconds)
    (167/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.820754603 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.182836204 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.814904948 seconds)
    (170/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.793416573 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.613303425 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.096150664 seconds)
    (173/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.989932321 seconds)
    (174/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.609227755 seconds)
    (175/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.859912947 seconds)
    (176/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.777250422 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 6.795365432 seconds)
    (178/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.208889797 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.782933142 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.621931041 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.783717191 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.87074978 seconds)
    (183/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.093700756 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.911940187 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.780796453 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.104890435 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.248001436 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.471504075 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.935515737 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.795614121 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.154509343 seconds)
    (192/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.796756292 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.871412318 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.17868671 seconds)
    (195/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.142063012 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.795072794 seconds)
    (197/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.996716062 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.677441984 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.835625946 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.879277232 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.09609566 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.9263328 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.224005877 seconds)
    (204/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.933818409 seconds)
    (205/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.925606333 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.901560697 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.810254696 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.852321078 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.102647926 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.740057942 seconds)
    (211/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.076602562 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.935874288 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.801043798 seconds)
    (214/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.937855346 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.879585596 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.890761729 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.535229742 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.001688755 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.063617658 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.159132562 seconds)
    (221/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.825363362 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.471594808 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.961327619 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.79735062 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.029360748 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.877254058 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.90522453 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.796808392 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.825585925 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.755834087 seconds)
    (231/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.254626883 seconds)
    (232/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.08773379 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.819504891 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.959285818 seconds)
    (235/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.086502356 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.75504398 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.902748142 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.836252291 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.404924047 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.633867985 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.73163277 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.685682591 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.138413126 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.024252516 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.000007547 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.262635893 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.050522539 seconds)
    (248/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.72788123 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.823970907 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.135295019 seconds)
    (251/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.088937969 seconds)
    (252/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.994186842 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.898066467 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.905118011 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.816904673 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.066293703 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.825130758 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.209149465 seconds)
    (259/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.011722607 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.157568683 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.798475802 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.195297468 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.797071684 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.799169214 seconds)
    (265/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.477664701 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.419668716 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.798202472 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.763204159 seconds)
    (269/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.864224535 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.862314984 seconds)
    (271/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.927158115 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.798382599 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.06933283 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.891410068 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.165193434 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.488144511 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.753312539 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.801565791 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.789352895 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.627744874 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.776418268 seconds)
    (282/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.954180273 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.888786196 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.883149669 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.006897132 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.95388065 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.042812912 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.852597863 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.496323826 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.957962372 seconds)
    (291/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.903760372 seconds)
    (292/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.929630426 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.907101254 seconds)
    (294/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.914809369 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.842334876 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306267173 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.400024605 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.881339979 seconds)
    (299/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.948267764 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.090444988 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.233753869 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.900802442 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.862696497 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.830568846 seconds)
    (305/309) benchmarking ("sort", Int8, false)...
    done (took 4.830705221 seconds)
    (306/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.829714563 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.22609569 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.980059371 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.788789835 seconds)
  done (took 991.35463769 seconds)
done (took 993.134647891 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.836740558 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827642082 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.811707748 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.834051689 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.925049348 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.840126802 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.824430754 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.814023199 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.861854216 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.863807972 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.811599041 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.840100721 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.816167666 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.813856599 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.812376568 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826278023 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.116451203 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.83460837 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.829567499 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.822196475 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.830123078 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.811470404 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.861817272 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.839337914 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.816335563 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.815381566 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.816173533 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.832644584 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.924253555 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.817022401 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.816974245 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.823637862 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.120175458 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.832965365 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.808425569 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.833097107 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.824959357 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.822163008 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.81859228 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.847406464 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.246453579 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.817556508 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.81719582 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.816009225 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.813878676 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.819551435 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.815205264 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.820185701 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826661955 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.828685756 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.244705649 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.833015084 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.817880428 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.814367495 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.826496594 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.815870035 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.81843797 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830684393 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.834826946 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830746349 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.108466895 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.842271261 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.819098399 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.831433461 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.823197871 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.285406245 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.814662455 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.820745761 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.248733255 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.82723165 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.28349903 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.828949114 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.817791845 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.829953537 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.847944331 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.120032825 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.832134436 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.814668168 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.824248007 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.814654373 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.825850589 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82775472 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.82081871 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.816466964 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829626002 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.844883504 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.826939055 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.816904702 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.824787801 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.835402757 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.824318183 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.826524473 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.820049178 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.813405018 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.825986023 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.819765143 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.820732735 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.819011107 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.82216096 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.828186619 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.246874037 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838038782 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.8137631 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.81372546 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.816061388 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.830884116 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.247282892 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.821657726 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.839835294 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.865206143 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.819682346 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.112271115 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.842071124 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.834923993 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.827144427 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.821680046 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.813376101 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.111754082 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.270912725 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.837607666 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.820821784 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.817172135 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834747681 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.820334755 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.814598663 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.123505608 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.841210172 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.832348325 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.941717949 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.831233652 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.851519369 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.816160761 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.822880388 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.847406132 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834251965 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.849333911 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.822150167 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834402068 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.836834892 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.815370126 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.828847214 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.830043249 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.820479698 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.823784883 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.814608082 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.851972143 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832426077 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831977207 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.841804872 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.940946746 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.817277621 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.112218532 seconds)
done (took 285.639898665 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.886079483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.808545987 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.920579677 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.815383003 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.900194573 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.900937423 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.813544864 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.814960485 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.814410259 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.19634124 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.814020782 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.81475511 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.814877423 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.814770908 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.897265768 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.818029408 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.813842248 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.158240926 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.816750713 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.88679728 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.815878507 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.813679223 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.816526756 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.196970355 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.811697274 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.813470093 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.888209533 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.816051226 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.161715727 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.816057867 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.811238859 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.211977318 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.906955934 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.835713649 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.826987977 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.825505026 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.900992102 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.821575178 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.898287988 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.897427852 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.920868872 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.856012978 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.8162334 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.811033924 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.821449086 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.817201914 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.815024146 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.843949884 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.809500701 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.815667325 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.160207529 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.827578226 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.826903519 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.817280379 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.816968857 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.839017161 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.81518875 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.818222747 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.907442053 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.817832785 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.880016172 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.19713665 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.19769328 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.818550026 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.814131367 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.81700222 seconds)
  done (took 180.849282662 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.887933376 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.89032786 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.886618074 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.82051215 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.868444169 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.889159252 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.823272312 seconds)
  done (took 14.812132012 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.826381864 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.819522267 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.867742531 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.867936175 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.818437198 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.969171392 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.818541903 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.830874267 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.817602681 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.872290221 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.818615662 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.819972541 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.827696414 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.814886967 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.868782962 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.831126326 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.934130752 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.820904316 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.819535613 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971319235 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818061047 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.827396626 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.878549456 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.831626394 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.820634426 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.825420504 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.40963288 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.819166109 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81804634 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.82056963 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817828465 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.862862727 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.820013191 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.815959844 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817419462 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936617164 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.820694844 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818581786 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.82018568 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.815279955 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.820769569 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.820311099 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.820622587 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.818797352 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.820655486 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.84703613 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.820526246 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.821308791 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.821663657 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.822040086 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.872622109 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.822752932 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.819397057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.819097707 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.876944662 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8281923 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.822579758 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.820888632 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.822445813 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819098121 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.973591761 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.869372179 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.82147312 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.870398421 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822783841 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.821813358 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.825221455 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.821902638 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876564806 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.232421715 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.869839335 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.820153935 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.978972463 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.846377047 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.823556843 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.82590281 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.824973237 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821013448 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.818834568 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.829642615 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.819426976 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.823337855 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.828711743 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.823170894 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819414055 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.935996672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932006982 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.821011047 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.836573629 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.830045094 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.821992887 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.876171453 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.823518664 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.820791332 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.874665449 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937408425 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.878666449 seconds)
  done (took 201.455977702 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.827558565 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.831169088 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.824606493 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.838532577 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.823606618 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.823566264 seconds)
  done (took 12.718302256 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.824554629 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.826251154 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.823287287 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.823791712 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.82398646 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.823723419 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.823457231 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825309237 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.825903999 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.825279105 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.82413671 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.824903511 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.824843145 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.824298992 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.824212175 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.825048016 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.824964652 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.822048536 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.824868495 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824881862 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.970024552 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.824611714 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824282442 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.827436159 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.827693607 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.825957555 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.83210077 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.826012357 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.825674887 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.832532292 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.826623376 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.826366471 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.825495768 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.830889332 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.827968998 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.827611956 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828138701 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.825935145 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.822253248 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.826496567 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.825009786 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824143774 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.825528287 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.826326431 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.825979175 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.82892373 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.831423467 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.833228329 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.825948532 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.825614523 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.826613508 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.827313303 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.827131255 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.826341111 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.826969846 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.829955235 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.8302237 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.825596426 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.826175806 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.827884904 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.828301289 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.827312969 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.828991686 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.830491971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.834284357 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.827662209 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.828520724 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.829862367 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.826870261 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.828232127 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.827366241 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.825888206 seconds)
  done (took 134.417801803 seconds)
done (took 546.010773811 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.087678192 seconds)
  done (took 8.841155935 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.838872725 seconds)
  done (took 8.687275963 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.309553278 seconds)
  done (took 10.064791167 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.837569271 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.833853948 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.83283854 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.820712671 seconds)
  done (took 29.089156497 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.938691369 seconds)
  done (took 8.691677531 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.833233489 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.819261283 seconds)
  done (took 15.442025516 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.888288654 seconds)
  done (took 8.644905366 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.931295881 seconds)
  done (took 8.695552925 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.839438558 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.838009028 seconds)
  done (took 15.446354239 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.810612795 seconds)
  done (took 8.566290422 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.489180465 seconds)
  done (took 11.253255338 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.829531358 seconds)
  done (took 8.599012945 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.861745079 seconds)
  done (took 8.618749718 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.885329278 seconds)
  done (took 9.640210718 seconds)
done (took 162.035333569 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.823666633 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.821498277 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.82102909 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.821703288 seconds)
  done (took 29.042108952 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.862016267 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.862206719 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.862845383 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.873660481 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.869864005 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.86087766 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.858147262 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.860140793 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.873776611 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.867698464 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.864535604 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.865696991 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.864044782 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.855454545 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.864728128 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.864986546 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.874569184 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.864457545 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.855708109 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.866586988 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.830533708 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.873591413 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.86776894 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.830564357 seconds)
  done (took 46.449453392 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.024517534 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.900589219 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.983722627 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.882077172 seconds)
  done (took 9.547234097 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.880818071 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.884102041 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.896385868 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.934036425 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.959867606 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.893200051 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.855468746 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.852160514 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.837510736 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.884208988 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.95852252 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.901526531 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.96807958 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.830704036 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.018042845 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.831150262 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.830868853 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.883023003 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.935696909 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.948137333 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.831644575 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.882668523 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.887064953 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.899254279 seconds)
  done (took 47.240727533 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.830145983 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.838734552 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.839925303 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.831666123 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.830724927 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.831332122 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.836012215 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.83357956 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.851129488 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.832455666 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.829473327 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.830734967 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.830095565 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.830368469 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.830800003 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.845171983 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.84502785 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.831411578 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.835438194 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.837537439 seconds)
  done (took 38.459909768 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.824937589 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.678432563 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.175463618 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.081365125 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.82578047 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.82537723 seconds)
  done (took 31.169566347 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.842625003 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.834855725 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.831213526 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.886928036 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.965894146 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.83751731 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.832491425 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.841792182 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875631784 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.893142031 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.850001444 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.857017249 seconds)
  done (took 24.109879762 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.828536882 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.825287256 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.826370588 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.840468298 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.84216227 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.838585587 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.837894772 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.826115446 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.843960235 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.850392311 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.841308694 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.844287511 seconds)
  done (took 43.8078305 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91623059 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.8739769 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.859234543 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518584552 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205439199 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039280974 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.430262383 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158676087 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.829937168 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101710148 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80873734 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929649844 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086530378 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246908403 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.860283877 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299183631 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124313987 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044599578 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855677148 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492186811 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895101749 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.923656201 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.638556662 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887262918 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040131126 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.957919471 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.089506874 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.830467774 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966644322 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869687329 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840514966 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82998117 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104441991 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210688012 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934253378 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840213748 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.447952799 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.544891265 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.818963462 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.608598378 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.52605582 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944622227 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841801541 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831115012 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766079371 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903039813 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20507036 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.836153366 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.542960025 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.830669935 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842543319 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926054593 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.834048738 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.649699492 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74454508 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.832135183 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.827689061 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836271691 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405540738 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926852095 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.93010434 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.800361396 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.925841704 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.498393183 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224471106 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.981024889 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.835740357 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835899944 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766473107 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.569538458 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890466725 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.181223059 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.85127455 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48402353 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135576266 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.847699083 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775406163 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110750589 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.296663244 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.801930183 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06158861 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832541492 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76834625 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.779336868 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767843877 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102331267 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870984379 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.61784555 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874963088 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161144985 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.844189319 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853111806 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858569654 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057323267 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.718353893 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835385214 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.588017629 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97627242 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853084215 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163829967 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769349312 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.836911898 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092030366 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.046884917 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.825749073 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.336749261 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990265686 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314921937 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.882624383 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.908785514 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878900578 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.106903992 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895487699 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.933539528 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887088547 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.833958545 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135330756 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.343360733 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.967080827 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.842015566 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959934674 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.169550353 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863246957 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918112997 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841679855 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.835111449 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.589140907 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389672263 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.835468578 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.837813523 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82606723 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.87953832 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.833952041 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786770588 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.455507938 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.808288766 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.847532482 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059698473 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330417064 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144528266 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770434435 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166188157 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890772984 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.056592775 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.491825326 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.908436663 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09886632 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.833436572 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.871138845 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881316831 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855117257 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933448092 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858474786 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.90644096 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125518585 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.840795771 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.839554475 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.600527405 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871522531 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83695417 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842030421 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.586768608 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111394889 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861428874 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.844035755 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.726976992 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.851387786 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901122716 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844148802 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848145123 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.37594839 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.549639139 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.841891419 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.419856964 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062839494 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84890072 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.58608333 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952834055 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.922000376 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11189192 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898788581 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.772301553 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.548303541 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.531661057 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8384986 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773877042 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.839052722 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847025396 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848617068 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.039337554 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116484903 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884196045 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.506258745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.883411365 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851431039 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.844602609 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841065591 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.352130134 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941988857 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957174726 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882414388 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984662512 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.855232124 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775290025 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.84483056 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844862684 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842004738 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.840151719 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875517494 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.507528517 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223794696 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103375408 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.453316378 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853443139 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.534667329 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.900316869 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.840110907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618985671 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930764179 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.869586162 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855314627 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.852228724 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.578531044 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.55277433 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410258118 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156864176 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151363939 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276325612 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.977417193 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.868173964 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178072476 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775578145 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399426521 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899647471 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182304269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787235149 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926129326 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.497329912 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1820404 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857863132 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070449123 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227263357 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.518663649 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977769883 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054291979 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876394604 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.914677521 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801688993 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.129409264 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985216083 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.49889379 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037964416 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175385324 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.460653518 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.959946622 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.842012042 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.529330083 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928790375 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.552293316 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.017989345 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.949136678 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.705675367 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309775087 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847767324 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068826525 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197596727 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912521494 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.962492435 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778964134 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854285989 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854703739 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.84500682 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.84385637 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.701724635 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.097533494 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854878763 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779465929 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.8760964 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136782448 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.748577121 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.850985224 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845935952 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144157349 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310795578 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010062962 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.870249912 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.359012553 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852770601 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779994896 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779526979 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.539265484 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.850924559 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.839838807 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060071482 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.952088481 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.75706413 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851726524 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090733456 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102819767 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.860065061 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117021144 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121686663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.543555083 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868649399 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.947494302 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.472153431 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.946831395 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.84630156 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082728052 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651006477 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07142203 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.8731131 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.809927354 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.846287962 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060948774 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.845115711 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.700603857 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068665628 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.570747361 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.878695273 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158990729 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919607136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.67772667 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.884027886 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.937834868 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85575754 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926879731 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858103642 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.858307832 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858119784 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894686286 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.733590551 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96250179 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.861435553 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941907301 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.948657551 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.36964684 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.8535428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122824962 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205990873 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172455114 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909254836 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847616687 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849433888 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783008264 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995840944 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073809405 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121536319 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.9817055 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.961807829 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872002271 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.44746853 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.975323991 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086644648 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123753083 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.744758378 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27810384 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.887727572 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.84922368 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860450297 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.060874875 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064896996 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154923572 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992765666 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.847753855 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.206402782 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125179161 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.850781944 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848559137 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443449012 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.897027431 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.534922165 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.893329739 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.703464877 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116381681 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860233896 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232346808 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870745865 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.007505245 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.622517484 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609623375 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141120911 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.83979096 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.91280157 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129501766 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.236725851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164430949 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917818678 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862389499 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.954851201 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996893833 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.714599649 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.850844962 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850548892 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901488437 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.561459228 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.861709815 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127747389 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163547715 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.849526282 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.725764185 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87427442 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.86145331 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07748718 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118993488 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105178579 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860881173 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.858780221 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.667050642 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127676386 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910421488 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786786068 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.854772247 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953132248 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100995106 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875177102 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.305751871 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.563562787 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128398345 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.854630315 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874748713 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.944317885 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.211887792 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175493933 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.385617813 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066715409 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441378519 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349737886 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15269549 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.856432706 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.930821828 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153034742 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.857408725 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.853104444 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890198361 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.120846786 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166289944 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.870899603 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51387508 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.824721269 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.19434826 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414345799 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790647737 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861310783 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.91488581 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.852991884 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.986483216 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864304534 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.734951716 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937277668 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.610647707 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135210056 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.8565292 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.84469323 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.523097236 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.047660658 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884934722 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010986783 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85601259 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.53174778 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.210632927 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112971242 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.863540331 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.861643626 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.858842451 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855836453 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843075794 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051183502 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.050150118 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131492333 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.889399619 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.890528291 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86056277 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.072284272 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06755601 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.697171565 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98156962 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86758915 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89602434 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.763016269 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360046272 seconds)
  done (took 1656.790953057 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.881215703 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.883691571 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.971298048 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.895490625 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.882632513 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971393176 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.907117562 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901307218 seconds)
  done (took 57.082232671 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.85568549 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.055779812 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.866855695 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.857712863 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.86397872 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.855780559 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.022315703 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.865834698 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.863016967 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.866737535 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.856998812 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.854976692 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.172577116 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.878806161 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.857848044 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.849744831 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.862485406 seconds)
  done (took 74.116308728 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.866480049 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.928981478 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.880254867 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.870195254 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.828197717 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.874342353 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.709596113 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.874070422 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.85731366 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.07745066 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.494938993 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.861054541 seconds)
  done (took 89.911599726 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.867689369 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.863867826 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.863136473 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.863232361 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.863777651 seconds)
  done (took 11.114544471 seconds)
done (took 2160.624893143 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.137538804 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.071871222 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.080494176 seconds)
  done (took 5.940393485 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.005508401 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.055995649 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.173217561 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.180229029 seconds)
  done (took 10.206998189 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.142418485 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.239373446 seconds)
  done (took 6.170793462 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.255248528 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.862231922 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.233811421 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.857335142 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.855228586 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.856910527 seconds)
  done (took 22.363097942 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.862300566 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.865365032 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.862644543 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.864631786 seconds)
  done (took 9.24489779 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.846016137 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.567237781 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.84586675 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.857169972 seconds)
  done (took 20.906967943 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.608100388 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.622114513 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.606391106 seconds)
  done (took 9.626584288 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.360338776 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.130179766 seconds)
  done (took 9.281058885 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.1237943 seconds)
  done (took 3.918205526 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.999102355 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.178084881 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.371712997 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.414440189 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.535258956 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.867758643 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.224463457 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.119727999 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.275711939 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.33704148 seconds)
  done (took 25.118052478 seconds)
done (took 138.056564345 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.429837075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882835882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.074191894 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.234573716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.098607863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.092226185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.279999822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.203811298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.731147544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.745406747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.215528021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.09608909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.019800004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.867939094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.018532684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.8819182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.090502822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.294058654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.956285149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.124958192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.281480837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.86383337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.105872732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.868029337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.093540043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.027664952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.426283111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.867967276 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.11646833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.450072914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026121153 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.272445729 seconds)
  done (took 168.532585787 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.660014941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.864706843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.863849508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.865177025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.199603286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.866747193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.865477516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.8650808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.029254694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.011115817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.863545244 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.193860051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.865645598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.86553207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.869190124 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.865178056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.217879174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.709042455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.874057386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.877011021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.879439291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.144298325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.882394429 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.187032039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.19994767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.886222658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.865356533 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.883743648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.867424669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.876232876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.880504518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.867452314 seconds)
  done (took 207.511885625 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.869756102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.868665365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.868719333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.868391277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.872252787 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872799454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.868392787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87163463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.566325559 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.564142344 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.876506308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.875653162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.880493014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.86831618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.871215119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.868299735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.874535752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.87446658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.872343695 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.874034259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.879017638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.698269603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.88188283 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.716298055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.88209279 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.880308072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.869735158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.882798069 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.88915304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.889905422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.886283194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.869611571 seconds)
  done (took 220.87028398 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.06610116 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.877567952 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.87765918 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.814077175 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.878282774 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.877534808 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.874829192 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.068021664 seconds)
  done (took 19.160626671 seconds)
done (took 617.885736205 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.342654391 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.185794254 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.059477916 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.903181362 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.160460222 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.94023938 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.899418888 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.962630852 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.631406576 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.96873784 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.546798598 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.914532458 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.637115855 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.921353018 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.030606842 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.951145012 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.444750647 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.529962346 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.087225583 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.973696518 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.077427322 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.844245934 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.975933784 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.66347562 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.659678078 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.885724708 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.094760759 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.447064184 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.908960506 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.067164522 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.635254241 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.293449679 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.908864513 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.897989427 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.951571645 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.931631008 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.262425005 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.907949561 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.019589976 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.643517408 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963158205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.519999939 seconds)
  done (took 103.451484021 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.869656055 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.868416274 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.867554077 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.868428597 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.869866074 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.868767795 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.867189666 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.866196813 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.86775823 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.866789599 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.867469115 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.868779564 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.869070828 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.869714908 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.867483168 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.867518798 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.869795652 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.871557034 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.866680778 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.867516172 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.871074185 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.869202092 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.868693033 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.868390322 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.869048589 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.870855192 seconds)
  done (took 50.400767959 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.8802513 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.024340797 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.106710466 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.89948485 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.892041241 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.883058922 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.900604861 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.885853733 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.883377596 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.884351491 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.97822406 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.88911548 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903371104 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.108612284 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.896952107 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.883825797 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.882613655 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.882366806 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.032395527 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.899998512 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.901722947 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.887902902 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.902293945 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.895541498 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.884141943 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.883100238 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.885407843 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.35009367 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.891158672 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.974544616 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.937277145 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.903522757 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.320648877 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.117036662 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.936191978 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.891273496 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.883440919 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.980611246 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.888902727 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.883376131 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.904350478 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.888375151 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.105513139 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.385341266 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.896258206 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.88366269 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.364037262 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.988652375 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.92447396 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.895552923 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.113696207 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.8984524 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.884798135 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.884620074 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.920289188 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.894287028 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.884119549 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.244868003 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.895972898 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.903104067 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.889951196 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.884849934 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.04113201 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.892665491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.030371953 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.894805839 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.892486007 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.885187863 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.108874083 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.898764285 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.38912426 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.898083807 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.885184698 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.97604478 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.034513049 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.388622419 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.899521333 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044599997 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.336999012 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.908667542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.891583873 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.345087436 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.913244059 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.891940041 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.888196939 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.889740417 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.88667808 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.929415999 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.901987192 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.318083721 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.38981133 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.260442364 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.912088253 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.903059548 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.886972609 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.248041753 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.89628811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.886470898 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.105613168 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.404666199 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.899163016 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.894540173 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.377781783 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.901220615 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.905992286 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.896221757 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.114374045 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.900020457 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.983836499 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.888916347 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.89306063 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.888742162 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.905458452 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.894453364 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.888425899 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.366942728 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.995703423 seconds)
  done (took 233.888719853 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.883203564 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.892610407 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.878698951 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.879837032 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.879088731 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.886307155 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.880692012 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.880557041 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.887594203 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.881156257 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.880563344 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.882075306 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.883145872 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.883378049 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.920080511 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.888521758 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.489773647 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.880669018 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.881338139 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.879203312 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.53202809 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.886235094 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.881148437 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.880482378 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.881339075 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.884301377 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.891585117 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.915627815 seconds)
  done (took 167.865503615 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.889694132 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.001930309 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.901537828 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.916802255 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.896141274 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.886892017 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.912203735 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.903885634 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.892780085 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.887214451 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.885793461 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.949934043 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.898078041 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.990037503 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.916577516 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.918803224 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.991806886 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.894282552 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.887219692 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.888424873 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.918031319 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.885897328 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.950596952 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.012342836 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.904079024 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.006852521 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.893412722 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.890642744 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.889886253 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008694937 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.902450589 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.950551131 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.915562006 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.907064084 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.00973942 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.006240032 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.996006745 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.918703771 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.893129102 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.88975806 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.890530286 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.880249244 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.005865606 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.904414867 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.890332922 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.99878226 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.905517259 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.89203443 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.900640265 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.888262153 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.906368793 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.90910108 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.957892675 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.020091533 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.921953739 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.91643926 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.916147681 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.182860934 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.902576378 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.990159223 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.883307452 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.007467395 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.907300725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.880665428 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.891439917 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.896899469 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.920669683 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.921969013 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.995364095 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.896961114 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.991767053 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.923639974 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.897774411 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.890095251 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.893550412 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.00961711 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.008223155 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.924629387 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.928215524 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.921917051 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.885831653 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.892032563 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.884848499 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.91023713 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.895843737 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.010829922 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.009145982 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.897731871 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.892827878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.893412833 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.893241601 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.91686201 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.016368386 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.925261547 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.99203427 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.95826489 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.966494514 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.907814488 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.905746503 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.897342413 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.955789604 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.906672632 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.904103986 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.232700759 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.966415277 seconds)
  done (took 204.765633754 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.371676962 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.943406988 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.94812396 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.170294431 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.317088848 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.703282712 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.946274411 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.943077762 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.968034874 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.101979346 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.998854082 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.956592637 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.927899087 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.913804308 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.942995157 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.960710042 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.945320098 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.245923943 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.058004327 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.119477392 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.921033399 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.238422034 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.261255023 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.320004417 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.978460014 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.283000427 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.607001156 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.187935364 seconds)
  done (took 62.10290266 seconds)
done (took 824.275313507 seconds)
SAVING RESULT...
DONE!
