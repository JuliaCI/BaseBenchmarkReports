cset: moving following pidspec: 21308
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.360764971 seconds)
loading group "string"... done (took 0.557579376 seconds)
loading group "linalg"... done (took 7.371502086 seconds)
loading group "parallel"... done (took 0.157182564 seconds)
loading group "find"... done (took 1.194457583 seconds)
loading group "tuple"... done (took 1.770651479 seconds)
loading group "dates"... done (took 1.249149352 seconds)
loading group "micro"... done (took 0.221209979 seconds)
loading group "io"... done (took 0.930935086 seconds)
loading group "scalar"... done (took 37.881555215 seconds)
loading group "sparse"... done (took 11.761688965 seconds)
loading group "broadcast"... done (took 0.983612804 seconds)
loading group "union"... done (took 12.670069201 seconds)
loading group "simd"... done (took 4.716169235 seconds)
loading group "random"... done (took 9.580460329 seconds)
loading group "problem"... done (took 1.892422666 seconds)
loading group "array"... done (took 21.089134124 seconds)
loading group "misc"... done (took 1.739948038 seconds)
loading group "sort"... done (took 3.44838261 seconds)
loading group "collection"... done (took 16.893247031 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.492917308 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128571198 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116457638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121617908 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143171134 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116600088 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125742405 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085535642 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.905793292 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144826982 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118080769 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411494855 seconds)
done (took 5.101740744 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176067415 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085627317 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083648495 seconds)
  done (took 1.315796583 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066808882 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124398181 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067661794 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06824589 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068103215 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067412247 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067312066 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067424382 seconds)
  done (took 1.679573032 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074378594 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070761843 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070148162 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069103481 seconds)
  done (took 1.432592133 seconds)
done (took 5.829659566 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.773286355 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204259523 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182043755 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396067986 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130726438 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156903307 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.627050095 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329530831 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184825684 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082396663 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105886296 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.323880453 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110462838 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635763493 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074190431 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089403799 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137211492 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415954963 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066752596 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081260556 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088775435 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1273915 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085268251 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074298867 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14168487 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067902359 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130989231 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080023267 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065956919 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207112542 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172699113 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654797756 seconds)
  done (took 10.193879175 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098562618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099675912 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070665675 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138737926 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095570541 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069332335 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072205421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068885874 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088558718 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1278253 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08803317 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100845257 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065103992 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068421013 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084293041 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203499276 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079406946 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081004966 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070010754 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074761072 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115899516 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077665229 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077666505 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079612026 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130463868 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179612994 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095411488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097189912 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067092343 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079768517 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114614652 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125545321 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06519575 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066267562 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123696384 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093739846 seconds)
  done (took 4.615276691 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.283177313 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144272913 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092634555 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134842697 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066354532 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109057622 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064984551 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082012937 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204823185 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.316922475 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590303838 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113940233 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103013153 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067354262 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070489342 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066443397 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085319008 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.323821945 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102515186 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10740016 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080834965 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07165687 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069836005 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068527116 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064823755 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069800226 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103615392 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.297744418 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126060365 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069533608 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.930001268 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124959771 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066279019 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1003738 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167055399 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063845245 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086442057 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.26495168 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069801757 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066002966 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152292469 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069757311 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066289695 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085130946 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106129048 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112631114 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065950174 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067000171 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163834129 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064117555 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077918141 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.015337743 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154498138 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07620929 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064000014 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247384585 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085433517 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069638573 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064478178 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.209215286 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13285793 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067308844 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066034275 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067827456 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068982641 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.392830926 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065736904 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.99019158 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067623002 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075937127 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068876768 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068722285 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089551113 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072461326 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071939795 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085165797 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065613606 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074768755 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065359032 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065686274 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066664827 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083506796 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358330685 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066322897 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067569847 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068777762 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085868383 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095851154 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065957733 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06472422 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099769125 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067331756 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065243053 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.204519085 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066974456 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084178708 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069309285 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112756806 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066226503 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.111376727 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064897705 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096537095 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069772914 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101529321 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083369223 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068170779 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401597272 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06531296 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064821543 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068160651 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065137495 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06448926 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065442855 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068158295 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078945637 seconds)
  done (took 21.277618175 seconds)
done (took 38.516798726 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.277419173 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07891338 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078153221 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074569606 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074448598 seconds)
  done (took 1.830259405 seconds)
done (took 3.048152823 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122604028 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100047638 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066324218 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097823243 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065950068 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102909319 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102156544 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083298315 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101683021 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065902053 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098438822 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066780581 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065730693 seconds)
  done (took 2.378544324 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084548459 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085781642 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071254893 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084682722 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065142263 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084383267 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082560424 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090964137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082298567 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073841773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06514637 seconds)
  done (took 2.08898596 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084190621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085804008 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071166963 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083818041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064748971 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083341822 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082677637 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087382543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083065626 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075057073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065378284 seconds)
  done (took 2.077189946 seconds)
done (took 7.753023709 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079221336 seconds)
  done (took 1.281969753 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595264607 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.051226782 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081395886 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111702876 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18368643 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120008336 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27778166 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086382649 seconds)
  done (took 8.902072955 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091408561 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084130079 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07315779 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070421959 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071050029 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068702778 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072097202 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070959401 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069062459 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067987655 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069578916 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070290928 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068768442 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068235519 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068519034 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071620073 seconds)
  done (took 2.433650508 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092826972 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091006351 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073720587 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074374474 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072132243 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072073749 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074113547 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073500877 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070450986 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072317635 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07612816 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075081013 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073408368 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066615384 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076320047 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076852221 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07150251 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074389408 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074900196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074291982 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07441576 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064143543 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071088781 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073487128 seconds)
  done (took 3.099159073 seconds)
done (took 16.928695827 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114537639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072432066 seconds)
  done (took 1.392535452 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084515565 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085599947 seconds)
  done (took 1.389980318 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085408192 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067474239 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09110879 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079333713 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068821084 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067849434 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089157111 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067913326 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066319512 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066067149 seconds)
  done (took 1.969021685 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07027347 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079746551 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069551486 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080410701 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073923571 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063698493 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072167816 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067107085 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077234462 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062342219 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070840314 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081453033 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070427322 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083244025 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071768918 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067763769 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070483577 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066520021 seconds)
  done (took 2.52225954 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067757006 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066928559 seconds)
  done (took 1.359761006 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068708055 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064785805 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067738801 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06719051 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063392871 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063796846 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063631265 seconds)
  done (took 1.680385441 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393351993 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113208323 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306507833 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072569736 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084462267 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255303785 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065576833 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06986594 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070311858 seconds)
  done (took 2.699823192 seconds)
done (took 14.235454545 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081012598 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087828441 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098362951 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363649322 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091502527 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065836905 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113822632 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189649727 seconds)
done (took 2.331124548 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212504707 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.595841613 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386517165 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.200473615 seconds)
  done (took 2.407952889 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325224915 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088390194 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060464975 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06845058 seconds)
  done (took 1.773908445 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067657935 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070723331 seconds)
  done (took 1.368239016 seconds)
done (took 6.996498963 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067465649 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066724918 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084846932 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067592533 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06498685 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067699066 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065392891 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064847566 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064822333 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067315441 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070622079 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067982545 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067402094 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067413195 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064875621 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06500078 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067416041 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065237184 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065012667 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064805372 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06732578 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064679186 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065260607 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06752892 seconds)
  done (took 2.869665083 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085277552 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067410257 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072453601 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071347516 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069519395 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070770662 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070569956 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065829987 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070931275 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067581392 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069432567 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069539466 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067616071 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071482206 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069623949 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071690402 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072914548 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068018651 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070073871 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0715295 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072703619 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068146941 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071335524 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072945494 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071488549 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071211426 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069623335 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068064926 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072736773 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070953835 seconds)
  done (took 3.360107798 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070249885 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063619547 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06525245 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070014757 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063257878 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065083566 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064520049 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065238326 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065837108 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064576932 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06536127 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063373691 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063135634 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065382882 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063943237 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066920098 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078380172 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064850151 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064639964 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065538315 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068620546 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065131089 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06499769 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065161733 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065129149 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065330752 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.179890097 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064838487 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065714676 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064763763 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068362631 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068854552 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064908078 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072134531 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068339563 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064785783 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06923813 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06539666 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06525553 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06454761 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064870766 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06455739 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064482547 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070841124 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063276094 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064789959 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063347931 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064361579 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063542201 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065945192 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063016123 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063232124 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065316276 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06570619 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069190187 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064349398 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065379357 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064305076 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06563622 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064152733 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064255095 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064169437 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067329047 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065288391 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07977317 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07114995 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064240189 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064904533 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064264152 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066259191 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064902104 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077631573 seconds)
  done (took 6.116557981 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094008277 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087551741 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065047219 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064742194 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061762982 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063633481 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067327213 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063826797 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064854222 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069210677 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064050315 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064955667 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065225198 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076259139 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063873834 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065007677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069825769 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061680046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063747768 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067522586 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064278589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06713152 seconds)
  done (took 2.751868231 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156625384 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070799404 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104685411 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072421869 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067398034 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072046915 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069397349 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069474029 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069396522 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067801817 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067539638 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069567402 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067140938 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067550543 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067882492 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06762681 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06942533 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068221921 seconds)
  done (took 2.616302275 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078502533 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067995746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088935656 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066397529 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066900187 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069715648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072160041 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075932324 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069903527 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067219191 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075802509 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069948235 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069592309 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067426294 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06940344 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0674025 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069710748 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067269517 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075489767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072076895 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071839037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075495769 seconds)
  done (took 2.829913709 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082064211 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069601321 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084473676 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069930256 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064207731 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065685127 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071910637 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067298149 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071711295 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069247896 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067605638 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065573227 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07082815 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067731509 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070751774 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067269225 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06906076 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067335813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069171804 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063035721 seconds)
  done (took 2.650601554 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08926254 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069867382 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069297285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07713937 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068791591 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068948156 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07709761 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068979207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069025727 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090685349 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06939721 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069010791 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076639501 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074026357 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068953144 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077032874 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076464261 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075969892 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067067471 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066939708 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086849169 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066881696 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074626564 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066967215 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066408557 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067004085 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06832594 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073582969 seconds)
  done (took 3.298003625 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068470549 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067582523 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065087248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064857629 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064739089 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064951369 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065033079 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065074589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067259275 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064897181 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067277107 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067198794 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067438374 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06720682 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067497838 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067801469 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067657171 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065033001 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065025938 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064648074 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066056268 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065864398 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065530564 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063194205 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063116235 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065565885 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063421326 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062829821 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065447252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063284491 seconds)
  done (took 3.229256901 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076280427 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074810614 seconds)
  done (took 1.412059159 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065198549 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082301398 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064814547 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071533491 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071363064 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06813156 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075514145 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071298677 seconds)
  done (took 1.826969328 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083501 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079837665 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069581124 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08203405 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078705636 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084556633 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134819632 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069087974 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07501605 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065781273 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08187274 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066828993 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074272976 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06829651 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073847917 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0740648 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065452816 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074152097 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07037435 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066068198 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068949668 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076217964 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069769391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062948649 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068778181 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089674245 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078975656 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067124439 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070577086 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075030665 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073262881 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061988877 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067387887 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068060652 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065423704 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077081369 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082644886 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070497523 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076818497 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068594289 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078458739 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062837085 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071979109 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074172408 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077357628 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068155307 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068433155 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06237103 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065185063 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069859762 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063073743 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068005597 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062335458 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077044418 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07127275 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078327792 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066392875 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069067438 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070192234 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07101555 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074326319 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069499823 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069846745 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06740014 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077382912 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071809296 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076853652 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062684885 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061694324 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065375873 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077454102 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089434022 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07192092 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06628534 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0662789 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063949491 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068866632 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06699848 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071207462 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072289149 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065951398 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07105175 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073016453 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066673486 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068001535 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073645749 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064210372 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068524864 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063882758 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081716137 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064727737 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063610817 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063450988 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076096725 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069034821 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06549004 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06357673 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074279025 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061871364 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068189957 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068529481 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068682763 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078581993 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072862476 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072937239 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076052763 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07437543 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067043602 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069831867 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063184557 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067381261 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06586942 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073884563 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060923147 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069003873 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067313308 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067093351 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074614606 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.188688666 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066621334 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073861643 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072158252 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065232862 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064497595 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071403826 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068185683 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071904882 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076075859 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067476794 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062669093 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063318266 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072302209 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068264221 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072522674 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073439236 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071393521 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062765641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06665432 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073916077 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077611588 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06940229 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068850242 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073595672 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067737253 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065823727 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073393123 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068653455 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065919536 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071588515 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067017951 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062196821 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06937642 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069129935 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064585115 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069876323 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069976536 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068867272 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067352548 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064774225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073791246 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067169319 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065408601 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067326657 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066565365 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078762587 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070839969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063288881 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065238304 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077962435 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065863399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067764413 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067610845 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069704992 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069198404 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06615291 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066856061 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068945367 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07737342 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07125156 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067233392 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071715102 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077080632 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066996989 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070501988 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067431604 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068048345 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068319423 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076436378 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073838626 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072966123 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070880301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06515144 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07308257 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075144841 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066905957 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065589039 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066889279 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072368835 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073388506 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072196131 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068405997 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065905505 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068309829 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070176523 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06996531 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067317514 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066701573 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074614486 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066393137 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075154366 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068641563 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077739466 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06953013 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060936194 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069042962 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064319839 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072089161 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061255286 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063916324 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065256708 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067024981 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064408412 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068071605 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059975228 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07292115 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073266137 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06628884 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065504428 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065458396 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071360368 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066469612 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068465508 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068361434 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070441633 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075137525 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064014574 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068243616 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07489709 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064744808 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059187215 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.198975178 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066059882 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066492522 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06600006 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064577124 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069672119 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075623874 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072926724 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060545401 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068959668 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064584547 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065860483 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062166841 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070655917 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069492768 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068219278 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073233081 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067341422 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068071367 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072299307 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06868529 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069698465 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069497851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071837283 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069240679 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070036419 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068021795 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070681508 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065516998 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06637467 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071000407 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068011909 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06656383 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072501008 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065862059 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066368629 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06880039 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067061867 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067387037 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066641208 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066035822 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070380476 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067179925 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066457663 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069992915 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063544665 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075584939 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068788927 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076857268 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069053741 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064932964 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075510133 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070589619 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074021609 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069210707 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069183082 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069252796 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068431355 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070916277 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0745135 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064616333 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076358963 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074137112 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067315957 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068720932 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066851262 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067762727 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065099793 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066868239 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067727386 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067184605 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065514741 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070498845 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068875343 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066200402 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067071389 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066549632 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066386839 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067022948 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060489792 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065272851 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065235031 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066131572 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075558871 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066258044 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065417258 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064878067 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066791626 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064880848 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062563452 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074097913 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075520272 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067691838 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074869814 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067414198 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069995862 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077599702 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060499316 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063797999 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064041379 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063975296 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07258814 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066438232 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075036211 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065591468 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065046867 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06381198 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068510004 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065864119 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0621264 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065824913 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071001516 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065543971 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06512759 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066649335 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067867888 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065365119 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073848094 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063576983 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065642268 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064932098 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061912595 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064640195 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064662036 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068218225 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.198597836 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06464129 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064912031 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065785246 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068160756 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069559234 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068411794 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07030394 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077515074 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068161491 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071540748 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071386001 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063468024 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070549486 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066451202 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066291136 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065598964 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07039909 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0699629 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067011895 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076058081 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067004799 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067644325 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066725994 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06425231 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066321099 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066291324 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066497401 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065894343 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068014822 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074700502 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064389277 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069805917 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066801266 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067090726 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073272356 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067331656 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069850211 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072901367 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066819376 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068428279 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075956705 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07283362 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072388477 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069572381 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070371012 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074438033 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067617901 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075188285 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069080841 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069075899 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070000286 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066114301 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068259934 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068338751 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067283793 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074397755 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069043066 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06739689 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068052043 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065744946 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06924598 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072131358 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075903116 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070786217 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071548516 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063822631 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06583294 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069078824 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065905089 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069972728 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07067273 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07403897 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070531471 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068657233 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067474089 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077479704 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073800042 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071944068 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066146252 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071707751 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068803299 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070674915 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069233011 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068482916 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069542249 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072081075 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070133478 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067361798 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073891959 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070163772 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067497147 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06778009 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067409608 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067147111 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061675299 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066946076 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068354481 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071501741 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068429737 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066234536 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076341212 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063799593 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066176379 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069196819 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065728961 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070609131 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061079805 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067610103 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067159179 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067189233 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061208606 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065122018 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063525663 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067830979 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064520713 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060941377 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075267838 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073901871 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06755764 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063671906 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063411019 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059911635 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059849578 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064357948 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.195529048 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068879182 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076679611 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065567502 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066184296 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062403133 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066869173 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069872639 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071083403 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063941662 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063077481 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067988755 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072015668 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074820769 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067438975 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068403564 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071566523 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070709792 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066592956 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071443113 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066405998 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073011154 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081962046 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06948831 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069441046 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074878601 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076099186 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069721214 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063507422 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067082618 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069735582 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06664433 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066983205 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067352561 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081680867 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069582342 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066415704 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065817847 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070032476 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065957501 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076411411 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068698544 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068987905 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072405096 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070727165 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075602327 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071200681 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075352778 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071153696 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072180509 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067459601 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06721753 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066098928 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067284689 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069526062 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06822292 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071837323 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074886604 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065554184 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076532079 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075796105 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068483053 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063081142 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065292634 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065977055 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061807324 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067283484 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065056225 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06409953 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06474212 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064893191 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068190032 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071337027 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067617141 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067220873 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066343394 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060441166 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06821761 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068264344 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066756356 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062622167 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066055676 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067887079 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07044156 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06903098 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063632898 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067347644 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067726226 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066332495 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061657469 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072630762 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064922678 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067562263 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065009402 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06626187 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067163518 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069272522 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070869907 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067191768 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068764676 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069718546 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068312533 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064104236 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063730324 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071555481 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064106059 seconds)
  done (took 42.963460763 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101527444 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062972135 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062052827 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06183663 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073358657 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062489219 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061612049 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063076406 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062666233 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064951713 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061611954 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061649419 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070243058 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077420399 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073373891 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066282873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061616473 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062761699 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061967836 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062939042 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070765408 seconds)
  done (took 2.761051955 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075526437 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07219557 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074334632 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077461838 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069282988 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072176349 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074423274 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072139177 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086660671 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068129202 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077333496 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070351084 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066762077 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066693073 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066661871 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070318361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075643162 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0667883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070563712 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07183729 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070585322 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071966133 seconds)
  done (took 2.917039357 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068461461 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065814711 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067402741 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060927198 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065140758 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060842893 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069319709 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063341535 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068745533 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064809921 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064942383 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065009893 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067399381 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060917897 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065935978 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065069868 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110683854 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071043027 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067338811 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068531188 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063054153 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069405275 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063785898 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063411599 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066547255 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070930774 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068189476 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065719562 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067137902 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066642901 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067143871 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065396801 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068864046 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068293718 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06631482 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066344998 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066894008 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067248377 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06270067 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065330647 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06823492 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063369901 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067483347 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068936889 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065682277 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064821683 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068465673 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067193711 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062551443 seconds)
  done (took 4.619914471 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080926555 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107479896 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066642501 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088035286 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079755569 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075175479 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068685122 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088909625 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063284028 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064014378 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081006969 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078799491 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065697992 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070253676 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071892064 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065362259 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066165643 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064589252 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0693037 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064483069 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069493001 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072579694 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081682531 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080464081 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070768963 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066357662 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066566129 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071504764 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079954898 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071895734 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071876607 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072825425 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082945725 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073179197 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066425376 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068935494 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083252231 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067211534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069985257 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064978173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069159795 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071183391 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073617669 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083372941 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067443969 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072484902 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06669264 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064165899 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079661257 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069730153 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074096162 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079828697 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07009968 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065820406 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069211929 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079619937 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065563746 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063589186 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069816208 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079588864 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064516115 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070695484 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080407926 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068898858 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074036189 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08087379 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072336277 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070683501 seconds)
  done (took 6.419830568 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07711999 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073632536 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082748623 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082286252 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073868606 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073934053 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073856856 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073771119 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073346781 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078687819 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074058866 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095663211 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06962606 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076647582 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074040381 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073897438 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074062861 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074019941 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074140054 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073974712 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073920187 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080078265 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071543889 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081363245 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09789176 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067202175 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071296506 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072098709 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080119518 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072181714 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079477026 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073400879 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073364533 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081346191 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080926018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07309957 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066176193 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07211256 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071980887 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071788255 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067907161 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080207777 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072531314 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067528945 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072745841 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071122978 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079326598 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078807263 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073941703 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076478512 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072143437 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079223932 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071352548 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07138424 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079393223 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104121239 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079329659 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079198017 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071537342 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079253693 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079457324 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085363844 seconds)
  done (took 6.083438965 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085753161 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075394784 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077627474 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061673845 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064163761 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070421568 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065492015 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065183058 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074241862 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074068835 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076279952 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069465098 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072151302 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07622773 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069047836 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072111784 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069168936 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069032604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074165408 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069386623 seconds)
  done (took 2.785817883 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076782807 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084749197 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068414956 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073654486 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070359137 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073722069 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070000477 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070347782 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06879628 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070658242 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07773994 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077902737 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068425184 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073439711 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077257294 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072805051 seconds)
  done (took 2.521165377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077151299 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072530915 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081360241 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067656075 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06582159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064033216 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067346269 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062801602 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063817767 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079480118 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067564809 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069934326 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067481221 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065894038 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064033709 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07024524 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063930161 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064959007 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067617759 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080177681 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077843293 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066063056 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068009323 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067201864 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067497992 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072733346 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066825146 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06527235 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064626375 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067792627 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067843499 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071322698 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064653847 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065254386 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065812459 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06504787 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067728221 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067911116 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069731001 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067033388 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065090158 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067266688 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067489302 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068159667 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063581854 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06752382 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063563237 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069030429 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065240888 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0673101 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067182471 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069484628 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068218021 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073735486 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069865543 seconds)
  done (took 5.100421737 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08090812 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070113558 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061773827 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065385239 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070343739 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068757339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071001252 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069500996 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069386459 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065489957 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067758676 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068186877 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067047292 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068849757 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066988369 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068715219 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061655226 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067154988 seconds)
  done (took 2.588406086 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073036628 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067416447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074046634 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067484026 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067644127 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070081108 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063518707 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066221821 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066307365 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067302273 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067655811 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069683889 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065937041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069768066 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067505853 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067281012 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069565187 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06604367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067119196 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063778646 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069784734 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066142029 seconds)
  done (took 2.845954502 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095057915 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083168068 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141538666 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080122647 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085286916 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07400363 seconds)
  done (took 1.913965778 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091923117 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078771407 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065842927 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087895357 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072997203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067175737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06678592 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067158482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075874188 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075464192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0672131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075471377 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075587865 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075210776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074629016 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074490431 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068938449 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069266779 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067829919 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085974479 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069291719 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077683236 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068651109 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068767042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068940674 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077054045 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077579819 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07773999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068487003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077626097 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074867549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069155248 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077726228 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077355724 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070704946 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077968542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068907283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085750724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074723561 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077164242 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070527719 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074062041 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07617959 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07190664 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075385877 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067185261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071464362 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066883356 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066873798 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085264887 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072909387 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074759286 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07307198 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075517251 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075640932 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085469268 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075442693 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074749042 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073103477 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078123065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075573049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072190002 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076453984 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077614401 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075053319 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077157762 seconds)
  done (took 6.266291738 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083683567 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088822161 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069696698 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078217025 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077028734 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069270316 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068989246 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069281843 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069616815 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069196898 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110177881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069708171 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0772085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077766089 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069400523 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069300618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069510577 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077426542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068887849 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088135576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069199627 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077087578 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077226834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07745144 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078142755 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074710977 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069692492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069061243 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069316813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069142041 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074240815 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069260656 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077709372 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069255369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077302383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069729022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069068194 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073756077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06936181 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07476261 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077093757 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085614124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069084084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069137785 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077758094 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068891999 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067451255 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066712324 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066914494 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066793051 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076151025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077096777 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076777231 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075408252 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067422399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067561656 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068185898 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068779653 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068590551 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07437611 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076774355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068841561 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087681026 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068867218 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068989771 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076715215 seconds)
  done (took 6.234001774 seconds)
done (took 130.206955736 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186578674 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168936277 seconds)
  done (took 1.701918113 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070156631 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098036701 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079188304 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13039066 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06628954 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099414064 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097914777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07733047 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065817144 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065972574 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065858598 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067566757 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.12997094 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066137865 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065864587 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067178838 seconds)
  done (took 2.675494787 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099018525 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159540163 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101999125 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066927143 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099160178 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074729472 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066575948 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077141223 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073346303 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067390961 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075308723 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072757419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066928697 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072955121 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072957845 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074871552 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06691201 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075181737 seconds)
  done (took 2.829034787 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101853394 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089801975 seconds)
  done (took 1.560238924 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155646899 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105214608 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142416954 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34228669 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165810269 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229168119 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127650288 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126549888 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115587537 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123443008 seconds)
  done (took 2.994845924 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100726166 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149858984 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254767945 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115032092 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071591268 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093514429 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115826924 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077012361 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080113156 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079654869 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080140889 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07579709 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098365832 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07346032 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073065788 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075459996 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102067826 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072269065 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073073066 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076461963 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099248624 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065367323 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073458643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071771628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077341965 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077043168 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065127062 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065055994 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076601984 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073216953 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076589835 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093102952 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076697408 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106443411 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.06968005 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106899313 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075813236 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073547245 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073121657 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073912558 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078130303 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078127676 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072885648 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075157818 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06490135 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075575404 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06487862 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065293894 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078148936 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06661511 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077567296 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076993742 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106090774 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066357522 seconds)
  done (took 5.946860332 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101844513 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104773832 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070960763 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108254515 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097036974 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071165261 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099583774 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090168938 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101413598 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092310313 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087717793 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075885146 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081172906 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082582265 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108276346 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100924655 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095387792 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070561159 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100697954 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101419332 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068453877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094489191 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090924582 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100646179 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067061258 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07023805 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067897046 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070352269 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078705629 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080463519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07104949 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.10196303 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084036904 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077780514 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067231583 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068128148 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068263056 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078616056 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096654826 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07830146 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077149913 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067586246 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067737574 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069251951 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090237982 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067086763 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078433566 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079480967 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077929562 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069757516 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070403271 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067771511 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069438349 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079553572 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077418273 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080228813 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079809996 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068444357 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068343559 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071882665 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07995158 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078574064 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078174529 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092062487 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077983395 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068398731 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07978471 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084154455 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068363284 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07055806 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068792251 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069650314 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069389944 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077479499 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07771034 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069727752 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069339961 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068197708 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078563453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078138039 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067757815 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075978542 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066356456 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067956547 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06947016 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069877797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077295546 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079060776 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070379135 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068980673 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070020743 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0694681 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066652731 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075800587 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079038704 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076892723 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076613169 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068096372 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076835425 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076268747 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068365393 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076827242 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066972271 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1975148 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071010605 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078232203 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077806821 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079150913 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070106656 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069220011 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077683231 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081142902 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068855275 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078422535 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080683909 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079606572 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068074853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081085012 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069459958 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080034943 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070560548 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080237881 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069210408 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078352667 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069280991 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068027254 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068897822 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079331905 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07157905 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070359635 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071500718 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071900872 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081332911 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08412867 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071472669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081040419 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080379382 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072210002 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081598037 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070629648 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080833883 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071960124 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072749235 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069766758 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085230465 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069074016 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068970534 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070269955 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080855003 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06874526 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079414664 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077837136 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068923502 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081290302 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079722517 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076243856 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079373093 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070968705 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068865516 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068071992 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069886402 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077104041 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079307248 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070644999 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069254291 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078464151 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078748102 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067622769 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077171113 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077349304 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077455624 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06842815 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069993572 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079413134 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080414936 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077046319 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07753149 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077554863 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068536464 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076453705 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078060948 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068028092 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084354167 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067999013 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082201018 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078321144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075906635 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078136963 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079729669 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079530591 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07910052 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081907577 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067159277 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068058415 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078888231 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068377227 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070118657 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078061384 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069903033 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069642854 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082472849 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068107747 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077559558 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065861875 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075846113 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065701525 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068350858 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080881442 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067236336 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068647257 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208237636 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070526808 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078468357 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081065779 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079300471 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069310023 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070566318 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080012361 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079510589 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069004168 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069328549 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070963626 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077869473 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077857467 seconds)
  done (took 18.754984428 seconds)
done (took 37.840193727 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210176007 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151047512 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17965619 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117943454 seconds)
  done (took 2.124461511 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.126454442 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102384155 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096199445 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066723738 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103098735 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064818281 seconds)
  done (took 1.964116745 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312227666 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209878851 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18175552 seconds)
  done (took 2.10632612 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19938462 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187418421 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393544421 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252297594 seconds)
  done (took 2.545606313 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145948266 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088628107 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066471545 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082507375 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133959058 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160418712 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101042925 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125296572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077559164 seconds)
  done (took 2.442251597 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146893412 seconds)
done (took 12.73097418 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101352243 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.172147765 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083429411 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.227768915 seconds)
    (5/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073823575 seconds)
    (6/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071925707 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108281285 seconds)
    (8/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07964311 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088377871 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.164727052 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.214769525 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112953052 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125614071 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215729685 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082094391 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109463026 seconds)
    (17/309) benchmarking ("sort", Float32, false)...
    done (took 0.126542246 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108147971 seconds)
    (19/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070812994 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.218452944 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06558801 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052460629 seconds)
    (23/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076782841 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104981141 seconds)
    (25/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07279846 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094444869 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.180942194 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181776501 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07034174 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087118627 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.196346702 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.108933391 seconds)
    (33/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.128842019 seconds)
    (34/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177531739 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075969214 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065647347 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07132953 seconds)
    (38/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106071993 seconds)
    (39/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10917096 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071309685 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.180563425 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177786361 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076428693 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074426959 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.189026418 seconds)
    (46/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072435801 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156546375 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110101538 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072017586 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.134717576 seconds)
    (51/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075419633 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068213474 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071877716 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074526423 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064916885 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072549843 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108865202 seconds)
    (58/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157042703 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.208510162 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06867353 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148896594 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097629198 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166064618 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091836765 seconds)
    (65/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.09559716 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.06393876 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072852956 seconds)
    (68/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079805989 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053622601 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052969086 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16329851 seconds)
    (72/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110278555 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095067914 seconds)
    (74/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.112931528 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071629533 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14783352 seconds)
    (77/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.107756734 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066372185 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098765614 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092356339 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148252603 seconds)
    (82/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097561142 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.203324312 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.229978097 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053816718 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.066704295 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065716635 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062612053 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0513538 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072868789 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073467257 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090106097 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.152902837 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067978197 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056347468 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090679106 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075786391 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.165819386 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052847649 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05121719 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185525289 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.311054319 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074609855 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 0.125924668 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071938663 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14100439 seconds)
    (107/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089318661 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155117422 seconds)
    (109/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070835539 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178460251 seconds)
    (111/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075057348 seconds)
    (112/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077504428 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164451758 seconds)
    (114/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074104446 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.181339899 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.100862105 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077035949 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051860049 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069983008 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074652085 seconds)
    (121/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111827593 seconds)
    (122/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08126389 seconds)
    (123/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100305902 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084276332 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135448632 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112600238 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.14881186 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077878339 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065049326 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08856574 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087056274 seconds)
    (132/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173500385 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111657902 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064552178 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053787033 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052478538 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094410361 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.133766224 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07302995 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171436831 seconds)
    (141/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068275296 seconds)
    (142/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050648443 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.184035536 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090625596 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135009933 seconds)
    (146/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.180226559 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120495098 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069386613 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071535968 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070221553 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0720825 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071957692 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13422863 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069240992 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.133298088 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051880335 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159900657 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.163947171 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064880629 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08718307 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07141093 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067243391 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064981959 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064875101 seconds)
    (165/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063847813 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064558366 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071994433 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18316698 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07182361 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050867221 seconds)
    (171/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060547716 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072865844 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071239837 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068807644 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091462847 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.127972163 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18177308 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064666599 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.10621375 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050911513 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050955 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067439913 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104595013 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.103709855 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.183639274 seconds)
    (186/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062241197 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074475353 seconds)
    (188/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051726437 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051184188 seconds)
    (190/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.208699613 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08787373 seconds)
    (192/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073241431 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052216536 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073653018 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066365502 seconds)
    (196/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051816581 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067335374 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129288377 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119686354 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088607745 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065275964 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072828699 seconds)
    (203/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076230978 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066024566 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073608675 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074054549 seconds)
    (207/309) benchmarking ("sort", Int8, false)...
    done (took 0.139618748 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067751387 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051318659 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090296505 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073461105 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051103521 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096495583 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065073999 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071840719 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066812774 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.17503306 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05252649 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064119992 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051292933 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17326524 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091046832 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053061805 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076716813 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07517851 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05438886 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063375171 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107226478 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067610381 seconds)
    (230/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054657987 seconds)
    (231/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063202649 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09013395 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070434983 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073876812 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056313649 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064929553 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088889011 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054025933 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065547841 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055316567 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068283794 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071454392 seconds)
    (243/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050768049 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071074899 seconds)
    (245/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052058166 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053323922 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067476447 seconds)
    (248/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070070558 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131272098 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053591254 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077679324 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054218221 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068788843 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078392185 seconds)
    (255/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074504237 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.112251736 seconds)
    (257/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067269639 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053798819 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067398225 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.077609439 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066691663 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09055038 seconds)
    (263/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071119555 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052852417 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053493997 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066653886 seconds)
    (267/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.101172509 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067729904 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054153397 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073726286 seconds)
    (271/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052964196 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07488035 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153995064 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053303935 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08910253 seconds)
    (276/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053854865 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065978177 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120080195 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054118115 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079329515 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052720567 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072358553 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06551841 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066970257 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065923225 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163106138 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05319778 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074226589 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164171025 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067662834 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089417356 seconds)
    (292/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078226529 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085441147 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066133771 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071713995 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052283289 seconds)
    (297/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061886362 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067307923 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054331816 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053335337 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052604525 seconds)
    (302/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063691697 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054276422 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081515014 seconds)
    (305/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068799728 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070965489 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064659805 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050780311 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064895083 seconds)
  done (took 30.601266216 seconds)
done (took 32.017394454 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085176825 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093824345 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074013744 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092189272 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079803268 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076214951 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071832963 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077540895 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079248368 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081057633 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078440871 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054912939 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073217541 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073648739 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07390234 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090371124 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077409256 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072340004 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072141623 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064194315 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072294779 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065042237 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066829983 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054396975 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077334263 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071413611 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071701253 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073000925 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065626756 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065345723 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068512735 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072659773 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064728488 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077280465 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071406735 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072111104 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074149532 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077967947 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06934938 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067555287 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076121782 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067306483 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072065402 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072433019 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071014964 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07059849 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072315215 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076955346 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090372381 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067229345 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073872412 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075193651 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075712177 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072034319 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069137356 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072434286 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069967183 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090920662 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072889822 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067657906 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073262625 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073013001 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070475346 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072613508 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072752385 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074722788 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074729855 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070689447 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074265158 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070189268 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065174925 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072555105 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068337457 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065091693 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075253108 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076050507 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063852547 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070197464 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071942003 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072590712 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066484374 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069976034 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06877951 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07282029 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069907434 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056578611 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070732336 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073033072 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065972758 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074854263 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0737786 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073751725 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068719331 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077068661 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066394788 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072201853 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067497316 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066935912 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068654314 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070804371 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06671874 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069777978 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075877903 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068316254 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072700066 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081107354 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066773341 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073447968 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066358761 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066267142 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081028817 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076266043 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067067281 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070281602 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066147017 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074285793 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066545583 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067332297 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066853928 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067087413 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073037947 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066949998 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069432707 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074514596 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078050878 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063747457 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067260706 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065725464 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064235125 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06893665 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063873946 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063697715 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065314945 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.194498643 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06860524 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065912707 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072864809 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067128925 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073298384 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067224107 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073340239 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069788443 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070627979 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070400492 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06446715 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058539454 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068350952 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067572742 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066717955 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065966949 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067186493 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065098504 seconds)
done (took 12.483392216 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068388545 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145218069 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101625413 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097670384 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088828055 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068579235 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078445986 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104187525 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068775742 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102116522 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086692233 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084111307 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111736024 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064068378 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065623936 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070076335 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068759137 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084425862 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103901772 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089232731 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112257645 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066112392 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094001752 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089405427 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086097308 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101158664 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06646974 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069131164 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068790681 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090395948 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085791821 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069062516 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06671897 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099827006 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091727295 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082275795 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065520067 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081608746 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066491496 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065186961 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.0801287 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097054285 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079510868 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079690595 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069779901 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068885809 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066867252 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082289587 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088365713 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078223864 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086062087 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102404919 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068362067 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065260356 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064218014 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084488264 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064705042 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068692422 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065855279 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068012342 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065870269 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069250037 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08090614 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085967269 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069252554 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079506557 seconds)
  done (took 6.814918082 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086417468 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092072831 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083769395 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083220919 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065672055 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066252717 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066053396 seconds)
  done (took 2.049255186 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068886655 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090177504 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091045514 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091408871 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086878985 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090396781 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077578249 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068582482 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08206248 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067553645 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086621925 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101795461 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066435656 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07260574 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09038831 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066232859 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089886633 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066318193 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0689154 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089741692 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067902911 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081485734 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069954326 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066689943 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08056785 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066194957 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112411593 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070800638 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068004126 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069097551 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065376399 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107952394 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082501313 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077836629 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068126177 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082899029 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082936187 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066426853 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084505381 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073685246 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081935123 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069235661 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068787448 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066421413 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0727277 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078722552 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069004143 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068831365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070632891 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088264616 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068972784 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082133571 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071758819 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070849598 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069829195 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072599933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076456271 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066725522 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085452812 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067302383 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082171076 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08279887 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080019267 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084183907 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06965647 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08057015 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079747259 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069065673 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067722104 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069258424 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082023168 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064326622 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067835016 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07657632 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068426363 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088868201 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088524412 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066939238 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075049494 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066981038 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066032729 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0660992 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090327924 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069767269 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067221469 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071071151 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069251134 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06515745 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065711772 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069378364 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064292451 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067326305 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069019199 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068648676 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068717281 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082149413 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068505275 seconds)
  done (took 8.820833412 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071341135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069758724 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070972436 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069867731 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069851038 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068910125 seconds)
  done (took 1.948974154 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09616568 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070944494 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08027789 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071966656 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103491227 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086177944 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086577389 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078292441 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083307295 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078207965 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086398044 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087834795 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09186386 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072403657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085978893 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071417968 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086825347 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075079457 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077926178 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072528807 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086150204 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072208754 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072582438 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080991336 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075237868 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071630169 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067119223 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078170552 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078479573 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078269272 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072557347 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075070445 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070270372 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078015593 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086180963 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070206337 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071409206 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076729283 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071691646 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075561253 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087963906 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072650703 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074099762 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076798248 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078416209 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069909506 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076525725 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075599724 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085662818 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077078013 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076393905 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071079585 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074972706 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076687304 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07033645 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077975585 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076868875 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085868531 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071781662 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069813577 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06897809 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075203129 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077957023 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075101104 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078265156 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076716325 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070057968 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072783526 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072568494 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071447648 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076977104 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068838969 seconds)
  done (took 7.066916366 seconds)
done (took 28.189404445 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54409235 seconds)
  done (took 2.035947066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607470793 seconds)
  done (took 2.125951173 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.597056153 seconds)
  done (took 8.110125058 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.409561505 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.481030468 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696020247 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132305838 seconds)
  done (took 3.267994665 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.683922803 seconds)
  done (took 2.211773601 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214622397 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197917658 seconds)
  done (took 1.950837111 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382723218 seconds)
  done (took 1.900655954 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.129428708 seconds)
  done (took 2.648797912 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267987592 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166327911 seconds)
  done (took 1.95511448 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.476184124 seconds)
  done (took 1.995110955 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.869079025 seconds)
  done (took 6.393516579 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211751767 seconds)
  done (took 1.773303739 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2450744 seconds)
  done (took 1.766293963 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.798258882 seconds)
  done (took 3.317697736 seconds)
done (took 42.976040928 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08250109 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081758189 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081169146 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077580347 seconds)
  done (took 1.827612501 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079553517 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075200265 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078994561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074474612 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076904296 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072127004 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074544376 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076795021 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074131559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073005532 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072364738 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072258331 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074362964 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074523472 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070477714 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074369234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075660463 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072029428 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075279567 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071997876 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070365644 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074395364 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074607418 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072237614 seconds)
  done (took 3.301735804 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080275112 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073294026 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074969655 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071740192 seconds)
  done (took 1.828997814 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080359432 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094501952 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088612922 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077212301 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091918526 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085928184 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068798625 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068692058 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073530574 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076928794 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067625927 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096462478 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087516175 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076924667 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078910148 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065867512 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068130534 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086668126 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077114984 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076963792 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069492286 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076601031 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068082317 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087817848 seconds)
  done (took 3.416190856 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080349803 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105156438 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07949403 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090195838 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09285657 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067754293 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076721784 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091014954 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123414265 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064768061 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069881881 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065165217 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071936768 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06463782 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075628112 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103860298 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107535555 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068429646 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095398936 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065073625 seconds)
  done (took 3.195103382 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074901322 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071836608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068012802 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070984828 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079749811 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075293194 seconds)
  done (took 1.978781282 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070189539 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069883024 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069911595 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069048546 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073874974 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069126515 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067779017 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069467765 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069470223 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069088016 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068350956 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06792971 seconds)
  done (took 2.366916804 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202567096 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070927058 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069763631 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066515955 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070964404 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066312443 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081869065 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070187091 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093530685 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068464805 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068761399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070748451 seconds)
  done (took 2.53623566 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209941748 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078623218 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242192723 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139442139 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11410265 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117549262 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10665089 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115932277 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146005968 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10500927 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168479911 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165244133 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106344483 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136378751 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088403766 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100445894 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156481262 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16164755 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102920762 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164349739 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142916122 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12413004 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145810254 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100407076 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105458392 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121238933 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070258773 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079718497 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169729064 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13074485 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145413404 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10977445 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093242682 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175179021 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169958729 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142934958 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137214625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086216646 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104983669 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135354188 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200210078 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087085885 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159023087 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243687349 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080949384 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139062411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120825519 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120361479 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106999195 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089820388 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145173451 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182738388 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139699269 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090320375 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114741357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119314006 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119601538 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106563456 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185909175 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165990591 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13115029 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073386602 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102168848 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157572309 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135687542 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111995813 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129170284 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096465294 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13750801 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156384632 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117819631 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143097812 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12924309 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089859378 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119410962 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138173889 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127292482 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169131468 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12359884 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072263004 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124046844 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103064292 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080927183 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141754103 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074903513 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174404221 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097958958 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104961571 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11157977 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107344911 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107347967 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161481358 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145801493 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24601669 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065936875 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104354263 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120038439 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147952693 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087114154 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10843368 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11642402 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077196047 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137894 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074620349 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123749389 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075882435 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125197193 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131404903 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074851933 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121697359 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100240783 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100084225 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132457692 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159398071 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088345732 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082260535 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166197502 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122561757 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103931789 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143588178 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155259931 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098646638 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103497154 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149802589 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17842763 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088556792 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161842803 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106636437 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082996472 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086614031 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123521824 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112067697 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121929593 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081819465 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117825833 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167245846 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074557884 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094546729 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131965878 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079557852 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080577244 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103666873 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099855138 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093572639 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099163174 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103081034 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135454188 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121769689 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103692191 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26889805 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097791179 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171105984 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088382519 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100773126 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103839307 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06918596 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136850515 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157372724 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079621543 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1648293 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12675363 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107530399 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121431349 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085730269 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144312359 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080250003 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07214692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147349357 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112743624 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114241062 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155759248 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107349476 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129038335 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123173124 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138215401 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134110729 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131145407 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106262927 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087001548 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110650861 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125158194 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072780964 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091418063 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080344928 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104769824 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096329674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082706807 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14136605 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123439242 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09922022 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11049097 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09585376 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146605752 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076312691 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128677214 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118281299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096292484 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151780811 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150302139 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130125087 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099520966 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146692346 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071667559 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076036128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091387589 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.27090181 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083366189 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083761454 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11746569 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145197534 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129675332 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138243016 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111522179 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12101462 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154208446 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069271261 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115926907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150009959 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122780676 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107274704 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093259375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101570966 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145908517 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111657564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186253029 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116723478 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129428612 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156514713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102757479 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082407411 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105414053 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138942926 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108353122 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146566378 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098970329 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087368179 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109379288 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074284561 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099408081 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125988398 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11902181 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134585892 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113973255 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132448409 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077453675 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116292001 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119483755 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121951433 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063819998 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119328019 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161271474 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095313068 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117398589 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151604345 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078822958 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123233157 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320237931 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14507836 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085159343 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110149817 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119454441 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127271897 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119815635 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138908229 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108361221 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135435463 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109354762 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08515927 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087752976 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096614728 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104522951 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093862634 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107313452 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114615195 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094171222 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131715651 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102988329 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11010817 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118891486 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096172701 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088904724 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096300881 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174356999 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118860198 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171493116 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099141641 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147796486 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164460035 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074589919 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078773098 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078413018 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138569391 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083137242 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130467733 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096704418 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104888003 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124583564 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143290809 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096832901 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069510883 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108769086 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133174695 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111268812 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097457138 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104238807 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163592378 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099682983 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0791429 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11270391 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103982488 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101667158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170793159 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060989369 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095923688 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220152237 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081690947 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127580927 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153008303 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080539405 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10263486 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119099398 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110081116 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126562857 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10074986 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099106787 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116645511 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153825018 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131797418 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092833723 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113888841 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132914295 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159689133 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108020594 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098529496 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193571222 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153741643 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159463825 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08805276 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115951975 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113531409 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108506638 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138214453 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0832941 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163283321 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081409291 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135526022 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103838727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089623997 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12897646 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098438984 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088041687 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148535362 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118265908 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082557728 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077143791 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11726464 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119550511 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106406219 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074946753 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138736926 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073572264 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130668868 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167707611 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080713635 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103329729 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09560243 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078447148 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253427417 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103323977 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089415639 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098058092 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17275528 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088673913 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149483094 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141568717 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115146546 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139848765 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102497255 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639069478 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081012532 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156452873 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11972636 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17689091 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101571862 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122004616 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112514947 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126792109 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14809767 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108178357 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180401541 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136443456 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119625568 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082591786 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106012169 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104063245 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088890619 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105064765 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114779491 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119416001 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094224821 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115711472 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123092225 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081876845 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094617519 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154733837 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116167835 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143153841 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139182436 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084935768 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117215942 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142055459 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081845667 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121688915 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150529707 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105344806 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098899747 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082331249 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103644342 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317577347 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074048862 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163339747 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120502155 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10898203 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111951277 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114404067 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131358192 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107777165 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122843494 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095511084 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112151953 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115596872 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084998249 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07884409 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107694361 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115928662 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100450019 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101309609 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10064984 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154860812 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073349002 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098643109 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106069843 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148565202 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176896732 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089368983 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082309434 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118540397 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112056375 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113082236 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120031298 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078883601 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082240554 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084548108 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079555216 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108534561 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114285947 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105694381 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113605782 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166001518 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081677744 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224610321 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094684424 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103668964 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069586898 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078272047 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095315506 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096678946 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107866725 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100051434 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16955851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094270826 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089458419 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091019591 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074810919 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084101862 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1296202 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10986768 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262265494 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098410125 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062467448 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109202752 seconds)
  done (took 59.129842308 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111518885 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082374046 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095700477 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148437326 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122163239 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211224555 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15730628 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198396099 seconds)
  done (took 2.766130067 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07034414 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095515357 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099181872 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081701916 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06649218 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067387334 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224307763 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079624759 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066457378 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088008888 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079355043 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06826939 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417982737 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067592961 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069070971 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064196556 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066986605 seconds)
  done (took 3.402368272 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368996657 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597351665 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371428236 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072500951 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.84960618 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091338595 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.0721288 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12659831 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073268503 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526359085 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704552616 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126962743 seconds)
  done (took 18.62156304 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078706535 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071695685 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086262227 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08713133 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073958643 seconds)
  done (took 2.031551503 seconds)
done (took 107.9539722 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083277716 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389187918 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055244829 seconds)
  done (took 2.10614677 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085924731 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087554517 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087481706 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086553167 seconds)
  done (took 1.989589047 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076659612 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078609407 seconds)
  done (took 1.792078213 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22547925 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138897613 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086063717 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084384656 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080339241 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08017865 seconds)
  done (took 1.886255786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074861978 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076973164 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072745652 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075668162 seconds)
  done (took 1.934609666 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07908921 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055050276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056417403 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05637737 seconds)
  done (took 1.884150539 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088803631 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080372191 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081396479 seconds)
  done (took 1.889163674 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109749599 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087957727 seconds)
  done (took 1.836702217 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084386276 seconds)
  done (took 1.722124095 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101908167 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.117010033 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13286161 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112919823 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140899779 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112450782 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08831026 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089417316 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078473724 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087823166 seconds)
  done (took 2.70084972 seconds)
done (took 21.904864761 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081597035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.459876962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361508994 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091536015 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668361684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35598301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986891175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091655733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113329268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067619857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083613257 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652100862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978070319 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.41790526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965008266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322421127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648954845 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068008474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067440236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067494871 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97094943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067506167 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067447685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068181387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64951544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374272665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070332641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320822116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070446058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071843278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357393363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070390167 seconds)
  done (took 16.329512097 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074031074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121566477 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076771322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087526819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073044653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071902818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074162749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071820435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123225281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070294727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08769283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07013086 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07458071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068776439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086658113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06764077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068297488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068120441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06790871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068071954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08624239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06736892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067929877 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067949516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069819931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082253025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070765985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070675427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070959034 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072935054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07370719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071724681 seconds)
  done (took 4.100476174 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118358956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129794414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077353407 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107531226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116467864 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072299768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148036919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096950075 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131896926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070881463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087301448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069607901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100607996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069186834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086977987 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068448183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068922536 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068759516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068029945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068404324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086650074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06763565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067815354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069180174 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06830865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080565324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068210696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068969135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068237236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069800702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071716227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068516155 seconds)
  done (took 4.337300517 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074930083 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076338003 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084496552 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08677168 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07212169 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074568658 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073178974 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070825621 seconds)
  done (took 2.270127486 seconds)
done (took 28.680723734 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081696001 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071292548 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074860365 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083343972 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075040331 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081390633 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068944173 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075507779 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0724213 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074241996 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075416591 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067917411 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070735682 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067662955 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07396164 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067298588 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078973545 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071680175 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078548361 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079169203 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069371469 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072641455 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073986274 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078472294 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078663419 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078686008 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077914671 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072529781 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068456748 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070576013 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076849037 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083192011 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068451973 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080096444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068035662 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067256749 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071111723 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067734862 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081726333 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078957479 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07179483 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076284187 seconds)
  done (took 4.755751875 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091457573 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093785177 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088138209 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064628332 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068736286 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064694139 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087733806 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059331271 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059623987 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087331395 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055862144 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059215476 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062320447 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054048196 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059282763 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056649112 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061494192 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055408097 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058935209 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058970117 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057890579 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054611111 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.05997945 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062291204 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058580036 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062048729 seconds)
  done (took 3.36708209 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077775346 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086465674 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088779588 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125499744 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103348599 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.0765723 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077205311 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091784395 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084319549 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06657671 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070903572 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092980392 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087486035 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073175418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067343863 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084184601 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081065717 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068582724 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072660412 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090211966 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083914325 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083208064 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092463202 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081054424 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067003464 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07148026 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072599848 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082359884 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074722697 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077742842 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071798805 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07067638 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068863796 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078447321 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072852635 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071135661 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093219213 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078895591 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078112331 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068405195 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07296926 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069896028 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091690099 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125135054 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069487261 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076722682 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078087208 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078667054 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069409044 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088281627 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080606912 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068949622 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072531473 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068638481 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069203427 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081683203 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071222327 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.085048017 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075540823 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070562748 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085176739 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070674807 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082173749 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069468454 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077220094 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069439695 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070879477 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068718948 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095030699 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071442885 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111490484 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070622245 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069959561 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076325356 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074538294 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074217804 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068155836 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082333327 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080757474 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073660246 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078444633 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073218327 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072920667 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090082199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071689452 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071353208 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070441215 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075466684 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071483365 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069751842 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079877774 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068439979 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07034163 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084460745 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069284162 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071359853 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076182479 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074827954 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068946819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078579185 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073779891 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0686431 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077507286 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069443945 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073009819 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079008228 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073563242 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066052249 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07194755 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073102276 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068018703 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068439345 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069755228 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068776041 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076094973 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073492986 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071463611 seconds)
  done (took 10.686267737 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164629804 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157804933 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072846582 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149138012 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079541006 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08172326 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151757849 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098522202 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070318295 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069602103 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070477502 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115401276 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109369457 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121474196 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081244087 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070376609 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085832744 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118111128 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153659964 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147144284 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086163624 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078340907 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070440045 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068740057 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069899718 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077824023 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085505162 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075711528 seconds)
  done (took 4.478148548 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083291072 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099788924 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07691729 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091847221 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093152019 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070281727 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072425589 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07208659 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082699813 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081215542 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069769205 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076059012 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077136634 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073369893 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069093553 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07410026 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07593838 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069149081 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070925405 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073235912 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077423536 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091149773 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071429592 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067162064 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073605134 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066705224 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064020768 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084251898 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067844011 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091198055 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065603012 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075551289 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081296241 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068383908 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067121719 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067160821 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067228233 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067234838 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069214288 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066002107 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065781412 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05717235 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066612203 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079275734 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073641537 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056391292 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072164552 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072702509 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072675057 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065341202 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06972015 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069868381 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070449603 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074222394 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072046367 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07287281 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069308831 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073250762 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075313886 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068222653 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066186722 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068335481 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074347054 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068405727 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077793934 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073512276 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06686742 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068399343 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070622279 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075324459 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06775533 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070412034 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06513484 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06931555 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072015119 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069186413 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068587495 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065655953 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067079538 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067782557 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055077869 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067243266 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053250502 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070441973 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065533629 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066101937 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067967747 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073672342 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081209519 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070894494 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075916901 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070752937 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068941947 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073274176 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06269048 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072485396 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086025329 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08491812 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06995713 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067469204 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084796496 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073027131 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066083469 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055694873 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074212766 seconds)
  done (took 9.229225652 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092722389 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071574306 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084948606 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092623991 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086697017 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074528597 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076698253 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068756525 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08195509 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072866679 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075819756 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067930597 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076732022 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076185329 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069138314 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076275364 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071600664 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082226819 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081985852 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067831309 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075111913 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076536942 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088815814 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079693295 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.07936621 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082489605 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092560513 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.074715849 seconds)
  done (took 3.902742488 seconds)
done (took 38.068317773 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.740628309 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.975559235 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.731070899 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.144068523 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.813669235 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.048954103 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.734540151 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.739617536 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.943893981 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.762401299 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.98883803 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.776520299 seconds)
done (took 65.065358226 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.746940338 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.873173986 seconds)
    (2/2) benchmarking "String"...
    done (took 2.000256038 seconds)
  done (took 5.54109069 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.080692014 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.282007765 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.97031913 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.72551341 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.730642131 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.024091078 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.526920845 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.253667524 seconds)
  done (took 30.181546333 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.804248279 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.960110417 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.379051099 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.4056672 seconds)
  done (took 15.261832025 seconds)
done (took 62.55875269 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.761624267 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.727512256 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.755453513 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.708623225 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.783051124 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.735652708 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.847782968 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.914764855 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.723427045 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.716134789 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.726837887 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.17128846 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.735174246 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.822482924 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.724107638 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.725973684 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.789912879 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.120386895 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.881859494 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.747658526 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.743475925 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.731824378 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.724464414 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.724214254 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.741821569 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.72874156 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.141701369 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.7358853 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.514400485 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.727193559 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.765869533 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.086901638 seconds)
  done (took 203.151714821 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.726843465 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.767306932 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.846759718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.741665591 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.191837811 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.909859359 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.841116963 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.2429207 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.729063492 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.737485249 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.015829191 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.72642484 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.041617574 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.722047618 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.754742262 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.817045542 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.977958201 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.02201062 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.757219606 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.893836046 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.738101759 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.887843037 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.868594538 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.971736822 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.729098608 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.823024056 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.746922306 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.745984495 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.913360476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.970707853 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.734740523 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.759431027 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.928071153 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.602957632 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.738578768 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.74614257 seconds)
  done (took 169.037316902 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.889747576 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.730067977 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.72788154 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728694422 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.734602544 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.729847071 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.849411351 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852380924 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.177609698 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.024329876 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.77962024 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.542015312 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.726918408 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798410358 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.741529332 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.730571248 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.730855821 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.745415961 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729913671 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.75668428 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.731151807 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853664928 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.73977663 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733416331 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.730590121 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.735806717 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.102498363 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.848498892 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727884603 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735742691 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.978201515 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.729084347 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.731894853 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.622191109 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.979039809 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.736699302 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819711133 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73308207 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.737757806 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.735331479 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.956451547 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7348278 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.736096303 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.737678261 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.909606212 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.731181049 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.858051961 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729336702 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.227457389 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.733631383 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.734144982 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.749858088 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.431444948 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.734022106 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.738881935 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.742498218 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.74114492 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739469995 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.746868693 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.777543779 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.812798937 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.741287225 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.744758463 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74559132 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.738887665 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.742966716 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739789335 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.757156615 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.795026526 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.888382547 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.8625361 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741600813 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.741949481 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808825008 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831719991 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.736720276 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.741316063 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.739510988 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.739995778 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.822449646 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.736857278 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.858938088 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745839438 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.743256696 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.792933247 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812812452 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.739020577 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.642428894 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.738829321 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.740069649 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.039292768 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805486164 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.738220494 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.739780822 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.739674155 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.858761169 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862353197 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.508810648 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.743240403 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.855119374 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.742130797 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.874166568 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.739421811 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920017477 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.739687413 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.825366681 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741619101 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.742990164 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.743354989 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775374241 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.743209536 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740698864 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.741754248 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.803609367 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.109639971 seconds)
  done (took 395.650673717 seconds)
done (took 771.449329049 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.414290245 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.371461198 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.482638796 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.394752264 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.377472789 seconds)
  done (took 13.721701198 seconds)
done (took 15.403292777 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.82931199 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.834642042 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769532737 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.832360461 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.763758062 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.833360927 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.813933586 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.768521476 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803242018 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.770268623 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.800072514 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.76967286 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.753998249 seconds)
  done (took 25.023455372 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.97663864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.975147429 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.812424605 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.976247103 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.788304842 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.976284067 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.905877475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.893638338 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89435029 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759239055 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757503031 seconds)
  done (took 22.398434024 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.976661135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978574723 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.814732447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.987745353 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791066186 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.977998146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.902860458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.895676526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904068365 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759929317 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757979973 seconds)
  done (took 22.430298702 seconds)
done (took 71.531727404 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.75393287 seconds)
  done (took 3.436894113 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.77381193 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.910899033 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.758840714 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.758737134 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.751186553 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.754480772 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.756831396 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754663846 seconds)
  done (took 15.904717269 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.751278936 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753282423 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754298091 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.753224825 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.753807612 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.749740635 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.752543189 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.751697753 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.7507341 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.751763497 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.751495709 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.753275911 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.749583841 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.7514419 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.75160871 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.75420074 seconds)
  done (took 29.720116486 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.751688712 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.74927998 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.749410621 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.752137168 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.75282883 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.75319406 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.751495887 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.750420395 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.752139953 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.750580149 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.751651119 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.752393944 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752698477 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.751390086 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.75156511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.751725944 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.751065645 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.751542503 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.754111305 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.751300126 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.752590821 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.749224377 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.751714899 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.752005621 seconds)
  done (took 43.727396474 seconds)
done (took 94.46841611 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.609037672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.361911205 seconds)
  done (took 8.656929986 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.754770985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.754717785 seconds)
  done (took 5.238623505 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.754836655 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756287778 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756401067 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.755429155 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756321807 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.756057575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755852361 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.755137444 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756287259 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.75588192 seconds)
  done (took 19.245738652 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.755780431 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.756176981 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.75190227 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.757004595 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.755950936 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.75071314 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.75559555 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.758352592 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.755616468 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.752891116 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.75699266 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.753424393 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.757797364 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.754593242 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.756508047 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.753507266 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.752682553 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.75449455 seconds)
  done (took 33.278412194 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.75790171 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.757868753 seconds)
  done (took 5.203919949 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.755065228 seconds)
    (2/7) benchmarking "second"...
    done (took 1.756430225 seconds)
    (3/7) benchmarking "month"...
    done (took 1.75445827 seconds)
    (4/7) benchmarking "year"...
    done (took 1.752966126 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.754736373 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.753452199 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.753322926 seconds)
  done (took 13.96782611 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.755804674 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.927287203 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.996791215 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.445065087 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.758302972 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.761979809 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.686753165 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.760111856 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.761330644 seconds)
  done (took 19.543687349 seconds)
done (took 106.819608267 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.587962876 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.750374326 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.073903016 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.807160206 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.803730421 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.110899979 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.791458494 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.973264446 seconds)
done (took 42.585530008 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.803472763 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.231048608 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.23438302 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.310653364 seconds)
  done (took 11.465748274 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.736039592 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272322957 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.792884013 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.351824548 seconds)
  done (took 19.852404508 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.123875046 seconds)
    (2/2) benchmarking "read"...
    done (took 2.10939273 seconds)
  done (took 5.930184636 seconds)
done (took 45.740217201 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759251204 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.75927952 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.755885085 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.759831932 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.756949631 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.759095037 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.756719096 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.756363038 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.75558393 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.759032109 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.758423496 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.76031659 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.760287286 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758754662 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755635166 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756396556 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760223111 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.757271923 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756381993 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757551422 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761149822 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.757974228 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.757127479 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.759625487 seconds)
  done (took 43.884942517 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.760906407 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.759130155 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.760147072 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.761703357 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758926236 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.760732974 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.75959329 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.758522364 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.760572295 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.760174116 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75910915 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.758201843 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.760336852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.757166394 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760475842 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.757954389 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.761590002 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758474423 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762242952 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.758585729 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.760709308 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758588069 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.75909694 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761393898 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.75946288 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760723474 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.76373735 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.759300448 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763055503 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.758702164 seconds)
  done (took 54.493027542 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.766147789 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.771516553 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.762548397 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.760859381 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.762020327 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.761378087 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.76185318 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.762248245 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.762273554 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.762259402 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.762854482 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.761915659 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.762907383 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.762367456 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.763496059 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.762062408 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.762700855 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.764585814 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.762541515 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.763885114 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.762608619 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.764180027 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.762422198 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.762396451 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.763717848 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.763820032 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.763565823 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.763799884 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.761931086 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.763978982 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.762191758 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.763217345 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.762495633 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.762754634 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.763836475 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.762976621 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.768501506 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.773003685 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.763063018 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.765096727 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.76405319 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.764621497 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.764445505 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.764760519 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.762743431 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.763316021 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.763841351 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.764328529 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.765289751 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.764149082 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.764535364 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.762830122 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.763610866 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.763813903 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.765144868 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.764894591 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.7644007 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.76273191 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.765375986 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.765355966 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.766026244 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.76545451 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.766334748 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.764743077 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.765434016 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.765661377 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.766871307 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.764365288 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.76592691 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.766246366 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.764950981 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.766571755 seconds)
  done (took 128.711765686 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.765217503 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.762848166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.764286298 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761109558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764138552 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.766461955 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.763508576 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764931741 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761476453 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.765791766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766724877 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.76352287 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764359148 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766305272 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766008555 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.766285353 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.765948883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764363755 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.765786591 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.765231677 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766099303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.764113416 seconds)
  done (took 40.522386005 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768587093 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766748535 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.764966021 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.766062439 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.763946849 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767592747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.766256631 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.766548967 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768302506 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764664927 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764746398 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767639632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765138413 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763712539 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765699812 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765551804 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768032907 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.765505972 seconds)
  done (took 33.487004065 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.765022277 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.765018299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.767090983 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765568722 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.765858606 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.76847065 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764882197 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770020845 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.766497709 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.767388859 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.768246779 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767820796 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.767809657 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76525187 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770966292 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.765691937 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.767970953 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765750995 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77075408 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764388853 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.765409768 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7694912 seconds)
  done (took 40.576128713 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766798025 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.770121628 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766879806 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766382068 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.767625505 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.770367407 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.769653464 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.768091608 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.768187358 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.77160419 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765406397 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.7701953 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.765885501 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767367226 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.76702905 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766354476 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771086752 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.768783395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77009734 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.767166671 seconds)
  done (took 37.068507145 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771248011 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768602905 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770865546 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770827316 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770041606 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.771043446 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772047992 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.770274255 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.769854078 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771899674 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771143888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771268122 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770751437 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769681668 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771021383 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77107431 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77141782 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.76907278 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.77274585 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769322122 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771497447 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771751291 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771956366 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772515263 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770564498 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.773540808 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772297164 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771359798 seconds)
  done (took 51.291986081 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770302197 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771110975 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.768796845 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.768115354 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.770698653 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.769519579 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.770289691 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.771251928 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773767378 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.769565733 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.770717896 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772362153 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773021925 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.774856323 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771633317 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.771645496 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773520931 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.769199483 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769418499 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770286151 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.773258045 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772617675 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.772421404 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769835665 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770942778 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.773296748 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770491426 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771918307 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773378594 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.770937089 seconds)
  done (took 54.844870207 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.789908696 seconds)
    (2/2) benchmarking "in"...
    done (took 1.791570269 seconds)
  done (took 5.286053959 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.771346363 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7746393 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.77394795 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.769374196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.77050593 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.773300995 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773166362 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770813507 seconds)
  done (took 15.882017605 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.774564177 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.772803717 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774764988 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.772881367 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.771867016 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.77281975 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778665682 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.772991674 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.774976394 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.77642733 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.782411267 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.78333983 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.777379828 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775694338 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.776546827 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.774764325 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.77523225 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.774435324 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.774059448 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.775844293 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775589102 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.778025265 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777814176 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.772788292 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.777304117 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.785544006 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.780214551 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.777627949 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774777204 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.778390599 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.775586437 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.773098873 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.776138556 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.77509941 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.77504165 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.775164823 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783234328 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776506772 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.780089375 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.774417474 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.775880243 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.773328787 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.775803358 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776940586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776875941 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.775494242 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.774964993 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.772183488 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.774283841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.777697486 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.782933783 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774672303 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.770548516 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778945314 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.776656753 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782828869 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.774285012 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.780761949 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.786933935 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.786591175 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.790205146 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.785944598 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779049037 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.776701704 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785002019 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.804455873 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78208313 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.775088585 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774857547 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.776209783 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.785741951 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.787251385 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.789096565 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.777259344 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.775993824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.778583308 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778821957 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776649653 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786679302 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.781287055 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.779503132 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778030484 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789554332 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80545051 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.77915542 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.779493122 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.7775708 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.779558047 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.780816245 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790316036 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.777242538 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.777857146 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.77965585 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.777196983 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.781373501 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.778640982 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.778644277 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780960185 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.776393398 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.778811167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778570902 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782642432 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.78844479 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778862611 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778019019 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.784721494 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.777010434 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778518467 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.785143152 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.779562103 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780448178 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.781329763 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.786292812 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.777391016 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784501388 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.791039675 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.779705527 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.781244802 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.77987886 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.781426835 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79108093 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.808777142 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.779661844 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.779795641 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.786423549 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.792617499 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781833649 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.782885558 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.781433842 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.778118279 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.779468425 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.783043698 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.78032121 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.785036516 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781371873 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784741412 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.776479446 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.783293222 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.780883778 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.782897098 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.78358457 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.782798844 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.781706492 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.783401502 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.780208626 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.782871867 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.78683908 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.781321486 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.784173423 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.785032705 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.778585839 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780887627 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.783261941 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.78083588 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.782708833 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782160853 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.782246681 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.781362171 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.781873043 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.782274994 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781010584 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.784389038 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787475854 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.78280323 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.787320182 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.783102729 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.778261447 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.781764032 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.782632383 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.782528081 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.782853222 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.78263942 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.786410355 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.789574645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.782524494 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.781615147 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786612848 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782143794 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781861778 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783134828 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.787536924 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.792034533 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.78114693 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.789911052 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.782555313 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781370568 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.784639399 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.785401067 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.781757863 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784569315 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.787975223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.792652802 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796404983 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795961663 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.784212373 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.787345143 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.787647069 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.791591457 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.78784608 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.783451746 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.784516814 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784837492 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783426518 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782836327 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.787234699 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.78419572 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.784614001 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.782253677 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.783687716 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.786234976 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785009736 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.785842118 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78656862 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.782455296 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78541545 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784939379 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.785497469 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.783609966 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.784704977 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.78390374 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.786501371 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.786028242 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.790802456 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.781777603 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786264637 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786086119 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.789340036 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786309345 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.785363815 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788624741 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.786644149 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793076132 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.786111734 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.786842039 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792996498 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787135881 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.784838244 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.788641203 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.784488856 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.782115956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.78709635 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.796475381 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.787193223 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.787226503 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.788059609 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787643272 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786040676 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.794500874 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.785296987 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.786580939 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.787183211 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.791241059 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.783814098 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.789380253 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790082929 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.788642064 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790999687 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788432345 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.787349292 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788806532 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.786742482 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.786449464 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.789651879 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79087373 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.797036532 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.791612856 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.787835735 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.791743509 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.790966882 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.792459321 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.790258807 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.787369579 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.789471755 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802415237 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.797403195 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793551671 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.790134331 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.787663668 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794337741 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.78960057 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.793422578 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79054004 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788841032 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.788795675 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.789431017 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.78730315 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.788156301 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.787241822 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789480016 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.790866437 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.793142962 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.789901437 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.790007738 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.790011083 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.789478975 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.790141749 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79126563 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.787101521 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.793176132 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790410997 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.789438003 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.791310626 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795885453 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790012825 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.791205461 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.789685429 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.790805932 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.790549724 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.793942891 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.790730583 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.796092901 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.799878866 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.794394261 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.80174772 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.793738707 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80118515 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.789963513 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.794861378 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.801156782 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.786645397 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.789316835 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.791649936 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.791211619 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796021584 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.791490217 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.79225689 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.793855832 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792021721 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.79053534 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.792524927 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.790444607 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791406616 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.79190012 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799014742 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.792850346 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.798266318 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793540852 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.789973236 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.791450496 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.79190977 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.793257165 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794674895 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.791459341 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.792356889 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.792064224 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.792802446 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.791279565 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.791439624 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.792680281 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.79011751 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.791807847 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797429479 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.792870413 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.7972227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.793332036 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.799079464 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792070887 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799789288 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.792035857 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.794331724 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.792328796 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.793111901 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.796091117 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.794110785 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.794154579 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.794208536 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.796417841 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79782239 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.793311806 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.794878785 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794121951 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.792990867 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.794889513 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803458424 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820633566 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.795366604 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799243469 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.791162569 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.79566384 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.799482829 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.793895444 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.791229947 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.797402912 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805569953 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802797629 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.793476305 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.793863093 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794814432 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793583297 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.793526893 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.792220085 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.794765761 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.794353923 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.796769409 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.795709381 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797689197 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.794283903 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.795267699 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795022826 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.796630773 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.804099992 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.792819654 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.796276208 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793424585 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.794003983 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.796336093 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.796073806 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.796387226 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797282596 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.79656775 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.796619675 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803950781 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.802741346 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.799772777 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.796506102 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.793960225 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796040115 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.793456312 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794576152 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.79592886 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796867112 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.797830364 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.795693987 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.799195213 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.795211594 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.795664876 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.799267137 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795566739 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799905388 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.805723177 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79739336 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.79122099 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797688217 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.795919489 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.796283944 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.798558276 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.801638712 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801826009 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.809325277 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.805948076 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.801306845 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.798498988 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801519231 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.808022708 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.795288923 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.798164786 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.795923113 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.800980949 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.799407432 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.801762077 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796270109 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.804476436 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.79749068 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.796677446 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803572267 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.799202156 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.800248487 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801322868 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804913338 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.796920651 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.793666007 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.798696899 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.798410761 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806307002 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.799652558 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797373689 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.801099736 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.799203435 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.801519723 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803899724 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798786698 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.798956228 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.796304625 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.801987077 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799101345 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798386378 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.796305559 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.799462948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.797631012 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.80080889 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.809511915 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.796030919 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803436512 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.798551932 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801798919 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79904256 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798159174 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.79537657 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.79480434 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.799585115 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79949928 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.799123844 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.803547166 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.799292748 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.80260095 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.799360598 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799674768 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804362111 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.812305858 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.808521172 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.797748119 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.801045459 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.801032361 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.805415022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800622288 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.800182231 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800117083 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.802620041 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.799784588 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800538944 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.800944536 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.804521767 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818853151 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.800753922 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80173514 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.801740305 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803285482 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.800078613 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.797524651 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.801436054 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.804139614 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.805800436 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.810834887 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.803444184 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809216525 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802175112 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.803253927 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.80695648 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.806711018 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.810788272 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.803525491 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7982326 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.80417098 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.808485716 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.820401592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802493442 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812555253 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834094075 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.803019858 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.805017576 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.803235808 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802365355 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.801640443 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.805318151 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.802867699 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.802434172 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801978555 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.802749859 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.803972024 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.809504768 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.804239334 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.801250293 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.802860271 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.803228027 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.805459955 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.798971588 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.802653327 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804709133 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.804759368 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.803902661 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.806851638 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.805169602 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815930483 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.814604176 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.805702255 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.804014611 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.802064244 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.807966254 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.809417614 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817375228 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.812983129 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.802824437 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.804964993 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.805892689 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804637707 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.801440729 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.806901729 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.805202228 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805391016 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.802990857 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.817613174 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813014041 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.812383307 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.805749966 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805083351 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.805164057 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805106185 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803421121 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.804499538 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.807807634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.806914876 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810441148 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.804659526 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.804500115 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.809204706 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.814710893 seconds)
  done (took 1069.521399265 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803976522 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802329778 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802663362 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80343198 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80290677 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803067949 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803192767 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802954891 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.803151077 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802343905 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.802745913 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803770675 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.803985655 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804471315 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803895458 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.805859195 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804003864 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801918918 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.803586507 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803593893 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804606094 seconds)
  done (took 39.609115717 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.806229429 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.804530842 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805641448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805034705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803385706 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805156132 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.804740805 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805059474 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807648003 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802771976 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.807683692 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805287645 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.805462466 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.805099154 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806333419 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809253389 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809399046 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80453159 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.806263432 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804600384 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807151624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806276165 seconds)
  done (took 41.466132537 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.80870987 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.808258315 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.80739977 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.805604769 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.806978332 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.804565837 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.808249729 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.808292712 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810624282 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.811139125 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.809691841 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.810116366 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.816549325 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.81351608 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.811647075 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.808849528 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.95331086 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.809113276 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.80836615 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.810118833 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.80788758 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.814848866 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.808023181 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.807353973 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.808944143 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.808813507 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.807982231 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.808575477 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.806730152 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.810460846 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.813207315 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.807621389 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.808080045 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.80962782 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.809303853 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.809414728 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.813279803 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.807313338 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.80898506 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.805850541 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.818695357 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.83303929 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.809682856 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.815133915 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.81081399 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.807942692 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.811867098 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.817856865 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.805685814 seconds)
  done (took 90.584224655 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.80844799 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.807266187 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.805049852 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.809367901 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.807914019 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.809395751 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.809023491 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.808984838 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.805867263 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.806570478 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.806529545 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.815661141 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814919427 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.817206343 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.816830211 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.815223243 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.815985317 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.81542372 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.814431821 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.815395753 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.816665475 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.81801014 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.816975854 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.811796894 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813274894 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809565732 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810266842 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.810889052 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.809989845 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.809993969 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.811083473 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.811693693 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.811780081 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.812270925 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.809211599 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.812174379 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.811326504 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.81074898 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.812478321 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.808098758 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.809751544 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812650331 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.812311672 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.811761129 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.808034671 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.808014969 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805995302 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.80747447 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.809588607 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.812101951 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.812365191 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.809118415 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.812040886 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.807821755 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.811377543 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.813061912 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.809014648 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.810268293 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.811059132 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.808908601 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.809815383 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812750351 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.80899051 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.812137114 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.811976523 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.809267975 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.810526134 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.813140255 seconds)
  done (took 124.897214944 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8117843 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.814065188 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811269561 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813231559 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811825552 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.814463542 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813332499 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.812897831 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.811405553 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.812562769 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.811042637 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.814534286 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.813637689 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.815634993 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.812826189 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814652958 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.814101257 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814366927 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814359235 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816667748 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.813871587 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.813146554 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.813613428 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.814605307 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815228659 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.81268575 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.812643037 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.815592026 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815344617 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815452102 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817691284 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.814087726 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.814926164 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.816490289 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.817137932 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.81708355 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.812733518 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814822544 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.816076067 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.816103508 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81618945 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817784097 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815946954 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.814127611 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814042113 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.815188698 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.81515786 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.816324637 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81663596 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.815963941 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.816559018 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815672814 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816725442 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816790089 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.816313386 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.81781311 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816236023 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815770806 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815446725 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.816153101 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815483997 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.81716784 seconds)
  done (took 114.265317594 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817354084 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.815248273 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.811654459 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.814261312 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81497825 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812411134 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.805998266 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.808713157 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808732356 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.807791382 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809032354 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805125015 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798014025 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800564255 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.79732084 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798149551 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796761481 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797196965 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796058418 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795558332 seconds)
  done (took 37.857496939 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.795974092 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.806665009 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.801481594 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.800327575 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.804779102 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.800149556 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.802271438 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806935353 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799902649 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801742888 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803891102 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804747816 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804490748 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801553377 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.80072368 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.796627742 seconds)
  done (took 30.563244709 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.800745832 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.804963199 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.804342572 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.802294246 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.799894013 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.801818923 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.801786938 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.800672238 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.798639121 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.803701137 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.799837884 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.800639533 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.805950702 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.80320263 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.799358646 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.802560899 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.800202157 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.802868042 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.802080156 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.801053 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.79946646 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.795622105 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.804011925 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.801358816 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.799367271 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.801042614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.800089802 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.801180574 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.80205249 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.803307544 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.797718894 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.801236998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.800213545 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.801067285 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.803202948 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.800587369 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.803509393 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.8014515 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.806022703 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.805559645 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.806999076 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.798924515 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.801648151 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.800579838 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.803179308 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.806422976 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.804230273 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.799442254 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.798671944 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.800525588 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.800560463 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.807761869 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.802203666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.798704009 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.805108901 seconds)
  done (took 100.834416854 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803823748 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.799435136 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.800278117 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.802216718 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802426867 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.799845591 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806385679 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.801497668 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801199293 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.802432248 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.800313248 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.807883556 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803550837 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804707117 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.803480609 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803925346 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.800430404 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.803941788 seconds)
  done (took 34.181260361 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797944686 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797424066 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.802472369 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.798672032 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.796269658 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800117208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797393624 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.800846258 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801028898 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.802336849 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794255742 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.800012456 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795260743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.801933092 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.798337932 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800318952 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.799830585 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798975262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.797167054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796397537 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.799851825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793175117 seconds)
  done (took 41.301881095 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.794121189 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.793729262 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.80946465 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.819946593 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.816545381 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.831019497 seconds)
  done (took 12.588867685 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791816282 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796527833 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.789444343 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794262771 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793218429 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792378205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789333763 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789357467 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792541546 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790115497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791204587 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792506658 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792646234 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792848993 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793170262 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792025303 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790095959 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78967312 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793093933 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792946239 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787704749 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790367945 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790540909 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789902831 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790693259 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790326193 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790880954 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788868607 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790331483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793542973 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793134132 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787928017 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790309586 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790505477 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794560925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792641322 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789478657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791330672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79170954 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78830191 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.791024298 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792701535 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792300467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790076968 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791387189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789985508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791412509 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790354435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787430083 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792553884 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791238587 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78740761 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793759109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792079489 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791144495 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793825402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789821112 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789712406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792472955 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788414365 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788446437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791460167 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789209953 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788390867 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790526218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791630517 seconds)
  done (took 119.938238653 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790146492 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.789301658 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789316037 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789887228 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787705317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787486259 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789258055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790014871 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787142754 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789428076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792018017 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786467115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788906006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78976016 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788782282 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788208286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786664744 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788020399 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790202343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792706865 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789419055 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788835184 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788722834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78768693 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788790393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790327937 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78822142 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786709376 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787372301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790479921 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788485131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789447572 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787219464 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.787191403 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787874211 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789602774 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78691683 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786741804 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786918855 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790994182 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787612865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793961788 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786190225 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78607045 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786569073 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787023742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791726532 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78732487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789346266 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788059048 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787509552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788027247 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789252294 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785377208 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786550352 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787918544 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788639644 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791504233 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786739602 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789611172 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788758574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785836359 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789894977 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789482653 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787870221 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788605743 seconds)
  done (took 119.771619154 seconds)
done (took 2485.117436324 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.853453862 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.837965852 seconds)
  done (took 15.412690673 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.947784697 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.898230803 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.784107654 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.838869505 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.781946421 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.808308582 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.789640127 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.781054387 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.785282792 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.78341998 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.782779504 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.972129786 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.7969477 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.779591189 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.791000586 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.877223174 seconds)
  done (took 50.922628201 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.786324424 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.787427908 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.797635563 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.794334687 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.785135393 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.801616867 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.819640843 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.790560575 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.823425625 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.797409596 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.856801058 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.793515676 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.785916013 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.835005827 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.799932999 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.799988574 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.87418271 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.858628451 seconds)
  done (took 34.304165887 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.868607623 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.784227295 seconds)
  done (took 10.376790116 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.798820217 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.802522283 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.783167388 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.792266333 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.797283592 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.780659097 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.793146367 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.77811531 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.80789057 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.797550204 seconds)
  done (took 69.649541893 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.793901624 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.783853248 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.784058335 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.782581158 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.775928711 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.778502869 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.782176313 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.780300363 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.477058766 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.817309017 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.789080476 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.787960969 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.785011972 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.785584053 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.780490692 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.805853606 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.97270811 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.780613906 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.780966583 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.790347068 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.785410121 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.837832872 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.79685448 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.784890086 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.814999823 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.47246836 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.789638035 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.789653867 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.912194018 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.781665128 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.790752406 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.785416423 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.786005093 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.169354242 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.058548093 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.788336578 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.79178851 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.793402578 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.78960672 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.914763512 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.785450026 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.790871651 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.774567522 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.038448368 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.886518741 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.827440971 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.189471248 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.786359938 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.787632615 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.815741552 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.789038722 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.789592615 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.79786018 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.30172961 seconds)
  done (took 128.128491315 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.78074427 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.354412145 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.944331331 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.785228359 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06214152 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023456088 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.724664733 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830457512 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.779581743 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.030719692 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011706119 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912612693 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778016285 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.780784637 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.775854574 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.776714434 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.932956534 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.849020029 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.777399758 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.780027301 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817801299 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049468893 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.906516748 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.780192532 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.807936407 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008368031 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.906812848 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.898611916 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.07196861 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.781274897 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848334224 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.779695448 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.781436399 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.779549753 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947761305 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.889107207 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878575439 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.778829369 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.781552087 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.780262407 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.448940523 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006651432 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.892724629 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.920430944 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035032305 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010070144 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.431394808 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.782481825 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.420827854 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981316458 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.990993822 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.037885773 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.910983412 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.783881987 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.12159847 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.783205878 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.781856766 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046337843 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0134919 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.896951594 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780362826 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.781670956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.781110982 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.098683307 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.78240538 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.891442167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781580351 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.781560939 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897404193 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.898504493 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.014553553 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027693048 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.811292285 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.505978221 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.002168038 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.068620715 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.853045929 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04541538 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.781967594 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.780957114 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877704934 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.535325262 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994397689 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.100449866 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.046883655 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824469584 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.38726406 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.784425463 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.031607021 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.030435721 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.010004312 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.033256123 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.952912926 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.988222341 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.784419249 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.783651202 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.992927947 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.915138895 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.786550024 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.143882094 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037151914 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.516675939 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.816428819 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090356502 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923905113 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.788117072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.41331871 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.784377095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.986271014 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.829929233 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.785685766 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.783369702 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.032126929 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.648270816 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.785069762 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.610527298 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.853355266 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789495386 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051679284 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.788792427 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02870568 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787402241 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099432718 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.295443327 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.830967834 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.980770668 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.034385375 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.586349041 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089758732 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101846521 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.910890395 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05016083 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.695279596 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.785964684 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07243995 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.786955402 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.785648186 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.954635108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.786969326 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.942554158 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.790384726 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.045836309 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813545937 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958436577 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790115741 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.063228765 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83174991 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.841839227 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.789849621 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92070054 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.791356896 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.817017481 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972338217 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.786981115 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.788025719 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.405358721 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.786336167 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934496005 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.086693026 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812498054 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860011597 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.327172876 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788383149 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884104657 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.812680014 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.393958471 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.786409783 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.013884913 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.788520175 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.78491998 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.787960889 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.104116726 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.011494647 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793699709 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.785161485 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.583924535 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.495793627 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.788800242 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.962804186 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.117476629 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.432780143 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010187836 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.789457035 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.92249921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.791320335 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.865854225 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.139718509 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.788992116 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.790410756 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.788588542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.787365455 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.790130164 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021502203 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.814706227 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.474183389 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.926894612 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035968629 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.099930673 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.055402451 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.837190799 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.79069157 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.055329348 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.789458349 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.857006391 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.78753846 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815214439 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040606588 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.790944342 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020634793 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083813872 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.856014637 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.840944028 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.790903062 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788331714 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.789213063 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.931667256 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891132188 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.791235737 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.789848007 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.908687417 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.91969394 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979366575 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.394952245 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.974105228 seconds)
  done (took 885.021553178 seconds)
done (took 1195.533081179 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.790307951 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.788045343 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.774643144 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.795047231 seconds)
  done (took 28.87573823 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.801563601 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.799585611 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.800499451 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.797897898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.802547226 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.798001477 seconds)
  done (took 12.531955965 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.856670409 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.789862943 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.792736229 seconds)
  done (took 21.171889928 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.868579383 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.211183062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.908208036 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.240777605 seconds)
  done (took 9.958148796 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.800826566 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.804130629 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.800250491 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.80489919 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.800128465 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.805656648 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.799216521 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.801518972 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.802485092 seconds)
  done (took 17.953055044 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.221347152 seconds)
done (took 96.434791131 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.82261727 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.79276369 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.627201447 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.093800424 seconds)
    (5/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.416535315 seconds)
    (6/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.025989859 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.876835201 seconds)
    (8/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.936080936 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.805249623 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.892633535 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.300434812 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.798168481 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.00562487 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.883939282 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.287111317 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.931223102 seconds)
    (17/309) benchmarking ("sort", Float32, false)...
    done (took 5.557448686 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.781303025 seconds)
    (19/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.944542379 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.381047113 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.794546083 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.445815165 seconds)
    (23/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.835163088 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.095075337 seconds)
    (25/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.825466737 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.087576725 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.106058797 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.161893591 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.952651038 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.817389197 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.159597125 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.308216425 seconds)
    (33/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.123866697 seconds)
    (34/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.321303443 seconds)
    (35/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.927777874 seconds)
    (36/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.60610607 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.02092071 seconds)
    (38/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.719633585 seconds)
    (39/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.954403715 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.141172556 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.08333398 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.057704128 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.928208399 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.845897683 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.692700572 seconds)
    (46/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.915253577 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.799189447 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.867571042 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.93558847 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.795557064 seconds)
    (51/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.796744592 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.893564411 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.075588257 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.82187155 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.132166269 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.922742497 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.934554453 seconds)
    (58/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.981014058 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.86268589 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.859961761 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.875494147 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.853736523 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.799179019 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.704180382 seconds)
    (65/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.658980239 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.025029593 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.014395979 seconds)
    (68/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.904992346 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.09086108 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.967971842 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892392448 seconds)
    (72/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.010701087 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.178856257 seconds)
    (74/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.782146445 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 9.296762134 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.972740575 seconds)
    (77/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.008626572 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.802463253 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 4.013938207 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.856995257 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.033933854 seconds)
    (82/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.136855242 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.8176001 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.813709229 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.790358761 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 7.013487877 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.06858831 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.074835768 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.113803073 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.828909236 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.825763246 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.715065418 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.902157756 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.127417963 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.788843395 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.366063402 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.880470737 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.673036709 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.312539665 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.174067356 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.780299945 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.602293158 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.891979075 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 5.615118617 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.883010963 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.822469168 seconds)
    (107/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.829212824 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.42201994 seconds)
    (109/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.878894826 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.800650899 seconds)
    (111/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.999089745 seconds)
    (112/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.403999572 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.137884994 seconds)
    (114/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.817474334 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.195512526 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.458470915 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.63226414 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.022205772 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.472598461 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.171425229 seconds)
    (121/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.316012266 seconds)
    (122/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.310642138 seconds)
    (123/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.934575292 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.376308301 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.808498062 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.796675438 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.926340997 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.80141367 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.49649436 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.595945319 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.72587501 seconds)
    (132/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.80754068 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.882830167 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.78590849 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.852689342 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.848713734 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.04977633 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 2.262443159 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.826132404 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.800749644 seconds)
    (141/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.86414635 seconds)
    (142/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.792137931 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.406422003 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.060115614 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.899965616 seconds)
    (146/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.19643844 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.833481218 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.820091758 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.827518386 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.020092627 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.05833577 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.138786098 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.803618203 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.889509743 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.801902056 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.310736371 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.880086921 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.696116017 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.126035239 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.804173591 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.940653367 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.888748742 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.095041899 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.970400875 seconds)
    (165/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.887563802 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.041225064 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.827592761 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.787436051 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.56546637 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.007492574 seconds)
    (171/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.310950827 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.822859778 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.828375654 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.861291618 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.828756207 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.801414878 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 6.80477346 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.811157135 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.954042684 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.237664507 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.957740613 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.875456561 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.973448294 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.883183033 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.16070601 seconds)
    (186/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.057582268 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.025834208 seconds)
    (188/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.14659141 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.9446052 seconds)
    (190/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.942530882 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.823287599 seconds)
    (192/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.828031195 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.686266124 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.810259084 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.042094492 seconds)
    (196/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.013599434 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.807388434 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.98790966 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.701391361 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.177258041 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.101647602 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.834469111 seconds)
    (203/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.813384413 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.642016496 seconds)
    (205/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.92502667 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.845716918 seconds)
    (207/309) benchmarking ("sort", Int8, false)...
    done (took 4.803571496 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.869862054 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.088949211 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.18673909 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.810699248 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.862523586 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.849202141 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.994019807 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.841132862 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.890817516 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.178928766 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.694920674 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.859615009 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.093844167 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.806246188 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.495113755 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.004929673 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.538094112 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.015965751 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.829132916 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.005299588 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.797954325 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.201161724 seconds)
    (230/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.170275832 seconds)
    (231/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.988002229 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.79831487 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.810779022 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.341926797 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.014173513 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.879083108 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.790392453 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.945823242 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.84815308 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.812844519 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.914692377 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.912868813 seconds)
    (243/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.990991853 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.83886802 seconds)
    (245/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.041402096 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.056861838 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.031947328 seconds)
    (248/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.932436673 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.692324972 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112385815 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.810846596 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.373483097 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.021721105 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.810170923 seconds)
    (255/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.918162769 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.094879896 seconds)
    (257/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.804738095 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.209321947 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.058921917 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.186678298 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.21359043 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.452656806 seconds)
    (263/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.40915737 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.991780417 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.848515629 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.904527384 seconds)
    (267/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.98490437 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.405837173 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.952080944 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.836984458 seconds)
    (271/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.118332616 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.190617703 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.115788828 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.990840836 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.089006245 seconds)
    (276/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.951078694 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.915567323 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.811773534 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.207903133 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.497016862 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.414198184 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.898882743 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.889550302 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.196791801 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.924148606 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.807680324 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.412850122 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.536996832 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.751315259 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.141533029 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.882293358 seconds)
    (292/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.591651628 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.739461348 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.773784206 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.942416454 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.972421126 seconds)
    (297/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.988930987 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.817442744 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.243585578 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.199204894 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.907752372 seconds)
    (302/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.117669162 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.865499179 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.755722439 seconds)
    (305/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.92625536 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.830680875 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.115241583 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.165204165 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.814232934 seconds)
  done (took 996.69215731 seconds)
done (took 998.486399133 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.844027609 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838430985 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.820946648 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.842211837 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.932744288 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.852114471 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.833785021 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.825494426 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.868169319 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.872833304 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.820220636 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.848000746 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.822309864 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.824213641 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.821904851 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834581672 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.135603573 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.847562609 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.839593857 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.832688146 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.83894453 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.824258501 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.869991313 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.850525822 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.823735635 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.827182382 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.824189126 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.839049647 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.932832374 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.825650916 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.825721271 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.835409042 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.131825224 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.844986736 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.81547428 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.844514322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.833670264 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.834220069 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.826508289 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.856090979 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.275468212 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.827912391 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.823779884 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.821667617 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.825524959 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.826203752 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.82457698 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.830476829 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.83707528 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.840268946 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.271157806 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.842124052 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.829347064 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.823431369 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.836759773 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.825086079 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.82900258 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841835763 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.84498805 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843065941 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.126598655 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.853960347 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.827296633 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.844566702 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.833024499 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.310391552 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.821759564 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.830711309 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.27336806 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.832415888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.304339602 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.839795648 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.825399484 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.839687264 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.859080567 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.133630501 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.844449919 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.823981606 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.831526621 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.824654779 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.836246056 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836576786 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.829409854 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.825575133 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838786263 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.854227783 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.834150384 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.827156859 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.837034686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.843697956 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.84020334 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.839901341 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.830287429 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.822117651 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.834057361 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.834490494 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.830251813 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.829078654 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.834074442 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.840226761 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.272924534 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845897257 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.825893028 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.824847341 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.825222489 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.839208375 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.271675054 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.828669123 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.848391296 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.873229797 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.828376072 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.127751976 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.855098508 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847433606 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.837940996 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.831442259 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.822605593 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.125540174 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.293625633 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.844429475 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.830172031 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.825473433 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.844381857 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.8305442 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.826783055 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.138525296 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.854535895 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.842121339 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.949511544 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.838149427 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.860438705 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.82914952 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.828855543 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.85623528 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.843848031 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.860043297 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.830177651 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844177251 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.842964476 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.823232094 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.842286564 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.839974066 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.828634618 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.836200502 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.820450249 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.860028094 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843394975 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.841563231 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.847695311 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.950381007 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.826284595 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.125325253 seconds)
done (took 287.273840518 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.8988306 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.825221178 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.919392947 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.823717061 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.908766283 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.913409229 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.823623675 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.821915888 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.822851407 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.26798595 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.822321971 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.824604483 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.824694317 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.822516253 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.907896173 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.825299249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.822799409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.168399567 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.828103804 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.896230618 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.825360324 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.823338837 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.823598607 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.206162934 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.824392456 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.820393795 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.897662133 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.82382014 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.171998899 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.82247085 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.822180157 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.173455204 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.91432476 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.843695238 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.839205958 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.836402992 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.913756238 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.831443692 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.90991219 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.907771794 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.922127798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.866341812 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.820933408 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.826683328 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.830463737 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.830458699 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.824314356 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.853730132 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.825416424 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.825098021 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.169553239 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.838211286 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.833751411 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.825491346 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.82609945 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.849936252 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.825266337 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.827612112 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.91737859 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.827855918 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.89119228 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.205104086 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.233004294 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.827323916 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.823372659 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.824886583 seconds)
  done (took 181.526103238 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.898698173 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.901757201 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.895516831 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.833790161 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.879980237 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.900445394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.833169053 seconds)
  done (took 14.903856333 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.836626573 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.829853062 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880165772 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.87892648 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.828583249 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.980506652 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.828937751 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.842362096 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.825291378 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.88320828 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.833227097 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828850456 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.835926346 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.821835309 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.879655607 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.841662555 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.946724692 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.832640189 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.830201037 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.978571646 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.825362084 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.835139545 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.886032917 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.840070354 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.834646378 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.835904796 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.423665889 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.827697835 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.826453787 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.830310184 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826276199 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.874339015 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.831808489 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.825770172 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825495428 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946912898 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.828830074 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825844755 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.829484334 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.823281598 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.829740597 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.828860777 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.830703134 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.830514562 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.83201652 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.856027391 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.831289956 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.833685124 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.830466029 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.829471914 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.880617867 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.831918873 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.830259616 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.829224779 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.888028102 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838127536 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.831598346 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.8298496 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.83261571 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.82910454 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.983719616 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.880255991 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.831652311 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.879154955 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.833618597 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.831709599 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.245145461 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.829389629 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.886505037 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.830610679 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881510424 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.828524325 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.987846607 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.856303445 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832103479 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.833240651 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.836357957 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834263953 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.831365217 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.843364466 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.829701242 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.835325037 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.841830361 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830986479 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.834993544 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.94505608 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942690205 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.832141529 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.8461247 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.8416851 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.831164822 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.888768078 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.834181896 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.828884413 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884606135 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.948922967 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.888246629 seconds)
  done (took 202.444141232 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.839801265 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.842869411 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.835352069 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.852715994 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.836443221 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.835559372 seconds)
  done (took 12.803585133 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.838041921 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.837102199 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.833789285 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.839477465 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.837961226 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.835967062 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.835578285 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.833900817 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.841138004 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.83368173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.838453494 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.837436282 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.840214083 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.840285686 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.836054174 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.831880611 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.835101188 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.833171698 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.836061443 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834579713 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.979958525 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.836745681 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.836148456 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.838248574 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.841262351 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.833861716 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.846115828 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.834875333 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.83470928 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.845408669 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.837856968 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.838798777 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.837018842 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.839785078 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.843029063 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.836217076 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.839401465 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.838304496 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.833074386 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.839995855 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.836529225 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.836756828 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.835854384 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.836924914 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.837506084 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.839274066 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.840294106 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.844246587 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.83892011 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.836579552 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.837019259 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.835220896 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.839421053 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.838176713 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.839137326 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843475637 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.841797626 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.836144283 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.838196341 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.839479036 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.837527622 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.837913236 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.841921533 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.839821808 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.846103969 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.837367809 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.840270872 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.840333467 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.835933363 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.842217823 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.837683019 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.834901459 seconds)
  done (took 135.251282749 seconds)
done (took 548.697411674 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.13110098 seconds)
  done (took 8.895640063 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.977693685 seconds)
  done (took 8.84479459 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.477150776 seconds)
  done (took 10.241341265 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.848582684 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.839147198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.836481346 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.836475672 seconds)
  done (took 29.134362815 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.963347294 seconds)
  done (took 8.729258207 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.841506831 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.826505435 seconds)
  done (took 15.470122856 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.924243812 seconds)
  done (took 8.690852897 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.970198217 seconds)
  done (took 8.741084439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.84333697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.859794408 seconds)
  done (took 15.48338284 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.817549868 seconds)
  done (took 8.582749045 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.60947498 seconds)
  done (took 11.38558817 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.84041048 seconds)
  done (took 8.618408873 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.893061569 seconds)
  done (took 8.660227099 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.056300748 seconds)
  done (took 9.82109622 seconds)
done (took 163.062863138 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.835864497 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.832114156 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.831690949 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.827031785 seconds)
  done (took 29.091337741 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.871397606 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.869687338 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.875500017 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.87992097 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.874624938 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.871165112 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.862870094 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.864001184 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.881020637 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.874281698 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.872453155 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.874060863 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.870554984 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.862634262 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.872426155 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.872638447 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.883258124 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.872963031 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.863375631 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.873613003 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.837875085 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.885563586 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.875371428 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.838903384 seconds)
  done (took 46.646521918 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.036554446 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.910682503 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.992763335 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.890966401 seconds)
  done (took 9.597128227 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.888919505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.891469151 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.901910842 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.942200949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.973684428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.899075505 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.865577829 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.859795571 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.845807931 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.893719413 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.968820945 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.908139714 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.975311947 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.839058353 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.025074381 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.839297806 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.838563868 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.890513643 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.941764909 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.956196996 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.841138843 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.892058358 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.896181437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.916810736 seconds)
  done (took 47.457760918 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.837638678 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.848971711 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.845629991 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.840235787 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.84035608 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.838236483 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.845108221 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.838070798 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.859877358 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.839406639 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.838188023 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.838884391 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.836757439 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.839555371 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.837741347 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.851753986 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.853184815 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.839583408 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.842886661 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.846259913 seconds)
  done (took 38.626345923 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.833835234 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.809091109 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.187412996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.091749752 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.836068254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.835954613 seconds)
  done (took 32.36169282 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.852216044 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.847918384 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.840639844 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.8960228 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.977961532 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.850422787 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.842205844 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.851524319 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.885748639 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907665577 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.858668134 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.868622523 seconds)
  done (took 24.249941825 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.835885366 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.834558107 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.834785462 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.850892071 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.852234405 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.848408526 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.849091739 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.835752921 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.853509519 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.861058856 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.847755494 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.855468669 seconds)
  done (took 43.932392073 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924002525 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.882697998 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.885194381 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550878372 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214318777 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043813136 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444218552 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168245411 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.840457472 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111581985 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.964727938 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936642598 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094218745 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361753062 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.866933587 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.312526683 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137335172 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071369915 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865255397 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586247153 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902307082 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.043396593 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.670688407 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894697191 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048352134 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.966800959 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.098243105 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838287981 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977689356 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877010511 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847646582 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836700566 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111661246 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217537561 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943482922 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846331998 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.460480614 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.558440689 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.829358088 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.718933118 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.668822305 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.965693444 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850201701 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837194956 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773198852 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.009580798 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211757223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.844969261 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.550322874 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838132593 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84828355 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932744385 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.841569365 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.6598943 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753773035 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.83661414 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.836271523 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845264146 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407447696 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.022578888 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.041674018 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.812927305 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.934083401 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.592300549 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235684095 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.990540989 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.843480323 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843529514 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774510416 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.665209369 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892444443 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169591326 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.856359313 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489212102 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141520643 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.02928963 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780065385 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117854811 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406843649 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.810213924 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068400112 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840103718 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776457687 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.785731221 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774027272 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112558977 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87839055 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.601588587 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881776568 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167428549 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852509231 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859926901 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86408758 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064503944 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.780285809 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841735121 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.76123476 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981324703 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859740813 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171432799 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777372301 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.840887352 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097973348 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.054487944 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.932860297 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.351431544 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002391781 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421423568 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.889287298 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.015805482 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887290108 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.120677689 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901712207 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.025055811 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892057339 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.841729618 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143385034 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453288706 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.976176959 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.974636041 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963857674 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.174135243 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870275257 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923380007 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845156178 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.842349394 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.698806097 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392741246 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.841718734 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.84546225 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916913348 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886665237 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.842992729 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792454834 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.462115091 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01987883 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.8529632 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06626616 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42888376 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155159514 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778825633 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192739007 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929691989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.063803285 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.507036614 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.918325984 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103327173 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937997007 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.983086928 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886809871 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862613154 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9411754 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865405515 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.010393669 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.135064106 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.847104661 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.847618507 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.689622397 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881934376 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85023699 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.848899955 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596697748 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121863656 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.868884986 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850211404 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.73401115 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.857836724 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912159281 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85102251 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855232917 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388732553 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.559022772 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.852252469 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.426057991 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072233462 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85669799 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.592873462 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962606629 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.929434489 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126459294 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908473586 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.780299272 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.557438701 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.539646578 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846663301 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781897307 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.844867806 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856643906 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857665263 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.045068382 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131060652 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893214048 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.869198542 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.886129111 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858579697 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.851200222 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84548726 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.359795593 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.036286272 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057588483 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892384731 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990780842 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.860051072 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.781393536 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850556674 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852400671 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846390203 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.847812923 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8805109 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.602736744 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224794377 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105844341 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.460214795 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861380122 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.669753016 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.9071672 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.848437226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.82393398 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020066547 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.880731991 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977049343 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.8593165 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.692404718 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.54431236 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413515348 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161396285 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163441362 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293336075 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.090089899 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877850655 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185645003 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78231847 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.405701268 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907809818 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190410772 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794940427 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931303837 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.509081107 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192070779 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86191031 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077747968 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241704545 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.700940868 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996760925 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061065538 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884798285 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.025558866 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810626905 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.13377753 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993948454 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.655229965 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05743839 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182700169 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.657359341 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980249394 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.849823464 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.541897457 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93274868 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.559783098 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022788842 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.051469735 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.888136873 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330350536 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855871115 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075591819 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216345607 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.029870375 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.971130754 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788297358 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.860602468 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861971781 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.852185201 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.851640243 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.708068235 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.104780094 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861267001 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785753024 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.98615415 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156348422 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.754049179 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.855511751 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85084529 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153698861 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424840445 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020371524 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.981842772 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.366751428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856539152 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78574404 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785144953 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.545355911 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85871623 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.831728203 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070731604 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.960144528 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.765310051 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93602429 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099486028 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.111803914 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.867146525 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133396685 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132221957 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.552003503 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877194968 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.953841982 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.645478007 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.9655173 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.852115492 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087908588 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608269486 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075424631 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.907612985 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.813979982 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.85184942 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067481563 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852609828 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.88450647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089479649 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.57754826 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.860683469 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272877589 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929059595 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.86920655 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904631685 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.946406397 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865362724 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933584741 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864896749 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.865587324 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865079392 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901682606 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93782504 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.981485501 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.867638471 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948418981 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.044876804 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.382730624 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.855078749 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138589716 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216808532 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188373193 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917012008 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854177866 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858780065 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788485138 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999306527 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.081899676 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129343279 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.987057336 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.971074502 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879936977 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.656457435 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.090352418 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092565181 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129371743 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.75209747 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38749224 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.892001838 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.855229514 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866756758 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.066279151 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075557349 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171560183 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996132633 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955104409 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216030584 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13009457 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.85755724 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856461496 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444612207 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.863389057 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.657501812 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.90017665 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.898364089 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13613813 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866433601 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240161674 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879819136 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.016525832 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.628779185 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.611890427 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.146665981 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.852878214 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922578005 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138906144 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251201381 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174520408 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924108885 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867912554 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.967041573 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004508794 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.715682324 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.857739366 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859334286 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908581997 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.567722551 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.867714894 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146327571 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171485126 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.855929633 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.717345943 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880353857 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.867313408 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082546159 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132610816 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113543425 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868767178 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866414756 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.671526074 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141080986 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919591908 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793076935 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.858163353 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958647555 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107386887 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878503474 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.310527792 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.569755518 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145808326 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.864135739 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88197775 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.042259981 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232100112 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192047613 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404623484 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081721966 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.450221796 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.453044631 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159383629 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.86566167 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.031270876 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163883485 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.862474633 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978383115 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897619942 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.136192227 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173831868 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.87325124 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73270698 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.830750105 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203601891 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427016137 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798308481 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867562042 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.920435613 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862129676 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.989389262 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86865654 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.720609402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031351028 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.650410631 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139522452 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.861737184 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.847958035 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.697605882 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.182431893 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892028597 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017378476 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868335177 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.534412341 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.212316285 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117496986 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.974380007 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.866951007 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.865070898 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862080156 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848333261 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.059045905 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.060306865 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144594323 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.993235436 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.89824119 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864762492 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.077985635 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073028747 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.865843517 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002512074 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967003468 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906004222 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.769649694 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.364328504 seconds)
  done (took 1669.670800258 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93721898 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.881458645 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.898273792 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.902274414 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968944217 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.88338118 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.879727063 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945494495 seconds)
  done (took 57.093675656 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.861616935 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.058774498 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.873658566 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.863633816 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.869454018 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.864701625 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.029199892 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.869306645 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.869731336 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.873628444 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.867032297 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.861044201 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.178493691 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.88511519 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.86480948 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.849318297 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.868584576 seconds)
  done (took 74.222834285 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.895303015 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.934145341 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.894081381 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.879804542 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.830022257 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.88578113 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.672635033 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.894080342 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.862686626 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.09546999 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.496126881 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.88859245 seconds)
  done (took 90.02705188 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.87594795 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.87078839 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.869932161 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.871417906 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.872275345 seconds)
  done (took 11.163299777 seconds)
done (took 2175.930234447 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.117166012 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.082915696 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094663612 seconds)
  done (took 5.976137953 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.016338985 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.065850301 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.18333032 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.189449896 seconds)
  done (took 10.259103823 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.155188909 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.246628123 seconds)
  done (took 6.203896807 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.266296409 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.873006078 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.247489417 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.864753048 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.866356259 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.866214306 seconds)
  done (took 22.406845879 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.872216441 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.87518917 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.871202069 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.874464017 seconds)
  done (took 9.29422462 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.854477099 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.57292069 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.853570687 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.8669717 seconds)
  done (took 20.949747212 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.619366049 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.632231743 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.614799997 seconds)
  done (took 9.666526774 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.550590579 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.768237308 seconds)
  done (took 9.119764661 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.132288544 seconds)
  done (took 3.934390627 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.001278326 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.179385519 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.377449653 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.39660155 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.487990293 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.569594832 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.185042119 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.115065946 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.291710754 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.311257093 seconds)
  done (took 24.717434117 seconds)
done (took 137.826577482 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.251797136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.233298474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.071118367 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.203446145 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.095394138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.073403492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.088818622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.192193189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.712648786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.708675283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.244024719 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.093710348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.035148121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.23367717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.034892725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.105972273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.097307517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.26844923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.89944758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.097271788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.08903876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.845187849 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.082877769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.858975619 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.091794695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.024889551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.421422245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.105244899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.058653817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.431591482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.022018265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.256246365 seconds)
  done (took 170.83197874 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.784360187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.866136351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.867840841 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.868352636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.308824036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872328284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.872306593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.867546058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.111587324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.095071838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.866252221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.303912059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.875199196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.865769266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.867481038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87394181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.226429755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.823865913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.869191403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.872614094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.880191349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.24402229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.880543558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.284627112 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.250342082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.887693971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.869565004 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.896675074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.877157113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.889318735 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.895104106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.867501665 seconds)
  done (took 208.489191648 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.870951153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870767779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.868813906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.870281173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.875290189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.876388755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.878324313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.86944856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.58312504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.581321519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.888509813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.88287896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884600916 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.869658234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.889683592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.868671339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.87819143 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.885204522 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.882460781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.885216997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.892613797 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.602528937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.896071857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.583824127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.883234169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.882722667 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.870785253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888892147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.890246192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.893516501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.890223985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.870524072 seconds)
  done (took 220.837135612 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.08201079 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.886171828 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.88837519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.8411091 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.888841676 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.888335129 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.882188007 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.085548077 seconds)
  done (took 19.768639953 seconds)
done (took 621.737564089 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.463840497 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.218344482 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.069025567 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.909887231 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.167479825 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.948544436 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.90719666 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.976527719 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.642313456 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.97974058 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.55525177 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.926047839 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.641346418 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.932246599 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.035239773 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.966596613 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.444316239 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.53830735 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.088216867 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.9898553 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.087953284 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.91758936 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.982822287 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.684111714 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.668414671 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.913611132 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.082973368 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.45026298 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.91490138 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.075652812 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.654570718 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.292219208 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.919857155 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.908660013 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.964048288 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.941905997 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267953951 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.917674433 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.033396236 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.680938365 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.984394875 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.52150454 seconds)
  done (took 104.080513796 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.880001474 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.876690372 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.879949065 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.877957125 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.879068383 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.877664943 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.878943238 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.877065558 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.884947772 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.87568322 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.879172987 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.87979109 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.880905628 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.883005745 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.875738689 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.886108124 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.882278025 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.886398826 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.878009734 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.877839062 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.87831055 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.878668371 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.878160081 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.878679375 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.877779238 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.883896651 seconds)
  done (took 50.701553616 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.893412163 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.04452709 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.118777408 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.9095858 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.890936121 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.89840238 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.910531333 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.896035156 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.896413873 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.895922008 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.984077802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.899889455 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.91084636 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.121680933 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.904544968 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.89233149 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.891827188 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.894084632 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.048771019 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.911283405 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.914095543 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.89972203 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.913108039 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.908146019 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.895910053 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.894343047 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.897230192 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.35883025 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.902626166 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.98585174 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.985989894 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.911019404 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.332693908 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.136066781 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.962159704 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.898531171 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.894918695 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.990340316 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.900303165 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.894796886 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.912078812 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.899275464 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.121897125 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.399864136 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.906792383 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.895841527 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.368807103 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.99488141 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.934347326 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.904162475 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.127252864 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.908278404 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.894156693 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.895824593 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.9299519 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.90415145 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.895025537 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.272052213 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.908412333 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.914871357 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.900575654 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.897383352 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052929584 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.902750321 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.042699595 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.902820078 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.902062919 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.895908183 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.126364335 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.911697172 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.408530533 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.903929805 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.893639107 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.986527398 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.043274987 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.398391506 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.903565824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053116564 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.349508742 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.917844849 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.902200957 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350005464 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.923798107 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.902208675 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.896440324 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895297848 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.894145967 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.938021666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.910899231 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.341823728 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.409992439 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.272606499 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.917949848 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.911041567 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.89554646 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.259006503 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.899549982 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.896513872 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.116045689 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.420976387 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.905926537 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.90390835 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.394193053 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.911124973 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.915079242 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.907018553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.130108744 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.906824377 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.94061198 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.8966027 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.901850838 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.899464557 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.915585483 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.90410799 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.896432177 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.385648098 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.005376205 seconds)
  done (took 235.166696368 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.892535431 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.887959342 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.888130698 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.885993624 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890120377 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.89608654 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.890208109 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.889107727 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.895724454 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891291172 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.889936967 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.891345275 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.894688951 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.897866156 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.943151392 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.897265161 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.545852105 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.891231719 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.890075227 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.898538734 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.539124317 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.897714599 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.892332815 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.908617037 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.893356027 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.89420142 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.894759849 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.92061558 seconds)
  done (took 168.212357939 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.897465448 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012065758 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.909462992 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.92607717 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.907843741 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.895550939 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.921024106 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.909772548 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.90256995 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.896837703 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.893037727 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.959923166 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.904668864 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.998769134 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.929288313 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.926369225 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.001798766 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.904149006 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.89717107 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.896211941 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.926691964 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.892908883 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.960814825 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.021161869 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.913186691 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.014930661 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.902027351 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.897501071 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.898056302 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.016946677 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.915516355 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.959275915 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.923902005 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.917901541 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.018394454 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.012922152 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.003082056 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.926227278 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.899814332 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.897828811 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.897506098 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.885261279 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01340607 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.91628616 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.898921451 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.00556628 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.914957079 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.901384445 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.907430328 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.899012498 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.913241615 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.915925202 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.966148761 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.028005208 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.933066674 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.925181186 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.924713807 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.169293755 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.908635708 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.999257928 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.891683172 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015185182 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.920231874 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.891413979 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.897892574 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.906023635 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.927806423 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.929047553 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005871173 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907998485 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.998919389 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.937429504 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.907310874 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.900306732 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.901328427 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.016728844 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.017837558 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.934566848 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.938634428 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.931812862 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.896185864 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.900592941 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.8890757 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.917669339 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.90400242 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.013380139 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.017587711 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.910116501 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.903848256 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.901409648 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.904065549 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.925916129 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.024926864 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.935228848 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.999813313 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.966949326 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.972681211 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.911609271 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.913632265 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.900436564 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.96484413 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.911411083 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.911535936 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.212881371 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.971393557 seconds)
  done (took 205.619382405 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.357701225 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.957243348 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.955083504 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.17363018 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.324730221 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.699319776 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.948893619 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.947203245 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.972247333 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.113908967 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.006572192 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.964115678 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.93789588 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.922637935 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.947681846 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.969798718 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.953513159 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.255142782 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.07873396 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.073205425 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.929371684 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.210170323 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.272110357 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.329037608 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.987835658 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.275647029 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.638138578 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.188795549 seconds)
  done (took 62.22507562 seconds)
done (took 827.814208096 seconds)
SAVING RESULT...
DONE!
