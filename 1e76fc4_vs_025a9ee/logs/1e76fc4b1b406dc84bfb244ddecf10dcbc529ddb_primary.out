cset: moving following pidspec: 25016
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.532420657 seconds)
loading group "string"... done (took 0.502913462 seconds)
loading group "linalg"... done (took 8.388947757 seconds)
loading group "parallel"... done (took 0.171432221 seconds)
loading group "find"... done (took 4.449616603 seconds)
loading group "tuple"... done (took 1.921147862 seconds)
loading group "dates"... done (took 1.371604488 seconds)
loading group "micro"... done (took 0.193702255 seconds)
loading group "io"... done (took 0.522493881 seconds)
loading group "scalar"... done (took 48.915678197 seconds)
loading group "sparse"... done (took 13.189951875 seconds)
loading group "broadcast"... done (took 1.634726182 seconds)
loading group "union"... done (took 9.116602005 seconds)
loading group "simd"... done (took 2.961436266 seconds)
loading group "random"... done (took 11.028027591 seconds)
loading group "problem"... done (took 2.142608976 seconds)
loading group "array"... done (took 23.627291692 seconds)
loading group "misc"... done (took 1.123366308 seconds)
loading group "sort"... done (took 3.602140411 seconds)
loading group "collection"... done (took 18.624689094 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.686391993 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14537934 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.254099826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204485076 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.261331227 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16601661 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155819105 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172305113 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.582495637 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.192443095 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152539976 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415180921 seconds)
done (took 6.118900678 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25687273 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.238325268 seconds)
    (2/2) benchmarking "String"...
    done (took 0.18438092 seconds)
  done (took 1.099668951 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077294263 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156857165 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10788556 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094955409 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094235827 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108153145 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093788985 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109946719 seconds)
  done (took 1.447840788 seconds)
done (took 3.561619369 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.506585303 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.875955874 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508789523 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.178700661 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314085147 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303598414 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.262429901 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221961252 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093057906 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.106073694 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.19225551 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.402514544 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.377258629 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.966015861 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089511318 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094908055 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.152359796 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.78176537 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079616568 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109064446 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.523305505 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.210037697 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115125064 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106051922 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186467659 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132875628 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16102126 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101072973 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.660584332 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132924925 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.21239268 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083792302 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159631321 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164287301 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.2266571 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094754165 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678194942 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202430423 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095147259 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100141857 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678037387 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11846811 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.202922421 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105440297 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088561023 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183233331 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114678742 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079038254 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094083228 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102123452 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156610171 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.447347836 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10589852 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.190628102 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093339113 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.701341988 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10030679 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274834388 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127668052 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094241628 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089928673 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087732417 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161565702 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094973775 seconds)
  done (took 20.170700198 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165124211 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.184441942 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078912446 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157300222 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120922458 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097309261 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084885768 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079529126 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126495526 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17699304 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137901207 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192697655 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076926609 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092008028 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.166809816 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230765463 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126492607 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104572787 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090095263 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106574329 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123400195 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112600717 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092549266 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090799805 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171913847 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204991158 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108836028 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123166472 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089816542 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096538905 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141913681 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143659114 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091875389 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089621047 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187316443 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108191558 seconds)
  done (took 5.273446803 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.117274789 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243319958 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121979649 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249197627 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196449293 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137033951 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184435469 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174620341 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.292032945 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.216967979 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179743096 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127245556 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098030936 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080144675 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080473971 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0989017 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079855584 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.346639474 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147992919 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191109842 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184285682 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113190307 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082736019 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371522574 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102800034 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087322901 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112498693 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064679392 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224146675 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.173478965 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095735199 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.170092668 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.08677434 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083294645 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118020221 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115255348 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141516562 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121233778 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112632679 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087091278 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222077313 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101836023 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099906171 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115645197 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133392125 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114068958 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109569027 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126168201 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21897203 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088729337 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111987798 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.034642311 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194296913 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144095559 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103502821 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.270971626 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128901629 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101390438 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110741677 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.78287686 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130304702 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082721388 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079326707 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113521809 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079815399 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.452056618 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125565042 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.28759876 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083548357 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154164192 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097527674 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119707425 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088898572 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102343918 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111760376 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086166252 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097634902 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087895133 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079481556 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10811406 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111688307 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100331097 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085700117 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080020334 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160001733 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098605186 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107529408 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12553216 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091180653 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.103904703 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113431437 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097424707 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09101621 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.18561448 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098236205 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129237652 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113541017 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129660057 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105091529 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.273174151 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084799771 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123839733 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100804759 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127179261 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102726831 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080901592 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100914822 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081326791 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082403107 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15970359 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08876162 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081052606 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10578164 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09385534 seconds)
  done (took 28.543887249 seconds)
done (took 54.664068681 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.417606816 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080526028 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0794041 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099493035 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079660746 seconds)
  done (took 1.513532117 seconds)
done (took 2.24735693 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.306024081 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196635773 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087430743 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187310116 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086654284 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19363796 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182951056 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101506747 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204606931 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085557556 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188742908 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088564159 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10491581 seconds)
  done (took 2.772733063 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105812625 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106793327 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101813736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12067166 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086320388 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101387994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118647879 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108581402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10068481 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112631131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085785891 seconds)
  done (took 1.883764913 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099479567 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104061302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090992989 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116242876 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085726938 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097632761 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11517615 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106650612 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098715985 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111721204 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086715474 seconds)
  done (took 1.853742537 seconds)
done (took 7.241016342 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.184034036 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.8270978 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.189421348 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.240275517 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348880665 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.292484381 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.597681428 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.198060431 seconds)
  done (took 15.743958418 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.125142641 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.187123175 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095321007 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095617563 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115552985 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090440112 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092137969 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.113699451 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091045772 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091157004 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112405194 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096360702 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09327148 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091284069 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107295305 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096648932 seconds)
  done (took 2.492103834 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142534876 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139658873 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097365051 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099047016 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11294737 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098732304 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102173818 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116670237 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093885127 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094892021 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117730111 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097718249 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09711794 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109352127 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098164498 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117573419 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109976189 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099808267 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11772384 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115700419 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099082259 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095942654 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113406819 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099586806 seconds)
  done (took 3.407593703 seconds)
done (took 22.380981688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147700666 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102207372 seconds)
  done (took 0.991202841 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162688281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.180543556 seconds)
  done (took 1.089565312 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111719661 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091204629 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136515875 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104624701 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090525978 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107024808 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116170163 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107786394 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092260433 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091235784 seconds)
  done (took 1.800790125 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095402164 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096160319 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122785767 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.167290025 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117977966 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094327073 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095883725 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112734631 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096068329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090594722 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113768335 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110192931 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096382585 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127040631 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096700818 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113986683 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100711071 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095089845 seconds)
  done (took 2.693814454 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090933599 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092011081 seconds)
  done (took 0.934401252 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093781905 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091620883 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093594117 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110052986 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092354677 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090563578 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107709409 seconds)
  done (took 1.432186048 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524953723 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.246675666 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.404978862 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111053463 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.268331123 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.400259539 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132245464 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.131997993 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114180435 seconds)
  done (took 3.121263198 seconds)
done (took 12.811458921 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091599056 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241081833 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.628893365 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11315024 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090872657 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160795831 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.310359939 seconds)
done (took 2.396967059 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343551458 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.162756193 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082599239 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092036886 seconds)
  done (took 1.434719834 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082854887 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099287471 seconds)
  done (took 0.940504093 seconds)
done (took 3.137036444 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090119136 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.120771384 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10751966 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089257662 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090883746 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088526041 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.108682313 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09060461 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089335226 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.107887798 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.088834462 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089274988 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088529309 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105633711 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089114373 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089009206 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105606907 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089513875 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089192627 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088138052 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106502339 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089045781 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089481956 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.104716434 seconds)
  done (took 3.089684481 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11037192 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091152539 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110394176 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094569304 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094925876 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110525167 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093332977 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091897194 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110201415 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09180794 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092971119 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110880715 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091233015 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094249011 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106897829 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094437307 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093510922 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090252532 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107427653 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094173042 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093466156 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108558251 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094255452 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094266464 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110478136 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095190947 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091486547 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108457763 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094323025 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093505169 seconds)
  done (took 3.717830728 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095453751 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087067523 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090063888 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114838238 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087452041 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090651529 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103203773 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091027547 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090974853 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089193361 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108792223 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090696776 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089022255 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107883234 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091199987 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09218821 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115106253 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089992154 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090154111 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090205852 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111207525 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089262555 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090042504 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106779892 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090269031 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087828153 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089510021 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106125219 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090455551 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089693303 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109571728 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094294734 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089801742 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116479395 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093626219 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090301658 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094914652 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104185382 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091407802 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086462603 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104064861 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089639604 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090431184 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112765705 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0894259 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090799682 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089601371 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108119795 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090427562 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092043748 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103972132 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090147035 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091783133 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090311193 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110113503 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087483803 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089619557 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104413548 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09323685 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090264786 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087474465 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.104651863 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095290014 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091093447 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122575585 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097215111 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08900965 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108739055 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091825649 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096461691 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109925962 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100807418 seconds)
  done (took 7.696135733 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115101685 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100106497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110156881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091640967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090632389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089754209 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112806137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091285976 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091392974 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114305354 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091737879 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091363017 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108657221 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091982646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090918404 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108476514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097397613 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091170608 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.10802634 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092661337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094738732 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095217149 seconds)
  done (took 2.942147237 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237137001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096549916 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138219917 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121387497 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10820468 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121123328 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095158552 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096914758 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112796046 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100647021 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100436614 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112450266 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10827146 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116033969 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102454471 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101063859 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112742529 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10190657 seconds)
  done (took 2.857750819 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104335701 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092836271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152521001 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093167314 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092423713 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111504603 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098934832 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111963538 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111787748 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092650733 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098983015 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109445434 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094390466 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092459378 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110335931 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094196269 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092530688 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10983525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099704467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098903604 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115274187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100285925 seconds)
  done (took 3.054518421 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105260835 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093468799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130758368 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096563655 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091736349 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109427587 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09866573 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093401178 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117947899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093856195 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093820249 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092512009 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124078485 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093868021 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096595913 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110906685 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092878208 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092429371 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110186755 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092320547 seconds)
  done (took 2.807977905 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191791569 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126623607 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10864683 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11462487 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126632234 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109338661 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133977062 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108768306 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107959591 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135291838 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108105819 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108320967 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133478615 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113223433 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125287844 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11681965 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13282978 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11782592 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107618892 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126231764 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121271581 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1077973 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132600489 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109740964 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125657024 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110163311 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10909131 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130900827 seconds)
  done (took 4.179891761 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091647444 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092319552 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091718104 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108031359 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090983658 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090909207 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090415523 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109039159 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091788437 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090685388 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109001498 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092935588 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091828669 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.107731384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091429885 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091644933 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090105662 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108569851 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091222432 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090468504 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.108087397 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092704231 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092217692 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090567053 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10867596 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092286064 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091355872 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090649247 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108570985 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091780824 seconds)
  done (took 3.658941309 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103767358 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101632516 seconds)
  done (took 0.988101852 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098608671 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105003849 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090908433 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109001652 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098932222 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091935113 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117409864 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09854704 seconds)
  done (took 1.59478765 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163877004 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.187567762 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0966229 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12278719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.167753719 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.179990024 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129556066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115402561 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09219548 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086176272 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.18103339 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083213142 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110500055 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090168837 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091243705 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117987833 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093310309 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100628452 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117569511 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095140906 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096539847 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114932821 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095197609 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101931823 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105221906 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096105249 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094007125 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.121919218 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090262844 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092777697 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.109600521 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09369683 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095306545 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.1154737 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095164173 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.187898397 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099042119 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088479152 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111606924 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097470199 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125010592 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.111788074 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094782486 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091395711 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113009811 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097297873 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097007541 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.110229175 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086181375 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088499785 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092697031 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10746118 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093298139 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093041187 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111082785 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099478681 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093509335 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108352672 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089640187 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087735321 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108708741 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091062695 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094016664 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.113739216 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094073706 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093201638 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109780346 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094005892 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09440157 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.111695751 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093435157 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106573075 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111795474 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097643267 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097070831 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.111332899 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090805871 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098766503 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109185687 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094661999 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095867723 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138549889 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095716578 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088471906 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10617525 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099891879 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095586983 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095098078 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.104985005 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102362611 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094277297 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112882786 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086820539 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090346929 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.107465526 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097786151 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085671159 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111135023 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093231893 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098029475 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115437142 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092411408 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094163255 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11510657 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099167573 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0913447 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.174606624 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0903855 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088908319 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.1148811 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097415704 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086983751 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111195895 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093677381 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090400504 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105896213 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097831121 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093047431 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.111464639 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098044248 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095956478 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112286873 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095299862 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092633877 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107373204 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098242417 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101273075 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093902282 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.113790425 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094159277 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094228349 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111478301 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097160142 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089547187 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115703664 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091680633 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092465997 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113810054 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099048145 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093414362 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106788652 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093466617 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094275145 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.110648221 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096821196 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093814358 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107461218 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086567144 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093499595 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107686197 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095674553 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101995682 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091525211 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.114559254 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090398931 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10087083 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109022669 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100358489 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094984064 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.117689602 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098324932 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085574467 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108514604 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096551247 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094530216 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.107155003 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094657461 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09308237 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100231302 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106308501 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097458106 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086013863 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108189024 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09954974 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094455825 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115250648 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090546566 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130477399 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123096308 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098917594 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091607387 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111945098 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098072957 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092496486 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115649613 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100142593 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098135605 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108468634 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092484705 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09872645 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089697589 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.11474135 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092687913 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093630837 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10486645 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095122413 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085557074 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115847867 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096387443 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097512594 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117230682 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096625513 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092384071 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119570068 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091525633 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098028445 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084674591 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117116522 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103639372 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098753859 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119069236 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094722598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090608907 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114050339 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102665589 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095128524 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11188003 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095138544 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086536644 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106948482 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100383343 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095877669 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106927151 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093970866 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095495962 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095792521 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111375021 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087120447 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097242482 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115108729 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089383211 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093602516 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108557048 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092537093 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100704233 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.114837091 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09044695 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094575778 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117030388 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094090009 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093189915 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.116463244 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100539225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096209907 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.113611323 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092914574 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101353285 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090312349 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111520945 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08966299 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096125038 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.1058708 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096115383 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093800787 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109568611 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091323116 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097410799 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118240639 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099726819 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09232763 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.116141802 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099747381 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099798098 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109473898 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099640345 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.0899023 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095555532 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108720388 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086705878 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095388271 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109131906 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10020773 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091622248 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111887259 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09792646 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09628247 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110006846 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100076844 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103382524 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106839274 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088335022 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090900182 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11169318 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091315213 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090085833 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.114028163 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097104335 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098094689 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11376188 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091439119 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093858283 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099435675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.111038551 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101554874 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098766959 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118544973 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091140579 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097191731 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109553937 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097934114 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086806298 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112453983 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093516402 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093453489 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109663752 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092650079 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089155866 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105044559 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092162327 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099537025 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.11107078 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098695255 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095137658 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11059943 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092464568 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089548483 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098834504 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.11249485 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101374087 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09399616 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106106662 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088861814 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098098487 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112295892 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100206913 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089651092 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.115435514 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102013609 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097316691 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093709181 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121564847 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101938761 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100175027 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119205182 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087761989 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091330729 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117656229 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09477221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096018878 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.114584144 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089210756 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095982075 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118511924 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096872042 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092824891 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106038742 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09663747 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101220006 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096944397 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.117219871 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096117131 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094313424 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108986085 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098557896 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098344338 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11280942 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101237409 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094825333 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.117810174 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092249521 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099377972 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113120358 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089816038 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088934089 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09081962 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.120876325 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08938844 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098070127 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11837002 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092212471 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093148409 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118475847 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09277004 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096296676 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118397798 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093744517 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103591424 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.113543709 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093287971 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098700729 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09873246 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106434749 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094644063 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092607609 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120275742 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093229247 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098255959 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112688966 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099493466 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09669603 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116892769 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10045502 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099680464 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106495857 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101844085 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097015945 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096300305 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111838124 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092899928 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088311931 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112434942 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101023123 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09130348 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121750596 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10040364 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091868291 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111934506 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099980274 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093366093 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119550902 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092380397 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096203144 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106883106 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098126187 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09243637 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.119583721 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09183011 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088794691 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098394783 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.118354391 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098871268 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0963745 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120412708 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089717245 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088108242 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.116384088 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092450732 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102916782 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115893199 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093615244 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093103908 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.115202127 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096902262 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100352382 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088513913 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111804989 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.0986851 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096029582 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114144825 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089071609 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098074646 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112611679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097937933 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093165106 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109181536 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093913501 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100962765 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112078171 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091202081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091606689 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119638833 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095989661 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091508391 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08895249 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119526844 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097127727 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120755006 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092990915 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094360142 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091695935 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.11637318 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101106195 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093038409 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1134325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093695353 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098666293 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118528637 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08830097 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092640309 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124931637 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099349875 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09510233 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.115463609 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094879999 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101635119 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120128382 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097604198 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089058245 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088834205 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114357405 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088666461 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096589922 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120977314 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093800949 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092068066 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119763783 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099248305 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097189889 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.115923983 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090229312 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102478419 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111865496 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098453432 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089419381 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088506768 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.116719969 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099814075 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09372752 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115704407 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096844556 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096943747 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108392767 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093757761 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097590058 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118127374 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101451077 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094653077 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112495572 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098789845 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106239205 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095850719 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114704616 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102353624 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100860712 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115208532 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095026185 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097899934 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122600053 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097287309 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101666196 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113149109 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095856494 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101232011 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121496912 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104672377 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093711198 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109354158 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100096297 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093724541 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109756053 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099795857 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10251233 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120546443 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095963846 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093143943 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123324688 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100844413 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094549612 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112603205 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094332856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099677852 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093240469 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.119710815 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093555797 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101563562 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.121907512 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101571437 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103059119 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109705526 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100793075 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097132269 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123345485 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097828461 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089967368 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108937548 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098414936 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102632711 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100969895 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.119216099 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098973553 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098975979 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116370145 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096897899 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09265749 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.121864687 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101170656 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096549764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115785482 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096504338 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096554673 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097689984 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.121896522 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102482391 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095688031 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126575508 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102884112 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094532864 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113431289 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097025511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09851602 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115631368 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101577168 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093100269 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110238819 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101576601 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103530264 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114323049 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103674106 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102781563 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09404669 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119972721 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103206201 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100573854 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118257763 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097151956 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099742511 seconds)
  done (took 61.771348346 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146129066 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103813883 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11815227 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098592627 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115040588 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120289773 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098584066 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099913032 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119803691 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108433812 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09828956 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117639825 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114418633 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137906345 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116437725 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108201349 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118648545 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101096057 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098829316 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11859241 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114832585 seconds)
  done (took 3.20786886 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115320774 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112030786 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129516376 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112926001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10404104 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129425748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109249938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129204421 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112244468 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106707797 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131133044 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108941601 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125669733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108261626 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106536717 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127359103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111431821 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104904452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129679884 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108974903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12640497 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110527728 seconds)
  done (took 3.394992581 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128039118 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102071023 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096463903 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118447172 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102353236 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098625195 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120828727 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100262162 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106725013 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113634215 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091584159 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093847336 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096511769 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118900812 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093282253 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098237743 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127108829 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102202849 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10310785 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.117853768 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.09033807 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099346386 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098392919 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110227836 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104132829 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103047674 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119688043 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103071297 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090053261 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101753988 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11935447 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093543622 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089407589 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110424639 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091195998 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101933214 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121719825 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099385177 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09971877 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091100497 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120193253 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103861801 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089937144 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118864158 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099544813 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093265126 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.334671964 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119960439 seconds)
  done (took 6.086253988 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127956356 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162553792 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102336 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136050713 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135070924 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107632242 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101974767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136275716 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100032253 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123059919 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114582822 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1114393 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125783953 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10626502 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124975903 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103727091 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104733555 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.119531845 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107631309 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101792042 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125646809 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104599846 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111358028 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131690957 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104382702 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100774277 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122853507 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104738895 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.1112551 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128688651 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108524503 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127058818 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112442698 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101652706 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12125801 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104391381 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112557878 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122819501 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1045668 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.1011816 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123729094 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106331335 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103865057 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133180358 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104133959 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103947824 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124156885 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100404593 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111085168 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124228731 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109221917 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133009747 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105913718 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102931619 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12523166 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113441107 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103426252 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.121348339 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105668339 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110396217 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.121841259 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106105696 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112099311 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124022884 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109643503 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132588191 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104875059 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105121045 seconds)
  done (took 8.770624305 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133391001 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106218395 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135525113 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115117055 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106038528 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127411901 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107133613 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106170841 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129212312 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111807342 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125988319 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223850918 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126239272 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110919747 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127835553 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108049933 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106848143 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12817303 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108014276 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107121198 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.127869066 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114547303 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106517806 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134311461 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117650622 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123710527 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107621036 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107709385 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134642919 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107498051 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117929316 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127405003 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107398706 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134595025 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.11802854 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107362509 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122455546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107845397 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105978658 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127605369 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105017118 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114083187 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129566262 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104169123 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10609159 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128268803 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11513154 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13790172 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112572546 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110049858 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12924433 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115235206 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126700145 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108002004 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114200581 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142361698 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11538456 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134697449 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108176537 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115493314 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135696562 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121557797 seconds)
  done (took 8.287675117 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100257882 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10088811 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099936126 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120247306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100517225 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099885379 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121285527 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101461691 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100333845 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100098193 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121084041 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100514076 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100155759 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120365853 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101143736 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10035899 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099626851 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.12033189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100284559 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099744769 seconds)
  done (took 2.959866141 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111048434 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117567596 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122417276 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108140553 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102271762 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130002326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103539307 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102166422 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101644945 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124220627 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110664993 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130672469 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103769996 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108183525 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130404258 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109162863 seconds)
  done (took 2.668323349 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121192904 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117912585 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.208368416 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104407144 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125712725 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110106688 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102355219 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128012855 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10219221 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108119104 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128584402 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106217782 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102655511 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125108814 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104026952 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105214218 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.1010056 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128061018 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102777244 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21381175 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106861683 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103636342 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126117838 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105777128 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103844551 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.13024078 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108934887 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101583256 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126246732 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104279336 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104186294 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131887109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102759586 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107698088 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124965473 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105173576 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103124505 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125334108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106996129 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103876407 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.125825296 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104748183 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10265798 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10460243 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.12389528 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10475839 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10083938 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129420634 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104546909 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104573376 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.12440583 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108065939 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107065001 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131274673 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111358168 seconds)
  done (took 7.223869896 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115182977 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103971429 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135289658 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101786341 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10419844 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103442674 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124850295 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104885673 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104025288 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123853906 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104946722 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104310373 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125117628 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105363525 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104672541 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124317377 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101182701 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103659674 seconds)
  done (took 2.854037987 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109558959 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102359622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106403956 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12389774 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10268306 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102448576 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123239748 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103113804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102674742 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.1238243 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103737543 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102810718 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100588307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123965537 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102862015 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10187884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123987492 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102919538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10312005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121715074 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104275975 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102292068 seconds)
  done (took 3.255197934 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115442669 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.210240468 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.1098045 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.220727715 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100028942 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.120977205 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109549118 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09975897 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137628255 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099503566 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09754875 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120035583 seconds)
  done (took 2.402731011 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129964157 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138733091 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124164886 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104355351 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110221967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129365162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10841536 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107074847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138165686 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117773586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128475609 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115678609 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115434523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137242541 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112259083 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131747502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107843568 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107589959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123654668 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123302252 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106818662 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136774168 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107477741 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129066854 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110012583 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11630554 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135667154 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119826875 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106774395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137477528 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112495144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128842177 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116436306 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117794899 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125779538 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116963623 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127945846 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121608771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111032604 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137029252 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103277875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113473474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137713809 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112607646 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136965635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108444704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111510003 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129136882 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10816005 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149688489 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113218358 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115100826 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134487811 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116130034 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136022825 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129129036 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139459656 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116483744 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112579819 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140892486 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116021461 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133942589 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116371305 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139931683 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112491626 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116274781 seconds)
  done (took 8.896574866 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143271591 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104025867 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129237901 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120302235 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136874012 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109030795 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107719481 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129734707 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109929736 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104318388 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172077975 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108903395 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13596406 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116943622 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109022499 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13062628 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10874726 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11520766 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126355021 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129486162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128500288 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117198745 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116196729 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137829513 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119571099 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134332457 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108850068 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107505162 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129892469 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108438586 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112618363 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130308417 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116741365 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104519827 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139275016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107695237 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128726389 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114814684 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108089056 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13507748 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116392915 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142873311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109178379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108908522 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141264471 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1088879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108431869 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127833865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109601051 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105280251 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141022449 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119808094 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140439277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117139065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12943555 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11096292 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108173695 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128635419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110245984 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113584017 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138079186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108352459 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149512613 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109629813 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108346401 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138164481 seconds)
  done (took 8.87558805 seconds)
done (took 168.002642949 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17279329 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212081275 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.194611333 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156817352 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094789145 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152919715 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128642545 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.19573973 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096516377 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095238761 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094228174 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121273817 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163276818 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094240212 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.11778369 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097909794 seconds)
  done (took 3.053171415 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182127648 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.329890309 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108880916 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121605353 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100909195 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.0989828 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121331286 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10190932 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099902325 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12906871 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101350828 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095337661 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128362355 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096043909 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099966477 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12227717 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107719273 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099409642 seconds)
  done (took 3.122292857 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119405773 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1432675 seconds)
  done (took 1.140231443 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130812552 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214366164 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282617568 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170656065 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120722065 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141029389 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150106397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132778519 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191595593 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134345208 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112208644 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097991898 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147364015 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105710714 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137175773 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098678056 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127535827 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135776777 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115108021 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101333071 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145084461 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10433502 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10391716 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135667902 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17983936 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133709397 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104841053 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103297387 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124112734 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113391919 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128238359 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119207005 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112211071 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178987343 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103101241 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174843008 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128207576 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101069199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113489668 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122554855 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104647427 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103456586 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135467809 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098449673 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103089926 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128245698 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104735309 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103351283 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129499285 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107233991 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129916697 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107695906 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174522911 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107564807 seconds)
  done (took 7.889939098 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.870446231 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14085042 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099982651 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.022614378 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145801658 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114204553 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.865620984 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14583288 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251580527 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.884183874 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114692205 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129710804 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238349476 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257777665 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.288242921 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357635605 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.724358006 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113215864 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128003754 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160107439 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107006204 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14477391 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120729695 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.513973837 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100871695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099555036 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131458875 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109072124 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176426261 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100332656 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125878888 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170912286 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291452832 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207054684 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121754838 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100263939 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099028851 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184455206 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272507928 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220744111 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193539537 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097770165 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099868989 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130779862 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12019082 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097242577 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177622576 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190032526 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188027104 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105468091 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107912673 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134502602 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106956315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175847552 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096972664 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355944026 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381682548 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100918402 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1086286 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134282031 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267386379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101211308 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235298857 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151716198 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217713714 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100151804 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834326512 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184091218 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100652808 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127397711 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10881062 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107829256 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129999241 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16718452 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.495816276 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110716589 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126911787 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10078635 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234321178 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100249307 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099782099 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180563061 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102930337 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131138102 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111794937 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131055278 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163742696 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269915818 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131299529 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111192116 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105165221 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137613883 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101737057 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231346063 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228848857 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173369514 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206603471 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130527472 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178568004 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163065687 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12797775 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164660213 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130333856 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112793917 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129246796 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225257369 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133419558 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12412798 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106888706 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109148434 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15784231 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104549047 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131985445 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1635696 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.551431843 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184482789 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097413873 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126041843 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110496821 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179397344 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108375509 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263537921 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109676777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185316309 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130264024 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098642213 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10760865 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179439995 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10804641 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1330616 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107408019 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131359876 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257090405 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2208901 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132197666 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253447148 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177982096 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128390915 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167279672 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131930367 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187467379 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111322717 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105924432 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125122582 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820958348 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114965052 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12963145 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107175221 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181317407 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123963564 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102926928 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099903312 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121462037 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819270488 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104691216 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097227105 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124222272 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107192896 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108768644 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132217427 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106644641 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178373219 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241187991 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109458391 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13072784 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100310875 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178905966 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102609315 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100875286 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123915476 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102013164 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109611503 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129046441 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103824395 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188864856 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175224973 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231427534 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.652475778 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102346274 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101647089 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264888094 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103001585 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325218001 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108379658 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.258020233 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160241085 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121812903 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359876139 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184075571 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184179733 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12597923 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16602837 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120568587 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111368105 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177071519 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102504785 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107678589 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175857506 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13372951 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11223847 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.275606 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101519911 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249516816 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097895168 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18747677 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123032977 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108044775 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326728852 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100985956 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138804446 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.176420551 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108200116 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102034977 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.619912347 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10117984 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136726333 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107328144 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232623953 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183048641 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131244566 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111856618 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109471303 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179175453 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230909094 seconds)
  done (took 47.578953627 seconds)
done (took 63.654757235 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267483536 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177203238 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280216211 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178956179 seconds)
  done (took 1.873243019 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.267975212 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160034352 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.253129598 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098623487 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.259830454 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097651215 seconds)
  done (took 2.040294617 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178016845 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170409482 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147730963 seconds)
  done (took 1.404442064 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200957084 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21533087 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.329348563 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.232428699 seconds)
  done (took 1.968700637 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.292536944 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118170561 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130818158 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.232547219 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.249624979 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210166199 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124242188 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177464071 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129410819 seconds)
  done (took 2.611599641 seconds)
done (took 10.799568392 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.332725289 seconds)
    (2/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.288040225 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.178175331 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.281556985 seconds)
    (5/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111124948 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.400425073 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.132323558 seconds)
    (8/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.19505744 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.142807856 seconds)
    (10/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.204271171 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.135622947 seconds)
    (12/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.352276587 seconds)
    (13/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114747369 seconds)
    (14/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.180066134 seconds)
    (15/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.230632197 seconds)
    (16/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.323451991 seconds)
    (17/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.162860401 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125575017 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.279880375 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.279444165 seconds)
    (21/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.390935334 seconds)
    (22/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.273740715 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102271766 seconds)
    (24/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.128632311 seconds)
    (25/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.309063829 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128441628 seconds)
    (27/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.102499184 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.254286477 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199387523 seconds)
    (30/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.190887501 seconds)
    (31/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110636119 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.143820593 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13144201 seconds)
    (34/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170937977 seconds)
    (35/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.331801195 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.144129309 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.0842132 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11977841 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135944627 seconds)
    (40/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.149670112 seconds)
    (41/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.191102227 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.127308838 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193662255 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102175921 seconds)
    (45/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.299921792 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.166095991 seconds)
    (47/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.179380977 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10246525 seconds)
    (49/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168176831 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.202770176 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076757477 seconds)
    (52/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.22224185 seconds)
    (53/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.133968106 seconds)
    (54/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.167300912 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112589519 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102821521 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.130718884 seconds)
    (58/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.143149548 seconds)
    (59/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129785436 seconds)
    (60/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103861545 seconds)
    (61/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160460888 seconds)
    (62/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134970682 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105407859 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123861148 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103468691 seconds)
    (66/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.133166257 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.127587037 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.293163488 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130427264 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080707409 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079480284 seconds)
    (72/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.135901468 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10739364 seconds)
    (74/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080158285 seconds)
    (75/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.080544535 seconds)
    (76/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101367868 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109695754 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110135221 seconds)
    (79/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106617825 seconds)
    (80/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.107393219 seconds)
    (81/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.130222936 seconds)
    (82/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145371259 seconds)
    (83/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.259859632 seconds)
    (84/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.143810177 seconds)
    (85/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084688086 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.104504696 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122806949 seconds)
    (88/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112424362 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.13010608 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124683319 seconds)
    (91/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111658815 seconds)
    (92/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.218582643 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101735835 seconds)
    (94/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080707804 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084755072 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.123877306 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110650666 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084332418 seconds)
    (99/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085327922 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14633497 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111059134 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125468663 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108213632 seconds)
    (104/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162785739 seconds)
    (105/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078171969 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132018916 seconds)
    (107/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187072194 seconds)
    (108/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.132014289 seconds)
    (109/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.190304545 seconds)
    (110/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081043049 seconds)
    (111/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078602051 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08429068 seconds)
    (113/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.196916211 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.192557306 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.133259365 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.132865634 seconds)
    (117/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07945975 seconds)
    (118/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086759566 seconds)
    (119/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.100659119 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104182334 seconds)
    (121/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084967065 seconds)
    (122/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078513429 seconds)
    (123/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.0801872 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.108582797 seconds)
    (125/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.136802929 seconds)
    (126/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10064076 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079524792 seconds)
    (128/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.110909528 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084496627 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083727107 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084743529 seconds)
    (132/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077402214 seconds)
    (133/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.10015058 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113776757 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079106552 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102996365 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147242078 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124709464 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10234164 seconds)
    (140/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154383196 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07800932 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112266151 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.135779432 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105208924 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102999285 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084657858 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101147849 seconds)
    (148/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07818698 seconds)
    (149/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084963295 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078922389 seconds)
    (151/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109596896 seconds)
    (152/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.1013565 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19064833 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10403288 seconds)
    (155/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.107262789 seconds)
    (156/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078554017 seconds)
    (157/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084599147 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081019414 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124111515 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085565804 seconds)
    (161/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.08172805 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077310192 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109628349 seconds)
    (164/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.103712779 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125579596 seconds)
    (166/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111054357 seconds)
    (167/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132918081 seconds)
    (168/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102383862 seconds)
    (169/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112241039 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104414251 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126633882 seconds)
    (172/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079267915 seconds)
    (173/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077393064 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078260095 seconds)
    (175/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.108067451 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105168851 seconds)
    (177/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.151932989 seconds)
    (178/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.161600381 seconds)
    (179/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079929907 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124965306 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101847818 seconds)
    (182/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.108868664 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086374994 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085995085 seconds)
    (185/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083943741 seconds)
    (186/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081022616 seconds)
    (187/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.101844274 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084192979 seconds)
    (189/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113568275 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104016777 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.133928499 seconds)
    (192/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102119807 seconds)
  done (took 27.034784987 seconds)
done (took 27.94243309 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.222826893 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129161694 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111515254 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110511693 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.229243298 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.1181192 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151497347 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113696705 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120862199 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136316695 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10157509 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124696964 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135117295 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20164123 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138495927 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104783794 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102816226 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145904214 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127946406 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128257145 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.229073412 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103962373 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146921227 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10346037 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230148339 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105869293 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110228847 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137084126 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126460118 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111953245 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137783156 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104807007 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127071537 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151324959 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103173607 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112069808 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125966459 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087305857 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112519703 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111516174 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.151716966 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113186594 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11142529 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127961772 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113164071 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110586552 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126785087 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115218539 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101592348 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.13593749 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106440598 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127633741 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134682679 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102247708 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101012986 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127252532 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123306057 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102921694 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.147261949 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103197641 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104581283 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102432541 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137511995 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103284922 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110590842 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127410414 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113419357 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114131002 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.133634163 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105956775 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103109339 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.135857988 seconds)
done (took 10.052332315 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107726625 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14676669 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.228985923 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.232115977 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131730739 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143956002 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118246534 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126057275 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141830718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122550139 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.163627138 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135477516 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.235738929 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119317077 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118058831 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140411312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115486239 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111422871 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.232935112 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.151592087 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129150073 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119191674 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154535594 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120452813 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107214501 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154909261 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112399931 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.138471244 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107293772 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125914299 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151339593 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107799884 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110547135 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.148964278 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125574469 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117286975 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144206732 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116360924 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108423628 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131201819 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114800952 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122311931 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131649453 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120745366 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114371639 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145823835 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115655192 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11940531 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132115473 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115472358 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108029213 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157153538 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119220955 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124575784 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142954578 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120771708 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119432757 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.14359645 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111414618 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118329285 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132229888 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108408832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108719707 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152525194 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110786306 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144039369 seconds)
  done (took 9.750160344 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127628313 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137838255 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141893977 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119103535 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112310329 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125489411 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101938679 seconds)
  done (took 1.816504886 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103968376 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.23921225 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212298 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.238212237 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.236361956 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.25048612 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127125678 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102191825 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164268679 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113455186 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.240638892 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26840105 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114754336 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143725968 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.217393224 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12825436 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.216902034 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129366543 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118896378 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.2424952 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120405392 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160687404 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116413583 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104545662 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.235089659 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10440904 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.288543328 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147605379 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113290671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116821701 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144168412 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18338706 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.236586614 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118090726 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13697522 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.238918272 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.211159175 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144622313 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226098079 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133667688 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.235508071 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117921098 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118270248 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143614021 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119702837 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.227473307 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123599459 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119497087 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14292485 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219892227 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14067042 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.237222011 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116380005 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118655747 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.140365514 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120395789 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124490719 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.144619977 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22045252 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147331961 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.212747128 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.241013854 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.240089668 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.241807034 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127294622 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242319545 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.227780063 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117363647 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112370647 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145233713 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.216346006 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142654026 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11624159 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.233445955 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121064878 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.244454966 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.243404294 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115467624 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142737759 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108057246 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115758296 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104990882 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.233821588 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143531952 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117955448 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121621803 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141863769 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118840576 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108650788 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.155576996 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119002931 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115064779 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.148278984 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11888331 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120318409 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.244381083 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141171134 seconds)
  done (took 16.891153349 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106677822 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105610244 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109542517 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130541574 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10555223 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105566663 seconds)
  done (took 1.640758199 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141852914 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11946727 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152093261 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120563776 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191415805 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.222175753 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.254817519 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112043841 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.164275331 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130273399 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.248246568 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.250888951 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.250158171 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121997781 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.252338877 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121040344 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.257965878 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116176698 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153261306 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11676247 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1175601 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14749527 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115948805 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.23858715 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119738604 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121238714 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138115986 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127702376 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152281515 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114185601 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122240225 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143895155 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112110828 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131575405 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.252374546 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110403735 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141727562 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12160166 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120761585 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145734139 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.253879692 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116861932 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125316912 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147124205 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113063494 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109667935 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147590869 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111692314 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.25489813 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120699976 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.147442089 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120305443 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119088658 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148192462 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11158924 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112957703 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14726879 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.255890266 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123855659 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111526975 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.144988793 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120612041 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112442905 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149089611 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119984334 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120930582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.137415849 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120967191 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116659862 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.144265758 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122313068 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119463739 seconds)
  done (took 11.704339495 seconds)
done (took 42.745792914 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.630326052 seconds)
  done (took 2.611313301 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.936733395 seconds)
  done (took 1.918847372 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.889837619 seconds)
  done (took 18.902421405 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.43548704 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.462152224 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.133375182 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148460258 seconds)
  done (took 3.161958661 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.830736134 seconds)
  done (took 1.831712187 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.327042567 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.240626942 seconds)
  done (took 1.554993209 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.707223018 seconds)
  done (took 1.706657365 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.513412726 seconds)
  done (took 2.501549496 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.286581859 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241884955 seconds)
  done (took 1.528967958 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.634828022 seconds)
  done (took 1.632394257 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.252633911 seconds)
  done (took 20.255263114 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257605486 seconds)
  done (took 1.261400075 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282088492 seconds)
  done (took 1.288411074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.542559475 seconds)
  done (took 4.548995593 seconds)
done (took 65.699484248 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115417804 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117998514 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117889687 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141251037 seconds)
  done (took 1.48575692 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124572019 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119417139 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147797722 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119479352 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125476242 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.143407253 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118638451 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122151117 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11957082 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14490131 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119843049 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117268307 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145727963 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117528449 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116035451 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14555146 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12224523 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117955856 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144326408 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120752964 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.1197833 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144934366 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122531883 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120908343 seconds)
  done (took 4.065473373 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115065762 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110416284 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111223102 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132742413 seconds)
  done (took 1.477903 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126047251 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130617222 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153507871 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127221556 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130161085 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155289001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119375201 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114214197 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142723739 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128170728 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133667487 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156545862 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130948626 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.146371564 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130136574 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113815213 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119526699 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154434495 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126443004 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153232981 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119898428 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123713232 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149828241 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129125074 seconds)
  done (took 4.220037462 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193521815 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129583961 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17659624 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163099575 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177843099 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11655108 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145791527 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149596924 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125274094 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.14660647 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121714063 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163232351 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150057267 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120862419 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118469158 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14913595 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131335832 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.148888307 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.164600208 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124400232 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150540173 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129989739 seconds)
  done (took 4.208903736 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122470668 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109138804 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131172494 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110222139 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120981232 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137270744 seconds)
  done (took 1.746094563 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108653293 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103723282 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104200719 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.1294916 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108439741 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102716416 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128611441 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103775496 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107369131 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103412383 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129514329 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103137831 seconds)
  done (took 2.340809624 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.328230777 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10926025 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13520779 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110780757 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113686255 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107735371 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148579719 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109284058 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.262860928 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104397866 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.132762969 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193930884 seconds)
  done (took 2.872094874 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204572089 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147001783 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255113135 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.531141574 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188732599 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160625504 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.311526891 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18885354 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178869 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16505954 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187149092 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189771948 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155687785 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214254499 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139490962 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185266319 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165735685 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234960941 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167413925 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212325068 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182797568 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199159549 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188986661 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175997219 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139196155 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187109577 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118508081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127700012 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193213941 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191089623 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175938104 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17603058 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140588755 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219159927 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25906434 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177887147 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295988646 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134798867 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193456013 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189825868 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260021522 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167478179 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19178553 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179127781 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129211994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21238129 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153106619 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210593862 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134411125 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173876394 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210577698 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18195014 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197541401 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136252049 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327164615 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13516961 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170370037 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236588696 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18782695 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226498711 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206438595 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123770177 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202967218 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215937089 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21378334 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168555361 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16612871 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152765536 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163550616 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231462 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209648393 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158837941 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.236750926 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159172235 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171474382 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195852895 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156266867 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233228813 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20066415 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120117212 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14981926 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160592571 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125416735 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214537883 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122262482 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243474593 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130798261 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.336887381 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207800921 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15602551 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188734315 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158588575 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188246231 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147299406 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128423786 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143768489 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188416192 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158466569 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15371713 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156062762 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140332334 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153379029 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15261838 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148835229 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169500996 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159249187 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163145504 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195538173 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132061984 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203911617 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148230767 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.188966878 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168835601 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219470953 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131332445 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158789635 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246659821 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170726451 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162995532 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175644918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221928357 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14820308 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162686408 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164589493 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2204645 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169521494 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198608791 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165964273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134607102 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16630917 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172253115 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186775524 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159541261 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153152929 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164453935 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219287008 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125397596 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166098045 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181577988 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160380234 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124901205 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136408575 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163156529 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141472724 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174408 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139477267 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181081689 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166516004 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19264774 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158447859 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160839525 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172407429 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1587564 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167755505 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175402489 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119692324 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201005591 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19706364 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156426673 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179094301 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18921935 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208946213 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171412666 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156100233 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182371032 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154895992 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120835795 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188373519 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16950723 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190968986 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187802424 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208199877 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192668921 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162055321 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176020767 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197323926 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181584429 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183676573 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143784753 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197085773 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16962898 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148365765 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123278867 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127744779 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165267049 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130096085 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164560742 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181666519 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193116797 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20451208 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166460171 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164633015 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190979765 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153206257 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161656302 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.201302872 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139439803 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21664947 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217615478 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179276421 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168028382 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163841592 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.145818547 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126380956 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133735354 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188292919 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136727061 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161802035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142275155 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217510732 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1731278 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176743637 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218855533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166069913 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226721453 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119652421 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189678863 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168947759 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196237602 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185659972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158012442 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161527381 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219279314 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141529144 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218866816 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195026385 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179176198 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224446803 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162265276 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158225325 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147030257 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187501919 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136927749 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189244053 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146252297 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157153383 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152466519 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137681711 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170510858 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216882256 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143968183 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206906251 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157542734 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200519487 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124474352 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170295483 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171708776 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17421155 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104499473 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196827881 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194482308 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17715895 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155538509 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200192499 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129765859 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.342990481 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215018073 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17770573 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164232022 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138898944 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199042298 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1609018 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191162868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184416789 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169234066 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23446286 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169570984 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.168948454 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131564931 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147535798 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178576033 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137787821 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.17797774 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.16076738 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.17149273 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217529514 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136825703 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195644674 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176182385 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17157256 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149989542 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139619718 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254199853 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196960978 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173914966 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191958792 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191578789 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182943078 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123119495 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154932954 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133868851 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213409574 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12927201 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205263366 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204831051 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183446527 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200777516 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16078664 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168626156 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127455632 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195246058 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149933936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214429846 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134107012 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165090414 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215915528 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127807005 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130788253 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188325685 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314209508 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148611822 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201430512 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105711245 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305159724 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130766612 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131554618 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190912213 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169814063 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159512871 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182797423 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200470232 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14133493 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190488752 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134829643 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208222121 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211344863 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167279265 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203885388 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145908446 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189779107 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160300974 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203871701 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1450175 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.176440146 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160211663 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222520284 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204358431 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132049292 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195017619 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171902654 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197753711 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175088794 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168023201 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182778662 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15436746 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164642665 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165887402 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124796481 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160166013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.206135674 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15667234 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176205536 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199889685 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130552492 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15513344 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147841806 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19290357 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140446228 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128415349 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213180749 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.157383611 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181534614 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238482595 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130205516 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194349633 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146198795 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157127324 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139645861 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143555797 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159616886 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173108897 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209022337 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131171441 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205959934 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165957338 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193920339 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159302493 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171879067 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.265085024 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157845343 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190811958 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180784323 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224819765 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150859532 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20252552 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168582555 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177692436 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16458433 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176915026 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219567717 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193096636 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16734037 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158377293 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143125015 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137314359 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162296879 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151637639 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197282475 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141686226 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165297059 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166274472 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173554041 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147579209 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140492253 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227290492 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179415503 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187997153 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214741574 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13742677 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203986221 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206387647 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12931603 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193680182 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172203699 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172655063 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152002822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.162312841 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13703995 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242252286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125543425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159597562 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200312881 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195689714 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172358173 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.162007811 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179722991 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168055687 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176509511 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153923329 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15467332 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194516237 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133938694 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126671714 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198799035 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161444114 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.191517802 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142666966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.201414573 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194508785 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151376843 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134666231 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309925822 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162621676 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223232898 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.1349699 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165306549 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146766699 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187115721 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164917313 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1986578 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129317082 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127812845 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172988273 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156687503 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165900481 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169613592 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213594375 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16039152 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213361665 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133864629 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.77362202 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141827608 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199662624 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115864818 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156946107 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141422012 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134905629 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170341324 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209588063 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21452171 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191996112 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14790537 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164464699 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126881996 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131119207 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19217149 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152031433 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197299657 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145277884 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131163546 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140430561 seconds)
  done (took 86.065632288 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160508924 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151509085 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168858148 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221816506 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195431861 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291093876 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228776033 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246057739 seconds)
  done (took 2.765553549 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119114666 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157840163 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142628389 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143830653 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110097862 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.477196981 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159095742 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121341389 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160497995 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152515696 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137301808 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.559028704 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116659312 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144811936 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12246002 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135330798 seconds)
  done (took 4.054175316 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.683552866 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53587409 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.958143317 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.276207013 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.261724809 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20549468 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.772857437 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202148594 seconds)
  done (took 11.993754219 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150056867 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144626097 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.433817027 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.274896 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.20443453 seconds)
  done (took 2.31406111 seconds)
done (took 130.604654975 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123676496 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124541139 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123708755 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153204796 seconds)
  done (took 1.618561086 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.190425153 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090858487 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09318358 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118143314 seconds)
  done (took 1.597381785 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.455587443 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09036659 seconds)
  done (took 1.677244388 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153926619 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140599278 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169127747 seconds)
  done (took 1.581904239 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144709938 seconds)
  done (took 1.254661437 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126333854 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126444119 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.262260298 seconds)
  done (took 1.627626632 seconds)
done (took 10.465289531 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120629603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.924422758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433474114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134122622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712429995 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427344858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.465001199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175349318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174720616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137892079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132813619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690537937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.482124397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.87561439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.43453914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903561545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693745815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111792657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145438868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113088019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.443992865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13780919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113835507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11139545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717329277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42060056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109508721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.913714083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110779376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113641887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427742704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112450959 seconds)
  done (took 21.122354836 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112907681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168697151 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146494848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112714752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113577881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139860961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123733438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123609445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203502218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111141567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160449525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110727475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116353674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139156583 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136093062 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109539879 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141181726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113994705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118264507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138869108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133411971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11097405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140069127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113722499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113695254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159243865 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113120819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12280326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138568137 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116299272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116402266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138691567 seconds)
  done (took 5.276399739 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160274374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176916301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1481037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14937746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188393785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113325951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225396662 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149332035 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205420305 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112838577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133015507 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1383498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152317123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111303436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165558512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111633551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113461442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142063197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120469982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113332234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161183357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11094881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113394638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140910593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111614597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159792651 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113505879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124659083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138364015 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116536549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116570232 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139457638 seconds)
  done (took 5.594268514 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124868217 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127343427 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133814149 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164372649 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121899753 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124586355 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154901731 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121626544 seconds)
  done (took 2.188359612 seconds)
done (took 35.295399072 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13721093 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130428639 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132696298 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155076157 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.250829461 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119962417 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129419678 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117409326 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15677959 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133284711 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111283635 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149498585 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131960403 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121900769 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.251538435 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12684044 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.25670981 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.254844855 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.119736979 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125682218 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152287018 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.228354579 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.155497311 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120143529 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.244586033 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115018917 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.246653707 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123596772 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12117628 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142866902 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.223766918 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.155316742 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120181656 seconds)
  done (took 6.373641281 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.235287211 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.151528568 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.12140727 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119944653 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120516382 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149208707 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.241000972 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150150988 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119495995 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117687636 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149784918 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.222775208 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157449489 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11629158 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122159267 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109518824 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.273166113 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.153294832 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.11321789 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093141215 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114470553 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.14845487 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256326056 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14621204 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121421905 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119162651 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152741537 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.125957973 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122517001 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121188855 seconds)
  done (took 5.601371597 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125303362 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133854924 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165955025 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.189022334 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14946401 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161778048 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139633395 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135463405 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1715707 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115594433 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127779808 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178926283 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130256493 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123522588 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142845681 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132884425 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.1364035 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144868809 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122652895 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131393595 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163992065 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131017326 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136239234 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151173839 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112825608 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120657022 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154044164 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124816785 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12237625 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157571833 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116950662 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117157224 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.143974629 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149433568 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115727167 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157670218 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139597325 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125955778 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157166538 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147018316 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117099603 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14615591 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140588227 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168115046 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145798304 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127281654 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125953055 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158037365 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113491267 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132006527 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184973372 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113622942 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134814024 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.141680743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11337032 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122283482 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144056872 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118527567 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129638113 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145075415 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140849145 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121274529 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153717556 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117669708 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124734834 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112664164 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143958425 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119894393 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139691336 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151757512 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.151490539 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113806186 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.154819026 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12743589 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124366539 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156110786 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114963791 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124987102 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154069845 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121180192 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126882203 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14589733 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117453738 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130448284 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163435555 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130570003 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125720956 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156032859 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118710464 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115201131 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161034752 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116839645 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119762127 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126743766 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.14512418 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118970145 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125646085 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155028679 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113049549 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139131233 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146943923 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114530946 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140877286 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.14678612 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120047434 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123768779 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.184380544 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114715992 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125003447 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157093075 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114648942 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122100667 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.144929063 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114147469 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132118551 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157932483 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122723549 seconds)
  done (took 17.072680611 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.352473932 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.339522247 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18713057 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.424065742 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128561311 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.27046429 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.33816061 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.340856885 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114335968 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180108112 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176585225 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.306976743 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146808346 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143848441 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.341406608 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.397994303 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176331344 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151481132 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180667188 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128634929 seconds)
  done (took 5.975889588 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136515519 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149106421 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166923344 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142501555 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124651395 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161017043 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118802675 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136339855 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155154772 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12464217 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116825998 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159876744 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127619832 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131610912 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15940338 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147217458 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1213892 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149794531 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138344094 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118874046 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130605851 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141707446 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122806599 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166477153 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134407469 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125309077 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143912116 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120290216 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121645789 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154431229 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120686101 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132016846 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152391928 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105221903 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126121445 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.157146339 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121804687 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118380105 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119239008 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147364298 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129809916 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12760113 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151789087 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099246054 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132867698 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109299368 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158599768 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127473357 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1058569 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163922727 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129064536 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129228097 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150355638 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137931869 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120785616 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160230761 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127294707 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129211344 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148345342 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114973948 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113077052 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118133018 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.15346949 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130491243 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127184355 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164788585 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131286056 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114530648 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149096378 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119094539 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118246184 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158768618 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134591438 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122717245 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.150803266 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12776204 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122787886 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093389229 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153417011 seconds)
  done (took 11.766450556 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140549125 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125759209 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160617401 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.150880278 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127813216 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.150394497 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127532906 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134633831 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130056962 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164152092 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129622201 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128168907 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167362396 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126221202 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124649579 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160915569 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129371499 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.181290279 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134399522 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142288852 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161109098 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120310238 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127003617 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156241218 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14498485 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126411184 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172429563 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130097887 seconds)
  done (took 5.13813896 seconds)
done (took 53.051208175 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.297131221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.474604911 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.253984475 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.253134341 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.26226591 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.275434448 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.253836413 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.263233516 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.744449319 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.222214884 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.253856071 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.253353262 seconds)
done (took 28.961282777 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.322942918 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.768705103 seconds)
    (2/2) benchmarking "String"...
    done (took 1.535269861 seconds)
  done (took 4.450411581 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.243510067 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.243817306 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.489231244 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.244722157 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.261714653 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.246497371 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.243724326 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248641201 seconds)
  done (took 16.125038451 seconds)
done (took 26.291385472 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.297732362 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.420792672 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.472151476 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.244571417 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.245158731 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.264538071 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.251229984 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.266161433 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.259873138 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.245402514 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.673028187 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.520107704 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.247528741 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.612898067 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.246701466 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.249159649 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.262165354 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.474791669 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.245726579 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.276530199 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.222894798 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.230438731 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.258389734 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.244580021 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.252639003 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.250228344 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.304370866 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.254144137 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.434088604 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.281489401 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.275140129 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.251451435 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.302326961 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.248767567 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.246802198 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.257504416 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.44014851 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.253848442 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.233591544 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.26857662 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.443440038 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.246529033 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.247915611 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.251353932 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.248489282 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.315964683 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.240035001 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.362684056 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.270042398 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.257256463 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.319587075 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.615412175 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.256889212 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.253093624 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.248999952 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.475625864 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.264204744 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.3033873 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.273046129 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.252457647 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.247680936 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.257189263 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.261243679 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.250656668 seconds)
  done (took 146.598765734 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.248634659 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.253285967 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.25291931 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.315970435 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.254469765 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.254732105 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.249235372 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.249185175 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.254850086 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.279346813 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.25341748 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.249753532 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.253177649 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.187639502 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.260818754 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.270323853 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.254307889 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.249073423 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.262371995 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.251029324 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.257609042 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.254050422 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.256443217 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.254845712 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.297512617 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.330628719 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.259807601 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.28376777 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.264261161 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.24991164 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.292575796 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.257562862 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.883925359 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.105849994 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.253587102 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.274197997 seconds)
  done (took 82.03334345 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.249015791 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.250425552 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.250411428 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250381512 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.283580015 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.250791709 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.840640652 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845628084 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.230269001 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.36411105 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.662855619 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.52148908 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.255134481 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.344247416 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.263101043 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.252404315 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.252385785 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.268602816 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.277854052 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.257216746 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.252633605 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.844651999 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.26863347 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.480599929 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.434075021 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.268767747 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285364777 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.642342676 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.253265066 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.251944281 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287457402 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.296554448 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.588411028 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.302314459 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.25290099 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.614557428 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369304089 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255370605 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28540482 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.253997029 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.536292042 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255123353 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.254396759 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.254812714 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912040176 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.2574933 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.84613326 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257884308 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.217009684 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.2556134 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.254709215 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.136512135 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.955787087 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.258740846 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.253045084 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.258482962 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.255711784 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.25407414 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.288085766 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.129693715 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.351492756 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.255698609 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.259408412 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287879275 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.2540953 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.438517247 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.259362447 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.408661561 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.314998425 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.357894301 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848343566 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.259504302 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35206402 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.374379152 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.255998974 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.256010651 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.256681763 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.256038066 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.368012172 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.255370982 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.946838094 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.256620633 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434415167 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.272489015 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.672502621 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.357413561 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.256023331 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.609278507 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.260529915 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.255825056 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.972939641 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352588076 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.257032911 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.256655539 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.255456177 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.943168738 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.846731496 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.509145963 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.260194669 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.766746091 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.261769178 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.123273538 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.826356397 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.916241647 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.262691981 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371090228 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.436066958 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.27537985 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.257907072 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.67481345 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.261503675 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.31544501 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.258609161 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.659119975 seconds)
  done (took 379.223362747 seconds)
done (took 609.002383843 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.105379084 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.062538097 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.228262588 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.075431768 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.060365682 seconds)
  done (took 11.689256909 seconds)
done (took 12.846942491 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.454924019 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.453905427 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322233421 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.455722997 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.295207795 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.470046912 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442836725 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.27726548 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.372755516 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.342526929 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368932741 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310903299 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294404942 seconds)
  done (took 19.021101677 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.561974009 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.270786018 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.327021239 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550243108 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303804601 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567748995 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.586587941 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.269389756 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423417626 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305464315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2815896 seconds)
  done (took 18.607394563 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553724807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.269235574 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.327011183 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536911543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3064114 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54877675 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.589369438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.271314227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436004033 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283323286 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.281800783 seconds)
  done (took 18.56531931 seconds)
done (took 57.353775454 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.301890468 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.363854313 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.294377087 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.279284939 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.277229696 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.278841073 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.279153075 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.277680782 seconds)
  done (took 11.513966631 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.277894392 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.280417386 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.276104079 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.278220703 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.27874246 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.27610325 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.278406562 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.276947121 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.277994 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.276887864 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.277096247 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.278203089 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.277616534 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.278258416 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.279337714 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.279009203 seconds)
  done (took 21.609023824 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.280415019 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277953997 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.27798103 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.278513636 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.27897035 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.278041403 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.279047413 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.279188295 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.277842617 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.27834828 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.27945125 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.278129932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.281043015 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.278733296 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.27920975 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.280431862 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.278828638 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.279455158 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.28207857 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.277970895 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.280503423 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.278563457 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.278930337 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.277891849 seconds)
  done (took 31.861417666 seconds)
done (took 66.145521676 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.263891793 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.265051263 seconds)
  done (took 5.691341183 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.338755439 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.340429272 seconds)
  done (took 3.843536546 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.279846635 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.280446843 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280614492 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.279966578 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.28101976 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2793284 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.280751424 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.282435726 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.281016486 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.281598887 seconds)
  done (took 13.971315442 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.28140753 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.279680381 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.281541665 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.281223729 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.281330252 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.280902246 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.28172093 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.280185727 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.280640343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.28025998 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.282101407 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.280618708 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.280926772 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.282155666 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.280067236 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.280460004 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.281409026 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.280874189 seconds)
  done (took 24.222401381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.296248663 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.299416901 seconds)
  done (took 3.759724234 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.409436496 seconds)
    (2/7) benchmarking "second"...
    done (took 1.323026259 seconds)
    (3/7) benchmarking "month"...
    done (took 1.409216545 seconds)
    (4/7) benchmarking "year"...
    done (took 1.379031594 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.323827215 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.302832828 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.322557055 seconds)
  done (took 10.635385011 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.299725868 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.525347445 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.693852121 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.524176357 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.288569756 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.360936877 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.27716272 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.383427877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.368032254 seconds)
  done (took 14.88699355 seconds)
done (took 78.173429383 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.267828438 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.301375717 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.280535294 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.28095114 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.577653979 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.296363258 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.272404906 seconds)
done (took 16.443024517 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.249201046 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.259870311 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.249739219 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.283822452 seconds)
  done (took 10.208485367 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.271430109 seconds)
    (2/2) benchmarking "read"...
    done (took 1.592282603 seconds)
  done (took 5.031004715 seconds)
done (took 16.406418322 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28524066 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.284015114 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.285366805 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.283214855 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.283925738 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.285253708 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.284361431 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.286187404 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.283965446 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.284537479 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.282462607 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.284677941 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284811914 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284791583 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285032186 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285078473 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.283683175 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284897604 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.287604103 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286546245 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284655227 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.285090049 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.285284878 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.285117023 seconds)
  done (took 32.003454917 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.285436529 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.285129353 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.285379057 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.286112378 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.285973662 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.28659056 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.285558207 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.287510441 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.284671307 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.28799758 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285190598 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.284384987 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.286781282 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.28700858 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28559073 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.287966853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.28605408 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285305565 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287334473 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.286661253 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.285566164 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285895561 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.286355905 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285765221 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.285594694 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286674739 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.286513809 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.28747808 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287593125 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.286445394 seconds)
  done (took 39.755641749 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.290866158 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.292951484 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.287442024 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.287802826 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.28642987 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.288751544 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.286882368 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.287675537 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.287677562 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.287666817 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.288188313 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.286639619 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.28673337 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.286817161 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.288612618 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.288576162 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.287440101 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.288353179 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.2876641 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.288894716 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.28783959 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.288380444 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.287580085 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.288359389 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.288518479 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.287910129 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.288946539 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.288080339 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.288295463 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.288254486 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.287301909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.29010226 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.288975953 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.290203498 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.29002877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.288271983 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.292423362 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.295284165 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.289185169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.290714271 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.290054423 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.291527252 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.291055767 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.289778393 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.290852709 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.288313124 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.290561826 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.290172469 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.290196991 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.289226435 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.290375868 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.28967891 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.289405472 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.290496388 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.291273004 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.290049596 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.290796466 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.290622052 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.28932832 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.290921279 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.290932814 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.291340706 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.289805928 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.291294851 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.29106683 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.291850656 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.29074061 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.28949598 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.292423731 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.290430501 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.291565953 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.291193499 seconds)
  done (took 94.015027513 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.292048958 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291949488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292029329 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291234431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290311153 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291496815 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291195567 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293184329 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291959518 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291808082 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290859729 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290480306 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292661614 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292501916 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293747377 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292203989 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294284041 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291643879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.292408724 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292416325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292256903 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29243265 seconds)
  done (took 29.599382097 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294384339 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294443028 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.292484125 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29526864 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295575263 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293393884 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292706208 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293966061 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294332785 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293606066 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292932193 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293151145 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294752751 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291800993 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293059012 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295943725 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293725136 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294847509 seconds)
  done (took 24.465354685 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.296168988 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.292891193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.293638182 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.294280867 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.293761625 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.294837913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293295198 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.293445463 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.294083325 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.294276432 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.292945255 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294540915 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.294249198 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29499688 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295117045 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.294022262 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.293615292 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295389194 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29538584 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295477899 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.295450663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293997131 seconds)
  done (took 29.65208683 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295712565 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295524821 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293816533 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295653122 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29497243 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294325554 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.295839282 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.296036272 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.297857042 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.29578305 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295401456 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296487109 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.296578007 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296402917 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.295319623 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295043191 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29596268 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295690907 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297763812 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295514859 seconds)
  done (took 27.093837562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296746274 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296838741 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297718393 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296786405 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297003694 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296295637 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297875557 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296689953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297298325 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297034971 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296641509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297258778 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297532867 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297557159 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297939054 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297367369 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298348163 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298475157 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2981715 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297173029 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296792144 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299569892 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297812785 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29770595 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297267677 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298474494 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298791711 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299500402 seconds)
  done (took 37.511796146 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298496194 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298115074 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.300584012 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.299832822 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.298906586 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.298027955 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.300216497 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.298401848 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298031515 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297970192 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.300497862 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.300123599 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29987566 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.300964583 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299472596 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.299773194 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299618174 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.300670204 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301722272 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300177075 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.299492384 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300697366 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.301186112 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300308201 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299043521 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.29953445 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299715212 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306224199 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300370399 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.300172645 seconds)
  done (took 40.178913768 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.318884728 seconds)
    (2/2) benchmarking "in"...
    done (took 1.319962327 seconds)
  done (took 3.818979836 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.299465545 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301796566 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.300404053 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.299604113 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.300411024 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.30078445 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.301181935 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301247461 seconds)
  done (took 11.586726039 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.293046237 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.301962256 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.301635482 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.301171261 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.301081322 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.293274003 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301315282 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.305575567 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.292031052 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.296319688 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.299673778 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.300705412 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.295611159 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295760686 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.295929894 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298504328 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.303877025 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.302414041 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.30276518 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.302504615 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303489498 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296992148 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299988218 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.304940629 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.297123082 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.305660338 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.303453826 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.308326453 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296915316 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.30164738 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.299035532 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.307168958 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.303956124 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.304191926 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.303270909 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.303415525 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.306038366 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302561938 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.305130455 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308103395 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304227424 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.304547033 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.298598115 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.303196017 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30229587 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.30766896 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.305383779 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.303524906 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.296425365 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.302857104 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.310467296 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296029312 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.306642122 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.300177054 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.303039146 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308392567 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.31253929 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.300291037 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.304478244 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.307355017 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.315288637 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.313031735 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304731904 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.311246556 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.30683987 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.317066347 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308972101 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.310865942 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.306343768 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.305955978 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.304713255 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316489567 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.31881862 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.311716941 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306480511 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.306463077 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301883669 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309197156 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.308862321 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.309173257 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.312537175 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305112663 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306511692 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.315088884 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.300972581 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.311741012 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.307610815 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.307879085 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.299965535 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.310732933 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.314919231 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.308156033 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.299604951 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.301675941 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.304172127 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.309661809 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.298081736 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302918132 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.310033701 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.307951921 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306745361 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30156112 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.308769161 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314893864 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308684988 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.308736867 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.315022307 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.302775634 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.31118633 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.315772835 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307148849 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.30161238 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.3064724 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.311309552 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303063885 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.309192697 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.312869517 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.304422604 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.315653466 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.310280377 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310935527 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.323656307 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.315078646 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.310189936 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.30488395 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.318317693 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309369022 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.306885196 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.316227042 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.309644769 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.30929768 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.306263822 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.316166502 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.304158781 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313976146 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304054691 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.313789616 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.310006378 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.310238582 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.307313111 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.309064709 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.306821033 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.308890504 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.314068711 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.316335595 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.307821915 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.317574582 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.311131573 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.307610563 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.310407926 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.31561034 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310452746 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.304692625 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.31292275 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.302712872 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312493148 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.304571072 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.316274366 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.312001652 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.311794373 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.310892607 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.303204652 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.308882528 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.314530012 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.311278453 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.313142969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.31329357 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.312179767 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.311950483 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.304740305 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.313902729 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.303756689 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.309673431 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.319473588 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.311796806 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.313070917 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.309518061 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31795631 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312602403 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313595755 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.307524449 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.314384774 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.318596459 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.314374899 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.321108779 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.314051727 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.314364792 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.307414442 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.31043786 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314805711 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.30953298 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.320872305 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321782531 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326593994 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.310167456 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.317424124 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.306195119 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.316190132 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.315778895 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.323053077 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.315393853 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315172233 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309517823 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317202112 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.311111557 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.319063676 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.307092029 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.318746009 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.314831649 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.315042729 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.316504962 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.309482236 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314317795 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.318629295 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.315568845 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.314277531 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.309737483 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.3179626 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.30752152 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.311105293 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.319868928 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.316208851 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.316549517 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.323784417 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.313979379 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320059103 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.318185296 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.31144705 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.32019288 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313809402 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.316661263 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.319167542 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.319554714 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.314344553 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322196708 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.3175353 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.309996204 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.319037411 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.323194449 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.31673417 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.310241132 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.323155293 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.318781675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.317120565 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.31733042 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.311585156 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321890685 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.320321921 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.326531309 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.311321262 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.320330156 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.3121603 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.320379695 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.313331012 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.318970471 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.319442823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319896589 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325660286 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.318698983 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311845058 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.322670491 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.319353263 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.316855396 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.313804512 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.32648661 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.320390799 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.321880591 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.317097174 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.31653145 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.322552411 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.312488578 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.320963505 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.313301137 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330532772 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.3389774 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322727295 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.323148341 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.322737423 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.321612967 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.32173136 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.315338119 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315364868 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317767377 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.316413864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.314991534 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.323517977 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313989306 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.323929759 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317503587 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.322007278 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.322862556 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.321104528 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.313555092 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.32269981 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.32007531 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.320815696 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.312275729 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.322004946 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.3156592 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322202537 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.321623554 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.316517691 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.327857208 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325811317 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.318445026 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.31879956 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.316846474 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.314943868 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.319457727 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.327196523 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.316003531 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.328417326 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.316680723 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.321832276 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.318655155 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326915865 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.331255247 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.31631822 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.328333639 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.322026149 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.313877451 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.316421917 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.322157673 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326758358 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.334497314 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.314140001 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.325445485 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322053785 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.3222207 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.321480676 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.324063881 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.32385484 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.321588452 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326458606 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.328106623 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.31965021 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325176311 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.332339886 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.321821801 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.324020517 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.315440985 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325509853 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.334609427 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.3189443 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.322530345 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.319856623 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.326194753 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.323468316 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.324356396 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.324672172 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.325863037 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328061869 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.330532701 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327714363 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.324348433 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.328919722 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334591497 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327917845 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.336894635 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.319918227 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.330097114 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.324871224 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.320756905 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.320627464 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.321607217 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.327820578 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.319360543 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.330804511 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.324586685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.322724701 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.326258788 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.333118923 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.318728729 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.329229236 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342463967 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.319116677 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329473355 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.324397502 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.319323909 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.328990182 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.325717087 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.316790087 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.321812901 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.32715766 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333253189 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.320114774 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.330432299 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32186503 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329883451 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.325298291 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.326083279 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.326855984 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.326176745 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.31908866 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.328402367 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327667803 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.337638615 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.322369856 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.327022318 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.322794133 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.333372328 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.338992078 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.322872504 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.33360081 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.327403384 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.321457616 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.325947774 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.33205377 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.321401846 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.331376146 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.320883301 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325553275 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.324502074 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.330669872 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.331315264 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.33134872 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.322107094 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.322976542 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331329225 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.329097146 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.328797436 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.325599045 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.3354651 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.323269298 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.322396258 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.330431074 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.322470233 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335533459 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323373058 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.329838918 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.326277635 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.332839554 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.329701595 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.328277639 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.322473622 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.323509015 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.335577277 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33595334 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.329788046 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.328664631 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.332641792 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.324902811 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.328655808 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.330479995 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.325787651 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.325003553 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.333962063 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.325418552 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.326082886 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.325055305 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331696114 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.33413143 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.333636962 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.324850459 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338018115 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.339962904 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339051442 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.322475997 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.328546157 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.326493352 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.332847667 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.332119518 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.325752798 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338096963 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.337204935 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335533217 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330923466 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.332912528 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.32467919 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336571022 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331922583 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.327895506 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.338466519 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.328231554 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.339992809 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.332268045 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.331978318 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.326499112 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.327754952 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.32904538 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.330813559 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.333657998 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331675636 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.335643815 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.331500674 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339412728 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333600438 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.332535775 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.331890553 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.326062101 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.334559425 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.327511621 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.334708955 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.336773163 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.329396841 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.336562422 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.333447722 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327660487 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.333058987 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.339112519 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.3339909 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.327054802 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.333016935 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.337974792 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343249275 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.333504556 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329648856 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.331566488 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.337139281 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333719365 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.333626703 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.329904953 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34651573 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.347462918 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328829512 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.333117471 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.33839417 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.346791164 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.334211075 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.33566517 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.331515033 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.335359611 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.341670118 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.336662016 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.340164408 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340131499 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.331224362 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.337544111 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.331292933 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.333994302 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.33816016 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.346838458 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.336588154 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.330808247 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.347605055 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346749498 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336669634 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355396294 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.34374117 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.337437716 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.342202522 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.329320147 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.340484919 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.333564383 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.343409092 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.336503713 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.336271562 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.337319564 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.329093593 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339076719 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.345412838 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.347320339 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.338558155 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.329529873 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.33233334 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.339373141 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.336965838 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.338266392 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.335126632 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.338316755 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.336183331 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.331802578 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348915505 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.354434235 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.342976559 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.338840918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.339501007 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.34009577 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.342159401 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337656089 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.343105843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.338962125 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.338686386 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.33664782 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.348110111 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.339537523 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.333465273 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.335207675 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.334306163 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.342106496 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.348096971 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360679799 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.342954582 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.343529786 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341909419 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.340845933 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335201179 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.343315337 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339899722 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.336407907 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.337955271 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343251028 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.339904216 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.339643098 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.33472547 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.347003646 seconds)
  done (took 788.589730443 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341096645 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34024388 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340247399 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339095955 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339780682 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340187624 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340018936 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340324856 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.341570673 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.340217041 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.340185468 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340962189 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.341088038 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341904742 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34128001 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.341509978 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340790723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.342237692 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340460152 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340828676 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.341299094 seconds)
  done (took 29.370798083 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.341662903 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.342232356 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341188781 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.34167395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341790072 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.340240748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343073821 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342177303 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341593035 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341948735 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.341893489 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341633226 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.343585284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.341661227 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342585311 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342817429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.343895984 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342588869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.343090593 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.343293088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343128542 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.344172367 seconds)
  done (took 30.748384011 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.344706302 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.34266679 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.336588382 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.346252833 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.345095281 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.342530183 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.343504512 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.343766234 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.341903001 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.338314205 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.338266846 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.338861046 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.34117597 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.350046463 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.339329001 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.349180024 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.344543105 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.342845612 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.344912541 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.342985789 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.348217606 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.354261617 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.343703462 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.336432746 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.34619039 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.344508005 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.343500964 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.344772464 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.336424437 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.347269104 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.344689856 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.338391148 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.347491199 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.348630583 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.338459122 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.347663599 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.344837484 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.34534243 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.345145368 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.345293133 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.359699348 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.346094063 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.34793042 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.359256677 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.345243446 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339667583 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.350588192 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.345581321 seconds)
  done (took 65.761153102 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.347541594 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.346962479 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.344101228 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.344510137 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.344813549 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.345343961 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.345576651 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.343821499 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.344218924 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.344800428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.345427365 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.345680938 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.344988807 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.346279375 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.345099927 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.344857216 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.345849275 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.343706918 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.344589086 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.343816281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.345229256 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.345231748 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.344273674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.344909694 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.345209657 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.345217903 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.344684156 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.346237362 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.345934336 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.344431172 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.343939554 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.346771248 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.343012515 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.343386088 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.344087365 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.343405008 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.345367625 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.343873326 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.344124342 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.343833655 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.344217332 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.343748312 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.345345166 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.345467846 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.344549234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.346270571 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.345943888 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.34471104 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.346554551 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.344045191 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.343302832 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.344747864 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.345028812 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.345076545 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.343486092 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.345547915 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.344457567 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.344647348 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.346367381 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.344236068 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.344619253 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.3451362 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.346365319 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.344405236 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.345024993 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.343906363 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.343766811 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.345195001 seconds)
  done (took 92.672105124 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.344151184 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.346913107 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.344345493 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344212045 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344967339 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.343906456 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.346558642 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.347373257 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.344982317 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.344699363 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.345118392 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.347374238 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.345431495 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.344722999 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34479986 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.344989127 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.345239761 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.345295743 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.346188369 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346226725 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.346181482 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.345446596 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.345172795 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.344696525 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.346858196 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.345123541 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.345944406 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.346501079 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346687769 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.347361895 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.346703294 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.348603445 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.345984728 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.347002748 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.346993035 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.347555667 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.346700563 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347410461 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.347629138 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.348079555 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.348361637 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.349208271 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.347899216 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.348941996 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349698492 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.34903658 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.347265507 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.348703034 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.348984768 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.348550478 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.348975839 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348398076 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348788833 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347976533 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.34953969 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.347353359 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349183447 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348453896 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348963885 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.3506469 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349836492 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.349329683 seconds)
  done (took 84.735213628 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350253038 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.348095847 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.348267718 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.349090202 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.348336897 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.349583959 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349170905 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.349589186 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.349436517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.349582598 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350058216 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349324156 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350366601 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350304492 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349964407 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351892112 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349893983 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.34880799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349722808 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350725898 seconds)
  done (took 28.212217969 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.34933966 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.351068105 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.35121626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350905008 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.350785143 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.349511107 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.350793832 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350689818 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349576988 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352050285 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.351967471 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352564617 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351557628 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.352202891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.351324924 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.35052008 seconds)
  done (took 22.837728694 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.352314493 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.35161139 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.352184835 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.350764806 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.352379606 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.352619923 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.351959342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.351541454 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.352908258 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.351589965 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.351783534 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.351638475 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.352285733 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.351807506 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.353122972 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.352775058 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.35274502 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.352988569 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.351167479 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.352234691 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.352124705 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.35305123 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.352013068 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.353962115 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.353149877 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.354123899 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.354167641 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.352432401 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.352790905 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.353864604 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.353718347 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.354064364 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.351745231 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.353318032 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.354325525 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.355052789 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.353640761 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.353119817 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.354239363 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.354154107 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.353391612 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.354935357 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.354339728 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.354287038 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.353780181 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.353978094 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.353085478 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.355158277 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.353758826 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.355168487 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.353403948 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.354207204 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.354919613 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.354695604 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.355607095 seconds)
  done (took 75.650672551 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354843995 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.35446979 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.355199785 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.355560286 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.35603867 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.355412201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.354511287 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.358042741 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.354932962 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.354199158 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.354790586 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.356997212 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355348775 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.355400091 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.35576924 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354916483 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.354971158 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.355188112 seconds)
  done (took 25.62179307 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.357524751 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.35660142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.355767946 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.357416166 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.355511875 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.356517698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.356034674 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.356253402 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355857869 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.356368327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35614542 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.356479006 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355938143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.356438516 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.357247124 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35610185 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.356779657 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356907351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.356343068 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355468487 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356893688 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356761104 seconds)
  done (took 31.067795993 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.347332337 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.346715366 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.347061651 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.362556271 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.360973095 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.346286493 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.346624446 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.348023595 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.366958896 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.381444775 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.378470743 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.360960529 seconds)
  done (took 17.520471599 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357560741 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356453066 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355732813 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355450355 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356191057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35738765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3563616 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35598536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357119383 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357062793 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357662621 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357518921 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357363761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357111915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355867953 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357162472 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356188111 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357896509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355651535 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356738918 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355927197 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356231715 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356968659 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35739479 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357906662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357020017 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358172023 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356364921 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357449602 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357656803 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357908809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356931032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35762428 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357605461 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357344803 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357405042 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357213186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357851017 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357373136 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35887687 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.356265708 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358947956 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357646686 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358342272 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358588445 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357418592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359407629 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361480613 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359270438 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35870416 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359165351 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357276069 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359437396 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360336147 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359455758 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35766865 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358836974 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35829416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359650592 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359536437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358701981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358634293 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357993505 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359895833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358637481 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358309707 seconds)
  done (took 90.836956178 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358685029 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358232921 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359702359 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356988813 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357547099 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358231716 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357934727 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358208892 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358382076 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358092674 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358691393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356893433 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358527145 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358149333 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358678669 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35973955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358723183 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358165631 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357580602 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366177339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358501996 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358697101 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359748329 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358799797 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359117357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358411956 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357775003 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358696866 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356908993 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358683395 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35793932 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360138526 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358389649 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.357450338 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359359985 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358725784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358920287 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358879494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359321448 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359068287 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35956151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358960166 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359004355 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359483087 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360171461 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359594959 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359481953 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358359948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358615569 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358159558 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360240506 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359271226 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360676898 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360829974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360884443 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359091529 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359783691 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358399912 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358826365 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359992118 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359483837 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360177677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359772527 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36039328 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360236672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359963363 seconds)
  done (took 90.926957257 seconds)
done (took 1845.40137143 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.517253375 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.470686509 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.350448507 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.357118558 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.35133333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.349200442 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.360551269 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.350748666 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.35116436 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.349896277 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.352868117 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.540905617 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.385165674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.351779054 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.351462804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.450399291 seconds)
  done (took 27.47136119 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.380091331 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.360642776 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.474846292 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.355759438 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.379160459 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.55001148 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.414456336 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.358689208 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.53119226 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.376053116 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.360119792 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.379038531 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.356695775 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.360008735 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.37653332 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.549765548 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.617440446 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.36247369 seconds)
  done (took 29.773858778 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.814687947 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.384648238 seconds)
  done (took 5.43087002 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.37608442 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.358144777 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.356995596 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.356584306 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.349875075 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.349559322 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.354604296 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.349642331 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.367331655 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.489597534 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.35965041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.371708664 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.374266406 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.357369559 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.365522842 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.404970044 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.505268994 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.367947428 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.363986048 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.363900648 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.357883729 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.453468722 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.40126449 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.366664307 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.486302503 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.354203186 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.365207612 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.364449728 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.480964755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.367529829 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.357090192 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.357983429 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.359182325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.338550136 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.894064624 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.364564723 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.383519524 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.364830085 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.366418798 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.509684893 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.358795632 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.364921359 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.349878579 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.885782619 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.467522898 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.481976454 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.368614851 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.35896273 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.358667644 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.423345279 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.360361139 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.360757419 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.418210982 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.179393538 seconds)
  done (took 86.808265151 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.40807901 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.351822439 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.536864558 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.375070307 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.366488571 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.351736007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.351455209 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.645325377 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.358278932 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.354406137 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.673839088 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.985293935 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.353565616 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.416619598 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.393253062 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.405169634 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.353958657 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.360124894 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.352906608 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.354487698 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931455714 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.358516048 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.353343864 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.42715133 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.395500424 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.897010915 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.353603263 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.369975913 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.371050392 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.352458743 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.949044323 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.363811817 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.407814997 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.352885293 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.642964768 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.750527562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.708477647 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.353901511 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.381563208 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.35408669 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.375633929 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.886365208 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.727332636 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.352920935 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.353493988 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884013022 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.353724754 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.352283533 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.355182422 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.622302502 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.352168092 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.352034205 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.366114391 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.351276486 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.35188386 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.410438874 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.405912695 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.894930126 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353185396 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.351989559 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.398774319 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.353498443 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.35661237 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.353969094 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.354582703 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.738279879 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.597691667 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.359181502 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.730209348 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941830973 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.356921958 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03344543 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.358198585 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.373841276 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.378723713 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.351616847 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.352607737 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.886655028 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.380195708 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.352028714 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701191108 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.353812399 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.656492024 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.370002096 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.35174244 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.938599069 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.368813382 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.399292396 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.358169546 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.350931488 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.352079449 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.352650532 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.642339237 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.401178695 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.351021367 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.354938046 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.379639888 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352141089 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.371216727 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.360993162 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004374712 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.357099767 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.351627823 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.371173506 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352010933 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.350886005 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.351549029 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.355058501 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.636765783 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.351713454 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.369109405 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.354490646 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.352585291 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.352507489 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.426314306 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.353299941 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.656961356 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.353958287 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.351243559 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.356374518 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.356280496 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364937385 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352935803 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.374402067 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.351811904 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.652012457 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.370569492 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.352992108 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.351554558 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.350953341 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.3616239 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.352601127 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.406022807 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.353260189 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.150566075 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.389452051 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.397894545 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.350935299 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.360832429 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.351554339 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.372179293 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.35132801 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.658503845 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.638607149 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.577782146 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354304276 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.351997492 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.166086751 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.38918162 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535761914 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373346507 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353436305 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.63124377 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.578479589 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.353986692 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.351608142 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.354474304 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.6327434 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.363817614 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.67958192 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.948912092 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351155035 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.363027604 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.148775308 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.161967196 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.353620083 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.352782145 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.643931022 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.367849754 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.351605402 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.351662609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.355132296 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.349827179 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.35703023 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.354947369 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.350565972 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.351260094 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.694131874 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.547501023 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.368284797 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.352610687 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.876315117 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.371205034 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352594822 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.359410089 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.35303022 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.351458634 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.405772203 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.353824907 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.380011633 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.351063723 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.357572244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.89925858 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.35205675 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.3530499 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.547478908 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091252506 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.352939824 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.35155135 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.351617294 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.406177035 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906215374 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.383995369 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648342621 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.353953514 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.392689284 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.352372825 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.364488714 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906286844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.359195208 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.350329788 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.084444259 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.349616164 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.783038665 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.35163158 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.360638314 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002925844 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.352943475 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.356974182 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.358469186 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.353987308 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.675157655 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.352452236 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.362619925 seconds)
  done (took 503.583547422 seconds)
done (took 654.2977173 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.351816789 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.353363101 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.359243497 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.357265463 seconds)
  done (took 10.655091485 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.369633079 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.359861244 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.368658955 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.359348697 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.371735396 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.358986387 seconds)
  done (took 9.422222715 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.353131352 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.357939457 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.359253531 seconds)
  done (took 8.304776816 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.563768783 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.370907504 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.701920074 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365522935 seconds)
  done (took 9.236968373 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.370495693 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.36927365 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.375897462 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.370290814 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.372558383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.372267686 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.372849385 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.372478169 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.373724399 seconds)
  done (took 13.585643376 seconds)
done (took 52.439420506 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.596715064 seconds)
    (2/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.496986063 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.38105851 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.464458646 seconds)
    (5/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.385391296 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.33173834 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.43238705 seconds)
    (8/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.418994486 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.368720673 seconds)
    (10/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.43707022 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.392125706 seconds)
    (12/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.604516999 seconds)
    (13/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.390111664 seconds)
    (14/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.333476901 seconds)
    (15/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.487514657 seconds)
    (16/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.333288683 seconds)
    (17/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.426900215 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.375276026 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.61105344 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.360443779 seconds)
    (21/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.645028688 seconds)
    (22/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.570641372 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.464815457 seconds)
    (24/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.501361893 seconds)
    (25/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.514926233 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.439719912 seconds)
    (27/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.333407236 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.725934682 seconds)
    (29/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.33927805 seconds)
    (30/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.334690424 seconds)
    (31/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.448431736 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.373795651 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.444226893 seconds)
    (34/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.451059895 seconds)
    (35/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.334935028 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.504972614 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.647447292 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.528928391 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.429650333 seconds)
    (40/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.564376236 seconds)
    (41/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.502527513 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.457547317 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.464238087 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.503349374 seconds)
    (45/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.450242021 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.550242154 seconds)
    (47/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.656674473 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.359076584 seconds)
    (49/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.609515075 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.334092903 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.485036281 seconds)
    (52/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.360401678 seconds)
    (53/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.354365114 seconds)
    (54/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.388658139 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.466774246 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.365785531 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.485395666 seconds)
    (58/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.56647527 seconds)
    (59/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.430561721 seconds)
    (60/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.360998423 seconds)
    (61/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.608829509 seconds)
    (62/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.517157614 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.47478732 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.467701148 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.520840081 seconds)
    (66/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.662445528 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.508859425 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.367036051 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.450600273 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.342781242 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.532662963 seconds)
    (72/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.39884014 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.474927846 seconds)
    (74/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.637272562 seconds)
    (75/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.342908095 seconds)
    (76/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.500223153 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.400024065 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.398643197 seconds)
    (79/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.540108186 seconds)
    (80/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.543841111 seconds)
    (81/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.437570183 seconds)
    (82/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.341843013 seconds)
    (83/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.777697156 seconds)
    (84/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.482839929 seconds)
    (85/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.340345866 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.653699184 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.449869939 seconds)
    (88/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.446645519 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.484628834 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.448941243 seconds)
    (91/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.441813556 seconds)
    (92/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.343045759 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.44807632 seconds)
    (94/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.465799335 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.721515135 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.481813068 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.39418746 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.538990997 seconds)
    (99/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342789398 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.611094332 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.392774449 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.442796375 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.338436337 seconds)
    (104/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.696091454 seconds)
    (105/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.440865116 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.392801298 seconds)
    (107/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.440299905 seconds)
    (108/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.441018594 seconds)
    (109/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.342823416 seconds)
    (110/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.572704904 seconds)
    (111/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.355395885 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.33906974 seconds)
    (113/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.342845474 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.869934317 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.407722742 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.543067789 seconds)
    (117/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.460977505 seconds)
    (118/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.341650542 seconds)
    (119/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.438485127 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.522186364 seconds)
    (121/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.479328608 seconds)
    (122/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.34389248 seconds)
    (123/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.636806201 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.368773737 seconds)
    (125/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.393039532 seconds)
    (126/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.471925881 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.457578196 seconds)
    (128/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.34088049 seconds)
    (129/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.679579338 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.511820198 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.574511676 seconds)
    (132/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.439909097 seconds)
    (133/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.33954969 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.49719087 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.344037082 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.402759358 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.497000481 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.454094283 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.470629496 seconds)
    (140/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.639132996 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.345610776 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.443882263 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.532381695 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.60577292 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.467351727 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.521391913 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.359748273 seconds)
    (148/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.343029927 seconds)
    (149/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.511113072 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.341751764 seconds)
    (151/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.401440083 seconds)
    (152/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.342808588 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.723140642 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.610094797 seconds)
    (155/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.479637227 seconds)
    (156/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.346465175 seconds)
    (157/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.708349882 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.571269486 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.425382563 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.581263201 seconds)
    (161/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.510099667 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.343853171 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.403570422 seconds)
    (164/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.638946391 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.484667291 seconds)
    (166/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.397104602 seconds)
    (167/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.398138163 seconds)
    (168/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.546317964 seconds)
    (169/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.405527014 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.37742067 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.495419887 seconds)
    (172/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.397653067 seconds)
    (173/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.343845768 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.391972804 seconds)
    (175/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.343159312 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.497398831 seconds)
    (177/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.532968898 seconds)
    (178/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.434323842 seconds)
    (179/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.461738773 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.563581172 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.471846218 seconds)
    (182/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.722611359 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.88250068 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.621249315 seconds)
    (185/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.531916417 seconds)
    (186/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.547479098 seconds)
    (187/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.428860544 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.572719147 seconds)
    (189/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.451224796 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.381988262 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.414343409 seconds)
    (192/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.452098654 seconds)
  done (took 331.543257525 seconds)
done (took 332.779199116 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395075439 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.470484561 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.375475616 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.373929476 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377442105 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.366465038 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.396092205 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.376156402 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.389872115 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.390577024 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.364200418 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.383799287 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.391720518 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.385581116 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.41246991 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375714935 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.375641949 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.38620623 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.390666561 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.39188659 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378384041 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377546957 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.408134124 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.376148446 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385270613 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384330153 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.381330126 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.377679686 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.38872781 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.391958968 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.375155799 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.383169333 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.394214708 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.387746863 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3798828 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.386535599 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379171556 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.472020687 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.397532494 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.38856421 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.385831154 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.393123829 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.381446015 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.383739902 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.388701967 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.405493722 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384907176 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.392856667 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.372643979 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.351688205 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399532667 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.389788686 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.384867542 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.35368852 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.371533278 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.393659734 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.386473047 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397164598 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.384975555 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378874228 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.41370054 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398634652 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.391409841 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387303684 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.384218157 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.392902638 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.389330421 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.393676075 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.386411149 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380763683 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380558064 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.38595883 seconds)
done (took 109.177983073 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.502127216 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.375087228 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.536387118 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.388070108 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.544090481 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.498908537 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.385945838 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.387749687 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.387210151 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.182802523 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.388375403 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.387050719 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.377668144 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.387428586 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.499145515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.387975 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.387341374 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.080571374 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.38805671 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.514779283 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.375739705 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.389665004 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.387300154 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.1833385 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.376809005 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.374108412 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.516856777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.387851368 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.084007695 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.374187417 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.377815888 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.084095695 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.517391245 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.407500015 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.397169069 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.398649023 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.544940228 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.391905734 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.50499417 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.505092079 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.538901167 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.427953438 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.374795986 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.379264522 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.389905768 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.389497918 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.389391166 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.418162353 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.377293239 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.391109575 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.083214249 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.398881701 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.400805999 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.390458232 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.390948194 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.410091571 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.390501189 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.391822871 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.518932013 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.392610658 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.506690041 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.186353671 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190366263 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.390501985 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.378411467 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.392066803 seconds)
  done (took 111.707041107 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.453923918 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.459528566 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.489729328 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.382714266 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.432374678 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.493166997 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.383344636 seconds)
  done (took 11.34689519 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.388458846 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392689674 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.431619229 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431249794 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.390900175 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.554403958 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392454081 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.395149511 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.390325137 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.432323378 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.394109358 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392812858 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.400382977 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.383565276 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.430327615 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.396506394 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.502312084 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.387166529 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.391998053 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.540303922 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393417445 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.401668416 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.434703483 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.395635476 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.392032823 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.390522676 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.168106724 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393012669 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.393082523 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.393613251 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39298989 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.451577101 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393585721 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.383848991 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.393945379 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.498366304 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.39489028 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392618042 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.39345159 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.37749178 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.394578365 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.394171353 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.393561686 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.395017767 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.393120324 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.410019028 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.394123361 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.39434131 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.394657002 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394323833 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.436401726 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395154385 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.393606294 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.394073798 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.439211821 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.403719647 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.394824019 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.394466448 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.394787744 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395384721 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.542497642 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.433934716 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.396319946 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.435278775 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394151158 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396017555 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.396122851 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.396100078 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479879471 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.396155227 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.43398435 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.39531847 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.567413949 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.412540806 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.396802195 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.389498329 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.390366538 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395674244 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.383692999 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.395532261 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.395435065 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389019891 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.394664564 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395475022 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396262373 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545495918 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495504752 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.396775335 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.402935037 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.395571306 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.395469924 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.439201958 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.396459231 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.395640251 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4385605 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.508436948 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439112558 seconds)
  done (took 143.150986743 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.401663767 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.401421996 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.393696191 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.417419639 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.391496822 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.389527276 seconds)
  done (took 9.654048107 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390574487 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.40121638 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.3970124 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.397269575 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.398499564 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.397925001 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.398041654 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391009892 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.40151663 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.399883104 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.398698048 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.400078644 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.399680848 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.399353542 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.398816432 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.399538431 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.400051268 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.398985889 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.398073074 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390202688 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.379991744 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.392547416 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392939382 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.384803463 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.395266692 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.389878559 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.400405556 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.382722625 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.383227966 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.381245644 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.38632476 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384433444 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376050858 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.372063176 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377865484 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.368162869 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378044525 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376475476 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.374557686 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376957082 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.369030027 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367717769 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367929028 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367276574 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36042715 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.361282436 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.370421793 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380261367 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.363422318 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363268684 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.364527607 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.364490772 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.364504004 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365354108 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358327365 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354897661 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363207594 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360094605 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.359445496 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352896596 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361448299 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363025271 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349945879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359893225 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.357732288 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.357490215 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.351316351 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359507345 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358856738 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.35696073 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.35437995 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.353636182 seconds)
  done (took 101.434966696 seconds)
done (took 378.543853474 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.76678059 seconds)
  done (took 3.988728596 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.61559513 seconds)
  done (took 3.844792579 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.690360877 seconds)
  done (took 22.177221926 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.343656598 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.351011394 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.360882847 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.3358566 seconds)
  done (took 10.613450318 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.604655349 seconds)
  done (took 3.823195515 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.342288776 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.3467726 seconds)
  done (took 5.912281327 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.502949621 seconds)
  done (took 3.721036597 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.579362781 seconds)
  done (took 3.79935171 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.369802145 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.35670106 seconds)
  done (took 5.954540119 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.309462878 seconds)
  done (took 3.528387407 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.3440873 seconds)
  done (took 20.563672627 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.350255602 seconds)
  done (took 3.567106741 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.358421665 seconds)
  done (took 3.573008694 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.751906319 seconds)
  done (took 5.962484482 seconds)
done (took 102.254158688 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.322190664 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.32696409 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.322948681 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.32838264 seconds)
  done (took 10.512067652 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401836517 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402057169 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.410599387 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393761276 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.39560501 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.404392305 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.363232419 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.384867784 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.391952577 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.389727084 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.404784646 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.393525508 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.405021721 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.363086279 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38872025 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.40656349 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39449678 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.408511506 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.364451526 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.395843064 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.340061207 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.397417829 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39094022 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.339820982 seconds)
  done (took 34.542974393 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.826484114 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.400330986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.484235461 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.380743269 seconds)
  done (took 7.302240975 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.442949913 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.444198967 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.46291313 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.504461776 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.529224689 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.459789624 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.366664548 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.360763597 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347091768 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.443628776 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.523027893 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.442867738 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.658891841 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.341381607 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.658643572 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339720396 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.339463062 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.443480568 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.496630367 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.523483145 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.340285156 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.444499006 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.447559257 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.443975371 seconds)
  done (took 36.019092588 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.349170337 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.357573613 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.341389333 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358318863 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.340557715 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.341717078 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.342644208 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.347910459 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.341736203 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.341923766 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.341619253 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.355482897 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.342115752 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.341517538 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.347988658 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.34371148 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.343379879 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.348960272 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.351051411 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.341791384 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.34329911 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.349484244 seconds)
  done (took 30.825351218 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.327219675 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.327413038 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.679843004 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.582239742 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.326410332 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.333075895 seconds)
  done (took 13.79101591 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.398793838 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.538142646 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.339825653 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.669806209 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.757692819 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.339713511 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.33400398 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.568825024 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.858796301 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.853107737 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.39590757 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.405951803 seconds)
  done (took 19.675731409 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.332583069 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.334195608 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.336386398 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.349065187 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.386104106 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.338739736 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.341485015 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.327441913 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.394593362 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.399457338 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344873831 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.388643894 seconds)
  done (took 21.488353884 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418713927 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337804854 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337072572 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398444048 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339197943 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337305755 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418487553 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027591755 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.344404183 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613144454 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345932732 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426626123 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.585872597 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337790166 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344402141 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.303981035 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573561064 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815805157 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348854769 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339525523 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377269656 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343419257 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343981333 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.544635226 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346739864 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338628678 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.601982723 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339086199 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611701071 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590349039 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589580595 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347487741 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617039929 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974782558 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447636569 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537289275 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35613678 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342050402 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.334027354 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.341931181 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349380574 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348244457 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584361837 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349594528 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34058905 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342218949 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038457728 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.349871713 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.340669443 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343027192 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585229603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43112485 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.346912668 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341979739 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348037209 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34136195 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.34733367 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466388983 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982582954 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340610556 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349086462 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.348430024 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344341584 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357354723 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979106441 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.357438363 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.348356909 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347192414 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342525996 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352295875 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370361094 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342563826 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.365328194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342329037 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086345801 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359396234 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349866822 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871483297 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353470978 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.348135771 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568928611 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344340597 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343789922 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.34396542 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34326997 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053847402 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357453984 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.311121842 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401586553 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028642521 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.543456094 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367136508 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37449673 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566736484 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.312573101 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342826232 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.345369498 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352609024 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36734429 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.034672136 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343665037 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.352577111 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594128943 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.557427221 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345577371 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.311737685 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809972602 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34922049 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.379887619 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358763389 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549137594 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.946264305 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602612276 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353703684 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38492795 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345518564 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121698777 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352932167 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.357234248 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352859269 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626932014 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.148793515 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352512619 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419284255 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347298701 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345929465 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354397444 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353643887 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347065991 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.523249317 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352724 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611733567 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.352909584 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344347603 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.34877794 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362603607 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.353564355 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566757672 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348120091 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626032056 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346675224 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346238131 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345573499 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.56484686 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.346365749 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.353461882 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687133264 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34723458 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35434425 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59880826 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383694026 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459228113 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377614634 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.347907285 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603461796 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.354021565 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.353522383 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354020697 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355433025 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352676483 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.356178625 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343413236 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947492967 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333632621 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353219568 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347512277 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.363304922 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422838601 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35704333 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546953865 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.365882418 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367288454 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.354910518 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.352423473 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576633299 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593012592 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.355517228 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531230064 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.806687874 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943778518 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370484825 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.348985589 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.349133587 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.349433794 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350542818 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350224243 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349003855 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549399205 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604452438 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347164215 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972909735 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358758792 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349590295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.363097459 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592279411 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.364864197 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350371921 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.350968649 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356822795 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371457141 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598630112 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577512719 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.365831119 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351370898 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913031553 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357443308 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352615309 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350146846 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377392743 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350488857 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182630429 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691680077 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348198446 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600811304 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358451408 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.375423247 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.351483436 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35212502 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368033368 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.368351303 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361795624 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.551772993 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369858822 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359444911 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991315949 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094944523 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905562563 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372245627 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.357285078 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358582407 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046133708 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354211725 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35310481 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59136739 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050495718 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352345397 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812861537 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.35271384 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088247207 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604907219 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585055392 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363193093 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.365779172 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605689665 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572427389 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378528227 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357667189 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358248058 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.323274155 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886798926 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361894482 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538963932 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047948936 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361128805 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363291921 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.410015675 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352927455 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737805749 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358181994 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354500411 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359795939 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360693426 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206275048 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360500631 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354050565 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987616812 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37122149 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.820316816 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355091068 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.553605787 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604114872 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.578266009 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.373266891 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.36176092 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.606108828 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599276896 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3606613 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363424525 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909170537 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.219476298 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.363778749 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358211661 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123604894 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375340401 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633588907 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.365340216 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.372241506 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364057266 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357161688 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356715635 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.356691928 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36386126 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340032531 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828809877 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.366958202 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374185417 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365024472 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364062409 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.604787643 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.374515011 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.956807311 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593461224 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357091602 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411951402 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.363543041 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358901285 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.334106117 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356866046 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356465068 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352108677 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579407933 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360360532 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.325694312 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441772431 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571185071 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3574261 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366324484 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576241247 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.365636554 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.378799238 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113281385 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397403719 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36523318 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36611292 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348890809 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403126638 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43210172 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558774081 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.611859217 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611124705 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749998172 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366555533 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36762381 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.37466273 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439960146 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35823046 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.367822088 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.377123076 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956548733 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111752424 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975977919 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613497562 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368271008 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370356168 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359097257 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602568207 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360452947 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637470704 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360126274 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.35964584 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40531877 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364116258 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368456838 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580116657 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635957361 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360782417 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372127655 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367736509 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.360502876 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60959011 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.578211449 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836588539 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897430972 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367850548 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361696922 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063492721 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638498351 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361198179 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361995914 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361308595 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.368131811 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.380005318 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.370065938 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374746227 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59186568 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605457705 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010664137 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606478597 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.396717838 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.284504563 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362463183 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61764265 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194505545 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.563140155 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975400691 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068799531 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621337015 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437788636 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564069891 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.368460703 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601380252 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.362627256 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369441544 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365919635 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363612777 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.363745181 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608797825 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978478943 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623324673 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.370635281 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.364307889 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399701512 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.565900187 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593046751 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093976038 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587353946 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61411624 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376565384 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363905498 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978116777 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622846817 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365359219 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.370667658 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576266131 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372116478 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400992973 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.231734246 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.36476433 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8970365 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.583768484 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387731908 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367786863 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.075837846 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979733985 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.375116944 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861199 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373847896 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366476741 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646401548 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.373722203 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371677626 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652609177 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.374192585 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367470133 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576825376 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.976088596 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115874212 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.378153741 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393430064 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.376087125 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36720424 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412983216 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367994711 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367629761 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.757506095 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37421727 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369486173 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382353564 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.369496254 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37733146 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.373489642 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368603724 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.376757316 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.336402755 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.361090578 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375975535 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501144846 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906474266 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371122619 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.98578129 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.704137532 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617029695 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369684556 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.343872153 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.375640288 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371640604 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370641613 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3706495 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363060592 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913823052 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.376031263 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.625471669 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379062401 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.583883215 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582429867 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38461203 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578876595 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385740705 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397685674 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.338660935 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370901446 seconds)
  done (took 971.011315383 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.368939945 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.372244065 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.382416195 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.363739264 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.377056373 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.376061455 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.374871098 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434811579 seconds)
  done (took 20.293297341 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.361089281 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.370584486 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.361093682 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.36998313 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.368862113 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.843277997 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.376643487 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.37211798 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.384851805 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.372408227 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.374903056 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.979872967 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.377049961 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.374643625 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.382290952 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.377370069 seconds)
  done (took 32.291288437 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.057392034 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.377403756 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.880623723 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.391021406 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.388773732 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.372000537 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.496741919 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.374219985 seconds)
  done (took 25.584164936 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.377186457 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.377730402 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.376661447 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.378679489 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.378045311 seconds)
  done (took 8.133391526 seconds)
done (took 1232.683283021 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.380333533 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.378807402 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.378381029 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379060327 seconds)
  done (took 6.762008096 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.342998645 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.342151274 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.342779946 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.361595719 seconds)
  done (took 9.63525886 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025848057 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.884596892 seconds)
  done (took 5.156077045 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.878792975 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.877961378 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.875936763 seconds)
  done (took 6.878476298 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.650471844 seconds)
  done (took 2.897517718 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.314108818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.37148575 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.372564817 seconds)
  done (took 8.305276134 seconds)
done (took 40.880335358 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.365887693 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.125184883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.52094106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.365785838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.540915587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.52419072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.614928706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.375375255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.365361424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.365360606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.381970829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.527497524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.601988951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.124928026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.602481849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.128199806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.52623936 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.368552951 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375275525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36888062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.616494342 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.367037308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.376309748 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.36563715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.525829465 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.513969196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.375356542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.129389421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.373148305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.375470303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.515294234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.36688241 seconds)
  done (took 82.318952249 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.374158644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.375771196 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.378656599 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.365844929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.381962815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.383745298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.371429516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.366562792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.366930502 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.3832587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.369160457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.383296936 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.386418401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.368671544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.38511679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.367972755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.389076999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.367059541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.383249137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.383734337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.369531361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.373250143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.379630415 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.37221801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.36822305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.367405571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.383195457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.368133626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.369343455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.369815775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.368767199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.38392532 seconds)
  done (took 77.25621614 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368615177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.370173336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.387317731 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.369002661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.370175651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.378071258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.37021359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.383097833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.368669237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.369226356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.384468474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.369529954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.370981149 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.384131385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.374554384 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.385114446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.370563741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.385480811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.370289125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.370644582 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.373121843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.370756469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.386228233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.370798598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.385819593 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.388713019 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.370585147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.371503788 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.370990394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.37125124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.371032259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.381908476 seconds)
  done (took 77.264376098 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613411944 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.386837126 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.388862927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.379443554 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.389957545 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.387860392 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.380798161 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.616098181 seconds)
  done (took 14.795602873 seconds)
done (took 252.88218929 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.39015613 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.856496546 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.416328305 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.380157594 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.398162593 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.410111724 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.587346607 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.414641335 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.57029953 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.387556868 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.400913851 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.388833953 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.15268737 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525813759 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.17894066 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.302271463 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.236648277 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.378622784 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.948556362 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.606815196 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.416808101 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.3809192 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.1780259 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.252526943 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.357741887 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.441857315 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.443277196 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.537106007 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.50194332 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.446767487 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.85458182 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.402179188 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.383976725 seconds)
  done (took 63.782565196 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.380002914 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.390290054 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.389268933 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.38935243 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.390839143 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.389701979 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.380784528 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.390448031 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.390126597 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.390007452 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.389066752 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.389727366 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.390145343 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.390218606 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.388740239 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.361661477 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.380169703 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.390406057 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.380307908 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.361963189 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.391043339 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.389106679 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.390925631 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.391247869 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.39045289 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.389790725 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.390655293 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.390211849 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.391428681 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.390636733 seconds)
  done (took 42.864982778 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.391455723 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.941086165 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.110645622 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.395323463 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.382054228 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.386486658 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.660535737 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.396708948 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.38472319 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.387169352 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.846389514 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.401263615 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417037983 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.116750806 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.39350762 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.391806205 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.393660849 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.384620486 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.958575407 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394222662 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.661612152 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.394052645 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.661672098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.39409541 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.389110109 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385350973 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.391060212 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.172493482 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.404323981 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.850373342 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.134005053 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.662369925 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.125064845 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.171134456 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.128743762 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.400224576 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.393928647 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.855010952 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.392641306 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.386690549 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.660562849 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.393160673 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.122748814 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.065752871 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.40459921 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.395633067 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.226304171 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.855608003 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.625471894 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.398757845 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.171052782 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.396155696 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.396628834 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.38769946 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.617871551 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.394531169 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.387454761 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.240825268 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.39776996 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.662041454 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.402473052 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.387460047 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954060373 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.394360684 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.954563062 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.395088554 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.396889395 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388970825 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.122585233 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.396713112 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.081676899 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.404685328 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.397538551 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.851114372 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.959931258 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.263271985 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.396330607 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.961354755 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.165874234 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.682788668 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.398986086 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.166713374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.686309571 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.397227157 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.400274881 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.399243257 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.397190069 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46405691 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.658718885 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.005690335 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.078072418 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.244425409 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.671950337 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.40329258 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.390903011 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.239846569 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.403739817 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.397920376 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.1204587 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085356577 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.406214006 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.397288477 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.064505174 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.408202078 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.666320883 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.402177831 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1604569 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.397404097 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.465512049 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.398782642 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.397695525 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.394249266 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.666297909 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.399572639 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.399592133 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.065780241 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.880032318 seconds)
  done (took 193.886929552 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.387205272 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.384006155 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.385661667 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.384374897 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.384065242 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.391309163 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.384243026 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.384942775 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.389649109 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.384806377 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.384189033 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.39526639 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.391528511 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.385312702 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.393239934 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.385954882 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.38499323 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.396737967 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.385117063 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.385828253 seconds)
  done (took 45.012156665 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.40050856 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.932800977 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.902428942 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.407285298 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.401844542 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.393422346 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.447805719 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.402384513 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.40126936 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.68217865 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.562850007 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407557388 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.402954431 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.400482392 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.898564307 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.380639157 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.681100632 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.940763645 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408559569 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.93465834 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.37937174 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.402055544 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.391603153 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.935328797 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.697363659 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.670521944 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.45495506 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.936146041 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.409857266 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.40382596 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.934994007 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.410566685 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.395165458 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.920172689 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409445911 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.415546317 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.401434922 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.450551065 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.451475932 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.684014619 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946767571 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.6822652 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.420613951 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.570793251 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.405815077 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.373728685 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.94941754 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.410467079 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.377109564 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.405300024 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.410065176 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.912099559 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.402568809 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.910430281 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.410372438 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.403104551 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.937243666 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.918661054 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.906981405 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.565494655 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.401370387 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.666583395 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.410100202 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.945805505 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.411916445 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.404613684 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.403754815 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.561250971 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.944038342 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.676177882 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.690524283 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.69006752 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.409871016 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.460624366 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.406639888 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.684574024 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.465614265 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81438108 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.686603455 seconds)
  done (took 126.264100632 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.657592072 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.513120858 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.761036176 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.956158768 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.888856277 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.531842667 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.50865563 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.637293978 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.412037932 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.505746556 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.020930519 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.489878374 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.13928615 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.460662278 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.501660575 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.517496524 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.77749677 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.354619414 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.033346783 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.996695071 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.401594662 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.50057956 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.902201004 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.599511607 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.404730783 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.978888058 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.310154063 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.899755861 seconds)
  done (took 52.931189603 seconds)
done (took 525.993688045 seconds)
SAVING RESULT...
DONE!
