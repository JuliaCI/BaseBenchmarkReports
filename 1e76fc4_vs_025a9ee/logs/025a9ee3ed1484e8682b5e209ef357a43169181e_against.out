cset: moving following pidspec: 29570
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.561798321 seconds)
loading group "string"... done (took 0.516567427 seconds)
loading group "linalg"... done (took 9.404605391 seconds)
loading group "parallel"... done (took 0.171653673 seconds)
loading group "find"... done (took 4.487887393 seconds)
loading group "tuple"... done (took 2.060999764 seconds)
loading group "dates"... done (took 1.373644539 seconds)
loading group "micro"... done (took 0.1949514 seconds)
loading group "io"... done (took 0.515084854 seconds)
loading group "scalar"... done (took 56.87344219 seconds)
loading group "sparse"... done (took 13.744840149 seconds)
loading group "broadcast"... done (took 1.718625587 seconds)
loading group "union"... done (took 10.559123746 seconds)
loading group "simd"... done (took 3.556131638 seconds)
loading group "random"... done (took 13.141333115 seconds)
loading group "problem"... done (took 2.238595196 seconds)
loading group "array"... done (took 24.260795351 seconds)
loading group "misc"... done (took 1.162696061 seconds)
loading group "sort"... done (took 3.686908866 seconds)
loading group "collection"... done (took 21.857598332 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.696589837 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.208231586 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201105234 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.206008839 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277819302 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167507708 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15900212 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172328166 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.644648662 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207117596 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137723639 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433736541 seconds)
done (took 6.29299169 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.263423204 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.246923714 seconds)
    (2/2) benchmarking "String"...
    done (took 0.189336602 seconds)
  done (took 1.158466899 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078240238 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.162627775 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110447821 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096551008 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095484883 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111410253 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095467492 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111186179 seconds)
  done (took 1.510743983 seconds)
done (took 3.737681683 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.516388266 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.885731043 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.500203163 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181104518 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.318645837 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308086495 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267031791 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.22436471 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093963117 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085881051 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177989161 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.46416154 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.388992341 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.007290483 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069221138 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095951166 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.156848386 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.820356051 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08035742 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108982708 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529028556 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213221341 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116217888 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105821375 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18796933 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135051256 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141388809 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102412899 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66191505 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135718889 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215696206 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085949487 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.13909375 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166305152 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215190849 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111926624 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673369144 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203240522 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096940239 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103434761 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67556745 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120207475 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208586589 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108382606 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068680596 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.161799657 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118408813 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081037583 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096323743 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10517914 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158664895 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.443015777 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108200479 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195390302 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09554299 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685707604 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100650156 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274496465 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128557253 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09445228 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093076134 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089251838 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157815228 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095187734 seconds)
  done (took 20.319991993 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.171562161 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187708102 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079541861 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15879503 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122671627 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100613511 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08635677 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080016395 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128488643 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178753441 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.145141674 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193138039 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07735001 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091481785 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171806396 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230852863 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128486711 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105604787 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090455798 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110025156 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124348464 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11462576 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092510441 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092051079 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173402888 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206406353 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111462213 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123970544 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090833871 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09690014 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143440035 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144486291 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094755465 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090197905 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189711478 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107879542 seconds)
  done (took 5.378737263 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.244307501 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107618109 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.206731682 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.253163028 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.202224528 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15610053 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185914219 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17846149 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295595425 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.233612768 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164291417 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131267396 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09667803 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081066017 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081776402 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096908223 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.352636253 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150741737 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193777431 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18721599 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099669942 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104477858 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08346142 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08569753 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.106168767 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09708776 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.136562404 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307335336 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.228547896 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115340161 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.050940721 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108399248 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103502814 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134306903 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199655378 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125952549 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140040521 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097391333 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.105517715 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206162571 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122727903 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07944024 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135543493 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121258795 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131779954 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110136666 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.11277591 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22264316 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089488528 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132460934 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.045949316 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196918826 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101056326 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145042215 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105928395 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293760189 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11260687 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122871423 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09478025 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.812548977 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11692668 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084422289 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101658821 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081570719 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096026502 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098904726 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.453715204 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128475738 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.490060323 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099133846 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.139992232 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116025352 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.125452792 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088192418 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086975158 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.130303119 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087586224 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097820458 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088992763 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082090495 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109041892 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113855937 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101702282 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082913092 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150419999 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114676772 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110783885 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125981678 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09252025 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08704377 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130309258 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083585847 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107985494 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168956553 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120402365 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113661634 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117519753 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147233185 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091015905 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.279056295 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099522159 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12514833 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102299354 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114793842 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119682922 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083971567 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085450953 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098986282 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082931751 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149217262 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.105284733 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083165541 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090656744 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111630378 seconds)
  done (took 29.090945272 seconds)
done (took 55.513840999 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.418687351 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081495749 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081178278 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101772436 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082193133 seconds)
  done (took 1.572242845 seconds)
done (took 2.353362316 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.312275627 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201529672 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088056168 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193210356 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087818327 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198872009 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185819766 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102114992 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20761105 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086064607 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1934877 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089643005 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107345747 seconds)
  done (took 2.86165182 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106386727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107208812 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104240085 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122408602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086315349 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102741247 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120679981 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109061524 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102185919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114790283 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087469192 seconds)
  done (took 1.944637015 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104867293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10549413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093446823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118895338 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086420583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100088948 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1182282 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10780737 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100495719 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115124249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087634969 seconds)
  done (took 1.919337064 seconds)
done (took 7.503643852 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.218017627 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.894897468 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191476702 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244161764 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.354653707 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298004223 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611549542 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201360408 seconds)
  done (took 15.929788918 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.12597197 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.1943834 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093001852 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09252557 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.11764334 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093506956 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094161987 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.117416361 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092340107 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096967079 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092189765 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.113192551 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098016224 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092105158 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114359761 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093040405 seconds)
  done (took 2.566404577 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146388397 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143979867 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098405586 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099484483 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115271214 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100641523 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103303842 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117891512 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094695213 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096843708 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119941839 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099573678 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099337168 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.112408334 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100509806 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118992731 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.112322476 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100234967 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117488013 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117701627 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101130685 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098402298 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116674665 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100025717 seconds)
  done (took 3.500670509 seconds)
done (took 22.779670811 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152107987 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104194275 seconds)
  done (took 1.044820248 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.168575246 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.18731896 seconds)
  done (took 1.146031812 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116762138 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091936551 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139380014 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105575671 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091725938 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109724385 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117774025 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110367412 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092653422 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092921007 seconds)
  done (took 1.865780289 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.098656563 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096518277 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125650453 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169187127 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119551675 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094687805 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096897211 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114452166 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098050723 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093961956 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11637976 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110917522 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097494 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12919746 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097832587 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.116292614 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101686066 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096534331 seconds)
  done (took 2.770019923 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09621455 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094114749 seconds)
  done (took 0.987283031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09676197 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092273699 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093967043 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11228605 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091837809 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091106973 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109321815 seconds)
  done (took 1.484785061 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.530026043 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236356135 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370701182 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072506841 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125657195 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.451264645 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104513645 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072443871 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092016926 seconds)
  done (took 2.887008791 seconds)
done (took 12.981902692 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095203256 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.244043506 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.63892432 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114251123 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092205858 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162860871 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.320676433 seconds)
done (took 2.471613439 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353008282 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164693149 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085290253 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092985527 seconds)
  done (took 1.494198658 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086617891 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10124438 seconds)
  done (took 0.993925757 seconds)
done (took 3.295620941 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095216233 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091028915 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089734924 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.107403916 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.091183527 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0920519 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.140796124 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090649209 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089967727 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.110416969 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.091200207 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090264245 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090440961 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110090285 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090532501 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090456582 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110512812 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090127311 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090373942 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089378845 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108173403 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090441541 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089881829 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.106444438 seconds)
  done (took 3.17592665 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114159786 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092234527 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112870505 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095244434 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095793472 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112604477 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095513241 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092040316 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112302428 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09329603 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094789776 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112651215 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092470856 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095741058 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109805529 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095704632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09533096 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092024733 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112011415 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095948984 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093685306 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110967395 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096333054 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093777373 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113990502 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094285591 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09108632 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110557593 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096080183 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094475884 seconds)
  done (took 3.812382801 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100058564 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087967724 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090745247 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116749228 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089100006 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091023529 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105496667 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091903254 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091581415 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089781691 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112278853 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090720107 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090750193 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109777476 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093166509 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094197319 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116405734 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092072093 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091336711 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092426571 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112709335 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090541441 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090273148 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109203322 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091439597 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089052144 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.109079066 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091936906 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092218978 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090250064 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.1123042 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095288296 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092274594 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119231287 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095021212 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091548777 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.115010999 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089347882 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093646271 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087056802 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106264567 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092013666 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090931462 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11470988 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091697756 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090795715 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090241537 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111282828 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091918763 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093598811 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105879694 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09180891 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093431129 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110306021 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095510547 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0879099 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090554258 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106074451 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093374893 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091110411 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106565286 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089965001 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094983453 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091151134 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124494991 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09674035 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091329239 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111074204 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092514456 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096754038 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111372667 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101978409 seconds)
  done (took 7.853609539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118103909 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100858795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111683539 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093773599 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092405218 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090484715 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115648291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091983472 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09196449 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117330137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092589189 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092763002 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1112994 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094245705 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092261805 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111461051 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097772246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092305972 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092254082 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112358343 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093285714 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095034839 seconds)
  done (took 3.018453457 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.243230675 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099507872 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140791583 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124426758 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109154845 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124294159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096541703 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098919481 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114616998 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102618175 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101277582 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114982777 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109902936 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118914587 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103416773 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102567474 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115611745 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103591614 seconds)
  done (took 2.941513954 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.108600081 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093423887 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155054777 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094317 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094313135 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113150424 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100270413 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113225348 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113179626 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094590521 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099979117 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112489833 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094396225 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093570382 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111174804 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094274923 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09457192 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111995869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100953061 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099707039 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.118038877 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101411367 seconds)
  done (took 3.130955134 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115052354 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0941608 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129452716 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097780916 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092697891 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112116685 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101374531 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094461844 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119755299 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095310668 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094364379 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092822868 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127514351 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093863854 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099285046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113296438 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094481162 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093688672 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112061428 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094282281 seconds)
  done (took 2.885913805 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.200063113 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127927106 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108633118 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118202956 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131608778 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110514417 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136663909 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110044191 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10919877 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13850731 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112646482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108816318 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137203031 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114349526 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127828385 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118067693 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136732657 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118835798 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108371796 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12815752 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121573991 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108973747 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135823487 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109231558 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128038988 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110712294 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109462247 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133345205 seconds)
  done (took 4.281644214 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096255601 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092479424 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092209137 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110073858 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093241362 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093483506 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091027277 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111059597 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092354465 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092019549 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110593256 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092739028 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092384812 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090715967 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112055515 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092992595 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091864629 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110904937 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093052828 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092088774 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091593809 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112265155 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092624226 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092185679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111157259 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09338445 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091967702 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091779794 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112457994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093194134 seconds)
  done (took 3.749708764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109330612 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103522476 seconds)
  done (took 1.038037057 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.105073379 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107456624 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092337746 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111981759 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100124564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092343492 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121056266 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099065569 seconds)
  done (took 1.655312567 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.172677294 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.192010833 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097488329 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124402522 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170032375 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.184263298 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129850224 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119523417 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093960411 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086865159 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185374971 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084639292 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11311626 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091221016 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092643724 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12183595 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095976536 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100828862 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119869658 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096364641 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097472093 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117788901 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09616429 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103172382 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108022557 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097260998 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097408969 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.125506169 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090993803 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094087375 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112065692 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094542057 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097500581 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.117245147 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095166105 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.192956838 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102685057 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090713543 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.1158994 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098876285 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124971713 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.113755983 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096328008 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093007399 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115576949 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098930084 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098715594 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112471751 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087984732 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089631965 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115159615 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090810322 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093508391 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093747178 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113056668 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101169821 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09395906 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110473083 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090534656 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089201759 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.112451302 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090609669 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095472605 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116994372 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09489413 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094115518 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11272836 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09416544 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095412895 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113698087 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094898669 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108482954 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114264987 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099471149 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0981901 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113978356 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091755011 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099405616 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111775392 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095827557 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098010159 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142186371 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097150428 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090438091 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109662143 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101314643 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095480749 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116119807 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087969344 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102521287 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.114706781 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096014309 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087085693 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091932258 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110740226 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098153905 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087158464 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114888265 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093712763 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09821675 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117855844 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093361308 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09538418 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118627203 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1000904 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092634127 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.17829583 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090916071 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109943913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096988421 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099508689 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089086736 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11448479 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093495189 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091257164 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109996587 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09899777 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093760779 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11533163 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098290701 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096418866 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115100987 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096412287 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093114607 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109524786 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098244422 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102459116 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114531984 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097244155 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095257206 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094890612 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113723418 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09848047 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090882515 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119617881 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091549311 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093249525 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11496266 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100233493 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094726327 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108773135 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094190545 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095497451 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114002029 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097243393 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095766783 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109545808 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088062259 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09587766 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109333426 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095221835 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103352419 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109194407 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09801993 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091666195 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121857404 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092924229 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099757473 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096630443 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.119757175 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100254528 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086356807 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113529295 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098379184 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095638378 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111222472 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096351671 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09439079 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119755532 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089662309 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098033011 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106823759 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093660411 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099376073 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094847218 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117842008 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091343682 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131843479 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126435492 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100096547 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093229933 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115469543 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099537364 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093272577 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117659901 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100816905 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100543267 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111275655 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094470075 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099312152 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110325383 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097271503 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092898251 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11465612 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087946435 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096098761 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087500441 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.12064654 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096968885 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098885198 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120298473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098099881 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092811513 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124075003 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09212042 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098996207 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108170104 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101505073 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104222962 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.119939609 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101471687 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095969215 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112634233 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097048163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104052497 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116338781 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.097325727 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096209231 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088504375 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.109130041 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101186832 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096935536 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111696906 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095238294 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09928336 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116562625 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094519807 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098238103 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118997471 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100831387 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092012605 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115006348 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092266955 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093693709 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122134937 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088791348 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091311583 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115944662 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100484102 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095837954 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113890507 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099536046 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101139319 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098806258 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.118647176 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094721106 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104271796 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.114109003 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095672998 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091880056 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117601329 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089828671 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096953857 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115472967 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09316373 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091481643 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118090051 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102001788 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100722924 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094210014 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.120928255 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10078575 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100766886 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113673172 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111010258 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090613471 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109417345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092241212 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088333614 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.116403157 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092982349 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101107768 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113063577 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095360915 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099883463 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116123822 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094559567 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101581238 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12587178 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090910649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08908212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11268644 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096503999 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093054426 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.11147362 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097593744 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097867489 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099405575 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118362777 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09268069 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095370395 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121440148 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092695142 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101815498 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.1216813 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102506586 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091311286 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120156316 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093531441 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098687779 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.108530563 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096543261 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094001417 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113809137 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093618476 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093564148 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111228137 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089749653 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092614783 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101205215 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.116399371 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100137714 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094950502 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114619173 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092488418 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092262254 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121491275 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095201329 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10139024 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115930935 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090082764 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090269611 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119448902 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097031408 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102283087 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111942077 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099836067 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102128944 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098745175 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117063385 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105464341 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104345731 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.12266823 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10225577 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088358603 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114666633 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10081044 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096468001 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119231769 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099260179 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089907557 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117265371 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102205087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096970025 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114067629 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089992119 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097309977 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102464856 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.120181312 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100859229 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097984402 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117296071 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091786238 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099900849 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120731097 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097514779 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10307436 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114932011 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100900652 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.0927269 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.12157322 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098164701 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090188406 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089415255 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113764255 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10273873 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.09034152 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.120159908 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102000026 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092767301 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114590235 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102747531 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092625031 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119302059 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101216521 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093937562 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126213827 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098272106 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094532021 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.1000292 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.123062692 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090563605 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09462696 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117099182 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103175911 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093707093 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.12093795 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098247562 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10106243 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.118507751 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102689163 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10215366 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122106722 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092017013 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102537775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120085396 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100256287 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0936285 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094035994 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.11196557 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095843687 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103157255 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11637159 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10540249 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102235298 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.115414406 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094638886 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102041374 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115686663 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104093097 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09295978 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117058191 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091362577 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098140179 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115355532 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103219799 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093609858 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090234656 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122921234 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101123914 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100013459 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119955114 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102786671 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090465849 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.111985015 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099772777 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093244511 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126961013 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100935749 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094135351 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114111924 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099673346 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097483847 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122678873 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092863974 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093120198 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097563287 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120017883 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095997374 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090887108 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121678332 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096562658 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097996185 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116333446 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.092270078 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095084206 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123968186 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095628216 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092653237 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114721972 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105576507 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095626903 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.11367979 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091721931 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101780556 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.118523144 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104942621 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093661829 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117945134 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095286304 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09998918 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103303985 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.116848015 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096577507 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094404401 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123573078 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102260333 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090292276 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114324486 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10683669 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101662326 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.120016219 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101147675 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095334012 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123965084 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103973174 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099819715 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110952642 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.094354434 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0966092 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111340496 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100425829 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102469285 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115530468 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095888264 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101923931 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100699837 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.120523858 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100168137 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090944154 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12530206 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095233072 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099547833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111217719 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09195154 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099342008 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102635636 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117668788 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098234608 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09798003 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.121477023 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.093109558 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09424385 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121407542 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102746735 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103461608 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11761564 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09671742 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102470307 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127354056 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100002778 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095583617 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124691187 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104463568 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098123293 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116356358 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102162737 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103937703 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.119935277 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106189076 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095007022 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096294542 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.125754481 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104910702 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105630917 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118358025 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091923066 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102236562 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116287461 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092564049 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100157791 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124942586 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10503631 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095995624 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114491556 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106833687 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102736539 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11816192 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095945751 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09456956 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.121143212 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096833546 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10137223 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114662561 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105990999 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103982336 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104259745 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127578709 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092589678 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102438782 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.121226302 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105480618 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098337737 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.113157602 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09279617 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100428413 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126220647 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104921532 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101108295 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101293802 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.124476427 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.100660748 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096382942 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.116525063 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105311629 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102582965 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.120147605 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.1001712 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09682782 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119475081 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099609961 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104199761 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124559512 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099894911 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106964524 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123818924 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097528665 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094816305 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118377342 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10279893 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098335338 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102755429 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.116435454 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092379885 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102420635 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.12757021 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097275916 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104059374 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125603505 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.098674525 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100111999 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125693381 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103734923 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100431582 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11887111 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10123108 seconds)
  done (took 63.158870007 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152719532 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105392107 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120780847 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100322559 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117635224 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123453816 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100658982 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10100611 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123138713 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109662209 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100296473 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120106798 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116435396 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13965233 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118668918 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109686045 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121127908 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10268624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100085497 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121001518 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116085538 seconds)
  done (took 3.300201919 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.122880747 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113524903 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131427276 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113943996 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107344658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132742738 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111124703 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132841956 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114217045 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108528442 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136000427 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111537025 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128226671 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109403637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107868609 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130464134 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114822285 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107427876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133698558 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111668831 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129205888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11302788 seconds)
  done (took 3.499939362 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.135003159 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104115172 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098524425 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121414198 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103095486 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100502703 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124402062 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101140094 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109644234 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115827779 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092005756 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09596352 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098842803 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121721741 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.0952684 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100928911 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130243438 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105633353 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104590871 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120444589 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092932403 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100720408 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099914284 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113136878 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105368762 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104746062 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121588011 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105114302 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091101921 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.124263386 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100908591 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094504566 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091089708 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.1126013 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092470896 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104399674 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123997788 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102102254 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10156894 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091598631 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122859359 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105047957 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092814876 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.122232636 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102285214 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094585835 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.123421181 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101528695 seconds)
  done (took 5.999912067 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.135849424 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.406004336 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105055363 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138261804 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138117724 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11155625 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101680715 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139545018 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102294271 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126777151 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11547088 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113672615 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128662798 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107289993 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.129499765 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105585235 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105129742 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.124062315 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109734133 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103295655 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128490761 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106993225 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112480978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133408075 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106145056 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103665837 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125689177 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107519757 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112642153 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131796781 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107637578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129260836 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115891601 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103180026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123277591 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106139846 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114884754 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126287068 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106265787 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101498609 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.127268779 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108188109 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104896238 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137470821 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105980699 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104946595 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12623507 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103359183 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113022571 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127582961 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111334112 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134489391 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108475184 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105200806 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127888035 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114485016 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103565269 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.12424272 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106220994 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113423433 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.124565529 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107438599 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113067145 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.127264172 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.1111839 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135194579 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106913634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106363399 seconds)
  done (took 9.209825604 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13965899 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107818939 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13725661 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116244877 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107230273 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129779149 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107777211 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128800266 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108864179 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113231468 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129575883 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227528419 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128440393 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11415267 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129480023 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109102228 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107983568 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130593465 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109359651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108371943 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128894516 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117072969 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108000397 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138620323 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119240173 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125254086 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109488338 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107665344 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137546185 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108665557 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118008491 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130301628 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108143641 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136677656 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121853581 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107775636 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1255729 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109044003 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109040108 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130217986 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105687599 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115219634 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12979621 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105153574 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108349451 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131870303 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115468376 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139546169 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114187 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112240907 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130304892 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115505231 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129645831 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110224817 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116083092 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144996582 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116815295 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13767156 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109986598 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115982489 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137889266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122183603 seconds)
  done (took 8.44409615 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108472591 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101917911 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101997211 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122385039 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103229655 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10161061 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122379481 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104007312 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100886589 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101410233 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123518943 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102160288 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10166005 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121919338 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101874628 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101763125 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100726713 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122677365 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102085855 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101291959 seconds)
  done (took 3.04320176 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.117085001 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118058761 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125179062 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110086556 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104284903 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128863475 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103502225 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104252253 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102711712 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125987182 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111963777 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13249184 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105347307 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108752829 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133269865 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109301539 seconds)
  done (took 2.738354596 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.127496508 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120436767 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.212407141 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106204444 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127512774 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110907116 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103930741 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129454235 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103476023 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109752902 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.130416446 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108039387 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104511946 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126586675 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105083979 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107367385 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10288674 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129989204 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104598302 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21706147 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107463673 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105721927 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128874086 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108210144 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10440203 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132288311 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109728276 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104048299 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128464413 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105090786 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106268942 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133452092 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103944924 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107991423 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127181687 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105493347 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104447267 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.127228856 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108736444 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10482889 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128221015 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106836109 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104934646 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.128210165 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10404997 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104954563 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10287455 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132149824 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105892627 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105123292 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126729647 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110016752 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109569673 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.134546247 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112314124 seconds)
  done (took 7.36590823 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.122392341 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105452541 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136039504 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103501007 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104945882 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105112862 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128257002 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107177712 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104439091 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125830559 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106324448 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105525342 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127534881 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107014983 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105285468 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126356223 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103670061 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105536308 seconds)
  done (took 2.9330979 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116735901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104905249 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108082852 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126088145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104979615 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103348819 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124905554 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105094577 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102774407 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126126806 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10641659 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104049965 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103106843 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.127202792 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103975248 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103796772 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126354466 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104210697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103939111 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124926463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104712778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103064354 seconds)
  done (took 3.344502617 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.122235619 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215842251 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.11025768 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.224453865 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101416727 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124517841 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111426132 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101683332 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.142161015 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101121096 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100216293 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122322376 seconds)
  done (took 2.48366979 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137551773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140672968 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127725419 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106613446 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113017752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130900664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109562959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108519015 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141246754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119674912 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131475553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118421768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116341852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140698902 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113955364 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135416372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109859147 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108396359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127844193 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125452393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109387187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140220424 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109303436 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130986676 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110631437 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117251724 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139938008 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121250503 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13095541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119267715 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114319807 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131667268 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119008118 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119678225 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128218399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117835438 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130458851 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126980547 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114006132 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140284924 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106279285 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135940165 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119850165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114549379 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139510516 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110682555 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114245067 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132543609 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110470614 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153603624 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114253607 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117536029 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136004387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117989409 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139827201 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131106029 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142340278 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11806056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113204418 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143724296 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117566303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135589315 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117494499 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141027952 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116032936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116916421 seconds)
  done (took 9.099069792 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150410428 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10610115 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131170262 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122152305 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138908113 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111766003 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110210754 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131710303 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111905697 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106663287 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173880025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109808464 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138604662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119747066 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110269482 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132387913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110505941 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118425361 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129906583 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131640287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131708152 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119577084 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118857347 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141870788 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120015393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136696406 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110836502 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109962144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132471146 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110323771 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114653892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13157811 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118320923 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127629213 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120873794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10974244 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132054727 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116252165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1104075 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137277421 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118934857 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146608806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111175433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109194666 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144415952 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110736335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109760398 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132447786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111095219 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106087344 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143144297 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119612959 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143827162 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1187744 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131976121 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112605601 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111468785 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133032395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110839752 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114698552 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140263089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110060813 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152763289 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110491417 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110699502 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140965467 seconds)
  done (took 9.067476949 seconds)
done (took 172.039050447 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.183217663 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217832616 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198370082 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160897111 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096222027 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.155699484 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13062893 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200594196 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097239451 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096590302 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09649258 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.124402056 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166657598 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095597625 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120342351 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100462639 seconds)
  done (took 3.151378263 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192269851 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336779631 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111253806 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123638464 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103746822 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102205715 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124457477 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104384156 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100838965 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131790245 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102649776 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09707662 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131492408 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09839269 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100953825 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12340869 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110804562 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101497405 seconds)
  done (took 3.216075005 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.129440654 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146712138 seconds)
  done (took 1.196760627 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.138831991 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217379466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.287324853 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172184756 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123041213 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.145682581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15218182 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136738718 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191273402 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136791905 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114763752 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099730425 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151738247 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107344546 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139347638 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100795521 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.130402972 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138521709 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116411692 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102755546 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.148490249 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106310705 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10714568 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138936857 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182016683 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137198391 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105576682 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105477026 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.127830699 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11636978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129931356 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120332202 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112880283 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.18110841 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103657378 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177772436 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131266484 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103170802 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11526651 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.125367307 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105641371 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105417687 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138189303 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100913854 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105332965 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131550916 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107451402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105214783 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133865194 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109454359 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132168535 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10943531 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177866115 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110165367 seconds)
  done (took 8.070693039 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.882621813 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142379084 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101541584 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.024187818 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148403882 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115734139 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.867855633 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149016804 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256529344 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.894770401 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118062659 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13216633 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240954739 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258477846 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.293014495 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362627777 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.731401104 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114307865 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131595523 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165371235 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110384201 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148201513 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12212765 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.522917762 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103225292 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123063022 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110943671 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110106037 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179413942 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10314507 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129300442 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173120923 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293834233 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212002603 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124685586 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102218866 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100372398 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186478577 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274087718 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221640527 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195298882 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099826398 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101609162 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131292545 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121997305 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099206657 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179631259 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191881621 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19066364 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107735517 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110034485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13572726 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108066821 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179579067 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099124368 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360695095 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385593013 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10239254 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110762293 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137801865 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272781565 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102255395 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238276325 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152716939 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218113476 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102500792 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841669647 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187565086 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101237069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127925138 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111725822 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108432427 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13156819 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167731754 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.505050302 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111615312 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128415591 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103235454 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236602821 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102007176 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101904204 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183736983 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102678353 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134411195 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113918477 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135146497 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166939264 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.273518027 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133649114 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112721042 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106645215 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139248283 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103808474 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235333193 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229000923 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175046545 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208436884 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132345841 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18213234 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163637319 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131653749 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165142975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132993321 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114043204 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131359734 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229811399 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136444151 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126229051 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108277235 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11123932 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.162053543 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106083378 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134440276 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166659951 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558570787 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187430066 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099686995 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129139227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112373392 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18250862 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108657315 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264166565 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133848318 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164703145 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133072259 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100941662 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111008896 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180192563 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109320892 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134954388 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111046581 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134306195 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258766221 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222669524 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136136287 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254740294 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177491596 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131493741 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192300592 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112830093 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19059608 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114134784 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108951851 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127683747 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83494727 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11702943 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133091278 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109268539 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206416491 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103390043 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105759567 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102418588 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123456027 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817263705 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109308789 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099822929 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127346048 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109000122 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109718892 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1358122 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107990357 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181588145 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246001353 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133269002 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112068543 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102008133 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181876278 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103484189 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124940074 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104409003 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103024262 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.133705526 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.109209129 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105324024 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192112777 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176822618 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232922399 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638606804 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102659938 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125216649 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244338115 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103384421 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328718796 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133933863 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239562607 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162019052 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.124121254 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361639541 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186046756 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187407217 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129048231 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170960748 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12473859 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112614977 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179234453 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103051512 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110163304 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177428124 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137162887 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113615232 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28061216 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10296277 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252787762 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.123026916 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16717554 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127081018 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109802837 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327716741 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103611952 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142586201 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178821606 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108885666 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104365595 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.678282676 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103536216 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140270207 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108516762 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233166385 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185841437 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133333296 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114674189 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111352667 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182628386 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232692051 seconds)
  done (took 48.236923736 seconds)
done (took 64.786892745 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274603014 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179631061 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.284214628 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181993907 seconds)
  done (took 1.939313151 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.280289507 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164787187 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.259202946 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100496161 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.266233414 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.106138505 seconds)
  done (took 2.124280873 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.186442939 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174307163 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150887034 seconds)
  done (took 1.460553784 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203183594 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219990089 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335172705 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237411605 seconds)
  done (took 2.032634113 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.298720518 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121367061 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127780876 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.240330641 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256594514 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21510119 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128047011 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.182828667 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131472786 seconds)
  done (took 2.699183289 seconds)
done (took 11.205469632 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.231512294 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.288952748 seconds)
    (3/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.420734952 seconds)
    (4/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.19332804 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.228248425 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115854261 seconds)
    (7/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.323577332 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.222728089 seconds)
    (9/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.185875802 seconds)
    (10/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131698039 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.132602092 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130951003 seconds)
    (13/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.299488391 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.240487877 seconds)
    (15/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.236484966 seconds)
    (16/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.384246471 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.275231895 seconds)
    (18/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.321593049 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123743664 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10585272 seconds)
    (21/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.138189882 seconds)
    (22/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113644991 seconds)
    (23/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.196830105 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.156899499 seconds)
    (25/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.20917725 seconds)
    (26/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.154271286 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.19818995 seconds)
    (28/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.309179067 seconds)
    (29/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109063656 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158321714 seconds)
    (31/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.219604986 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148232783 seconds)
    (33/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.242277028 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086398863 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.221419161 seconds)
    (36/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116361494 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114143542 seconds)
    (38/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125808578 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123564459 seconds)
    (40/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.230351396 seconds)
    (41/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.203522694 seconds)
    (42/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086003087 seconds)
    (43/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.250143298 seconds)
    (44/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194768019 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104399828 seconds)
    (46/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.377371189 seconds)
    (47/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.171196921 seconds)
    (48/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.133642126 seconds)
    (49/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102182682 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.146814573 seconds)
    (51/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.136273549 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105229163 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159189179 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106681284 seconds)
    (55/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.177085041 seconds)
    (56/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.113666536 seconds)
    (57/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114661059 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.146415944 seconds)
    (59/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077613949 seconds)
    (60/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.171758907 seconds)
    (61/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.143944079 seconds)
    (62/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079487992 seconds)
    (63/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.17025897 seconds)
    (64/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.285504979 seconds)
    (65/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.219446996 seconds)
    (66/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111668483 seconds)
    (67/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110762585 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.327017947 seconds)
    (69/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.284157739 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082637821 seconds)
    (71/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.136448387 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126226109 seconds)
    (73/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.17724905 seconds)
    (74/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.142871637 seconds)
    (75/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200639984 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121031829 seconds)
    (77/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.161633186 seconds)
    (78/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144144074 seconds)
    (79/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086921444 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108240387 seconds)
    (81/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.137185439 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126442046 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108170918 seconds)
    (84/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.108873152 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091173595 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126637161 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101614388 seconds)
    (88/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.111831358 seconds)
    (89/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086248311 seconds)
    (90/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079900706 seconds)
    (91/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086775448 seconds)
    (92/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.14374801 seconds)
    (93/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080434279 seconds)
    (94/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086352523 seconds)
    (95/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117051876 seconds)
    (96/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.143707855 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08655768 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10228804 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11312493 seconds)
    (100/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.178215013 seconds)
    (101/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085905293 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.178227079 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.129643715 seconds)
    (104/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081236438 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.1047567 seconds)
    (106/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156159812 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130565319 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083243742 seconds)
    (109/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085897662 seconds)
    (110/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085991022 seconds)
    (111/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.118468462 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105853349 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.079674923 seconds)
    (114/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135966607 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182365278 seconds)
    (116/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086493275 seconds)
    (117/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.221369912 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105537471 seconds)
    (119/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079486211 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130867239 seconds)
    (121/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.138003431 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110548186 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078680255 seconds)
    (124/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.107782955 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086724831 seconds)
    (126/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0869148 seconds)
    (127/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082014883 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.133749124 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087072695 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124824845 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124618927 seconds)
    (132/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.109261287 seconds)
    (133/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110455858 seconds)
    (134/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080684071 seconds)
    (135/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.147026062 seconds)
    (136/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136612177 seconds)
    (137/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079915995 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105481759 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.161034136 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.087244613 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113941274 seconds)
    (142/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.137875541 seconds)
    (143/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.106891917 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080906701 seconds)
    (145/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083353322 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079826809 seconds)
    (147/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082358511 seconds)
    (148/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.126965103 seconds)
    (149/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080022218 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111888903 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082078901 seconds)
    (152/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.103016289 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080402534 seconds)
    (154/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112190044 seconds)
    (155/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106103208 seconds)
    (156/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.10373795 seconds)
    (157/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086263111 seconds)
    (158/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116426323 seconds)
    (159/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079362992 seconds)
    (160/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135133639 seconds)
    (161/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.213065166 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.131095784 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104176962 seconds)
    (164/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080362253 seconds)
    (165/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082280048 seconds)
    (166/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082589788 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.137261582 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081961386 seconds)
    (169/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0810404 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126377847 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.142376245 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106535501 seconds)
    (173/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079572265 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159504972 seconds)
    (175/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079930071 seconds)
    (176/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084166263 seconds)
    (177/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082911712 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128234928 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.107003341 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104271759 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083413486 seconds)
    (182/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.104051566 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126226838 seconds)
    (184/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104279694 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087166281 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131106301 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.087225753 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082767157 seconds)
    (189/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082695225 seconds)
    (190/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.138949509 seconds)
    (191/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.087067003 seconds)
    (192/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10695403 seconds)
  done (took 27.631889448 seconds)
done (took 28.589405152 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233912368 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131422829 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114477536 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112543466 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23593455 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120362864 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155715047 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115558698 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122250175 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139207224 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104745788 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126118554 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138791161 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206716527 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142079057 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.107239242 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10448338 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149379851 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129958247 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130350552 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.236472052 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105753285 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.14944624 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105577845 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238163269 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107586839 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113251664 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140682478 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127149024 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113061474 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.140359937 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105854956 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129467394 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153999712 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105259952 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114714474 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129205464 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087950279 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114708596 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.139264881 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12808143 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115404518 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139091065 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106390325 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115697295 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114498671 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129359406 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118567416 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103391145 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.139886943 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108295202 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129218145 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.138514655 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104775158 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.104035528 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130335695 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126490493 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104920268 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150827548 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10615803 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106279465 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128886867 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116224906 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104884761 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113252725 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129166335 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114412262 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115618684 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.137784327 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108070216 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104605368 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.138368563 seconds)
done (took 10.299291004 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114796704 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150438468 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.236143952 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.23841657 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133888792 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.149110242 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120076189 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129428935 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143886874 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125391029 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142286508 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.161928328 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.24237209 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122436333 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120746968 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143484559 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117374378 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113780457 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.239239814 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.155518781 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.131110322 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120835973 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157624657 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122588561 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107899567 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.167952607 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113855617 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11753067 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.134113294 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119528981 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153964893 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110309339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11204092 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151773503 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127893273 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120017588 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145721467 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118034511 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10919491 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.133611777 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119394815 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127317951 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.13356435 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.1237524 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117335636 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148919155 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117344737 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12184323 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.134759158 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117491659 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110831539 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160347996 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122989009 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126168933 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.146654433 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123230779 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12224195 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.148811272 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113362997 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121514675 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.135670236 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110363893 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110292875 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155604036 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113392742 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.146720873 seconds)
  done (took 9.993959952 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.134559438 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140335849 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145127185 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12049063 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114231266 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.129193349 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103556302 seconds)
  done (took 1.883061951 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.110536133 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246468187 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218995694 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246318872 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.245553987 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258001825 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128595857 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.131032492 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140641551 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116141707 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247659142 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.275180228 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116018983 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.148236279 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.223870964 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131132331 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.249407433 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.107126597 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119215401 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249782635 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123645488 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.162866682 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118990608 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105232525 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.244083269 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.133418337 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268494042 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151236989 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114955035 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118676358 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147563646 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185236728 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244178405 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.145524127 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114516793 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.24686667 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.218327017 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.146648592 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.261653081 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.111206476 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.244133192 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119961226 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120922889 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147594013 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12006566 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.23566328 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12455135 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.147955534 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120298711 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.253699047 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.11669278 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.246642964 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118195624 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119922883 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.145856479 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121997141 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126672023 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.147983878 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.254342957 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124263026 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248647183 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.221660246 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246066489 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250421052 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129838965 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248647987 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.235270187 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118972935 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141460828 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122280049 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.250907038 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119721667 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117876093 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.240224149 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149080005 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.227206599 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.253224498 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117827031 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.146475442 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109782746 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11859775 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.134140095 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.214722706 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14723198 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119928966 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124345573 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145981526 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120497893 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110748426 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.156700055 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120014669 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142664256 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125694895 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121042455 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149131865 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.253151628 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118002494 seconds)
  done (took 17.356334746 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113686183 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.108150721 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111534576 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133645475 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107834787 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107676761 seconds)
  done (took 1.712832126 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.149693332 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121853899 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154320646 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122201491 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.194414407 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.230289358 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262591288 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114524906 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166747006 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132043563 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.258142245 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.259509276 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256523495 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124644308 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.262081855 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123391288 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265179975 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11914228 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.156176613 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119253524 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120987436 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150420506 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119528688 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.249082587 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122166288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122750052 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.142342398 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130107533 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129338492 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.143097581 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.144155872 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146212548 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113954013 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115953723 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262066325 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112593215 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143642535 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124395406 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12285859 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.149475915 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260631274 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11964203 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126892692 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.151910459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.116183577 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112734191 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151517464 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115578446 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.263444909 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12348009 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.152194175 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12242234 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122701458 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.151582588 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114488323 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115398082 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149870933 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.265302427 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12504445 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113873146 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.148935963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121944959 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115878649 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.153570278 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122322048 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123114826 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.140397649 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124019458 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117931171 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.14887479 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124759342 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122273578 seconds)
  done (took 12.02832541 seconds)
done (took 43.96810513 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.662675791 seconds)
  done (took 2.687475236 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.959555498 seconds)
  done (took 1.983728661 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.207818746 seconds)
  done (took 19.2655725 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.448054831 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474400163 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.1528875 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151510288 seconds)
  done (took 3.253026433 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.845440807 seconds)
  done (took 1.897129991 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.334184722 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.243748054 seconds)
  done (took 1.613302623 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.732401362 seconds)
  done (took 1.781527151 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.536395566 seconds)
  done (took 2.568925159 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.29547859 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245812747 seconds)
  done (took 1.591769522 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.655063827 seconds)
  done (took 1.704623253 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.534488593 seconds)
  done (took 20.588736758 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267191997 seconds)
  done (took 1.319806202 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289587807 seconds)
  done (took 1.34335387 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.614667415 seconds)
  done (took 4.670960946 seconds)
done (took 67.309024178 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122977388 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.120149648 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118736668 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144863453 seconds)
  done (took 1.549412402 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131801342 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120909482 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149727206 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122469379 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127845995 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146034409 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121857626 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123440389 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119340296 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148759663 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120756199 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120218259 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149281044 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120452556 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117487089 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149548115 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124451131 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120092972 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148600962 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122988238 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121357165 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149195338 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124776056 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122375465 seconds)
  done (took 4.181925976 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.1227614 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111276215 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113228429 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136697165 seconds)
  done (took 1.544451068 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134023488 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132895216 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156760965 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129794314 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132599687 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157239083 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.1194492 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117025778 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146394176 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.13024682 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136445252 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159523635 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132356838 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.147032141 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13189409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115442269 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121294281 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157832355 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128184916 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.155205034 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122587508 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12714646 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.152974263 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130511144 seconds)
  done (took 4.329854197 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201232513 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133096801 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.180069674 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164550891 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.18206984 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118649486 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148437405 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152874801 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127660845 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.149340256 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.12443619 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166510475 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152792087 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122331173 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120573444 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152239126 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132591681 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.153237489 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.16821025 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125708549 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153122559 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131683578 seconds)
  done (took 4.321149051 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129361615 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112399644 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.134252055 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111791825 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123876319 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140106565 seconds)
  done (took 1.812840644 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11499835 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106146092 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106779372 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.132153418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110350572 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105259444 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.131068928 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106618064 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106186209 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105585415 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131723552 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10520196 seconds)
  done (took 2.416344208 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.337911577 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.111505322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137895936 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114171676 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.116169737 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10876395 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.150750834 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.110655785 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271159636 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106310208 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.136058252 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195281751 seconds)
  done (took 2.957561787 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213613098 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150020282 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287292728 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.660822651 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166137266 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192372969 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284102578 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191730083 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209510229 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139170702 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218769941 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16323362 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185216736 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187677645 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169546876 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159013196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196322372 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238885591 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145293209 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242347018 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157512702 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203987687 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217535788 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151290075 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168167054 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164388764 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119757043 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157469875 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169778993 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19409579 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206302214 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152708115 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171579889 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195784957 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262678289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208640859 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274557858 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134277204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199900329 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.217694816 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263383412 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14546152 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222603572 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154822637 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160210255 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187873022 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18443293 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185396374 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.163538957 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146580809 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216115739 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208380985 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172562881 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165645128 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301585258 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162767334 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145644079 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257297078 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218810798 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230676535 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180253053 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.15227411 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177743759 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218829036 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244825453 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14402197 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194708502 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127172959 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195169528 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23494353 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186019813 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190253927 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.244074819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133029403 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201271639 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171364596 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186051303 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236581797 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174071544 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.14773092 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15532291 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1350563 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15543949 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19152348 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150859337 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217375879 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161908875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345034951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181741695 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185986291 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16291858 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192799728 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192851292 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151100686 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102545641 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173665565 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163495186 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189396185 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130812628 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184748526 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142832598 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127824883 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183411023 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12531699 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199663023 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136124294 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19688316 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172079306 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.161116304 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180432859 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179524592 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163856267 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199450855 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222300182 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132744958 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133942217 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248742606 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199650325 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13909967 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20485611 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19776137 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177780829 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13671635 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195269238 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221587319 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145656813 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229476866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139625273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164326217 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142347195 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202264746 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163018715 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190130143 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1299291 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196248629 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195093765 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.158440729 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142334478 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213466086 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135954937 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154954593 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140547576 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137498696 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.174806968 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150775675 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168877036 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155670793 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197247028 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167359122 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188180033 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136661497 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204569748 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133647502 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.200178431 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151927681 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.147581465 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177559504 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22915334 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130116784 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211854042 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163470847 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212517116 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201956223 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131756352 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215687889 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129386078 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121115723 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194018901 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199757817 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166323419 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218615061 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208480558 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168492222 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193954686 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150904589 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199966361 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.216136559 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159002377 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172833746 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173794885 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20131919 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123219963 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124155238 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.159583482 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139869896 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160936755 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140276442 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213709417 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167497579 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209187511 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196680217 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139449235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22247284 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128098072 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192482923 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1764907 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169130389 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191395225 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221013927 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207476612 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143335625 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193194405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122589915 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127543275 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.164835935 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163323012 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168010586 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13901468 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170473987 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19196938 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205573308 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151501187 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221411669 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196294354 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201568038 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.151533736 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162212888 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200694405 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169129399 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.214417499 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135781858 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.191330586 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194783779 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171782326 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193716973 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198867653 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209473888 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19852386 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.197006397 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132403502 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177975006 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163231086 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169398649 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165143711 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17645367 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134057537 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153519529 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.168412854 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142468203 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218604247 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173472941 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181315868 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.189203524 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175022206 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156594189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143180317 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203556583 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147147531 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105464403 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201604294 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227816426 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151946465 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187984706 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17539829 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160295165 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319731827 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219536985 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210944726 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137733133 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166515329 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174289732 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189509911 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165704637 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215398449 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142291827 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239190721 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20045701 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145393273 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132311077 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179821653 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153138094 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170573971 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153962323 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193751112 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145618004 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220882969 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142599131 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202143879 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207427183 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147840491 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150478206 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170567159 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256477846 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169479786 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206792591 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166114378 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19597479 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183544339 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155111275 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128299217 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.16281023 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187211591 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130253533 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209143016 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193959514 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211653328 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176616866 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192941191 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142810493 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157232711 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169202128 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148945892 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218634825 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166361817 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139338867 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223272262 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1295768 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163153623 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163773492 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318658589 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149532727 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204118792 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106782756 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.323410113 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131335631 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161204825 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163640715 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201929516 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134400634 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187728081 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201550289 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142536962 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194929804 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136295105 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211066536 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215078843 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169125706 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207722376 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176393784 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165717478 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193143702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177667519 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178402989 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.149752223 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190024582 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195190327 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207967559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132316793 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200319847 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171594641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203773329 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205983997 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142316402 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21351238 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130802274 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168024664 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168964738 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126725501 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193902752 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194910011 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132849359 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208837835 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173842867 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133238878 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157991854 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149673165 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197955294 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142296412 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.161134334 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189743397 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.161326934 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18480565 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243572771 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13101774 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198663259 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148768244 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161759037 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141690066 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174475274 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134657202 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178861086 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212316779 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133180011 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209823295 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196055918 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169220826 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190149418 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146841054 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.294921056 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131413529 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220711591 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153378784 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229688437 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152537587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206923858 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172256627 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183840722 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165897465 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182990519 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221845108 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197411185 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167679867 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162613645 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14541564 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17046142 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136039553 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183076312 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171839611 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143051603 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.168969365 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167401341 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176826243 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149723621 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17374763 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201116711 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183521975 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221808094 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188609695 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169681145 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177496611 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210021947 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129957676 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196932209 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173751005 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176371613 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153588852 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.166275687 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139668243 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247156174 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127150466 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192784086 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175971166 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200554513 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173380237 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167102382 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179587602 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173042611 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176527713 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157963996 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155373186 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200221893 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136518151 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129090297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202156156 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193050045 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167062748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171977126 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178001873 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197285203 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.154194764 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134790901 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321455642 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164146735 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225127941 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136687392 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168585416 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147930976 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191167848 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165827573 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202753244 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132054972 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16138863 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14818839 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186131873 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143863996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199324585 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18460081 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193548947 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188683635 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.166010824 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255881787 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173214367 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173063249 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.617926887 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.160419666 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142551506 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166753959 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144226494 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210691898 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24484246 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165107241 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.177949818 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138330224 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128331235 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16037475 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167399706 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183163401 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169630022 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17884499 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105285711 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142478712 seconds)
  done (took 87.683885958 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168763774 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154310105 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171132271 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22429105 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19723554 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294941704 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231385203 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246690121 seconds)
  done (took 2.846143089 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125628526 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161290738 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144542965 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146329561 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111654923 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.487323003 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16312783 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122097098 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163432537 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154784081 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139414727 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.578166889 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119359833 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148207678 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124105195 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137566307 seconds)
  done (took 4.174869084 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.803335813 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561290336 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.089287964 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.305364244 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.242675938 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.229415386 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.770529309 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203723814 seconds)
  done (took 12.355570449 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.172790214 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.160337854 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.455057044 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.310288094 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18640963 seconds)
  done (took 2.442694233 seconds)
done (took 133.664848585 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131232556 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12676696 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126277886 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156832523 seconds)
  done (took 1.688961263 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.202077689 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092174035 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094820038 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120941326 seconds)
  done (took 1.670911646 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.469664857 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09249935 seconds)
  done (took 1.745970111 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.162157814 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139273677 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169016521 seconds)
  done (took 1.643177444 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144273636 seconds)
  done (took 1.305005174 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.135774605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134029832 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.27356366 seconds)
  done (took 1.710773782 seconds)
done (took 10.932507193 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.129759372 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934265515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.437027152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135793777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713979838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430441122 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.42344952 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179209349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17721477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140847379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135268282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690763195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.43773045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878025512 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.392144283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.906053089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.711748863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11431309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14878757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114826127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.400919704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141527001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114080176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11399153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.73627579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423673018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111372935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924868079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112321798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115756292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431089898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113150947 seconds)
  done (took 21.12572301 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121745456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170276333 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148582942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115247578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11697638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142814369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125598147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12545076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207557901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113366068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164367273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11371658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118379878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142644381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138369161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113453391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145593081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116376313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120188427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143422851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136073826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111932065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143672805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117069024 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112054245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163893161 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114073666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125384872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141774665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118148569 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116879771 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144030708 seconds)
  done (took 5.419835133 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.168149418 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17946954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151206828 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150757975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191607116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115603931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229805978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152783882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207997642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114355014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134748568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141713918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154425963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113982295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167918707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113930867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116027477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145254659 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121390288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115707156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164708024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113870548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114870252 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145794446 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114495845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16430251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114716853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125909052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141818565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118565068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117972984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142115266 seconds)
  done (took 5.733283792 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.134742346 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129097873 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135590453 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166069008 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123312405 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126633473 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15739335 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122698162 seconds)
  done (took 2.262752139 seconds)
done (took 35.712095118 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.148660989 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133390649 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134708342 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157846619 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.260693168 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122071739 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131105904 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120090255 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159220894 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135217781 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113225784 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151367586 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135580405 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124255561 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.260070146 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12847064 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.266411126 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.265616553 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121321288 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129069148 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.154344019 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234253689 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157984581 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122400078 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.25173029 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117458909 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.255546038 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125484892 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123684118 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.147026508 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.233471616 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.158847642 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12156629 seconds)
  done (took 6.564630538 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.249802963 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155909725 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123448897 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122668361 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123890101 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152547487 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248779191 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155285835 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121712372 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121198513 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15243349 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229798119 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161403288 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11814124 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124694187 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111617959 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.282277045 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.155982091 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115558421 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.09504388 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116725832 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.152375152 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.263283548 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149723749 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122438681 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121735812 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.156586379 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128636145 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124033842 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123234104 seconds)
  done (took 5.766992227 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.134526281 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136369976 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.171203031 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191949771 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152271261 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165349222 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141464894 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136346375 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174965013 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117122191 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131208774 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182755365 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133098599 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126271116 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145984191 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134987296 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138315296 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14692884 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124569677 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13290207 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168177384 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132998898 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138219098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154402324 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114967602 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123110681 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157432343 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127192336 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124005359 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.161473979 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119260489 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119186997 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.147770428 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151811654 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116687588 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160760046 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142037578 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128523598 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159887262 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149226192 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1196971 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149015154 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142792954 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171695197 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.149951657 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129961248 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128538349 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.162550062 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114614534 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134022342 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189553248 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117008807 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.166286786 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116706108 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115210562 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124773678 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146708444 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119956998 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130693416 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149528931 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141332579 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12274358 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157831552 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119636066 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126635873 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.145718225 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117337078 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12038283 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.172795215 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126431501 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153815698 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115983843 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.158375378 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129609597 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126097088 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159456478 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116173462 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12683096 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.157629411 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122857893 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128839117 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148988475 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120331562 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132932604 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.166640426 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131532764 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127346294 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159673603 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120491874 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11858707 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164130182 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118240912 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.1212875 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.159712871 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117781791 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120609522 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128914853 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.158693878 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113838802 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142384281 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.15033578 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116331745 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141490302 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.150845621 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122635235 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12604681 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18850442 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117015025 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126937081 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.160745775 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117144399 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123879485 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150184347 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.116893545 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134281779 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162070942 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125548583 seconds)
  done (took 17.438319993 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.366049133 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.349033805 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190370851 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.435841155 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130798798 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277560388 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.347674721 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.348245918 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116440574 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181845861 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.180039891 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.316404471 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.150642472 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145803419 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350969891 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.407986934 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.18056346 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152703165 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184794032 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130926201 seconds)
  done (took 6.143534639 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.142129871 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152125144 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170242712 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144453001 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128283802 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164416742 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117856215 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138916144 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158599068 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126463871 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119204047 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163284003 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129938408 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133248351 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.163555253 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149110526 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124052522 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152949591 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139792484 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12204422 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134099262 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142695298 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125511155 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170026678 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136520974 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127865177 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.147091732 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121908432 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123025731 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.156721973 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122188744 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133505628 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.154867761 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107176143 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129073038 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162441079 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124387636 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120796177 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121224311 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151568422 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132767575 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129675072 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.156591484 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101532227 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135575619 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111817029 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.162184469 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129909965 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107346902 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.16922242 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129612371 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130505393 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154318384 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141267186 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123754215 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163457148 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129531816 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130835667 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151391944 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117005955 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115271796 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120141276 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.155983262 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131594915 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128760937 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167224911 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133608557 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115899346 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.151522418 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122119253 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120408292 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.162441913 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137838057 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125608659 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.15584398 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129913333 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124903655 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125468078 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130132065 seconds)
  done (took 12.030393008 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148994553 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126746761 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.164909512 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153085204 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129759955 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.153153728 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128598569 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136849131 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131521662 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.166758799 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132256777 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131156224 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171079196 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129014672 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126970043 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163822376 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130764399 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.185621368 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136552005 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143951079 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.163259201 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123205677 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130287371 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.159337883 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147487688 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128532782 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175643124 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132554191 seconds)
  done (took 5.26675248 seconds)
done (took 54.388477159 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.342215384 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.542718778 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.31093081 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.312951523 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.347587957 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.309346181 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.312811689 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.314960713 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.816960544 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.280081444 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.314022978 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.31229781 seconds)
done (took 29.726698532 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.41709126 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.846960412 seconds)
    (2/2) benchmarking "String"...
    done (took 1.600696266 seconds)
  done (took 4.648685584 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.304820795 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.308125202 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.553827078 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.305554464 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.303359026 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.306139844 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.318751599 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.305210419 seconds)
  done (took 16.600626873 seconds)
done (took 27.174247116 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.357499016 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.505321754 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.55602893 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.28234336 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.305132246 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.307037952 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.308565246 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.325204904 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.315481723 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.285482026 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.730226298 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.559568562 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.307025987 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.665121648 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.283933428 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.309002147 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.3204381 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.5491063 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.308188418 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.337101376 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.282579064 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.298348176 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.321010245 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.308219509 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.314229674 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.312683768 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.341149124 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.306646782 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.484709363 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.313166129 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.337740113 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.30675198 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.346882684 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.318133398 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.320356726 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.321422197 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.501920784 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.315663609 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.284364555 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.340155378 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.496885072 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.314963156 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.318465648 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.317271518 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.287383128 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.341449827 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.285542585 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.443350825 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.329629444 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.314379447 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.332992788 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.679506424 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.320074756 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.313782136 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.31115095 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.541967001 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.329827524 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.367081389 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.337389319 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.311692581 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.318196961 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.306913856 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.352401969 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.309026389 seconds)
  done (took 150.378440527 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.312012821 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.312486074 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.314207106 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.313998407 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.315336019 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.308569352 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.312423573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.312345317 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.310610301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.341124792 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.313772313 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.310886826 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.312295588 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.265938592 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.318460368 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.323387376 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.307614365 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.32425328 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.331685019 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.313108957 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.321481363 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.314256482 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.325376893 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.30979848 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.350785381 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.389964654 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.318922229 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.32749231 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.321158408 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.311975623 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.316955717 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.314224632 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.970077207 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.156583079 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.323681685 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.347494671 seconds)
  done (took 84.200043224 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.313621039 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.315229356 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.312890622 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.312918695 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.34871234 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.31089625 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.935302907 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.932015448 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.303277179 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.396005804 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.764874222 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.566488629 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.310553632 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.408452388 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.325996262 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.316037484 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.329012327 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.344059052 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.312421417 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.314900439 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.915484729 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.310049677 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.326654862 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.49218992 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.327646027 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348898359 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.707047027 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.299723241 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.312622565 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35251157 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.652445201 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.363474706 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.310132623 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.655182124 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.851506509 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.427559193 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.313800604 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348850852 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.315539639 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.60474461 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.311292101 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.318570595 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.320764986 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.962095354 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.312802907 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.93711168 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.314685834 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.293326088 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.312622969 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.317318283 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.345566908 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.093140978 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.316451336 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.316289765 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.315744582 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.319410839 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.315221446 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.316530815 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.350896531 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.344241769 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.413843497 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.318727129 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.318082007 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.319520746 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353782504 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.318361009 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.573013175 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.314375832 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.150034611 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.373230514 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.414698904 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.91884602 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.313965487 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417257779 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.435621482 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.316154179 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.319568831 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.318268847 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.317624012 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.431094181 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.315909054 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.027355693 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.499673387 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.331421106 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.823765796 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.421635127 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.316072301 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.721553287 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.319484057 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.318698811 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.059163632 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.412359812 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.316720001 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.31959757 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.316583329 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.029739324 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.936690094 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.619199271 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.319193065 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.01711516 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.321087572 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.203317935 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.908932933 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.967961632 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.319638266 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.432631973 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.499268403 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.336140161 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.32308078 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.830523636 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.319771601 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.376174033 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.321939299 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.724267848 seconds)
  done (took 388.337500289 seconds)
done (took 624.118712975 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.191477973 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.140486205 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.294084844 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.155199276 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.132178006 seconds)
  done (took 12.125700958 seconds)
done (took 13.338089352 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518575329 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.519459286 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.384717787 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520922368 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352378134 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538873324 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.502390446 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.337097726 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.439230437 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.40416627 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430800883 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.375123179 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.35479654 seconds)
  done (took 19.889496649 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.630140228 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.328483552 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.384050679 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.608770578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.363072126 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.621776785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.659509083 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.327875081 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486420476 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.341360982 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.342665747 seconds)
  done (took 19.309640735 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.634575899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.329864921 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.388252191 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.611677075 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361591671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.632693722 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.66338283 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.328444897 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.485474107 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348723994 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.344131141 seconds)
  done (took 19.34559331 seconds)
done (took 59.760925524 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.359876623 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.42270818 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.353341256 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.341010192 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.339183307 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.338660966 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.341052355 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.339986741 seconds)
  done (took 12.04897094 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.337493179 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.338576242 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.337775509 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.337735777 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.339259202 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.337334938 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.336008158 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.337833892 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.337890333 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.337393105 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.336592289 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.337966396 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.338404352 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.338451664 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.338852588 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.341463355 seconds)
  done (took 22.624537213 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.341811073 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.341421887 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.337905013 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.339293687 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.340056966 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.337728992 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.339857679 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.339844922 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.336588852 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.34037863 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.340296051 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.340497205 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.338706568 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.341099509 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.340012632 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.344033593 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.339682643 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.340097075 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.344356523 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.340658541 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.340213924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.339707379 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.339068635 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.34153609 seconds)
  done (took 33.381802801 seconds)
done (took 69.271523362 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.342713556 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.336558715 seconds)
  done (took 5.893707107 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.398154396 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.401494041 seconds)
  done (took 4.017535187 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.340722899 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.340108927 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.342993411 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.339609422 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.341697493 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.343289682 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.342057384 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.341441961 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.339858247 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.340592307 seconds)
  done (took 14.630556703 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.34289164 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.341233559 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.340234853 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.341207125 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.34165202 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.338519849 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.342292332 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.340290488 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.341972926 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.341105637 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.341082768 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.342408604 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.342123587 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.341771098 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.343537307 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.341342674 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.343918458 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.340404105 seconds)
  done (took 25.367212783 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.354420888 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.35958608 seconds)
  done (took 3.932245729 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.468544609 seconds)
    (2/7) benchmarking "second"...
    done (took 1.381891411 seconds)
    (3/7) benchmarking "month"...
    done (took 1.447328356 seconds)
    (4/7) benchmarking "year"...
    done (took 1.437153784 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.384910985 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.363961096 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.384654502 seconds)
  done (took 11.086302243 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.330768179 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.621112635 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.802776082 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.483664495 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.318087151 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.341451253 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.322591976 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.341235105 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.343318025 seconds)
  done (took 15.12487038 seconds)
done (took 81.271879183 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.32775413 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.374860051 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.353432832 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.340360321 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.637235613 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.369144076 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.326987352 seconds)
done (took 16.954444728 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.321698244 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.322295785 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.305936089 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.3403787 seconds)
  done (took 10.51003522 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.331067981 seconds)
    (2/2) benchmarking "read"...
    done (took 1.650758198 seconds)
  done (took 5.202007573 seconds)
done (took 16.935942079 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346132968 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.345340876 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.344549425 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.345987975 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.344015887 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.343325453 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.346519348 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.347693749 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.344055626 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.345192347 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.345628044 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347176423 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.343515724 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343333527 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343155139 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.345386013 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346173596 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.346665206 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343423613 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346820394 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346555777 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.346399471 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.345460613 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.345471525 seconds)
  done (took 33.50670001 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.346538642 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.344484045 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.34412744 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.345174742 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.345884893 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.346548552 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.346700543 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.347103776 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.3451134 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.346024399 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345939311 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.344348432 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.346479467 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.345165941 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346210429 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.346596182 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.347355556 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34739252 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347216437 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.346203075 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.345757612 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3450706 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.347290894 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348559236 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.346939604 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346601621 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.34727814 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.34697852 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346554126 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.347937385 seconds)
  done (took 41.611108591 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.351583283 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.353831032 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.347754487 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.347683469 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.34711049 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.345178983 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.348341254 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.347621612 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.348296879 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.346991103 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.347194759 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.346740004 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.348859512 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.346628744 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.346013853 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.348144906 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.348787388 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.346720067 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.347004648 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.348726192 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.347917249 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.349266835 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.349356832 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.34731 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.350816105 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.349087835 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.347174324 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.349498 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.348707161 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.349591429 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.349053916 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.348627407 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.350986986 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.349307396 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.348035021 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.348975388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.354393314 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.353592674 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.348883772 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.347673392 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.348647802 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.34956755 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.349466284 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.349958148 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.350880053 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.349061837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.350367921 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.351051468 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.348059322 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.352818277 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.348618058 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.348771365 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.349844318 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.350188821 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.351281852 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.349281344 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.351986151 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.350210693 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.349602801 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.351419698 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.351165974 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.349829424 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.351014864 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.352126345 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.351730676 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.351575745 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.35139047 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.350781711 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.350589217 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.352081887 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.350366733 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.352163761 seconds)
  done (took 98.389825687 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.350350567 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.35265351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.35140272 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.350311383 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349711665 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.353357077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.350238202 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354127228 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352445937 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.351784869 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351400204 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.35136241 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351621756 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.353147088 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352181125 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.352513339 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.35098908 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350991695 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.353087372 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.353473257 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352274529 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.353025401 seconds)
  done (took 30.970042647 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3548861 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.354590717 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.353250011 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354667052 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.356595901 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.356794285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.354909729 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.355144396 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352732784 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352810023 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354044263 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353152022 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355444788 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353342042 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354229472 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.358404925 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354939439 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.355029264 seconds)
  done (took 25.613787993 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.355305036 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.355762008 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.355777943 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.356055076 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.354021521 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.355423548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354733711 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355820379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.354015268 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.353264672 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.358129978 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355303088 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.35584004 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354171886 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355140186 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356606034 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.358233277 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35563526 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35646781 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356296129 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.354664043 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353680192 seconds)
  done (took 31.049524316 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355255881 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.354830918 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.355497333 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.356615572 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.355020048 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.35798785 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.356342421 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.354981799 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.359452356 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.358282804 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355506757 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.356719846 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.359788308 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.357646816 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.355558429 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356001657 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356578449 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356449249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355682043 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.356748757 seconds)
  done (took 28.361976745 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.357449514 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355042456 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.358725856 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359233629 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358413849 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.358097259 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359521596 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.358707014 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.356365069 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.358162608 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359405932 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.356941103 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359837381 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358221728 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357869714 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359645979 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.360748885 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.360499499 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36035948 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35692537 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358680319 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359687003 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.360670119 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.360023549 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36126827 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.360783546 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361402669 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.361714342 seconds)
  done (took 39.288024154 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361281049 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.358375617 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.360632315 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.360617872 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.358999318 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.359990179 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.360041942 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.360333326 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.359380156 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.357586566 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.358518799 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.361855229 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.360695448 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.358125369 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.360208075 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.359735212 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361318161 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.361165627 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.361706798 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358480763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.359695706 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366830523 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.360585452 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.36071731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35915634 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.359783807 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359071976 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.359575971 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.359197287 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.360530883 seconds)
  done (took 42.038894496 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.377647213 seconds)
    (2/2) benchmarking "in"...
    done (took 1.37952837 seconds)
  done (took 3.992745531 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.36076826 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.362316167 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.360304848 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.361398484 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.360249933 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.360906182 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.360826131 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361371083 seconds)
  done (took 12.123968332 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.355313076 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.36183393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.361597538 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.361308582 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.362887386 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.356197629 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365004449 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.366954704 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.358589949 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.359761013 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.3607888 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.360297643 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.35948217 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.358500677 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.358851654 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359513287 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.368136489 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.365327969 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.36447093 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.363072367 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.365929005 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358135788 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361982873 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.367520333 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.360318082 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.368625453 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.366164277 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.366509339 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.357942976 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.364938922 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.36001216 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.365571573 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.365103812 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.364674008 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.36464274 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.364299607 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370514634 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364885724 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.367745177 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.368521971 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365854355 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.36559418 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.363212995 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.366521989 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366687391 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.371498572 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.365503738 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.365387713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.361868565 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.364307339 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.370476894 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359334374 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.367478396 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365730579 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.367486638 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.37424149 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.372163357 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.366010535 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.368986848 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.372484576 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.379943797 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.376607134 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.369941443 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.37204977 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370797449 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.383529958 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.374659238 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.373922723 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.369696352 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.368200411 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.370978091 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381140745 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.38034326 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.371198288 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368973819 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.367413824 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.36450589 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371292998 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.374145659 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.375814592 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.374853945 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.370052161 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.371122852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.380667761 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.366426859 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.372411705 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.370100138 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.368879684 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.36437392 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379006316 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.375671905 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.365538461 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.363747961 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.365087995 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.366581185 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.371601835 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.363150431 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367532696 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.373211752 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.368953746 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369201471 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366489414 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.373778346 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.375017627 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370688975 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.372983818 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.377515981 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365109336 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.377107196 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.377120905 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370455086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.365677538 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.372146838 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.372454403 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.366166101 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.372118969 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.374380073 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.367178317 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.375228265 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.370719546 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374645288 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.3867678 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.376139434 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.368616744 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.367705857 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.378128139 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36958943 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.370151102 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.374750199 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.371947005 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.370717108 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.372653574 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.377630693 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.367246134 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.376737447 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366083009 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.376071596 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.372868069 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.371551118 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.370108185 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.37521846 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.371472761 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.375034844 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.37714632 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.380418864 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.371995726 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.382431504 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.373806957 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.374518525 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.375677764 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.374692321 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372887804 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.368994425 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.377610792 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.370334572 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37710316 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.369646251 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.377640944 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376338038 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.372954793 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.37276706 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.36989728 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.374279545 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.378519819 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.376203399 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.3767775 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.376515619 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.373563851 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.373215515 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.369174084 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.37450184 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.366175997 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.373637932 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.379258712 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.372719511 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.37595633 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.371157886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.380548819 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.374624287 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.375652552 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.370204655 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.376293019 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.380592526 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.378423112 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.381604822 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374283031 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.376102618 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.369886422 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.372899378 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.374474707 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.371415324 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.38188341 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.383682174 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.390061259 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.37358717 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.376029217 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.368858435 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.379427522 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.375149176 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.383682029 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.374098099 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.376491831 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.369516864 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381485523 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.37178598 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.379943101 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.371040681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.376592143 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.374074027 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.375697597 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375592313 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.372557449 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37659975 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.378999578 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376083005 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375943443 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.370920705 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.379671979 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.368716903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.372325666 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.380204761 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.379254031 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.380052659 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.384762843 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.376195296 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3848514 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.378411203 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.374890722 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.379429284 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378128661 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.377877787 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383298602 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.375488427 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.376135881 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384790697 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.382853569 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.373699508 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.381655631 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.384857986 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.37678231 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.373387617 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.381614095 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.375981575 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.378495715 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.377305374 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.373469899 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.381639827 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.383318362 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.385708787 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.373040412 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.38167303 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.375986259 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.382612497 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.378978731 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.383174676 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.380676582 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.386458412 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.385811073 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.379854796 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.377583974 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.383250961 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.37811842 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.379068917 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372453035 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.385783473 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.382939072 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.384840699 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.379508512 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.378429559 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.382733234 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.374470465 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.38133459 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.373028301 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392952461 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.400536581 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.383975903 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.383393874 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.382503545 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.383589439 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.385422968 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.377755072 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.376758914 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.377332578 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.376537725 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.37673031 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.382814954 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.375611568 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.383054403 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.379597702 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.38300674 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.382333633 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.382162577 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.376504084 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.385383791 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.381127162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.382484312 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.375381971 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.38256057 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.37768683 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.383023968 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.383084111 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.378623009 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.389595039 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.385585424 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.379945554 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.380744749 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.378890466 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.378659083 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.382064319 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.388977993 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.380714225 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.389050346 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.380619825 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.384776659 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.380759356 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390057574 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.393202338 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.379242189 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.387712345 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.380051428 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.377592442 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.379369189 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.386016539 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.390885472 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.395251305 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.378972786 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.388888256 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386482768 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.384244612 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.383280256 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.385452132 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382514537 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.384865059 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.392634817 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.390007852 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.382096676 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.387431998 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.392320306 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.384132014 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.382281824 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.376675286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.386974378 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.394147568 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.383813793 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.385523045 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.383623821 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.389120954 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.386003746 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.38402857 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.386299941 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.383268897 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.39220814 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.390705352 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.387779745 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.384571792 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.391833851 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.394873337 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.390405272 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.398080965 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.382734666 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.389769271 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.384317604 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.38236051 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.38335705 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.383811994 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.387532816 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.380928304 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.388519546 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.385386334 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.384773287 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.386023187 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.392398704 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.380359698 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386803981 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.400499993 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.380872322 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.388071852 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.385885115 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.379036124 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.389330559 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.386521113 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.379601133 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.383419561 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.387179465 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.391591692 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.377728396 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.385326485 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379648872 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38827666 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.386620331 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.38609668 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.386166029 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.386487219 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.381609644 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.389996216 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.389374833 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.394814357 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.385430204 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.386254478 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.382581937 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.395145891 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.39845244 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.382284634 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.392855553 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.387295907 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.383357972 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.386636873 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.396883612 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383152382 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.390563283 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.383860438 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.385934127 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.387398208 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.390957468 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.39333766 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.392356312 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.383866698 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.385768134 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391404158 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.389874241 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388912069 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.389733502 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.396365919 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.385300633 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.386057509 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.390328713 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.388320551 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.395990965 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.385532517 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.391257298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.387642131 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.391991587 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.389982234 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.391927384 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.384518638 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.389522758 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.398050209 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.395662869 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.388059021 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.390376251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.388210109 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.380605137 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386116548 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.389615835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.383678478 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.388036558 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.390405142 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.383942686 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.386730024 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.384090014 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387735008 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.393243508 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.395342059 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.387505601 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.401280424 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.397751428 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.396969331 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.381944887 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.388493485 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.387487525 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.390450156 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.38818418 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.380264462 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396245887 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.398087878 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.393389543 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389818556 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.390184064 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.385507316 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.390948473 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388464793 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.388950487 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.396150471 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.390357552 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.397862839 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.392310412 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.389365041 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.387719342 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.387581826 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.391822656 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.392301753 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.393864175 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.395165657 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.398236895 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.394418108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39569176 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.392988253 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.392999501 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.392971912 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.387034154 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.394293684 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.386538512 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.397121161 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.396439435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.389002988 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.394009071 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.393219683 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.388804641 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.393995282 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.400067664 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.392842932 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.387920847 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.392908336 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.398154686 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.401853153 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.391188457 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.388964678 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.392516802 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.396786799 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.39223984 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392820626 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.388885837 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.406156416 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.404364728 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.38734897 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.393560098 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.397064991 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.402014987 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.392260175 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.392283708 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.392642038 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.395249555 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.396980635 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.392262673 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400873676 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.400916439 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.388521659 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.394236472 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.389840426 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.393769838 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.392275723 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401963316 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.393252888 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.39162164 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.407075641 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403594679 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.394628584 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.416039941 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.402356514 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.395517903 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.397733284 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.386306468 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.394208449 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.390393622 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.396598564 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.390570155 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.392959751 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.393178137 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.386983008 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.395923914 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.402785284 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.401844844 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.392619585 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.384188011 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.389519726 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.39556355 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.392567825 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.392943276 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.393659142 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.392452344 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.392806431 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.387893716 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.405324641 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.411571133 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.399400046 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.392676558 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.391067749 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.395575292 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.400221444 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39565224 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.397802092 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.393779935 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.393780967 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.393119674 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.400778616 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.392056177 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.389501506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.390059348 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.388380051 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.392620808 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.40189916 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.41279563 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.396860332 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.401747473 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.39473687 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.392788005 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.391472103 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398653321 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.3952388 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.389964185 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.392902693 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396858137 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.395963926 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.393698776 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.390575552 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.398621749 seconds)
  done (took 824.900070959 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.394757075 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393875485 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394945746 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.394670312 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395843841 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394738646 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393872878 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.396631696 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.397535415 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.3947518 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.395818399 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394338708 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.394181683 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.39594585 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39509891 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393877698 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396305656 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.396541889 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.394349215 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395979275 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.395341878 seconds)
  done (took 30.561180929 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.399086692 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.396040756 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.395849172 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.396899308 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.397891012 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.395185678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.398935468 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397133367 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.397601687 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395018669 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.398295135 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398086207 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.39887623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.396658907 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398024674 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396450207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.400314067 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395303056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.397747466 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.395855409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398799618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.397536938 seconds)
  done (took 32.003408501 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.397217051 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.398692119 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.392007058 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.402375116 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.398944988 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.398663315 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.398901889 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.400545536 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.398276358 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.393991315 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.39435268 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.393453803 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.397797697 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.403683233 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.397488618 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.403267969 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.398139039 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.400465698 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.399181973 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.399630238 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.404881975 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.406912179 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.39831007 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.393908761 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.400744785 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.400508481 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.396844074 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.399040861 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.394657834 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.404552407 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.39912743 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.395109754 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.404802967 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.402922248 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.396995845 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.403164312 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.400683293 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.398478712 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.40197134 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.40288528 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.417013515 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.401852399 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.406098017 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.41190038 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.402412908 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.398963432 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.406840718 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.402014684 seconds)
  done (took 68.48722754 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.400236577 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.400127158 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.400841917 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.402067757 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.403339797 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.400437489 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.402599377 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.402431028 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.401177577 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.400408406 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.402174137 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.400760261 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.402842589 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.402308214 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.402806445 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399991923 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.403316584 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.402575791 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.402738156 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.400896473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.402434833 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.403045082 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.403751895 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.401546669 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.402182238 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.401322147 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.401657193 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.401659149 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.402912814 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.401904291 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.403412936 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.402757524 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.403304643 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.402700283 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.402744356 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.40183102 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.404717065 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.401684971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.402952861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.40556548 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.401558666 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.403823938 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.404530588 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.404308092 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.405000588 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.403534646 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.403539899 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.403068181 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.403840153 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.403705648 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.403621889 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.403791816 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.405628723 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.40567626 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400421842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.399656338 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.402139658 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.400349618 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.40103532 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.404016463 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.404450789 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.398932273 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.403423597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.402370409 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.403321127 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.401118917 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.401911258 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400528415 seconds)
  done (took 96.637639915 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.402769474 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.402370666 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.401760564 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.40250234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.400881364 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.401361137 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.401163741 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.402804499 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.403647862 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.402139839 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.403576494 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.401145117 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.403622103 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.403557447 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.402131776 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.402291881 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.402242894 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.402795237 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.402826166 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.401055927 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.403595631 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.402416569 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.402509169 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.405362836 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.402836521 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.402833463 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.403789177 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.403347703 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.402717986 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.401963355 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.399851165 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.403592074 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.402810918 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.404963003 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.405534262 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.40443584 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403177318 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403881802 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.403603666 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.402563332 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.403268739 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.404512913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.402118487 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.403417933 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.40446153 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.403836652 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.405458674 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.402743066 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.402828777 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.404173704 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.403865788 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.402455174 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404434444 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.404780695 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.405070542 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.404312764 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.405700969 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.399784158 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.403899582 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.401577282 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.405500034 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.406303395 seconds)
  done (took 88.266806421 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.403808542 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.401959317 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.403136233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.404168413 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.402456412 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.396273398 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.402995881 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.40062795 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.403386812 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.402362665 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.402443795 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.403761266 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.402462297 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406515266 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.403699277 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40357519 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.399207317 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.405188749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.399646249 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.394817151 seconds)
  done (took 29.313151906 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.404684641 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.400572368 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.396128879 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.396073408 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.400949965 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396579322 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.401552394 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399653154 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.401273448 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.404385944 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.398152534 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396983745 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395938739 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.398681593 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.403339514 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.398666477 seconds)
  done (took 23.655283003 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.394704398 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.395082268 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.40120157 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.399235398 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.398548147 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.397895875 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.400623527 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.393715191 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.394649705 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.394885746 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.395470969 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.396521459 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.395340247 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.397809584 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.402762087 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.404040429 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.396338666 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.402810887 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.401671161 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.400910223 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.398702875 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.404821506 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.400251111 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.396232826 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.395536044 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.396134602 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.401499139 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.397878611 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.397314631 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.397093615 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.398137496 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.398070558 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.394287079 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.397676747 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.396881362 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.396646858 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.39617395 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.400185029 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.397252241 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.397388634 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.400061544 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.397978448 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.397239609 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.399742254 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.396417416 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.396182826 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.397560407 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.398360247 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.398621877 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.396566105 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.39635847 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.397032913 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.398631951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.400700304 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.399499059 seconds)
  done (took 78.159226525 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.400136867 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.397696021 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.399886222 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.400485676 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.399337181 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.402709764 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.403016566 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.401165133 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.400536564 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.405891548 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.399703705 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.401899515 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.399932998 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.408551343 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.399504183 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.399874453 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.398448144 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.407677566 seconds)
  done (took 26.487379029 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.406771776 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.400661998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.40771599 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400577709 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.400392836 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.397095719 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.40489673 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.40631501 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403580976 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.407478402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400032464 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.403943061 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.402771837 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.401056976 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.401089749 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400479649 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.400385415 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.399208369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.405730571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.401754111 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.401258525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.404922667 seconds)
  done (took 32.12348911 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.394114959 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.394928619 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.397391001 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.40981211 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.409603385 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.39335695 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.398228675 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.393632667 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.416652327 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.436261029 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.4249725 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.409959115 seconds)
  done (took 18.142888003 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403119705 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403233432 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.400956919 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401909674 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404505076 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407939359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405207737 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400895054 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400142924 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406964912 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407891465 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408670821 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406931287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40377253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407718396 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403100819 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405512436 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410395588 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406573789 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411514306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402764522 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403985379 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401883997 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403848798 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403268725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409658761 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402695594 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40306942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403637483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40714681 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405918015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408469566 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403940955 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407178106 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407959957 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404163282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403569286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40543632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405116396 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404507347 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.410436808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405285826 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40460145 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402756642 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410584128 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401145038 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40118559 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403825246 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403812367 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406457384 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404610401 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4106103 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401854268 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402664504 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403261899 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405675951 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404284935 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408005637 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404353745 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405001203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40160743 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402566492 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405671047 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405736112 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403857174 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405653518 seconds)
  done (took 94.003680012 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404394317 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403556353 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401188897 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408051711 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401452639 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405085102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404148132 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40395249 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405986035 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402683096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401945955 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404949882 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407242227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409256539 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404166047 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403799542 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404645473 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404712016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404116671 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411110721 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408116406 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410033297 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408744889 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408387602 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407426245 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411028829 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404972556 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407364934 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405645019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403127009 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403510131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4084479 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404653653 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.406909018 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405752238 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411531073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41481239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407567109 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408909392 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408833519 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40651292 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409117532 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404050113 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411143164 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410422666 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409807585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40919066 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405587116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411061157 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410521643 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410045106 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405706624 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405832467 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408272894 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403673882 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412696389 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404248323 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413021595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409871281 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410732085 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404639953 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412262549 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412010395 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4041329 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404706379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411827947 seconds)
  done (took 94.140183169 seconds)
done (took 1925.053987056 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.566432048 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.524664868 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.400272294 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.414630097 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.397122977 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.40375325 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.412810797 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.399715376 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.399513258 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.402873019 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.402943457 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.592095747 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.436353448 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.394553015 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.40135775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.49918345 seconds)
  done (took 28.320763479 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.431862732 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.414676511 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.517788393 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.413820763 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.429646353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.595570266 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.463824788 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.409720996 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.57812445 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.428973056 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.398666858 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.425978342 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.40816056 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.395664357 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.427247997 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.58826251 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.667219914 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.403902576 seconds)
  done (took 30.674584853 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.845238457 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.397157595 seconds)
  done (took 5.516229618 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.425833732 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.405612552 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.401607283 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.403779118 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.394742629 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.40053998 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.403555634 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.398350818 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.407665817 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.525760821 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.410801677 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.416183522 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.399267714 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.402871562 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.406181625 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.450002223 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.559175238 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.411365804 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.405285659 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.406284308 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.407403721 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.497975079 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.447907257 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.409491202 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.521620803 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.405632003 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.405727178 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.407751698 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.524116807 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.4122894 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.408163544 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.406410752 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.409427069 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.397081064 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.931135359 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.401706501 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.427736236 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.409199192 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.407639699 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.538057141 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.406579265 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.415800891 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.398070559 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.928727263 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.510999648 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.51763451 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.39654897 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.40286246 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.40688671 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.471525067 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.408214489 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.403884027 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.464268218 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.210201663 seconds)
  done (took 89.228193292 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.423287568 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.396425987 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581905801 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.414623612 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405378814 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.399516676 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.401219707 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.67676019 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.420911312 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.393657178 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.722369807 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.012619654 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.394983977 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.455881145 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.434074632 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.449840121 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.398514748 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.418791202 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.394683776 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.395424512 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.954315682 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.395859895 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.396460896 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.483350216 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.438174158 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.935209818 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.404334352 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.394343366 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.410289714 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.388829776 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.975814588 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.397057356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.44393738 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.395010573 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.680189987 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.775537979 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.735910077 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.39614349 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.433080762 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.396424538 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.424032126 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.908128681 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.751972152 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.390641028 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.3936595 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.905282617 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.39034008 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.40629723 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.409235105 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.66407111 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.3957438 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.392728404 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.405149911 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.390576074 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.39091094 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.451811086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451440583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926824587 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391045054 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.394624083 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.396233253 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.395327949 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.400905712 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39588557 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.401664193 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.755225376 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.644861209 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.398246297 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.756333252 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.957097191 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.396297898 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058048732 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.395585741 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.414395416 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.444303844 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.396487841 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.399367797 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923094376 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.394811854 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.394702992 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.737723093 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.397778714 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.703931164 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.410452543 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.398384651 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.969716938 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.40183728 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.445959284 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.396767801 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.39176398 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.415688912 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404443809 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.684222632 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.439497205 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.397709059 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.401032556 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.411003616 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.396820062 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.410977903 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.411472047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03800997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.403439504 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.398836588 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419185436 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398535198 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.397167026 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.394190762 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.396777599 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.680609032 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.401758019 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.419651788 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.402539734 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.3949851 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.399359375 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.490292485 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.403883119 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.697036158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.396664261 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400723323 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.402492055 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400630177 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.420003666 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399092735 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.417620925 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.398584218 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.710452733 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.41636477 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.416030739 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.406180102 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402448147 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.408425468 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39708249 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.455686492 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.40375939 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190915349 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.41640862 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.417251971 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.401315222 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.417322055 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403256256 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.42368942 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.399569068 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.700647166 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.69322305 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.645714555 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.398960391 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.403316873 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.205600317 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.406384801 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584820647 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.420922138 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.401208336 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.686319952 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.624378395 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.406568488 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.3995999 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.407487256 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.680808317 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.414450744 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.715957795 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.995816288 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.408606861 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.414175356 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.198463951 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.205941186 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.407848703 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.405459486 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.704851351 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.416442712 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.403214433 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.404960955 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.407398252 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.401427411 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.410371876 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.411385837 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.406211584 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.406108328 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.699243163 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.60232553 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.419872182 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.406540054 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.925542003 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.426683311 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404783764 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.416013966 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.407676812 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.40502086 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.456881891 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.406124869 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.455979067 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.408038261 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.408695901 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.954627695 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.405157673 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.425514226 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.604125376 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.140939862 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.405010816 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.407284659 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.406242458 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.465137538 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958424375 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.441494053 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.704162294 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.418447054 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.44951345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.406525514 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.419783182 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.9613513 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412196354 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.409843316 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.137858659 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.404330342 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.889649765 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.406114417 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.409497461 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.069850692 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.410825952 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.409106939 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.406566477 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.426389753 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.729300455 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.410587572 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.419241659 seconds)
  done (took 513.919097836 seconds)
done (took 668.929849548 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410933023 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.410577414 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.412476564 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.411555951 seconds)
  done (took 10.927418615 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.427161846 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.416561324 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.425009158 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.415750649 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.425953942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.419770159 seconds)
  done (took 9.812848898 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.408289234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.408888511 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.411915513 seconds)
  done (took 8.513310792 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.610741254 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.42632757 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.764761724 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.418198912 seconds)
  done (took 9.504616403 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.424484919 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.421125082 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.421494633 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.424018498 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.427001356 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.425504605 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.42916904 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.425343227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.428126889 seconds)
  done (took 14.108256779 seconds)
done (took 54.150216791 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.482470923 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.411075289 seconds)
    (3/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.708652639 seconds)
    (4/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.487289269 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.483888436 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.44424631 seconds)
    (7/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.518422293 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.521891493 seconds)
    (9/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.660556224 seconds)
    (10/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.497525654 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.42553213 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.417313032 seconds)
    (13/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.504115865 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.656286124 seconds)
    (15/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.680924642 seconds)
    (16/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.510261542 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.388986472 seconds)
    (18/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.568959877 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.55481097 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.415899344 seconds)
    (21/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.458027025 seconds)
    (22/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.446101352 seconds)
    (23/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.621965679 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.494309563 seconds)
    (25/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.409754013 seconds)
    (26/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.476047894 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.390609484 seconds)
    (28/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.452756357 seconds)
    (29/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.499642976 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.496160804 seconds)
    (31/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.605876691 seconds)
    (32/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.748711334 seconds)
    (33/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.675168189 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.670686986 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.40206503 seconds)
    (36/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.488952546 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.479465417 seconds)
    (38/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.473409407 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.535791898 seconds)
    (40/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.910715498 seconds)
    (41/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.393945934 seconds)
    (42/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.77146203 seconds)
    (43/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.392805429 seconds)
    (44/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.699368469 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.429508072 seconds)
    (46/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.685192165 seconds)
    (47/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.621933812 seconds)
    (48/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.556823612 seconds)
    (49/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.526638086 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.524790752 seconds)
    (51/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.592612156 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.425225342 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.520086507 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.6506543 seconds)
    (55/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.389725751 seconds)
    (56/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.395132885 seconds)
    (57/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.453000082 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.446994518 seconds)
    (59/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.390377417 seconds)
    (60/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.574489868 seconds)
    (61/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.529261617 seconds)
    (62/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.479573738 seconds)
    (63/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.509671249 seconds)
    (64/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.394976969 seconds)
    (65/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.77091244 seconds)
    (66/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.447187377 seconds)
    (67/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.456015314 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.564154258 seconds)
    (69/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.40289532 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.506960052 seconds)
    (71/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.454925597 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.505378382 seconds)
    (73/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.619257074 seconds)
    (74/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.53482206 seconds)
    (75/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.395846664 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.575118698 seconds)
    (77/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.393553662 seconds)
    (78/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.431129723 seconds)
    (79/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.426206837 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.530527063 seconds)
    (81/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.448469799 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.500204546 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.524008323 seconds)
    (84/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.533863449 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.70386819 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.502974816 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.493383186 seconds)
    (88/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.3949701 seconds)
    (89/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.401784011 seconds)
    (90/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.402593616 seconds)
    (91/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.40809132 seconds)
    (92/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.437891312 seconds)
    (93/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.479962474 seconds)
    (94/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.573462067 seconds)
    (95/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.500494235 seconds)
    (96/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.424278595 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.586521304 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.513063219 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.442428948 seconds)
    (100/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.540344952 seconds)
    (101/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.646319755 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.386074135 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.549457982 seconds)
    (104/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.371708855 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.518010161 seconds)
    (106/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.489958255 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.469627871 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.593439322 seconds)
    (109/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.734516997 seconds)
    (110/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.888205528 seconds)
    (111/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.697315187 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.547455698 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.418748555 seconds)
    (114/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.419443552 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.396062622 seconds)
    (116/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.371652252 seconds)
    (117/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.712648921 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.498286674 seconds)
    (119/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.36634019 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.549129021 seconds)
    (121/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.56541848 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.426710596 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.366692315 seconds)
    (124/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.563680001 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.735861142 seconds)
    (126/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.379857056 seconds)
    (127/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.696644086 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.502411329 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.565956004 seconds)
    (130/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.52114724 seconds)
    (131/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.480171093 seconds)
    (132/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.502299363 seconds)
    (133/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.571172269 seconds)
    (134/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.372592085 seconds)
    (135/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.629120807 seconds)
    (136/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.427519929 seconds)
    (137/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.461198911 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.540201632 seconds)
    (139/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.557207398 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.602427149 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.454545599 seconds)
    (142/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.463906527 seconds)
    (143/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.660544855 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.588232246 seconds)
    (145/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.397828868 seconds)
    (146/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.368153326 seconds)
    (147/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.536769933 seconds)
    (148/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.496117137 seconds)
    (149/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.368715838 seconds)
    (150/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.426325693 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.36992523 seconds)
    (152/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.373637311 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.409589205 seconds)
    (154/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.423210624 seconds)
    (155/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.438517472 seconds)
    (156/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.423333763 seconds)
    (157/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.600181418 seconds)
    (158/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.546468313 seconds)
    (159/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.369525441 seconds)
    (160/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.422009775 seconds)
    (161/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.45856727 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.630128318 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.45150604 seconds)
    (164/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.485573922 seconds)
    (165/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.662223923 seconds)
    (166/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.564680402 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.433517697 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.400562936 seconds)
    (169/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.519154861 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.505044585 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.485658484 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.508035509 seconds)
    (173/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.375552535 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.806021975 seconds)
    (175/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.376093457 seconds)
    (176/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.634509254 seconds)
    (177/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.600269655 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.49845879 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.495910752 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.575571256 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.537139951 seconds)
    (182/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.473534125 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.58892771 seconds)
    (184/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.498304858 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.3698369 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.530758169 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.552781885 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.473092456 seconds)
    (189/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.472905025 seconds)
    (190/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.470802026 seconds)
    (191/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.597430272 seconds)
    (192/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.407119657 seconds)
  done (took 339.224594241 seconds)
done (took 340.510157129 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422567568 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.489542561 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.403823634 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.402224927 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404216018 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.404798855 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.422467517 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.40510517 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.416198051 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.416292909 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.404115358 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.409997577 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.418705898 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.412334158 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.43687865 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.402574718 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.402905377 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.41194222 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.419560944 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.41763142 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405252351 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.404924822 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.43109061 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.403808248 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.411943907 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.413663115 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.409179276 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.39863564 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.409178976 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.417188038 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.399802929 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.410622664 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.420668766 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.414099998 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405710111 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.413596063 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406119758 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.49188467 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.425550548 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.414183265 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.414012279 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.420838048 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.410668235 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.409068912 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.415329501 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.431279844 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412612936 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.419273653 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.399006179 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.396983554 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.426524566 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.416546134 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.412943671 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.397086534 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.39574227 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.422078395 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.415955519 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425048475 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.414874927 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402890082 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.434411229 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421915725 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.412636887 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410700568 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.408016208 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.416146544 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.400627184 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.408988976 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.400178142 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395481005 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395657929 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.401211611 seconds)
done (took 111.075548616 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.513048846 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.386154803 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.543501892 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.395505011 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.551261494 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.508225838 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.392731653 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.394310029 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.39177026 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.191716128 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.391396812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.39501787 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.372503344 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.387885023 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.50029913 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.387863946 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.387049194 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.082359201 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.38289778 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.51126074 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.374902811 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.383034719 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.38420313 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.173537491 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.364841837 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.364549002 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.509694065 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.380629665 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.070348175 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.361164368 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.363232913 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.064296881 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.505207999 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.397494828 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385081589 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.385564438 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.531693364 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.378162867 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.493327692 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.4926191 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.525182853 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415790288 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.360642776 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.367694418 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.378748152 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.377647898 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.376441076 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.405496181 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.369118073 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.377813769 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.077321407 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.388251287 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.387732792 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376595044 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.376001119 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.397595066 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.376936095 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.377198815 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.505177681 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.37918674 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.490490665 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.163748457 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.172820829 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.375208917 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.360921671 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.372803356 seconds)
  done (took 111.228787023 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.433652641 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437082913 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.473192167 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.363905843 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413371897 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.473251503 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.360424603 seconds)
  done (took 11.200736391 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.365600718 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368706606 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.408899883 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.410068337 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.370278346 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.531553193 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365820894 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.370914453 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.366578661 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.408733347 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.3677723 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368847407 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376585723 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.356248065 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405646388 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.371410705 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478904807 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.360387099 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.368816883 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.515983791 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368840922 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.376999093 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.409802569 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.372050957 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368009985 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.367252015 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.147197217 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368725912 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367787001 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368403429 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368229583 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.42632105 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368403215 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.35870343 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366996432 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474981205 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.369355232 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369392084 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.368910947 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.361649481 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.369607426 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.369206664 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369039225 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367772034 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368649194 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38490528 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.371763453 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.371766743 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.373006854 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371969581 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414037012 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.371581327 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371490818 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.37245944 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418251058 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379567771 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369819594 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.370466246 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368310585 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369764377 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.517241694 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408923535 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369610172 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.410104143 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370561187 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370100906 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.369933201 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.36921473 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456004932 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370538936 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.409380848 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.370331295 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.543963282 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.387791425 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371860777 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.365333386 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364722304 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371739194 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.359953331 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369919045 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.370519616 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.364140093 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.370190701 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370403916 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370120069 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.522094685 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470719744 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.371658981 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.378168293 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370808705 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.37157868 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414012318 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.373014657 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.372623305 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414086297 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.484071054 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.415316409 seconds)
  done (took 140.784557661 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.37587871 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.376956896 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367643818 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392075828 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367201049 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.366961946 seconds)
  done (took 9.493509132 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.367318978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.375049651 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374936028 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372789612 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.375150108 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.375186927 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.374184217 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366875444 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.378873724 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.374632948 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.376945876 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.376134374 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.376633685 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376773145 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.373688149 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.376208464 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.375285544 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374059423 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.374657217 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375661367 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.36190928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375921668 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37836772 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.369819065 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378547814 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37631009 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392616197 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375893807 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.376272785 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374124237 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378081273 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.377294597 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.370722545 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367460079 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.37472796 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.366558198 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374639716 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.373182495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373217742 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375856334 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.368693955 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368854333 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.369582378 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.369430051 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360544819 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363505961 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372739299 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386257167 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.366922779 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366191088 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366787733 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366060588 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.365295294 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365406093 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360538667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358342638 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.367101991 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.363586687 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365129529 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.357422219 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.36696206 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.365946002 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.358411468 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366481379 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.365352287 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364344582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.357039901 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365964658 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366363661 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.364665406 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36653685 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.364674225 seconds)
  done (took 100.93315424 seconds)
done (took 374.911611369 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.630356513 seconds)
  done (took 3.871185813 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.360872003 seconds)
  done (took 3.611246294 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.151719129 seconds)
  done (took 22.401593945 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.381485454 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.388523531 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.359098941 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.374334548 seconds)
  done (took 10.751522316 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.6430051 seconds)
  done (took 3.890088854 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.381690607 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.369817864 seconds)
  done (took 6.005790442 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.554976827 seconds)
  done (took 3.804413808 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.604125821 seconds)
  done (took 3.854361752 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.396672144 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.390112411 seconds)
  done (took 6.047937035 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.344465105 seconds)
  done (took 3.597467031 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.826261647 seconds)
  done (took 21.079228418 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.392726483 seconds)
  done (took 3.646232047 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.403767559 seconds)
  done (took 3.653313461 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.842065704 seconds)
  done (took 6.0918488 seconds)
done (took 103.546724156 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.361652152 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.364714427 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.362341057 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.360862504 seconds)
  done (took 10.69935643 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.443038181 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.442643383 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.449518989 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.438048251 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43527307 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.443910844 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.402203439 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.403174379 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.43357312 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.430582295 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.445152688 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.436649483 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.444169532 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.405023971 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.428229367 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.447212283 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.434862607 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.452174932 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401912261 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.435487351 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.377871055 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.439040615 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.43149909 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.38044715 seconds)
  done (took 35.532612414 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.865385826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.441291183 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522596365 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421983306 seconds)
  done (took 7.502581583 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.482864782 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.483502508 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.500208634 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.535994531 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.570631239 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.498473315 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405860917 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.400968298 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.38779248 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.484926848 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.562117497 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.483311888 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.698950112 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.379643276 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.696925963 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.380703018 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.380198864 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.483403242 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.531896231 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.562016884 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.380395346 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.483906799 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.487889129 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.482839984 seconds)
  done (took 36.998227558 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.388948013 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.398328368 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.382166693 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.396411528 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.381659209 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.381984176 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.384484287 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387414474 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.382004654 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.382657921 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.382922708 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.396413379 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.383169029 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.383666934 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388720905 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.384683151 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.383795147 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.388214873 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.390990072 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.383797087 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382240135 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.388879222 seconds)
  done (took 31.757688745 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.365233839 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.365762887 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.719532691 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.623403807 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.367734412 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.37289055 seconds)
  done (took 14.070769308 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.442657868 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.575525379 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376042899 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.713585653 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.797855072 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.376395782 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.3766127 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.611400207 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.903726244 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.897253719 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.435795868 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.443680949 seconds)
  done (took 20.207257431 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.370239796 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.374007822 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.374423202 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.390918571 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.42696996 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.37942211 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.381398344 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.367861855 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.434817916 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.431479316 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.377988176 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.4299847 seconds)
  done (took 21.996649434 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463549696 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378956537 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39439364 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447051163 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383383402 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378748862 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451176117 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071809276 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.384534118 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655644281 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384740012 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470269991 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626418101 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379282679 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385880501 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.349394488 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60789145 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851892664 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380233897 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391392184 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416105375 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390492548 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381191208 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590046626 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382936662 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380033841 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642403161 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379728512 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667255848 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633361774 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639417221 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38863292 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656593949 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024149511 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485884936 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581541664 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381133209 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388316969 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.355858394 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.405162881 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388301072 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38331461 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633119198 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389044095 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381934953 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379396174 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098980061 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.388981737 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.381004682 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383383981 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634235132 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469788939 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.387122178 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381974724 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406008325 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386433399 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.387656643 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511785803 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028552974 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382626963 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391085353 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.388796824 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393984573 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392159321 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017996061 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393980181 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.39079116 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391859293 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383364909 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38470472 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406817199 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385243157 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.404204639 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386041502 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128131794 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39390685 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386241262 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91016573 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387005542 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.389799292 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611030802 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384541966 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384498269 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.383496844 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38602902 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122094867 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392850717 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.353551241 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443818731 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075376336 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.588241276 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404202409 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414428013 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606883337 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.354673916 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384891754 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.38571318 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389718733 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407019745 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083590358 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386486677 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.39250192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633890545 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.597651643 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396427596 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.362594613 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866203265 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387685816 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.414063712 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397164257 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594335554 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.988117385 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652506284 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401032601 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426686819 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386902236 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180959778 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389542493 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.4003388 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391636166 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662209926 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.215956502 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388288194 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46174176 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38767996 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386872575 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386745958 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406752455 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388274396 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.568150506 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395396637 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648248691 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.396936185 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388874555 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.402946118 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403594021 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.391520373 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610357122 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389085969 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672266435 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388500169 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389265644 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390833086 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60750566 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.400360943 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.402117542 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729814043 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39658149 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401625149 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649329062 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430093374 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501572771 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422661364 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.396956277 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643281609 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.397637976 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.397106434 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389924766 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409534367 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395159224 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.399593 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383743468 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013713893 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37446778 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398799875 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392322814 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.408334329 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464902789 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399946976 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594433961 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392876399 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396858144 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.405822647 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.392398353 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618405564 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646074928 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.404223915 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566879355 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.851942641 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992321219 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412759841 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.392488194 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.393266405 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.3919654 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392553449 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393573462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394039903 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595021036 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652876915 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396341963 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.009033307 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394626989 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404469532 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403593831 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645666351 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.406486777 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391914309 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.399453558 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405104237 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412182268 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651685772 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621499624 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.40969797 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393423767 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.956511461 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4004211 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394526931 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394143827 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419682334 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407470332 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225899194 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733811463 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398892048 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65435272 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406467973 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416927231 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392945753 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393864718 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399202874 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.406793063 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428224609 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.599928901 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397223473 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396518741 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03183633 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150134294 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952395807 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406067911 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.398530416 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399228439 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.094818128 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394645628 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395286739 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63769775 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097664984 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395089832 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859242929 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.410905793 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144299893 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655188605 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629243398 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397641673 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.397354641 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657989705 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615109356 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42215058 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405649269 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401110927 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.366249979 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931641187 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4092868 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575672708 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094760895 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397390404 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398522361 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.478091117 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419227123 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794313479 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400534419 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398539155 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398073032 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402094729 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231514245 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401913763 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396987645 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032903881 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400684052 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.869863083 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397169869 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.603258733 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655038064 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.637523759 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.406519465 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.410237853 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649188563 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65590803 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407290996 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400583544 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958793572 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.284168201 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.407166389 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400012972 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185335353 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402450185 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686489966 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.415449126 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405603769 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410443472 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400630563 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400682883 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.399990771 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40489642 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375717863 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872792758 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.396647252 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402668937 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414997809 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404749311 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649392079 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.416859811 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006063259 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632964407 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394172203 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457682886 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407051668 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401664571 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.373664023 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402091368 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403163069 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409632483 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626213795 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39949248 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.37123223 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407019605 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616340496 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401152609 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401838104 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622730245 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.401254291 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.407698544 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171948731 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438145863 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400817478 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403048275 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396338444 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445936928 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475562042 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607183683 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.662075143 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665609244 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797549138 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403759494 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404590118 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.419409699 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484018377 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402821033 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409382904 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.407218806 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00704957 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171519866 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020144704 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667477799 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412867105 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414724516 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402812692 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646296102 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402379156 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682555483 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403576074 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399496837 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441773975 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40363728 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408591252 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622917805 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678761762 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404368955 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419637852 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409795176 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.405402427 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66678913 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.624328573 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881384517 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936068218 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405927131 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404474404 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113946589 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681794048 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404390703 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407065282 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406752717 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.417105846 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.427864939 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.417098203 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412296635 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635633211 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665608713 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063796702 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663994275 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.435802752 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.342860963 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409030815 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653416795 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.237465977 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610923889 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022034708 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115089781 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667685707 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482277117 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613229869 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.407589257 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64407687 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.407348518 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412189814 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409441163 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407671586 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.406949716 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.662777238 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026734808 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667584628 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412639041 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.407806309 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444925232 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.6148267 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63101494 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146606951 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628001419 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670468271 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41698535 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407175692 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025444106 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674306976 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415315849 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.4151004 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622652598 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409993442 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445291115 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.283470419 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.408613068 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941820426 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.623662782 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43075806 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409329226 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143921736 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031760566 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.417599575 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887267709 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410705465 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409797721 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692367932 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.418210728 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412274869 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696712636 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.416082088 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412858667 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624648716 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.019820492 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171000145 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.428055539 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418680411 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.417451506 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410769905 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468818011 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415426433 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412625205 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.808474247 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410273105 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41276408 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425916601 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.421960227 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41901978 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.4181853 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413556387 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.420762606 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.401277591 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.409702876 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420683364 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541048213 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955630267 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413687567 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081897721 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.749213059 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660171716 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418464148 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.387281798 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.418719836 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413413731 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413828295 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413273044 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402948072 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951833879 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.4178124 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.676530434 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427247175 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626028769 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624394445 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420407362 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626066672 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423211883 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44015295 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.383553666 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414221107 seconds)
  done (took 992.168761654 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427712294 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.430232209 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.42078139 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.405504823 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434442983 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427072404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.43161734 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.483192143 seconds)
  done (took 20.746418268 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.407830218 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.414461742 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.407770623 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.415613759 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.417108572 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.895110373 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.417666474 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416781709 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.430135166 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.419570748 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.419942222 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.039334585 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.416082771 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.40651488 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.423269432 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.423193255 seconds)
  done (took 33.057327001 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.121840377 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.436231407 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.972642345 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.451021222 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.44616914 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.407464345 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.556643509 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.409426541 seconds)
  done (took 26.089749253 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.419916174 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.420689926 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.420672208 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.4198416 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422734497 seconds)
  done (took 8.392963814 seconds)
done (took 1260.472015267 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.422114129 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.423618101 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.423928072 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422806293 seconds)
  done (took 6.981913945 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.387253196 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.386689012 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.392068337 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.406084261 seconds)
  done (took 9.860207534 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.085054908 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.936800503 seconds)
  done (took 5.312794485 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.934303188 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.9296854 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.931371019 seconds)
  done (took 7.0839414 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.685291945 seconds)
  done (took 2.976065221 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.362066424 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.414844512 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.416168929 seconds)
  done (took 8.482571193 seconds)
done (took 41.986630279 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416528868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.170000991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.564963395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.414511491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.568346259 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.565189497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.658632088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408258998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.413403939 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.424665419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415704987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.568458631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.642296789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.172780101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.642648613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.1726249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.578014252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407805891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424948653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.42414973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.654654174 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415776819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.408771946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41802876 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.5718085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.554649042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410281961 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.174259063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4096678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.422498133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.560972587 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420938858 seconds)
  done (took 83.767455363 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.409627723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.419503619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.418612946 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411299289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.433158236 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.422357696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.411635075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.410895944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411332572 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416264409 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427813105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.4314353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.412986271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410600669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426332634 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.411559399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411019958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416106261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412087149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.411959363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.414574748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411522204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.437013072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411286882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422511441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.42499899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.411476172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.412022258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413066963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412436647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.431149083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414056938 seconds)
  done (took 78.64496554 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412241832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416623657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.418002841 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.424031326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413019077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421115357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413868896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.411524964 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41331254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416561117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.440642886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414193919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415194094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.429314143 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413650353 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.41499354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416011944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419543894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417926789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417304158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.416109518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414023081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415057755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415173009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.418941248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415298152 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412786163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.414734825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413661426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413783869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420182235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.432886072 seconds)
  done (took 78.655723611 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.655578115 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.428128592 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.431175921 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.422915036 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431825815 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.4278266 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.42283103 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.65855174 seconds)
  done (took 15.173710842 seconds)
done (took 257.53299609 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.422115753 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.910399404 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.456050116 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.431703683 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.447145177 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.450951181 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.625767477 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.451009913 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.612364409 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.4265907 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445205935 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.424798708 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.222420099 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565215397 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.240022777 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.360339395 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.295569967 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.421214451 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.977781479 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.651621043 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452630121 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.417804057 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.243325477 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.311881825 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.408157578 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491020641 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.490680025 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.581824134 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.54611358 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.485025078 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.906693381 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.429583899 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.454218984 seconds)
  done (took 65.352422725 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.422437165 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.433420392 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.433419158 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.434129529 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.432719951 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.432626285 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.422910787 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.433760442 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.433369824 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.43419591 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.434160111 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.433086813 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.432945357 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.435172785 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.432874083 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.405922879 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.423939272 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.432969801 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.424813986 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.407133278 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.433220361 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.433649033 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.434626071 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.434594237 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.434301724 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.434739883 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.433723791 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.435101006 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.436201729 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.434748416 seconds)
  done (took 44.218983888 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.434793432 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.971141742 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.157912902 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.437575599 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426081112 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.429258715 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.70930408 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.435695686 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.431359394 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.429845221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.89758512 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443668553 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458975756 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.165838554 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428662853 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.435621342 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437224237 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427493314 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.987429036 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436753975 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.709882283 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.437153974 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.711000444 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.438197971 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431273214 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429157371 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.433665205 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.220183962 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.448349376 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.900506154 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.190214959 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.711760357 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.14342552 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.211209803 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.194845771 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442703544 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.437433063 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.907423152 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430887374 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.429095566 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.708771928 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.429357397 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.172898689 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.112608491 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.450265186 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.438266101 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.258560067 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.903646449 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.667772992 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436360416 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.205627012 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437259148 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.44095652 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432466936 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.667645809 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.432515674 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429520579 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.27260366 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.433775181 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.710439116 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.439427479 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.430275802 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98381411 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.436877006 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.986215863 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433451156 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.439520768 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.432806191 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.173392321 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439517823 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.136843702 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.454181352 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440031814 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.903771466 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.986223923 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.305168724 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434046705 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.996182521 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.183781187 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.728697344 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.439340198 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.199525523 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.729836091 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441099687 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.443326738 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.442563504 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.441249703 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50988749 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.707339173 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.065224878 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.12140278 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.28768278 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.715654151 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441370813 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.433841027 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.280223516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.440140272 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.440942655 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.172516602 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.132597613 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45555419 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.440519988 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.114126707 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.456562878 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.714170189 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.443942818 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.210004127 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.440937285 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510726415 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.442433326 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.440097566 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.437388942 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.715816459 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.442540446 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.443143015 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.117497898 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.944745214 seconds)
  done (took 199.005846844 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.434623838 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.427595688 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.42774152 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.427608509 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.427575106 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.435978044 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.428610732 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.428120909 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.433373373 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.428941422 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.429666187 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.437898726 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434470154 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.428884124 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.432066893 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.429282121 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.429117101 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.439151381 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.429351527 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.429671569 seconds)
  done (took 45.925843585 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.445301224 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.981931935 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.955387496 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.444782022 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.444388169 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436717489 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.4922713 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.446663004 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.44488988 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.727852884 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.603863289 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.451910009 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.443914379 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.445408291 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.958291741 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.418413284 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.728215318 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.982790119 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445332785 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.984148086 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.419758071 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.445990198 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436324661 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985124596 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.739644854 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.716368192 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.495792277 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.98637817 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.44507342 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.446001106 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.984853167 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.447732025 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436982607 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.97220184 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447342525 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.459454036 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.4480769 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.495858442 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.496177543 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.731828085 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.990860953 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.728129249 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458480471 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.608914195 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.449222783 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.419146022 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.995238228 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.446170132 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.420358044 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.447897656 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.453468904 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.972412833 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.440371234 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.972412402 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.448814296 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.449310961 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.987293353 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.971592053 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.964242267 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.605405742 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445223613 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.719818352 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.449714011 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.998179627 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.449353598 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.449886108 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.447899337 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.608637247 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.995285181 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.721648126 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.732773029 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.73305404 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.449109029 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.505510803 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.449271705 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.732271041 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.506179163 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.845008277 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.734579397 seconds)
  done (took 129.832820922 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.70500641 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552019783 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.812628474 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.005303001 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.934483238 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.578126171 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.553326599 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679937653 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.444617558 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.555190493 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.076061898 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.559708965 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.186931685 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510709456 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.545351211 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.580639751 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.828904025 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.421804615 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.073155035 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.053933962 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.448760055 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541623787 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.962629896 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.645790804 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.450934421 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.986578971 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.357881556 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.952664598 seconds)
  done (took 54.316822414 seconds)
done (took 539.948158075 seconds)
SAVING RESULT...
DONE!
